{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"hhhjyz's notebook","text":"<p>Info</p> <ul> <li>ZJU 23\u7ea7 cser</li> <li>ZJUSCT</li> <li>\u8d5e\u9e3d\uff01\uff01\uff01</li> </ul> <p>\u5927\u4e8c\u4e0a\u671f\u672b\u590d\u4e60\u8ba1\u5212</p> <ul> <li> \u9ad8\u7ea7\u6570\u636e\u7ed3\u6784\u4e0e\u7b97\u6cd5\u5206\u6790 [1.3]( 8\uff1a00~10\uff1a00)<ul> <li> Lec1-7</li> <li> Lec8-15</li> <li> \u4f5c\u4e1a\u4e0e\u5c0f\u6d4b\u9898</li> <li> \u5386\u5e74\u5377</li> </ul> </li> <li> \u9a6c\u514b\u601d\u4e3b\u4e49\u57fa\u672c\u539f\u7406  [1.4](10\uff1a30~12\uff1a30)</li> <li> \u5927\u5b66\u7269\u7406 [1.5](8\uff1a00~10\uff1a00)<ul> <li> \u5386\u5e74\u5377</li> <li> \u7b14\u8bb0\u516c\u5f0f</li> <li> ppt</li> </ul> </li> <li> \u5927\u5b66\u4e0e\u6587\u5316\u4f20\u627f [1.5](18.30~20.30)<ul> <li> ppt</li> </ul> </li> <li> \u8ba1\u7b97\u673a\u7ec4\u6210 [1.6](10:30~12:30)<ul> <li> \u5386\u5e74\u5377</li> <li> Chapter 1</li> <li> Chapter 2</li> <li> Chapter 3</li> <li> Chapter 4</li> <li> Chapter 5</li> <li> Chapter 6</li> <li> \u4f5c\u4e1a\u9898</li> </ul> </li> <li> \u6982\u7edf [1.7](8:00~10:00)<ul> <li> \u5386\u5e74\u5377</li> <li> \u4f5c\u4e1a\u9898</li> <li> \u516c\u5f0f</li> </ul> </li> <li> \u5927\u7269\u5b9e\u9a8c [1.7](14:00~16:00)<ul> <li> \u7eea\u8bba</li> <li> \u793a\u6ce2\u5668</li> <li> \u5206\u5149\u8ba1</li> <li> \u5386\u5e74\u5377</li> </ul> </li> </ul>"},{"location":"use/","title":"ZJUer \u597d\u7528\u7684\u5de5\u5177","text":"<ul> <li>ZJU-ICAL\uff1aZJU-ICAL</li> </ul>"},{"location":"note/%E4%BF%84%E8%AF%AD%E5%90%AC%E5%86%99/","title":"\u4fc4\u8bed\u542c\u5199","text":"<p>\u0446\u0432\u0435\u0442\u044b- \u82b1 \u043d\u0435\u0431\u043e - \u5929\u7a7a \u0432\u0435\u0441\u043d\u0430 - \u6625\u5929 \u043e\u0441\u0435\u043d\u044c - \u79cb\u5929 \u043b\u0435\u0442\u043e - \u590f\u5929 \u0437\u0438\u043c\u0430 - \u51ac\u5929 \u043c\u0430\u0440\u0442 - \u4e09\u6708 \u0430\u043f\u0440\u0435\u043b\u044c - \u56db\u6708 \u0441\u0435\u043d\u0442\u044f\u0431\u0440\u044c - \u4e5d\u6708 \u0437\u0435\u043b\u0451\u043d\u044b\u0439 - \u7eff\u8272 \u0441\u0438\u043d\u0438\u0439 - \u84dd\u8272 \u043f\u0440\u0438\u0440\u043e\u0434\u0430 - \u81ea\u7136 \u043f\u043e\u043b\u043d\u044b\u0439 - \u6ee1\u7684 \u043a\u0430\u0436\u0434\u044b\u0439 - \u6bcf\u4e2a \u043c\u043e\u0436\u043d\u043e - \u53ef\u4ee5 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 - \u5927\u7684 \u043f\u0442\u0438\u0446\u0430 - \u9e1f \u043f\u0435\u0441\u043d\u044f - \u6b4c\u66f2 \u0447\u0435\u0442\u044b\u0440\u0435 - \u56db \u044f\u0440\u043a\u0438\u0439 - \u660e\u4eae\u7684 \u0434\u043b\u0438\u043d\u043d\u044b\u0439 - \u957f\u7684 \u0434\u043e\u0436\u0434\u044c - \u96e8 \u0442\u0451\u043f\u043b\u044b\u0439 - \u6e29\u6696\u7684 \u043a\u043e\u0440\u043e\u0442\u043a\u0438\u0439 - \u77ed\u7684 \u0441\u0435\u0437\u043e\u043d - \u5b63\u8282</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/","title":"A comprehensive review and comparison of existing methods for protein function prediction","text":"<p>abstract:</p> <p>\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u5bf9\u4e8e\u7406\u89e3\u7ec6\u80de\u751f\u7406\u548c\u751f\u5316\u8fc7\u7a0b\u81f3\u5173\u91cd\u8981\uff0c\u5b83\u4e3a\u75be\u75c5\u7814\u7a76\u548c\u836f\u7269\u53d1\u73b0\u7b49\u9886\u57df\u7684\u8fdb\u6b65\u5f00\u8f9f\u4e86\u65b0\u7684\u53ef\u80fd\u6027\u3002\u5728\u8fc7\u53bb\u7684\u51e0\u5341\u5e74\u91cc\uff0c\u968f\u7740\u86cb\u767d\u8d28\u5e8f\u5217\u6570\u636e\u7684\u6307\u6570\u7ea7\u589e\u957f\uff0c\u4eba\u4eec\u63d0\u51fa\u4e86\u8bb8\u591a\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd\u7684\u8ba1\u7b97\u65b9\u6cd5\u3002\u56e0\u6b64\uff0c\u6709\u5fc5\u8981\u5bf9\u8fd9\u4e9b\u65b9\u6cd5\u8fdb\u884c\u7cfb\u7edf\u8bc4\u4ef7\u548c\u6bd4\u8f83\u3002\u5728\u8fd9\u9879\u7814\u7a76\u4e2d\uff0c\u5c06\u8fd9\u4e9b\u65b9\u6cd5\u5206\u4e3a\u56db\u4e2a\u4e0d\u540c\u7684\u7c7b\u522b\uff0c\u5305\u62ec\u57fa\u4e8e\u5e8f\u5217\u7684\u65b9\u6cd5\u3001\u57fa\u4e8e 3D \u7ed3\u6784\u7684\u65b9\u6cd5\u3001\u57fa\u4e8e PPI \u7f51\u7edc\u7684\u65b9\u6cd5\u548c\u57fa\u4e8e\u6df7\u5408\u4fe1\u606f\u7684\u65b9\u6cd5\u3002\u6b64\u5916\uff0c\u8ba8\u8bba\u4e86\u5b83\u4eec\u7684\u4f18\u7f3a\u70b9\uff0c\u7136\u540e\u5bf9\u5b83\u4eec\u7684\u6027\u80fd\u8fdb\u884c\u4e86\u7efc\u5408\u8bc4\u4ef7\u548c\u6bd4\u8f83\u3002\u5e76\u5728\u6700\u540e\u8ba8\u8bba\u4e86\u8be5\u9886\u57df\u9762\u4e34\u7684\u6311\u6218\u548c\u673a\u9047\u3002</p> <p>keywords:</p> <p>protein function prediction,\u00a0sequence-based methods,\u00a03D structure-based methods,\u00a0PPI network-based methods and hybrid information-based methods</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#1","title":"1 \u7814\u7a76\u80cc\u666f","text":"<p>\u86cb\u767d\u8d28\u5fc5\u987b\u7ecf\u5386\u591a\u4e2a\u7ec6\u80de\u6b65\u9aa4\u624d\u80fd\u5b9e\u73b0\u5176\u529f\u80fd\u5e76\u53c2\u4e0e\u7ec6\u80de\u6d3b\u52a8\u3002\u86cb\u767d\u8d28\u5e8f\u5217\u4e2d\u7684\u6c28\u57fa\u9178\u6b8b\u57fa\u53d1\u751f\u7a7a\u95f4\u8f6c\u6362\uff0c\u5bfc\u81f4\u5f62\u6210\u4e09\u7ef4\u7ed3\u6784\u3002\u968f\u540e\u901a\u8fc7\u975e\u5171\u4ef7\u529b\u5efa\u7acb\u86cb\u767d\u8d28-\u86cb\u767d\u8d28\u76f8\u4e92\u4f5c\u7528 \uff08PPI\uff09 \u7f51\u7edc\u3002\u8c03\u8282\u7ed3\u6784\u548c\u529f\u80fd\u3002\u968f\u540e\uff0cPPI \u7f51\u7edc\u7ec4\u88c5\u6210\u86cb\u767d\u8d28\u590d\u5408\u7269\u3002\u8fd9\u4e9b\u590d\u5408\u7269\u4f5c\u4e3a\u5b9e\u73b0\u86cb\u767d\u8d28\u529f\u80fd\u548c\u6267\u884c\u751f\u547d\u6d3b\u52a8\u7684\u5206\u5b50\u673a\u5668\u3002</p> <p>\u5728\u86cb\u767d\u8d28\u7814\u7a76\u4e2d\uff0c\u9075\u5faa\u201c\u5e8f\u5217-\u7ed3\u6784-\u529f\u80fd\u201d\u7684\u8303\u5f0f\u3002\u76ee\u524d\uff0c\u86cb\u767d\u8d28\u529f\u80fd\u7531\u57fa\u56e0\u672c\u4f53\u8bba (GO) \u6807\u51c6\u5316\uff0c\u5b83\u5305\u62ec\u4e09\u4e2a\u65b9\u9762\uff1a\u751f\u7269\u8fc7\u7a0b\u672c\u4f53\u8bba \uff08BPO\uff09\u3001\u5206\u5b50\u529f\u80fd\u672c\u4f53\u8bba \uff08MFO\uff09 \u548c\u7ec6\u80de\u6210\u5206\u672c\u4f53\u8bba \uff08CCO\uff09\uff0c\u5982\u56fe \u6240\u793a\uff1a </p> <p>\u8fd9\u5f20\u56fe\u662f\u201c\u5e8f\u5217-\u7ed3\u6784-\u529f\u80fd\u201d\u8303\u5f0f\u7684\u793a\u610f\u56fe\u3002</p> <p>\u5e8f\u5217\u662f\u6307\u86cb\u767d\u8d28\u4e2d\u6c28\u57fa\u9178\u7684\u6392\u5217\u3002\u7ed3\u6784\u662f\u6307\u86cb\u767d\u8d28\u539f\u5b50\u7684\u4e09\u7ef4\u6392\u5217\u3002\u529f\u80fd\u662f\u6307\u86cb\u767d\u8d28\u5728\u751f\u7269\u4f53\u5185\u53d1\u6325\u7684\u7279\u6b8a\u4f5c\u7528 \u3002\u901a\u5e38\uff0c\u86cb\u767d\u8d28\u5e8f\u5217\u51b3\u5b9a\u4e86\u5b83\u7684\u7ed3\u6784\uff0c\u800c\u7ed3\u6784\u53c8\u51b3\u5b9a\u4e86\u5b83\u7684\u529f\u80fd\u3002</p> <p>\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u662f\u63a8\u52a8\u751f\u547d\u79d1\u5b66\u548c\u533b\u5b66\u8fdb\u6b65\u7684\u91cd\u8981\u5de5\u5177\uff0c\u4e3a\u4eba\u7c7b\u5065\u5eb7\u548c\u53ef\u6301\u7eed\u53d1\u5c55\u505a\u51fa\u4e86\u91cd\u5927\u8d21\u732e\uff1a</p> <ul> <li>\u5bf9\u7406\u89e3\u7ec6\u80de\u5185\u548c\u7ec6\u80de\u5916\u751f\u7269\u8fc7\u7a0b\u4ee5\u53ca\u63ed\u793a\u86cb\u767d\u8d28\u591a\u6837\u6027\u4e0e\u8fdb\u5316\u4e4b\u95f4\u7684\u76f8\u5173\u6027\u5177\u6709\u6df1\u8fdc\u7684\u610f\u4e49\u3002</li> <li>\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u5728\u9610\u660e\u57fa\u56e0\u529f\u80fd\u3001\u7406\u89e3\u57fa\u56e0\u8c03\u63a7\u7f51\u7edc\u548c\u6307\u5bfc\u672a\u8868\u5f81\u86cb\u767d\u8d28\u7684\u529f\u80fd\u6ce8\u91ca\u65b9\u9762\u8d77\u7740\u81f3\u5173\u91cd\u8981\u7684\u4f5c\u7528 \u3002</li> <li>\u86cb\u767d\u8d28\u529f\u80fd\u7684\u51c6\u786e\u9884\u6d4b\u901a\u8fc7\u4fc3\u8fdb\u9776\u5411\u7279\u5b9a\u86cb\u767d\u8d28\u7684\u836f\u7269\u7684\u4ea7\u751f\u6765\u652f\u6301\u836f\u7269\u53d1\u73b0\u548c\u5f00\u53d1\uff0c\u4ece\u800c\u63d0\u9ad8\u6cbb\u7597\u6548\u679c \u3002</li> <li>\u5728\u4e2a\u6027\u5316\u533b\u7597  \u4e2d\uff0c\u4e86\u89e3\u86cb\u767d\u8d28\u529f\u80fd\u7684\u4e2a\u4f53\u5dee\u5f02\u5bf9\u4e8e\u8bc4\u4f30\u75be\u75c5\u98ce\u9669\u548c\u5236\u5b9a\u4e2a\u4f53\u5316\u6cbb\u7597\u7b56\u7565\u81f3\u5173\u91cd\u8981\u3002</li> </ul> <p>\u8fc7\u53bb\u7684\u7efc\u8ff0\u8bba\u6587\u5b58\u5728\u7684\u95ee\u9898:</p> <ul> <li>\u5206\u7c7b\u8fc7\u65f6</li> <li>\u7f3a\u4e4f\u5168\u9762\u6027</li> <li>\u7f3a\u4e4f\u6bd4\u8f83</li> </ul> <p>\u5728\u8fd9\u7bc7\u7efc\u8ff0\u4e2d\uff0c\u5bf9\u73b0\u6709\u7684\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u8ba1\u7b97\u65b9\u6cd5\u8fdb\u884c\u4e86\u5168\u9762\u548c\u6700\u65b0\u7684\u6982\u8ff0\uff0c\u4e3b\u8981\u5173\u6ce8\u8fd1\u5e74\u6765\u63d0\u51fa\u7684\u65b9\u6cd5\u3002\u6700\u521d\uff0c\u4ecb\u7ecd\u7528\u4e8e\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd\u7684\u6570\u636e\u5e93\u3002\u968f\u540e\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u5206\u7c7b\u65b9\u6cd5\uff0c\u5c06\u8ba1\u7b97\u65b9\u6cd5\u5206\u4e3a\u56db\u7c7b\u3002\u4e4b\u540e\uff0c\u4f7f\u7528\u76f8\u540c\u7684\u57fa\u51c6\u6570\u636e\u96c6\u5bf9\u6bcf\u7c7b\u8ba1\u7b97\u65b9\u6cd5\u7684\u6027\u80fd\u8fdb\u884c\u516c\u5e73\u8bc4\u4f30\u3002\u6700\u540e\uff0c\u8ba8\u8bba\u4e86\u672a\u6765\u7684\u65b9\u5411\u548c\u6311\u6218\uff0c\u63a2\u7d22\u4e86\u8be5\u7814\u7a76\u9886\u57df\u7684\u673a\u9047\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#2","title":"2 \u73b0\u6709\u7684\u6570\u636e\u5e93","text":""},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#21-uniprot","title":"2.1 Uniprot","text":"<p>UniProt \u662f\u4e00\u4e2a\u5e7f\u6cdb\u4f7f\u7528\u7684\u86cb\u767d\u8d28\u6570\u636e\u5e93\uff0c\u5305\u62ec\u5404\u79cd\u91cd\u8981\u90e8\u5206\uff0c\u5305\u62ec UniProtKB\u3001UniRef \u548c UniParc\u3002UniProt 2024_01 \u7248\u5305\u542b\u8d85\u8fc7 2.5 \u4ebf\u6761\u5e8f\u5217\u8bb0\u5f55</p> <ul> <li>UniProtKB/Swiss-Prot\uff1a \u4eba\u5de5\u6574\u7406\u548c\u5ba1\u67e5\u6761\u76ee\u90e8\u5206</li> <li>UniProtKB/TrEMBL\uff1a \u672a\u5ba1\u67e5\u7684\u90e8\u5206</li> <li>UniRef:\u63d0\u4f9b\u4e09\u4e2a\u540c\u4e00\u6c34\u5e73\u7684\u86cb\u767d\u8d28\u5e8f\u5217\u7c07</li> <li>UniParc:\u63d0\u4f9b\u4e86\u4e00\u7ec4\u6240\u6709\u5df2\u77e5\u7684\u86cb\u767d\u8d28\u5e8f\u5217\uff0c\u5b83\u5b58\u50a8\u4e86\u6765\u81ea\u5404\u79cd\u6765\u6e90\u7684\u6240\u6709\u65b0\u7684\u548c\u66f4\u65b0\u7684\u86cb\u767d\u8d28\u5e8f\u5217\uff0c\u4ee5\u5b9e\u73b0\u5168\u9762\u8986\u76d6</li> </ul>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#22-go","title":"2.2 GO","text":"<p>GO \u662f\u57fa\u56e0\u529f\u80fd\u4fe1\u606f\u7684\u7efc\u5408\u8d44\u6e90\uff0c\u5176\u4e2d\u7528\u4e8e\u63cf\u8ff0\u57fa\u56e0\u529f\u80fd\u7684\u529f\u80fd\u7279\u5f81\u5206\u4e3a\u4e09\u7c7b\uff1a\u751f\u7269\u8fc7\u7a0b \uff08BP\uff09\u3001\u5206\u5b50\u529f\u80fd \uff08MF\uff09 \u548c\u7ec6\u80de\u6210\u5206 \uff08CC\uff09\u3002GO \u7248\u672c 2024_01_17 \u5305\u542b\u8d85\u8fc7 700 \u4e07\u4e2a\u6ce8\u91ca\u3001100 \u4e07\u4e2a\u57fa\u56e0\u4ea7\u7269\u548c 5000 \u4e2a\u7269\u79cd\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#23-goa","title":"2.3 GOA","text":"<p>\u57fa\u56e0\u672c\u4f53\u6ce8\u91ca \uff08GOA\uff09 \u4e3a UniProt \u77e5\u8bc6\u5e93 \uff08UniProtKB\uff09 \u4e2d\u7684\u86cb\u767d\u8d28\u63d0\u4f9b\u4e86\u9ad8\u8d28\u91cf\u7684 GO \u6ce8\u91ca\u3002GOA \u91c7\u7528\u4e24\u79cd\u4e0d\u540c\u7684 GO \u6ce8\u91ca\u65b9\u6cd5\uff1a\u7535\u5b50\u548c\u624b\u52a8 \u3002\u76ee\u524d\uff0cGOA \u6ce8\u91ca\u603b\u6570\u8d85\u8fc7 13.77 \u4ebf\u6761\uff0c\u5176\u4e2d\u7535\u5b50 GO \u6ce8\u91ca\u7ea6\u4e3a 13.72 \u4ebf\u6761\uff0c\u800c\u624b\u52a8 GO \u6ce8\u91ca\u4ec5\u7ea6 590 \u4e07\u6761\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#24-string","title":"2.4 STRING","text":"<p>STRING\u662f\u4e00\u4e2a\u5df2\u77e5\u548c\u9884\u6d4b\u7684 PPI \u6570\u636e\u5e93\uff0c\u5b83\u6574\u5408\u4e86\u6765\u81ea\u4e94\u4e2a\u4e3b\u8981\u6765\u6e90\u7684\u76f8\u4e92\u4f5c\u7528\u6570\u636e\uff0c\u5305\u62ec\u57fa\u56e0\u7ec4\u73af\u5883\u9884\u6d4b\u3001\u9ad8\u901a\u91cf\u5b9e\u9a8c\u5ba4\u5b9e\u9a8c\u3001\u4fdd\u5b88\u8868\u8fbe\u3001\u81ea\u52a8\u6587\u672c\u6316\u6398\u548c\u6570\u636e\u5e93\u4e2d\u7684\u5148\u524d\u77e5\u8bc6\u3002STRING \u63d0\u4f9b\u86cb\u767d\u8d28\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u8bc4\u5206\uff0c\u53cd\u6620\u5b83\u4eec\u5728\u751f\u7269\u7f51\u7edc\u4e2d\u7684\u8fde\u63a5\u5f3a\u5ea6\u3002STRING \u6570\u636e\u5e93\u7248\u672c 12.0 \u6db5\u76d6\u4e86\u6765\u81ea 10000 \u591a\u79cd\u751f\u7269\u4f53\u7684\u7ea6 600 \u4e07\u79cd\u86cb\u767d\u8d28\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#25-interpro","title":"2.5 InterPro","text":"<p>InterPro \u662f\u4e00\u4e2a\u7efc\u5408\u6570\u636e\u5e93\uff0c\u96c6\u6210\u4e86 13 \u4e2a\u6210\u5458\u6570\u636e\u5e93.\u6b64\u5916\uff0c\u6bcf\u4e2a\u6210\u5458\u6570\u636e\u5e93\u90fd\u5305\u542b\u91cd\u70b9\u8868\u5f81\u6570\u636e\u3002\u4f8b\u5982\uff0cPfam \u6570\u636e\u5e93\u4e3b\u8981\u6536\u96c6\u3001\u5206\u7c7b\u548c\u6ce8\u91ca\u4e0e\u86cb\u767d\u8d28\u7ed3\u6784\u57df\u76f8\u5173\u7684\u4fe1\u606f\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#26-rcsb-pdb","title":"2.6 RCSB PDB","text":"<p>RCSB PDB \u662f\u4e00\u4e2a\u4e13\u95e8\u7684\u6570\u636e\u5e93\uff0c\u7528\u4e8e\u5b58\u50a8\u6709\u5173\u751f\u7269\u5927\u5206\u5b50 3D \u7ed3\u6784\u7684\u4fe1\u606f\u3002\u76ee\u524d\uff0cRCSB.org \u95e8\u6237\u63d0\u4f9b\u4e86\u8d85\u8fc7 200,000 \u4e2a\u5b9e\u9a8c\u786e\u5b9a\u7684 PDB \u7ed3\u6784\uff0c\u5176\u4e2d\u8d85\u8fc7 120,000 \u4e2a\u771f\u6838\u86cb\u767d\u7ed3\u6784\uff0c\u5176\u4e2d\u4e00\u534a\u4ee5\u4e0a\u6765\u81ea\u4eba\u7c7b</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#27-alphafold","title":"2.7 AlphaFold","text":"<p>\u662f\u7531 DeepMind \u548c EMBL-EBI \u5171\u540c\u5f00\u53d1\u7684\u9ad8\u7cbe\u5ea6\u86cb\u767d\u8d28\u7ed3\u6784\u9884\u6d4b\u6570\u636e\u5e93\uff0c\u5728 v2.0 \u7248\u672c\u4e2d\uff0c\u5b83\u5305\u542b\u8d85\u8fc7 2 \u4ebf\u4e2a\u6761\u76ee\uff0c\u5305\u62ec 48 \u4e2a\u5173\u952e\u751f\u7269\u4f53\u7684\u86cb\u767d\u8d28\u7ec4\uff0c\u63d0\u4f9b\u4e86 UniProt \u7684\u5e7f\u6cdb\u8986\u76d6\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#28","title":"2.8 \u5c0f\u7ed3","text":"<p>\u9664\u4e86\u76ee\u524d\u5e7f\u6cdb\u7528\u4e8e\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u7814\u7a76\u7684\u4e0a\u8ff0\u6570\u636e\u5e93\u5916\uff0c\u8fd8\u6709\u8bb8\u591a\u5176\u4ed6\u975e\u5e38\u91cd\u8981\u7684\u70ed\u529b\u5b66\u6570\u636e\u5e93\u3002\u4f8b\u5982\uff0cPINT [ 49]\u3001ProNIT [ 50]\u3001ProCaff [ 51] \u548c PLD [ 52]\uff0c\u8fd9\u4e9b\u70ed\u529b\u5b66\u6570\u636e\u5e93\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u86cb\u767d\u8d28\u76f8\u4e92\u4f5c\u7528\u70ed\u529b\u5b66\u4fe1\u606f\uff0c\u662f\u7406\u89e3\u86cb\u767d\u8d28\u529f\u80fd\u548c\u76f8\u4e92\u4f5c\u7528\u673a\u5236\u7684\u91cd\u8981\u53c2\u8003\u4ef7\u503c\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#3-methods","title":"3 Methods","text":"<p>\u6839\u636e\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd\u7684\u8ba1\u7b97\u65b9\u6cd5\u4f7f\u7528\u7684\u4fe1\u606f\u7c7b\u578b\u53ef\u5206\u4e3a\u56db\u7ec4\uff1a\u57fa\u4e8e\u5e8f\u5217\u7684\u65b9\u6cd5\u3001\u57fa\u4e8e 3D \u7ed3\u6784\u7684\u65b9\u6cd5\u3001\u57fa\u4e8e PPI \u7f51\u7edc\u7684\u65b9\u6cd5\u548c\u57fa\u4e8e\u6df7\u5408\u4fe1\u606f\u7684\u65b9\u6cd5\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9b\u7c7b\u522b\u5e76\u4e0d\u4e25\u683c\u4e0d\u540c\uff0c\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u91cd\u53e0\u548c\u76f8\u5173\u6027\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#31-sequence-based-methods","title":"3.1 Sequence Based Methods","text":"<p>\u57fa\u4e8e\u5e8f\u5217\u7684\u65b9\u6cd5\u4fa7\u91cd\u4e8e\u86cb\u767d\u8d28\u5e8f\u5217\uff0c\u901a\u8fc7\u4ece\u4e2d\u63d0\u53d6\u4e0e\u529f\u80fd\u76f8\u5173\u7684\u6f5c\u5728\u7279\u5f81\u6765\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd\u3002\u8fd9\u4e9b\u65b9\u6cd5\u6df1\u5165\u7814\u7a76\u6c28\u57fa\u9178\u5e8f\u5217\u4e2d\u5305\u542b\u7684\u4fe1\u606f\uff0c\u5e76\u8bd5\u56fe\u6355\u6349\u5d4c\u5165\u5176\u4e2d\u7684\u4e0e\u86cb\u767d\u8d28\u529f\u80fd\u76f8\u5173\u7684\u7ec6\u5fae\u7279\u5f81\u3002</p> <p>\u9996\u5148\uff0c\u901a\u8fc7\u4e0d\u540c\u7684\u65b9\u6cd5\u4ece\u5e8f\u5217\u4e2d\u63d0\u53d6\u7279\u5f81\u3002\u5176\u6b21\uff0c\u5c06\u63d0\u53d6\u7684\u7279\u5f81\u8f93\u5165\u5230\u67d0\u79cd\u7b97\u6cd5\u4e2d\u3002\u6700\u540e\uff0c\u901a\u8fc7\u8bad\u7ec3\u6a21\u578b\u9884\u6d4b\u672a\u77e5\u86cb\u767d\u8d28\u7684\u529f\u80fd\uff0c\u5e76\u8ba1\u7b97\u5b83\u4eec\u5c5e\u4e8e\u7279\u5b9a GO \u9879\u7684\u6982\u7387\u3002\u800cBLAST \u5de5\u5177\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u641c\u7d22\u4e0e\u76ee\u6807\u86cb\u767d\u76f8\u4f3c\u7684\u5e8f\u5217\uff0c\u65e0\u9700\u4ece\u5e8f\u5217\u4e2d\u63d0\u53d6\u7279\u5f81\u3002</p> <p>BLAST: \u7528\u4e8e\u641c\u7d22\u6570\u636e\u5e93\u4ee5\u67e5\u627e\u4e0e\u76ee\u6807\u86cb\u767d\u76f8\u4f3c\u7684\u5e8f\u5217\uff0c\u4ece\u800c\u63a8\u65ad\u76ee\u6807\u86cb\u767d\u7684\u6f5c\u5728\u529f\u80fd\u3002\u4f46\u662f\u4ec5\u4f9d\u9760\u5e8f\u5217\u6bd4\u5bf9\u5de5\u5177\u6765\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd\u7f3a\u4e4f\u9ad8\u7cbe\uff0c\u56e0\u6b64\u8bb8\u591a\u8ba1\u7b97\u65b9\u6cd5\u5f00\u59cb\u6574\u5408\u795e\u7ecf\u7f51\u7edc</p> <p>DEEPred\u5229\u7528\u4ece\u5e8f\u5217\u4e2d\u63d0\u53d6\u7684 SPMap \u7279\u5f81\uff0c\u5e76\u5c06\u5176\u7528\u4f5c\u591a\u4efb\u52a1\u524d\u9988\u6df1\u5ea6\u795e\u7ecf\u7f51\u7edc\u6a21\u578b\u7684\u8f93\u5165\u6765\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd</p> <p>DeepGOPlus\uff1a \u7ed3\u5408\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\u7684\u9884\u6d4b\u7ed3\u679c\uff0c\u901a\u8fc7\u641c\u7d22\u5177\u6709\u5df2\u77e5\u529f\u80fd\u7684\u76f8\u4f3c\u86cb\u767d\u8d28\u6765\u63d0\u9ad8\u9884\u6d4b\u51c6\u786e\u6027\u3002\u901a\u8fc7\u79fb\u9664PPI\u7279\u5f81\u6539\u8fdb\u4e86DeepGO \uff0c\u63d0\u9ad8\u4e86\u9884\u6d4b\u6027\u80fd\u3002\u5b83\u514b\u670d\u4e86\u5e8f\u5217\u957f\u5ea6\u9650\u5236\uff0c\u7528 one-hot \u7f16\u7801\u53d6\u4ee3\u4e86\u6c28\u57fa\u9178\u4e09\u5143\u7ec4\u5d4c\u5165\u5c42</p> <p>HiFun\uff1a \u4f7f\u7528 BLOSUM62 \u77e9\u9635 \u548c FastText \u5d4c\u5165 \u5d4c\u5165\u86cb\u767d\u8d28\u5e8f\u5217\u3002 \u57fa\u4e8e BLOSUM62 \u77e9\u9635\u7684\u5411\u91cf\u88ab\u9988\u9001\u5230\u5377\u79ef\u5c42\u4ee5\u63d0\u53d6\u6f5c\u5728\u7279\u5f81\uff0c\u800c\u57fa\u4e8e FastText \u5d4c\u5165\u7684\u77e9\u9635\u88ab\u9988\u9001\u5230\u7531\u5377\u79ef\u795e\u7ecf\u7f51\u7edc \uff08CNN\uff09 \u548c\u5177\u6709\u81ea\u5173\u6ce8\u67b6\u6784\u7684\u53cc\u5411\u957f\u77ed\u671f\u8bb0\u5fc6 \uff08BiLSTM\uff09 \u7ec4\u6210\u7684\u67b6\u6784\u4e2d \u3002\u4ece CNN \u4e2d\u63d0\u53d6\u7684\u7279\u5f81\u5411\u91cf\u88ab\u4f20\u9012\u7ed9 BiLSTM \u4e24\u4e2a\u9690\u85cf\u5c42\uff0c\u5b83\u4eec\u5229\u7528\u524d\u540e\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u6765\u589e\u5f3a\u7279\u5f81\u8868\u793a\u3002HiFun \u5bf9 BiLSTM \u5c42\u7684\u8f93\u51fa\u6267\u884c\u81ea\u6211\u6ce8\u610f\u673a\u5236\uff0c\u4ee5\u4f30\u8ba1\u6c28\u57fa\u9178\u7684\u91cd\u8981\u6027\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#311","title":"3.1.1 \u5c0f\u7ed3","text":"<p>\u4f9d\u8d56\u4e8e\u86cb\u767d\u8d28\u5e8f\u5217\u7684\u65b9\u6cd5\u53ef\u4ee5\u663e\u7740\u6539\u5584\u529f\u80fd\u7c7b\u522b\u4e2d MFO \u7684\u9884\u6d4b\u3002\u7136\u800c\uff0c\u8bb8\u591a\u86cb\u767d\u8d28\u5728\u529f\u80fd\u4e0a\u76f8\u4f3c\uff0c\u4f46\u5728\u5e8f\u5217\u4e0a\u4e0d\u76f8\u4f3c\uff0c\u8fd9\u53ef\u80fd\u5bfc\u81f4\u5e8f\u5217\u76f8\u4f3c\u6027\u4f4e\u7684\u86cb\u767d\u8d28\u7684\u9884\u6d4b\u6027\u80fd\u8f83\u5dee\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#32-3d-structure-based-methods","title":"3.2 3D structure-based methods","text":"<p>\u57fa\u4e8e 3D \u7ed3\u6784\u7684\u65b9\u6cd5\u4fa7\u91cd\u4e8e\u86cb\u767d\u8d28\u7ed3\u6784\u7279\u5f81\u3002\u86cb\u767d\u8d28\u7ed3\u6784\u901a\u5e38\u88ab\u7ffb\u8bd1\u6210\u63a5\u89e6\u56fe\uff0c\u4ece\u4e2d\u6355\u83b7\u4e0e\u529f\u80fd\u5bc6\u5207\u76f8\u5173\u7684\u7279\u5f81</p> <p>\u5bf9\u4e8e\u529f\u80fd\u4e3b\u8981\u53d7\u7ed3\u6784\u7279\u5f81\u5f71\u54cd\u7684\u86cb\u767d\u8d28\uff0c\u57fa\u4e8e 3D \u7ed3\u6784\u7684\u65b9\u6cd5\u5177\u6709\u66f4\u660e\u663e\u7684\u4f18\u52bf</p> <p> \u6d41\u7a0b\uff1a</p> <ul> <li>\u9996\u5148\uff0c\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5\u53ef\u5206\u4e3a\u4e09\u7c7b\uff1a(i) \u4ece\u5e8f\u5217\u4e2d\u63d0\u53d6\u5e8f\u5217\u5d4c\u5165\uff1b(ii) \u5c06\u7ed3\u6784\u8f6c\u5316\u4e3a\u63a5\u89e6\u56fe \u5e76\u83b7\u53d6\u6b8b\u57fa\u6c34\u5e73\u7684\u7279\u5f81 \u3002</li> <li>\u5176\u6b21\uff0c\u5c06\u63d0\u53d6\u7684\u7279\u5f81\u8f93\u5165\u5230\u76f8\u5e94\u7684\u7b97\u6cd5\u6a21\u578b\u4e2d \u3002</li> <li>\u6700\u540e\uff0c\u901a\u8fc7\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u9884\u6d4b\u672a\u77e5\u86cb\u767d\u8d28\u7684\u529f\u80fd\uff0c\u5e76\u8ba1\u7b97\u5176\u5c5e\u4e8e\u7279\u5b9aGO\u672f\u8bed\u7684\u6982\u7387 \u3002</li> </ul> <p>\u4e3b\u8981\u65b9\u6cd5\u793a\u4f8b\uff1a</p> <ul> <li>DeepFRI: \u8be5\u65b9\u6cd5\u4ee5\u56fe\u5377\u79ef\u7f51\u7edc\uff08GCN\uff09 \u4e3a\u6838\u5fc3\u6280\u672f \u3002\u9996\u5148\uff0c\u5b83\u4f7f\u7528\u6765\u81ea\u86cb\u767d\u8d28\u5bb6\u65cf\u6570\u636e\u5e93\uff08Pfam\uff09 \u7684\u5e8f\u5217\u9884\u8bad\u7ec3\u4e00\u4e2a\u957f\u77ed\u671f\u8bb0\u5fc6\u8bed\u8a00\u6a21\u578b\uff08LSTM-LM\uff09 \u6765\u63d0\u53d6\u5e8f\u5217\u7684\u6b8b\u57fa\u6c34\u5e73\u7279\u5f81 \u3002\u5176\u6b21\uff0c\u5b83\u5c06\u86cb\u767d\u8d28\u7ed3\u6784\u8f6c\u5316\u4e3a\u63a5\u89e6\u56fe\u3002\u8fd9\u4e24\u8005\u90fd\u4f5c\u4e3aGCN\u7684\u8f93\u5165 \u3002\u901a\u8fc7LSTM-LM\u4ece\u5e8f\u5217\u5b66\u4e60\u5230\u7684\u7279\u5f81\u548cGCN\u4ece\u63a5\u89e6\u56fe\u5b66\u4e60\u5230\u7684\u7279\u5f81\u663e\u8457\u63d0\u9ad8\u4e86\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u7684\u6027\u80fd \u3002</li> <li>GAT-GO: \u4e0eDeepFRI\u4e0d\u540c\uff0cGAT-GO\u4f7f\u7528\u56fe\u6ce8\u610f\u529b\u7f51\u7edc\uff08GAT\uff09 \u66ff\u4ee3\u4f20\u7edf\u7684GCN \u3002\u6bcf\u4e2aGAT\u5c42\u4e4b\u540e\u8ddf\u7740\u4e00\u4e2a\u62d3\u6251\u6c60\u5316\u5c42\uff08topological pooling layer\uff09 \u4ee5\u8fdb\u884c\u62d3\u6251\u611f\u77e5\u7684\u4e0b\u91c7\u6837\uff0c\u5e76\u5728\u672b\u7aef\u8bbe\u6709\u4e00\u4e2a\u5168\u5c40\u6c60\u5316\u5c42 \u3002\u6b64\u5916\uff0cGAT-GO\u4f7f\u7528RaptorX \u9884\u6d4b\u7684\u6b8b\u57fa\u95f4\u63a5\u89e6\uff0c\u800c\u4e0d\u662fDeepFRI\u4f7f\u7528\u7684\u5929\u7136\u63a5\u89e6\u56fe \u3002GAT-GO\u6574\u5408\u4e86\u9884\u6d4b\u7684\u6b8b\u57fa\u63a5\u89e6\u56fe\u548cCNN\u751f\u6210\u7684\u5e8f\u5217\u8868\u793a\u4f5c\u4e3aGAT\u7684\u8f93\u5165\uff0c\u5e76\u5c06GAT\u751f\u6210\u7684\u8868\u793a\u4e0e\u86cb\u767d\u8d28\u6c34\u5e73\u7684\u5e8f\u5217\u5d4c\u5165\u76f8\u7ed3\u5408\u6765\u9884\u6d4b\u529f\u80fd\u6ce8\u91ca \u3002</li> <li>HEAL: \u8be5\u65b9\u6cd5\u9996\u5148\u4f7f\u7528\u6765\u81ea\u86cb\u767d\u8d28\u6570\u636e\u5e93\uff08PDB\uff09 \u7684\u86cb\u767d\u8d28\u8bad\u7ec3\u4e86HEAL-PDB\u6a21\u578b\uff0c\u5176\u6027\u80fd\u4e0eDeepFRI\u76f8\u5f53 \u3002\u968f\u540e\uff0c\u901a\u8fc7\u6574\u5408AlphaFold2 \u9884\u6d4b\u7684\u86cb\u767d\u8d28\u7ed3\u6784\uff0cHEAL\u7684\u6027\u80fd\u5f97\u5230\u4e86\u663e\u8457\u63d0\u5347 \u3002HEAL\u9996\u5148\u57fa\u4e8e\u5e8f\u5217\u8282\u70b9\u7279\u5f81\u548c\u63a5\u89e6\u56fe\u4e3a\u6bcf\u4e2a\u86cb\u767d\u8d28\u6784\u5efa\u56fe\uff0c\u7136\u540e\u5c06\u5176\u8f93\u5165\u5230\u4e00\u4e2a\u7531\u6d88\u606f\u4f20\u9012\u795e\u7ecf\u7f51\u7edc\u548c\u5c42\u7ea7\u56feTransformer\u7ec4\u6210\u7684\u67b6\u6784\u4e2d \u3002\u63a5\u7740\uff0c\u4f7f\u7528\u76d1\u7763\u5b66\u4e60\u548c\u5bf9\u6bd4\u5b66\u4e60 \u6765\u4f18\u5316\u7f51\u7edc \u3002</li> <li>Struct2GO: \u8be5\u65b9\u6cd5\u540c\u65f6\u5c06\u5e8f\u5217\u548c\u7ed3\u6784\u4fe1\u606f\u4f5c\u4e3a\u8f93\u5165 \u3002\u5b83\u5229\u7528SeqVec \u6a21\u578b\u63d0\u53d6\u5e8f\u5217\u7279\u5f81\uff0c\u5e76\u4f7f\u7528\u57fa\u4e8e\u81ea\u6ce8\u610f\u529b\u673a\u5236\u7684\u5c42\u7ea7\u56fe\u6c60\u5316\uff08hierarchical graph pooling\uff09 \u6a21\u578b\u4eceAlphaFold2 \u9884\u6d4b\u7684\u7ed3\u6784\u4e2d\u63d0\u53d6\u7279\u5f81 \u3002\u4e3a\u4e86\u6700\u5927\u9650\u5ea6\u5730\u5229\u7528\u7ed3\u6784\u4fe1\u606f\uff0cStruct2GO\u91c7\u7528Node2vec \u7b97\u6cd5\u5728\u86cb\u767d\u8d28\u7ed3\u6784\u7f51\u7edc\u4e2d\u751f\u6210\u6c28\u57fa\u9178\u6c34\u5e73\u7684\u5d4c\u5165\uff0c\u8fd9\u4e9b\u5d4c\u5165\u88ab\u7528\u4f5c\u56fe\u6c60\u5316\u6a21\u578b\u7684\u521d\u59cb\u8282\u70b9\u7279\u5f81 \u3002</li> </ul> <p>\u5c0f\u7ed3\uff1a \u8fd9\u4e9b\u65b9\u6cd5\u6574\u5408\u4e86\u86cb\u767d\u8d28\u7ed3\u6784\u548c\u5e8f\u5217\u4fe1\u606f\uff0c\u4ece\u800c\u663e\u8457\u63d0\u9ad8\u4e86\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u7684\u51c6\u786e\u6027 \u3002\u4e0e\u5b9e\u9a8c\u6d4b\u5b9a\u7684\u86cb\u767d\u8d28\u7ed3\u6784\u76f8\u6bd4\uff0cAlphaFold2 \u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684\u9ad8\u5206\u8fa8\u7387\u7ed3\u6784\u4fe1\u606f\uff0c\u8fd9\u6781\u5927\u5730\u63d0\u5347\u4e86\u6a21\u578b\u7684\u9884\u6d4b\u7cbe\u5ea6 \u3002\u5bf9\u4e8e\u5e8f\u5217\u9ad8\u5ea6\u76f8\u4f3c\u7684\u86cb\u767d\u8d28\uff0c\u4ec5\u7528\u5e8f\u5217\u7279\u5f81\u96be\u4ee5\u533a\u5206\u5176\u7ec6\u5fae\u7684\u529f\u80fd\u5dee\u5f02\uff0c\u7ed3\u5408\u7ed3\u6784\u7279\u5f81\u6709\u52a9\u4e8e\u514b\u670d\u8fd9\u4e00\u95ee\u9898 \u3002\u7136\u800c\uff0c\u8fd9\u7c7b\u65b9\u6cd5\u7684\u7f3a\u70b9\u662f\u5b83\u4eec\u4e3b\u8981\u5173\u6ce8\u86cb\u767d\u8d28\u7ed3\u6784\u7279\u5f81\uff0c\u800c\u5ffd\u7565\u4e86\u86cb\u767d\u8d28\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528 \u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#33-ppi-network-based-methods","title":"3.3 PPI network-based methods","text":"<p>\u57fa\u4e8ePPI\u7f51\u7edc\u7684\u65b9\u6cd5\u4e3b\u8981\u5173\u6ce8\u86cb\u767d\u8d28-\u86cb\u767d\u8d28\u76f8\u4e92\u4f5c\u7528\u7f51\u7edc \u3002\u4e0e\u57fa\u4e8e3D\u7ed3\u6784\u7684\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u86cb\u767d\u8d28\u5e8f\u5217\u4e5f\u53ef\u4ee5\u4f5c\u4e3a\u8fd9\u4e9b\u65b9\u6cd5\u7684\u8f93\u5165\u7279\u5f81\u4e4b\u4e00 \u3002</p> <p>\u5176\u57fa\u672c\u6d41\u7a0b\u5982\u56fe\u6240\u793a \uff1a  - \u9996\u5148\uff0c\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5\u53ef\u5206\u4e3a\u4e09\u7c7b\uff1a(i) \u4ece\u5e8f\u5217\u4e2d\u63d0\u53d6\u5e8f\u5217\u5d4c\u5165\uff1b(ii) \u4eceSTRING\u7b49\u6570\u636e\u5e93\u83b7\u53d6\u5355\u7269\u79cd\u6216\u591a\u7269\u79cd\u7684PPI\u7f51\u7edc \u3002 - \u5176\u6b21\uff0c\u5c06\u63d0\u53d6\u7684\u7279\u5f81\u8f93\u5165\u5230\u76f8\u5e94\u7684\u7b97\u6cd5\u6a21\u578b\u4e2d \u3002 - \u6700\u540e\uff0c\u901a\u8fc7\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u9884\u6d4b\u672a\u77e5\u86cb\u767d\u8d28\u7684\u529f\u80fd\uff0c\u5e76\u8ba1\u7b97\u5176\u5c5e\u4e8e\u7279\u5b9aGO\u672f\u8bed\u7684\u6982\u7387 \u3002</p> <p>\u4e3b\u8981\u65b9\u6cd5\u793a\u4f8b\uff1a</p> <ul> <li>GeneMANIA: \u8fd9\u662f\u4e00\u4e2a\u7f51\u7edc\u6574\u5408\u7b97\u6cd5\uff0c\u5b83\u7ed3\u5408\u4e86\u7ebf\u6027\u56de\u5f52\u7b97\u6cd5\uff08\u7528\u4e8e\u4ece\u591a\u4e2a\u86cb\u767d\u8d28\u6570\u636e\u6e90\u6784\u5efa\u590d\u5408\u529f\u80fd\u5173\u8054\u7f51\u7edc\uff09\u548c\u6807\u7b7e\u4f20\u64ad\u7b97\u6cd5\uff08\u7528\u4e8e\u5728\u8fd9\u4e9b\u7f51\u7edc\u4e0a\u9884\u6d4b\u529f\u80fd\u6ce8\u91ca\uff09\u3002\u4e0e\u5176\u5b83\u529f\u80fd\u5173\u8054\u7f51\u7edc\u65b9\u6cd5 \u76f8\u6bd4\uff0c\u5b83\u91c7\u7528\u4e86\u72ec\u7279\u7684\u4f18\u5316\u7b56\u7565\uff0c\u4fa7\u91cd\u4e8e\u8c03\u6574\u7f51\u7edc\u6743\u91cd\u548c\u5224\u522b\u503c \u3002\u6b64\u5916\uff0cGeneMANIA\u6574\u5408\u4e86\u4e00\u4e2a\u6539\u8fdb\u7684\u9ad8\u65af\u573a\u6807\u7b7e\u4f20\u64ad\u7b97\u6cd5 \u4ee5\u63d0\u9ad8\u529f\u80fd\u9884\u6d4b\u7684\u51c6\u786e\u6027 \u3002</li> <li>Mashup: \u4e0eGeneMANIA\u7c7b\u4f3c\uff0cMashup\u4e5f\u662f\u4e00\u4e2a\u7f51\u7edc\u6574\u5408\u6846\u67b6\uff0c\u5b83\u5229\u7528\u7f51\u7edc\u6269\u6563\u6765\u83b7\u53d6\u6bcf\u4e2a\u8282\u70b9\u7684\u5206\u5e03\uff0c\u5e76\u6355\u6349\u4e0e\u5176\u4ed6\u8282\u70b9\u7684\u5173\u8054\u4fe1\u606f \u3002\u7136\u540e\uff0c\u5c06\u6bcf\u4e2a\u8282\u70b9\u7684\u62d3\u6251\u4fe1\u606f\u8868\u793a\u4e3a\u4f4e\u7ef4\u7a7a\u95f4\u5411\u91cf\uff0c\u6700\u540e\u5c06\u8fd9\u4e9b\u5411\u91cf\u8868\u793a\u4f5c\u4e3a\u529f\u80fd\u9884\u6d4b\u7684\u8f93\u5165 \u3002Mashup\u63d0\u9ad8\u9884\u6d4b\u51c6\u786e\u6027\u7684\u4e3b\u8981\u539f\u56e0\u6709\u4e8c\uff1a\u4e00\u662f\u5355\u72ec\u5206\u6790\u6bcf\u4e2a\u7f51\u7edc\u7684\u62d3\u6251\u7ed3\u6784\uff0c\u4e8c\u662f\u5c06\u62d3\u6251\u4fe1\u606f\u8f6c\u6362\u4e3a\u7d27\u51d1\u7684\u4f4e\u7ef4\u8868\u793a \u3002</li> <li>deepNF: \u968f\u7740\u6df1\u5ea6\u5b66\u4e60\u6280\u672f\u7684\u5e7f\u6cdb\u5e94\u7528\uff0c\u4e00\u4e2a\u540d\u4e3adeepNF\u7684\u7f51\u7edc\u878d\u5408\u65b9\u6cd5\u88ab\u63d0\u51fa\uff0c\u5b83\u57fa\u4e8e\u591a\u6a21\u6001\u6df1\u5ea6\u81ea\u7f16\u7801\u5668\uff08MDA\uff09\u6784\u5efa \u3002\u81ea\u7f16\u7801\u5668\u662f\u4e00\u79cd\u7279\u6b8a\u7684\u795e\u7ecf\u7f51\u7edc\uff0c\u5305\u542b\u7f16\u7801\u548c\u89e3\u7801\u90e8\u5206\uff0c\u5df2\u88ab\u8bc1\u660e\u80fd\u6709\u6548\u53bb\u9664\u566a\u58f0 \u3002deepNF\u901a\u8fc7\u6784\u5efa\u6355\u83b7\u7f51\u7edc\u4fe1\u606f\u7684\u6b63\u70b9\u4e92\u4fe1\u606f\uff08PPMI\uff09\u77e9\u9635\uff08\u4f7f\u7528\u5e26\u91cd\u542f\u7684\u968f\u673a\u6e38\u8d70RWR\u65b9\u6cd5\uff09\u5c06\u5f02\u6784\u7f51\u7edc\u8f6c\u6362\u4e3a\u5411\u91cf\u8868\u793a \u3002\u968f\u540e\uff0c\u5b83\u901a\u8fc7MDA\u7684\u4e2d\u95f4\u5c42\u4ecePPMI\u77e9\u9635\u8868\u793a\u7684\u7f51\u7edc\u4e2d\u63d0\u53d6\u7d27\u51d1\u7684\u4f4e\u7ef4\u7279\u5f81\uff0c\u5e76\u7528\u8fd9\u4e9b\u7279\u5f81\u8bad\u7ec3SVM\u5206\u7c7b\u5668 \u3002</li> <li>NetQuilt: \u8be5\u65b9\u6cd5\u4f7f\u7528IsoRank \u7b97\u6cd5\u5206\u522b\u8ba1\u7b97\u540c\u7269\u79cd\u548c\u4e0d\u540c\u7269\u79cd\u86cb\u767d\u8d28\u4e4b\u95f4\u7684\u76f8\u4f3c\u6027\u5f97\u5206\uff0c\u7136\u540e\u6784\u5efaIsoRank\u76f8\u4f3c\u6027\u77e9\u9635 \u3002\u968f\u540e\uff0c\u5b83\u5c06\u6240\u6709\u7269\u79cd\u7684IsoRank\u77e9\u9635\u7ec4\u5408\u6210\u4e00\u4e2a\u65b0\u7684\u77e9\u9635\uff0c\u7528\u4f5c\u5e26\u6709maxout\u6fc0\u6d3b\u51fd\u6570 \u7684\u795e\u7ecf\u7f51\u7edc\u7684\u8f93\u5165 \u3002</li> <li>DeepGO: \u4f5c\u4e3aDeepGOPlus\u7684\u524d\u4e00\u4e2a\u7248\u672c\uff0cDeepGO\u4f7f\u7528\u591a\u5c42\u795e\u7ecf\u7f51\u7edc\u4ece\u86cb\u767d\u8d28\u5e8f\u5217\u548cPPI\u7f51\u7edc\u4e2d\u5b66\u4e60\u7279\u5f81\u4ee5\u8fdb\u884c\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b \u3002\u7531\u4e8e\u53ea\u6709\u5c11\u6570\u86cb\u767d\u8d28\u62e5\u6709\u6b64\u7c7b\u7f51\u7edc\u4fe1\u606f\uff0cDeepGOPlus\u79fb\u9664\u4e86PPI\u7f51\u7edc\u4fe1\u606f\uff0c\u8f6c\u800c\u901a\u8fc7\u6574\u5408\u57fa\u4e8e\u5e8f\u5217\u76f8\u4f3c\u6027\u7684\u65b9\u6cd5\u6765\u63d0\u9ad8\u9884\u6d4b\u6027\u80fd \u3002</li> </ul> <p>\u5c0f\u7ed3\uff1a \u8fd9\u4e9b\u65b9\u6cd5\u4e3b\u8981\u4f9d\u8d56PPI\u7f51\u7edc\u3002\u7814\u7a76\u5df2\u8bc1\u660e\uff0c\u5728PPI\u7f51\u7edc\u4e2d\u5b58\u5728\u76f8\u4e92\u4f5c\u7528\u7684\u86cb\u767d\u8d28\u901a\u5e38\u8868\u73b0\u51fa\u76f8\u4f3c\u7684\u529f\u80fd \uff0c\u8fd9\u4f7f\u5f97\u5229\u7528PPI\u7f51\u7edc\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd\u6210\u4e3a\u53ef\u80fd \u3002\u7136\u800c\uff0c\u4ec5\u57fa\u4e8ePPI\u7f51\u7edc\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd\u5b58\u5728\u5c40\u9650\u6027\uff0c\u56e0\u4e3a\u9ad8\u901a\u91cf\u6280\u672f\u4ea7\u751f\u7684\u6570\u636e\u53ef\u80fd\u5305\u542b\u566a\u58f0 \uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cd\u7ed3\u679c\u7684\u51c6\u786e\u6027 \u3002\u4e0a\u8ff0\u65b9\u6cd5\u4e2d\uff0cGeneMANIA\u548cMashup\u7b49\u6574\u5408\u591a\u4e2a\u5355\u7269\u79cdPPI\u7f51\u7edc\uff0c\u800cNetQuilt\u5219\u6574\u5408\u4e86\u591a\u7269\u79cd\u7684\u540c\u6e90\u4fe1\u606f\u548cPPI\u7f51\u7edc\u7684\u5168\u5c40\u6bd4\u5bf9\u4fe1\u606f\uff0c\u901a\u8fc7\u6574\u5408\u591a\u7269\u79cd\u7f51\u7edc\u7684\u76f8\u4f3c\u6027\u5f97\u5206\uff0cNetQuilt\u663e\u8457\u4f18\u4e8e\u57fa\u4e8e\u5355\u7269\u79cdPPI\u7f51\u7edc\u7684\u65b9\u6cd5 \u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#34-hybrid-information-based-methods","title":"3.4 Hybrid information-based methods","text":"<p>\u57fa\u4e8e\u6df7\u5408\u4fe1\u606f\u7684\u65b9\u6cd5\u5f3a\u8c03\u7ed3\u5408\u591a\u79cd\u7c7b\u578b\u7684\u4fe1\u606f\uff0c\u4f8b\u5982\u6574\u5408\u86cb\u767d\u8d28\u5e8f\u5217\u3001\u86cb\u767d\u8d28\u7ed3\u6784\u3001PPI\u7f51\u7edc\u6216InterPro\u7279\u5f81\u7b49\u591a\u79cd\u4fe1\u606f\u6765\u6e90 \u3002CAFA\u6311\u6218\u8d5b \u7684\u7ed3\u679c\u8868\u660e\uff0c\u6709\u6548\u6574\u5408\u4e0d\u540c\u7c7b\u578b\u7684\u4fe1\u606f\u786e\u5b9e\u53ef\u4ee5\u63d0\u9ad8\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u7684\u51c6\u786e\u6027 \u3002\u76ee\u524d\uff0c\u6df7\u5408\u4fe1\u606f\u662f\u8be5\u9886\u57df\u53d1\u5c55\u7684\u4e00\u4e2a\u4e3b\u8981\u8d8b\u52bf \u3002</p> <p>\u5176\u57fa\u672c\u6d41\u7a0b\u5982\u56fe\u6240\u793a \uff1a</p> <p></p> <ul> <li>\u9996\u5148\uff0c\u53ef\u4ee5\u4ece\u56db\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u4fe1\u606f\u4e2d\u63d0\u53d6\u7279\u5f81\uff1a(i) \u5e8f\u5217\u4fe1\u606f\uff1a\u63d0\u53d6\u5e8f\u5217\u5d4c\u5165\u6216\u6b8b\u57fa\u6c34\u5e73\u5411\u91cf\uff1b(ii) 3D\u7ed3\u6784\u4fe1\u606f\uff1a\u5c06\u7ed3\u6784\u8f6c\u5316\u4e3a\u63a5\u89e6\u56fe\u5e76\u83b7\u53d6\u6b8b\u57fa\u6c34\u5e73\u7279\u5f81\uff1b(iii) PPI\u7f51\u7edc\u4fe1\u606f\uff1a\u4eceSTRING\u7b49\u6570\u636e\u5e93\u83b7\u53d6PPI\u7f51\u7edc\uff1b(iv) InterPro\u7279\u5f81\uff1a\u4eceInterPro\u6570\u636e\u5e93\u83b7\u53d6\u7279\u5f81\uff1b(v) \u5176\u4ed6\u4fe1\u606f\uff1a\u5982\u6784\u5efaGO\u672f\u8bed\u56fe\u3001\u57fa\u4e8e\u5e8f\u5217\u6784\u5efa\u540c\u6e90\u7f51\u7edc\u6216\u67e5\u8be2\u6587\u732e\u83b7\u53d6\u86cb\u767d\u8d28\u7684\u6587\u672c\u7279\u5f81\u7b49 \u3002</li> <li>\u5176\u6b21\uff0c\u5c06\u63d0\u53d6\u7684\u7279\u5f81\u8f93\u5165\u5230\u76f8\u5e94\u7684\u7b97\u6cd5\u6a21\u578b\u4e2d \u3002</li> <li>\u6700\u540e\uff0c\u901a\u8fc7\u8bad\u7ec3\u597d\u7684\u6a21\u578b\u9884\u6d4b\u672a\u77e5\u86cb\u767d\u8d28\u7684\u529f\u80fd\uff0c\u5e76\u8ba1\u7b97\u5176\u5c5e\u4e8e\u7279\u5b9aGO\u672f\u8bed\u7684\u6982\u7387 \u3002</li> </ul>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#35-ppiinterpro","title":"3.5 \u6574\u5408\u5e8f\u5217\u3001\u7ed3\u6784\u3001PPI\u6216InterPro\u7279\u5f81\uff1a","text":"<ul> <li>GOLabeler: \u4f7f\u7528\u5b66\u4e60\u6392\u5e8f\uff08LTR\uff09 \u6846\u67b6\u6574\u5408\u4e94\u79cd\u7c7b\u578b\u7684\u4fe1\u606f\uff0c\u5305\u62ecGO\u672f\u8bed\u9891\u7387\u3001\u5e8f\u5217\u76f8\u4f3c\u6027\u3001\u6c28\u57fa\u9178\u4e09\u8054\u4f53\u9891\u7387\u3001ProFET\u7279\u5f81 \u548cInterPro\u7279\u5f81 \u3002\u7136\u540e\u5bf9\u5019\u9009GO\u672f\u8bed\u8fdb\u884c\u6392\u5e8f\uff0c\u5e76\u8f93\u51fa\u6392\u5e8f\u540e\u7684GO\u672f\u8bed\u5217\u8868\u4f5c\u4e3a\u6700\u7ec8\u7ed3\u679c \u3002GOLabeler\u7684\u4f18\u52bf\u5728\u4e8e\u4f7f\u7528\u4e86LTR\u6846\u67b6\uff0c\u53ef\u4ee5\u5c06\u4efb\u4f55\u5206\u7c7b\u5668\u4f5c\u4e3a\u65b0\u7ec4\u4ef6\u96c6\u6210\u5230\u6846\u67b6\u4e2d \u3002</li> <li>NetGO: \u6cbf\u7528\u4e86GOLabeler\u7684LTR \u6846\u67b6\uff0c\u5e76\u5f15\u5165\u4e86\u4e00\u4e2a\u65b0\u7ec4\u4ef6Net-KNN\uff0c\u901a\u8fc7\u4f7f\u7528STRING\u6570\u636e\u5e93\u5e7f\u6cdb\u7684\u7f51\u7edc\u4fe1\u606f\u8fdb\u4e00\u6b65\u63d0\u9ad8\u4e86\u9884\u6d4b\u6027\u80fd \u3002Net-KNN\u7684\u57fa\u672c\u601d\u60f3\u4e0eGOLabeler\u4e2d\u7684\u4e00\u4e2a\u7ec4\u4ef6BLAST-KNN\u76f8\u4f3c\uff0c\u4e0d\u540c\u4e4b\u5904\u5728\u4e8eNet-KNN\u4f7f\u7528\u7f51\u7edc\u4e2d\u7684\u5173\u8054\u5206\u6570\uff0c\u800c\u4e0d\u662fBLAST-KNN\u4e2d\u7684\u5e8f\u5217\u76f8\u4f3c\u6027 \u3002</li> <li>SDN2GO: \u91c7\u7528\u4e00\u4e2a\u96c6\u6210\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u8fdb\u884c\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b \u3002\u5b83\u5229\u7528\u4e09\u4e2a\u4e0d\u540c\u7684\u795e\u7ecf\u7f51\u7edc\u6a21\u5757\u5206\u522b\u4ece\u86cb\u767d\u8d28\u5e8f\u5217\u3001\u86cb\u767d\u8d28\u7ed3\u6784\u57df\u548cPPI\u7f51\u7edc\u4e2d\u63d0\u53d6\u7279\u5f81 \u3002\u968f\u540e\uff0c\u8fd9\u4e9b\u7279\u5f81\u88ab\u6574\u5408\u5230\u4e00\u4e2a\u52a0\u6743\u5206\u7c7b\u5668\u4e2d\uff0c\u8be5\u5206\u7c7b\u5668\u5305\u542b\u4e00\u4e2a\u4e09\u5c42\u975e\u5168\u8fde\u63a5\u7f51\u7edc\uff0c\u7528\u4e8e\u5b66\u4e60\u6765\u81ea\u4e09\u4e2a\u4e0d\u540c\u6765\u6e90\u7684\u7279\u5f81\u4ee5\u4f18\u5316\u6743\u91cd \u3002\u6b64\u5916\uff0cSDN2GO\u8fd8\u6784\u5efa\u4e86\u4e00\u4e2a\u5b50\u6a21\u578bSN2GO\uff0c\u5176\u4e2d\u6392\u9664\u4e86\u86cb\u767d\u8d28\u7ed3\u6784\u57df\u7684\u7279\u5f81 \u3002\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0c\u6574\u5408\u86cb\u767d\u8d28\u7ed3\u6784\u57df\u4fe1\u606f\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u9884\u6d4b\u6027\u80fd\uff0c\u5c24\u5176\u662f\u5728BPO\u65b9\u9762 \u3002</li> <li>Graph2GO: \u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e\u591a\u6a21\u6001\u56fe\u7684\u6a21\u578b\uff0c\u5206\u522b\u4e3aPPI\u7f51\u7edc\u548c\u5e8f\u5217\u76f8\u4f3c\u6027\u7f51\u7edc\u6784\u5efa\u4e86\u4e24\u4e2a\u56fe \u3002\u86cb\u767d\u8d28\u5e8f\u5217\u3001\u4e9a\u7ec6\u80de\u5b9a\u4f4d\u548c\u86cb\u767d\u8d28\u7ed3\u6784\u57df\u7b49\u5c5e\u6027\u4f5c\u4e3a\u8fd9\u4e24\u4e2a\u56fe\u4e2d\u7684\u8282\u70b9 \u3002\u968f\u540e\uff0c\u4f7f\u7528\u53d8\u5206\u56fe\u81ea\u7f16\u7801\u5668 \u4ece\u56fe\u4e2d\u7684\u8282\u70b9\u5b66\u4e60\u6f5c\u5728\u7279\u5f81 \u3002\u8be5\u67b6\u6784\u4ece\u7f51\u7edc\u7ed3\u6784\u548c\u8282\u70b9\u5c5e\u6027\u4e2d\u5b66\u4e60\u5411\u91cf\u8868\u793a\uff0c\u4e0d\u4ec5\u53ef\u4ee5\u7528\u4e8e\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd\uff0c\u8fd8\u53ef\u4ee5\u5e94\u7528\u4e8e\u5176\u4ed6\u6d89\u53ca\u751f\u7269\u7f51\u7edc\u7684\u4efb\u52a1\uff0c\u5982\u9884\u6d4b\u86cb\u767d\u8d28\u95f4\u76f8\u4e92\u4f5c\u7528\u548c\u86cb\u767d\u8d28\u590d\u5408\u7269 \u3002</li> <li>DeepGraphGO: \u8fd9\u662f\u4e00\u4e2a\u57fa\u4e8e\u591a\u7269\u79cd\u56fe\u795e\u7ecf\u7f51\u7edc\u7684\u65b9\u6cd5\u3002\u5b83\u9996\u5148\u5229\u7528InterProScan \u5de5\u5177\u4e3a\u86cb\u767d\u8d28\u751f\u6210InterPro\u7279\u5f81\u5411\u91cf\uff0c\u5e76\u7ed3\u5408PPI\u7f51\u7edc\uff0c\u5c06InterPro\u7279\u5f81\u5411\u91cf\u4f5c\u4e3a\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u7279\u5f81 \u3002\u7136\u540e\u901a\u8fc7\u591a\u4e2a\u56fe\u5377\u79ef\u5c42\u6355\u83b7\u7f51\u7edc\u4e2d\u7684\u9ad8\u9636\u4fe1\u606f \u3002DeepGraphGO\u7684\u4f18\u52bf\u5728\u4e8e\u5b83\u91c7\u7528\u4e86\u591a\u7269\u79cd\u7b56\u7565\uff0c\u5229\u7528\u6240\u6709\u7269\u79cd\u7684\u86cb\u767d\u8d28\u6570\u636e\u8bad\u7ec3\u5355\u4e2a\u6a21\u578b\uff0c\u8fd9\u4e0d\u4ec5\u8282\u7701\u4e86\u65f6\u95f4\u548c\u8ba1\u7b97\u8d44\u6e90\uff0c\u8fd8\u63d0\u9ad8\u4e86\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b \u3002</li> <li>CFAGO: \u8be5\u65b9\u6cd5\u57fa\u4e8e\u591a\u5934\u6ce8\u610f\u529b\u673a\u5236 \u5206\u4e24\u4e2a\u9636\u6bb5\u4ea4\u53c9\u878d\u5408PPI\u7f51\u7edc\u548c\u86cb\u767d\u8d28\u5c5e\u6027 \u3002\u7b2c\u4e00\u6b65\u662f\u9884\u8bad\u7ec3\uff0c\u91c7\u7528\u81ea\u7f16\u7801\u5668\u5b66\u4e60PPI\u7f51\u7edc\u548c\u86cb\u767d\u8d28\u5c5e\u6027\u5185\u7684\u9690\u85cf\u7279\u5f81 \u3002\u5982\u524d\u6240\u8ff0\uff0c\u81ea\u7f16\u7801\u5668\u80fd\u591f\u5ffd\u7565\u6570\u636e\u4e2d\u7684\u566a\u58f0 \u3002\u7b2c\u4e8c\u6b65\u662f\u5fae\u8c03\uff0c\u5c06\u9884\u8bad\u7ec3\u7684\u7f16\u7801\u5668\u4e0e\u4e00\u4e2a\u4e24\u5c42\u5168\u8fde\u63a5\u795e\u7ecf\u7f51\u7edc\u76f8\u7ed3\u5408\u6765\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd \u3002\u6b64\u5916\uff0c\u6d88\u878d\u5b9e\u9a8c\u8868\u660e\uff0c\u9884\u8bad\u7ec3\u5bf9\u6027\u80fd\u63d0\u5347\u7684\u8d21\u732e\u5927\u4e8e\u6ce8\u610f\u529b\u673a\u5236 \u3002</li> <li>PredGO: \u7531\u4e09\u4e2a\u91cd\u8981\u6a21\u5757\u7ec4\u6210\uff1a\u4f7f\u7528\u9884\u8bad\u7ec3\u7684\u86cb\u767d\u8d28\u8bed\u8a00\u6a21\u578bESM-1b \u63d0\u53d6\u86cb\u767d\u8d28\u5e8f\u5217\u7279\u5f81\uff1b\u91c7\u7528\u5e26\u6709\u51e0\u4f55\u5411\u91cf\u611f\u77e5\u5668 \u7684\u56fe\u795e\u7ecf\u7f51\u7edc\u4eceAlphaFold2 \u9884\u6d4b\u7684\u86cb\u767d\u8d28\u7ed3\u6784\u4e2d\u63d0\u53d6\u7279\u5f81\uff1b\u4ee5\u53ca\u5229\u7528\u57fa\u4e8e\u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\u7684\u86cb\u767d\u8d28\u878d\u5408\u5c42\u6765\u878d\u5408\u5e8f\u5217\u7279\u5f81\u548cPPI\u7279\u5f81\uff0c\u751f\u6210\u878d\u5408\u7279\u5f81 \u3002\u7136\u540e\uff0c\u5c06\u878d\u5408\u7279\u5f81\u548c\u7ed3\u6784\u7279\u5f81\u8fde\u63a5\u8d77\u6765\u8fdb\u884c\u529f\u80fd\u9884\u6d4b \u3002\u6d88\u878d\u5b9e\u9a8c\u8868\u660e\uff0c\u7ed3\u6784\u4fe1\u606f\u6539\u5584\u4e86MFO\u548cCCO\u65b9\u9762\u7684\u6027\u80fd\uff0c\u800cPPI\u4fe1\u606f\u6539\u5584\u4e86BPO\u65b9\u9762\u7684\u6027\u80fd \u3002\u7ed3\u5408\u5e8f\u5217\u3001\u7ed3\u6784\u548cPPI\u4fe1\u606f\uff0c\u80fd\u591f\u66f4\u5168\u9762\u5730\u63d0\u5347\u9884\u6d4b\u6027\u80fd \u3002</li> </ul>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#36-go","title":"3.6 \u5176\u4ed6\u6574\u5408\u65b9\u6cd5 (\u5982\u6574\u5408\u6587\u732e\u3001GO\u672f\u8bed\u3001\u540c\u6e90\u7f51\u7edc\u7b49)\uff1a","text":"<ul> <li>NetGO 2.0: \u4e0e\u4e4b\u524d\u7248\u672c\u7684NetGO \u76f8\u6bd4\uff0cNetGO 2.0\u5c06\u6765\u81eaSwissProt \u7684\u86cb\u767d\u8d28\u6587\u732e\u4fe1\u606f\uff08LR-Text\uff09\u548c\u901a\u8fc7\u5faa\u73af\u795e\u7ecf\u7f51\u7edc\u63d0\u53d6\u7684\u5e8f\u5217\u4fe1\u606f\uff08Seq-RNN\uff09\u6574\u5408\u5230LTR \u6846\u67b6\u4e2d \u3002\u4f5c\u4e3aNetGO\u4e00\u90e8\u5206\u7684LR-ProFET\u5bf9\u6574\u4f53\u6027\u80fd\u5f71\u54cd\u751a\u5fae\uff0c\u5728NetGO 2.0\u4e2d\u88ab\u79fb\u9664\uff0c\u4f46\u6574\u4f53\u6027\u80fd\u5f97\u5230\u4e86\u63d0\u5347 \u3002</li> <li>PANDA2: \u91c7\u7528\u56fe\u795e\u7ecf\u7f51\u7edc\u5bf9GO\u6709\u5411\u65e0\u73af\u56fe \u8fdb\u884c\u5efa\u6a21\uff0c\u5e76\u5c06\u5176\u4e0e\u57fa\u4e8e\u86cb\u767d\u8d28\u8bed\u8a00\u6a21\u578b\u751f\u6210\u7684\u5e8f\u5217\u7279\u5f81\u76f8\u6574\u5408 \u3002\u6b64\u5916\uff0cPANDA2\u8fd8\u5229\u7528\u4e86\u57fa\u4e8ePSI-BLAST\u3001DIAMOND\u548cPriority Score\u7684\u5e8f\u5217\u6bd4\u5bf9\u7279\u5f81\uff0c\u4ee5\u53caPAAC\u5e8f\u5217\u5c5e\u6027\u7279\u5f81 \u3002\u800c\u4e14\uff0cPANDA2\u4e2d\u6bcf\u4e2a\u7f51\u7edc\u5757\u7684\u8282\u70b9\u5c5e\u6027\u90fd\u4f1a\u8fed\u4ee3\u66f4\u65b0\uff0c\u901a\u8fc7\u5806\u53e0\u4e09\u4e2a\u7f51\u7edc\u5757\u53ef\u4ee5\u4ece\u90bb\u57df\u6216\u611f\u53d7\u91ce\u4e2d\u5b66\u4e60\u77e5\u8bc6 \u3002</li> <li>SPROF-GO: \u5229\u7528DIAMOND \u6784\u5efa\u5e8f\u5217\u540c\u6e90\u7f51\u7edc\uff0c\u800c\u975ePPI\u7f51\u7edc \u3002\u5b83\u9996\u5148\u4ece\u9884\u8bad\u7ec3\u7684\u86cb\u767d\u8d28\u8bed\u8a00\u6a21\u578bProtT5 \u4e2d\u63d0\u53d6\u5e8f\u5217\u5d4c\u5165\uff0c\u5e76\u5c06\u5176\u8f93\u5165\u4e24\u4e2a\u591a\u5c42\u611f\u77e5\u5668\uff08MLP\uff09\u4ee5\u5b66\u4e60\u6ce8\u610f\u529b\u5206\u6570\u548c\u9690\u85cf\u5d4c\u5165\u77e9\u9635 \u3002\u968f\u540e\uff0c\u57fa\u4e8e\u6ce8\u610f\u529b\u5206\u6570\u5bf9\u9690\u85cf\u5d4c\u5165\u8fdb\u884c\u52a0\u6743\u5e73\u5747\uff0c\u7136\u540e\u5c06\u5176\u8f93\u5165\u8f93\u51faMLP\u4ee5\u83b7\u5f97\u521d\u59cb\u9884\u6d4b \u3002\u6b64\u5916\uff0cSPROF-GO\u5e94\u7528\u4e86\u5c42\u7ea7\u5b66\u4e60\u7b56\u7565\u3002\u5728\u6d4b\u8bd5\u9636\u6bb5\uff0c\u57fa\u4e8e\u8bad\u7ec3\u96c6\u6784\u5efa\u540c\u6e90\u7f51\u7edc\uff0c\u5e76\u5c06\u521d\u59cb\u9884\u6d4b\u548c\u540c\u6e90\u7f51\u7edc\u90fd\u8f93\u5165\u5230\u6807\u8bb0\u6269\u6563\u7b97\u6cd5\u4e2d\u4ee5\u83b7\u5f97\u6700\u7ec8\u9884\u6d4b \u3002</li> <li>PFresGO: \u4f7f\u7528\u9884\u8bad\u7ec3\u7684\u86cb\u767d\u8d28\u8bed\u8a00\u6a21\u578bProtT5 \u5c06\u86cb\u767d\u8d28\u7f16\u7801\u4e3a\u5e8f\u5217\u5d4c\u5165 \u3002\u968f\u540e\uff0c\u5b83\u901a\u8fc7\u5c06\u72ec\u70ed\u5e8f\u5217\u5d4c\u5165\u4e0e\u7ecf\u81ea\u7f16\u7801\u5668\u964d\u7ef4\u7684\u5e8f\u5217\u5d4c\u5165\u76f8\u7ed3\u5408\u6765\u751f\u6210\u6b8b\u57fa\u6c34\u5e73\u7684\u5d4c\u5165 \u3002\u6b64\u5916\uff0cPFresGO\u5229\u7528Anc2vec \u57fa\u4e8e\u81ea\u6ce8\u610f\u529b\u673a\u5236\u6784\u5efaGO\u672f\u8bed\u5d4c\u5165 \u3002\u8fd9\u4e24\u79cd\u7c7b\u578b\u7684\u5d4c\u5165\u88ab\u878d\u5408\u8d77\u6765\uff0c\u57fa\u4e8e\u591a\u5934\u6ce8\u610f\u529b\u673a\u5236\u8ba1\u7b97GO\u672f\u8bed\u7684\u6982\u7387 \u3002\u7ed3\u679c\u8868\u660e\uff0c\u5373\u4f7f\u4e0d\u4f7f\u7528\u5e8f\u5217\u4e4b\u5916\u7684\u4fe1\u606f\uff0cGO\u56fe\u7684\u5c42\u7ea7\u7ed3\u6784\u4e5f\u80fd\u6709\u6548\u63d0\u9ad8\u9884\u6d4b\u6027\u80fd \u3002</li> <li>HNetGO: \u53e6\u4e00\u79cd\u5229\u7528GO\u672f\u8bed\u4fe1\u606f\u7684\u65b9\u6cd5\u662fHNetGO\uff0c\u5b83\u4f7f\u7528DIAMOND \u5de5\u5177\u8ba1\u7b97\u5e8f\u5217\u76f8\u4f3c\u6027\u4ee5\u6784\u5efa\u76f8\u4f3c\u6027\u7f51\u7edc \u3002\u5b83\u6574\u5408\u4e86\u57fa\u4e8e\u9884\u8bad\u7ec3\u86cb\u767d\u8d28\u8bed\u8a00\u6a21\u578bSeqVec \u63d0\u53d6\u7684\u5e8f\u5217\u7279\u5f81\u3001GO\u672f\u8bed\u76f8\u5173\u6027\u4fe1\u606f\u548cPPI\u7f51\u7edc\u6765\u6784\u5efa\u5f02\u6784\u7f51\u7edc</li> </ul>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#37-web-servers-and-stand-alone-tools","title":"3.7 Web Servers and stand-alone tools","text":""},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#4","title":"4 \u7814\u7a76\u65b9\u6cd5","text":"<p>\u5728\u5e7f\u6cdb\u4f7f\u7528\u7684\u57fa\u51c6\u6d4b\u8bd5\u6570\u636e\u96c6\u4e0a\u5bf9\u8fd9\u4e9b\u65b9\u6cd5\u8fdb\u884c\u4e86\u5168\u9762\u6bd4\u8f83\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#41","title":"4.1 \u4f7f\u7528\u7684\u6570\u636e","text":"<p>\u7528\u4e8e\u6027\u80fd\u6bd4\u8f83\u7684\u6570\u636e\u96c6\u4e25\u683c\u9075\u5faa CAFA \u6311\u6218\u8d5b\u7684\u6807\u51c6 \u3002</p> <p>\u4e3a\u4e86\u786e\u4fdd\u5b9e\u9a8c\u7ed3\u679c\u7684\u51c6\u786e\u6027\u548c\u53ef\u9760\u6027\uff0c\u5728 UniProtKB/Swiss-Prot \u4e2d\u4f7f\u7528\u4e86\u624b\u52a8\u6574\u7406\u548c\u5ba1\u67e5\u7684\u86cb\u767d\u8d28\uff0c\u5e76\u4f7f\u7528 GO \u7684\u5c42\u6b21\u7ed3\u6784\u4f20\u64ad\u6ce8\u91ca</p> <p>\u9009\u62e9\u4e86\u5e26\u6709\u5b9e\u9a8c\u8bc1\u636e\u4ee3\u7801\u7684\u86cb\u767d\u8d28\u3002\u5728 MFO\u3001BPO \u548c CCO \u65b9\u9762\uff0c\u8bad\u7ec3\u96c6\u7684\u6570\u91cf\u5206\u522b\u4e3a 2747\u30013197 \u548c 5263\uff0c\u9a8c\u8bc1\u96c6\u7684\u6570\u91cf\u4e3a 503\u3001304 \u548c 577\uff0c\u6d4b\u8bd5\u96c6\u7684\u6570\u91cf\u4e3a 719\u3001182 \u548c 119\uff0c\u6807\u7b7e\u7684\u6570\u91cf\u5206\u522b\u4e3a 38\u300145 \u548c 35</p> <p>\u4e0d\u540c \u8ba1\u7b97\u65b9\u6cd5 \u7684\u6027\u80fd\u6bd4\u8f83 </p> <p>\u5728\u5b9e\u65bd\u8fd9\u4e9b\u65b9\u6cd5\u65f6\uff0c\u5728\u4ee5\u4e0b\u60c5\u51b5\u4e0b\u4e0d\u8ba1\u7b97\u86cb\u767d\u8d28\u7684\u9884\u6d4b\u3002 \uff08i\uff09 \u7f3a\u4e4f\u7ed3\u6784\u6570\u636e\u3002 \uff08ii\uff09 \u5e8f\u5217\u957f\u5ea6\u592a\u957f\uff0c\u65e0\u6cd5\u8f93\u5165\u5230\u8bed\u8a00\u6a21\u578b\u3002\u00a0DeepFRI \u6784\u5efa\u7684\u6570\u636e\u96c6\u4e0d\u5305\u542b\u957f\u5ea6\u8d85\u8fc7 1000 \u7684\u5e8f\u5217\uff0c\u56e0\u6b64\u6211\u4eec\u4ece\u6570\u636e\u96c6\u4e2d\u7b5b\u9009\u51fa\u957f\u5ea6\u8d85\u8fc7 1000 \u7684\u5e8f\u5217\uff0c\u4ee5\u5b9e\u73b0\u6b64\u65b9\u6cd5\u3002</p> <p>\u56db\u7c7b\u8ba1\u7b97\u65b9\u6cd5\u7684\u6027\u80fd\u6bd4\u8f83</p> <p></p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#42","title":"4.2 \u6027\u80fd\u8bc4\u4f30\u6307\u6807","text":"<p>1. F-max Score (Fmax\u200b)</p> <ul> <li> <p>\u5b9a\u4e49\u4e0e\u7528\u9014\uff1a</p> <ul> <li> <p>Fmax\u200b \u662f\u4e00\u79cd\u4ee5\u86cb\u767d\u8d28\u4e3a\u4e2d\u5fc3 (protein-centered) \u7684\u8bc4\u4f30\u6307\u6807\uff0c\u5728CAFA (Critical Assessment of Function Annotations) \u6311\u6218\u8d5b\u548c\u8bb8\u591a\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u7814\u7a76\u4e2d\u88ab\u5e7f\u6cdb\u4f7f\u7528 \u3002</p> </li> <li> <p>\u5b83\u7684\u53d6\u503c\u8303\u56f4\u662f0\u52301\uff0c\u5176\u4e2d1\u8868\u793a\u6a21\u578b\u7684\u6700\u4f73\u6027\u80fd\uff0c0\u8868\u793a\u6700\u5dee\u6027\u80fd \u3002</p> </li> </ul> </li> <li> <p>\u8ba1\u7b97\u65b9\u6cd5\uff1a</p> <ul> <li> <p>Fmax\u200b \u7684\u8ba1\u7b97\u516c\u5f0f\u5982\u4e0b\uff08\u516c\u5f0f1\uff09\uff1a Fmax\u200b=max\u03c4\u200b{pr(\u03c4)+rc(\u03c4)2\u00d7pr(\u03c4)\u00d7rc(\u03c4)\u200b}</p> </li> <li> <p>\u8fd9\u91cc\u7684\u5173\u952e\u5728\u4e8e\u7406\u89e3\u5176\u7ec4\u6210\u90e8\u5206\uff1a</p> <ul> <li>\u03c4\uff1a\u4ee3\u8868\u9884\u6d4b\u5f97\u5206\u7684\u9608\u503c\u3002Fmax\u200b \u662f\u5728\u6240\u6709\u53ef\u80fd\u7684\u9608\u503c \u03c4 \u4e0b\uff0c\u8ba1\u7b97\u5f97\u5230\u7684F-score\uff08\u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\u7684\u8c03\u548c\u5e73\u5747\u6570\uff09\u7684\u6700\u5927\u503c\u3002\u8fd9\u610f\u5473\u7740\u8be5\u6307\u6807\u4f1a\u627e\u5230\u6a21\u578b\u8868\u73b0\u6700\u4f73\u7684\u90a3\u4e2a\u9608\u503c\u70b9\u3002</li> <li> <p>pr(\u03c4)\uff1a\u5728\u9608\u503c \u03c4 \u4e0b\u7684\u7cbe\u786e\u7387 (precision)\u3002\u5176\u8ba1\u7b97\u65b9\u5f0f\u5982\u4e0b\uff08\u516c\u5f0f2\uff09\uff1a pr(\u03c4)=m(\u03c4)1\u200b\u2211i=1m(\u03c4)\u200b\u2211f\u200bI(f\u2208Pi\u200b(\u03c4))\u2211f\u200bI(f\u2208Pi\u200b(\u03c4)\u2227f\u2208Ti\u200b)\u200b \u5176\u4e2d\uff1a</p> <ul> <li> <p>Pi\u200b(\u03c4) \u662f\u86cb\u767d\u8d28 i \u5728\u9608\u503c \u03c4 \u4e0b\u7684\u9884\u6d4b\u6ce8\u91ca\u96c6\u5408 \u3002</p> </li> <li> <p>Ti\u200b \u662f\u86cb\u767d\u8d28 i \u7684\u771f\u5b9e\u6ce8\u91ca\u96c6\u5408 \u3002</p> </li> <li> <p>f \u4ee3\u8868\u4e00\u4e2aGO\u7c7b\u522b\uff08\u529f\u80fd\u6ce8\u91ca\uff09 \u3002</p> </li> <li> <p>I(\u22c5) \u662f\u6307\u793a\u51fd\u6570\uff08\u6761\u4ef6\u4e3a\u771f\u65f6\u4e3a1\uff0c\u5426\u5219\u4e3a0\uff09 \u3002</p> </li> <li> <p>m(\u03c4) \u662f\u5728\u9608\u503c \u03c4 \u4e0b\uff0c\u81f3\u5c11\u9884\u6d4b\u4e86\u4e00\u4e2a\u7c7b\u522b\u7684\u86cb\u767d\u8d28\u6570\u91cf \u3002</p> </li> <li> <p>\u8fd9\u4e2a\u516c\u5f0f\u7684\u542b\u4e49\u662f\uff1a\u5bf9\u4e8e\u6bcf\u4e2a\u5728\u9608\u503c \u03c4 \u4e0b\u6709\u9884\u6d4b\u7ed3\u679c\u7684\u86cb\u767d\u8d28\uff0c\u8ba1\u7b97\u5176\u9884\u6d4b\u6b63\u786e\u7684GO\u672f\u8bed\u6570\u91cf\u5360\u5176\u6240\u6709\u9884\u6d4bGO\u672f\u8bed\u6570\u91cf\u7684\u6bd4\u4f8b\uff0c\u7136\u540e\u5bf9\u6240\u6709\u8fd9\u4e9b\u86cb\u767d\u8d28\u53d6\u5e73\u5747\u503c\u3002         - rc(\u03c4)\uff1a\u5728\u9608\u503c \u03c4 \u4e0b\u7684\u53ec\u56de\u7387 (recall)\u3002\u5176\u8ba1\u7b97\u65b9\u5f0f\u5982\u4e0b\uff08\u516c\u5f0f3\uff09\uff1a rc(\u03c4)=n1\u200b\u2211i=1n\u200b\u2211f\u200bI(f\u2208Ti\u200b)\u2211f\u200bI(f\u2208Pi\u200b(\u03c4)\u2227f\u2208Ti\u200b)\u200b \u5176\u4e2d\uff1a</p> </li> <li> <p>n \u662f\u86cb\u767d\u8d28\u7684\u603b\u6570\u91cf \u3002</p> </li> <li> <p>\u8fd9\u4e2a\u516c\u5f0f\u7684\u542b\u4e49\u662f\uff1a\u5bf9\u4e8e\u6570\u636e\u96c6\u4e2d\u7684\u6bcf\u4e00\u4e2a\u86cb\u767d\u8d28\uff0c\u8ba1\u7b97\u5176\u9884\u6d4b\u6b63\u786e\u7684GO\u672f\u8bed\u6570\u91cf\u5360\u5176\u6240\u6709\u771f\u5b9eGO\u672f\u8bed\u6570\u91cf\u7684\u6bd4\u4f8b\uff0c\u7136\u540e\u5bf9\u6240\u6709\u86cb\u767d\u8d28\u53d6\u5e73\u5747\u503c\u3002</p> </li> <li>\u7279\u70b9\u5206\u6790\uff1a<ul> <li>\u86cb\u767d\u8d28\u4e3a\u4e2d\u5fc3\uff1aFmax\u200b \u7684\u8ba1\u7b97\u9996\u5148\u9488\u5bf9\u6bcf\u4e2a\u86cb\u767d\u8d28\u8bc4\u4f30\u9884\u6d4b\u60c5\u51b5\uff08\u901a\u8fc7pr(\u03c4)\u548crc(\u03c4)\u4e2d\u7684\u5185\u90e8\u6c42\u548c\uff09\uff0c\u7136\u540e\u518d\u8fdb\u884c\u805a\u5408\u3002\u8fd9\u610f\u5473\u7740\u5b83\u5e73\u7b49\u5730\u770b\u5f85\u6bcf\u4e2a\u86cb\u767d\u8d28\u7684\u9884\u6d4b\u597d\u574f\u3002</li> <li>\u9608\u503c\u4f18\u5316\uff1a\u901a\u8fc7 max\u03c4\u200b\uff0c\u8be5\u6307\u6807\u80fd\u591f\u627e\u5230\u4e00\u4e2a\u6700\u4f73\u9608\u503c\uff0c\u4f7f\u5f97\u5728\u8be5\u9608\u503c\u4e0b\u6a21\u578b\u7684F-score\u6700\u9ad8\u3002\u8fd9\u4f7f\u5f97\u5b83\u5bf9\u4e8e\u4e0d\u540c\u6a21\u578b\u8f93\u51fa\u7684\u9884\u6d4b\u7f6e\u4fe1\u5ea6\u8303\u56f4\u5177\u6709\u4e00\u5b9a\u7684\u9c81\u68d2\u6027\u3002</li> <li>\u7efc\u5408\u6027\uff1a\u4f5c\u4e3a\u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\u7684\u8c03\u548c\u5e73\u5747\u6570\uff0cF-score\u80fd\u591f\u5e73\u8861\u8fd9\u4e24\u8005\uff0c\u907f\u514d\u5728\u5176\u4e2d\u4e00\u4e2a\u6307\u6807\u6781\u9ad8\u800c\u53e6\u4e00\u4e2a\u6781\u4f4e\u65f6\u7ed9\u51fa\u8bef\u5bfc\u6027\u7684\u597d\u8bc4\u3002</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul> <p>2. Area Under the Precision-Recall curve (AUPR)</p> <ul> <li> <p>\u5b9a\u4e49\u4e0e\u7528\u9014\uff1a</p> <ul> <li> <p>AUPR \u662f\u4e00\u79cd\u4ee5\u529f\u80fd\u4e3a\u4e2d\u5fc3 (function-centered) \u7684\u8bc4\u4f30\u6307\u6807\uff0c\u5728\u8bb8\u591a\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u7814\u7a76\u4e2d\u88ab\u4f7f\u7528 \u3002</p> </li> <li> <p>\u5b83\u540c\u6837\u53d6\u503c\u8303\u56f4\u662f0\u52301\uff0c\u5176\u4e2d1\u8868\u793a\u6a21\u578b\u7684\u6700\u4f73\u6027\u80fd\uff0c0\u8868\u793a\u6700\u5dee\u6027\u80fd \u3002</p> </li> <li> <p>AUPR\u5bf9\u4e8e\u8bc4\u4f30\u9884\u6d4b\u7ed3\u679c\u4e2d\u5b58\u5728\u9ad8\u5ea6\u7c7b\u522b\u4e0d\u5e73\u8861\u7684\u60c5\u51b5\u662f\u4e00\u4e2a\u5408\u7406\u7684\u6307\u6807 \u3002\u5728\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u4e2d\uff0c\u5f88\u591aGO\u672f\u8bed\uff08\u5373\u529f\u80fd\u7c7b\u522b\uff09\u662f\u7a00\u6709\u7684\uff08\u6b63\u4f8b\u5c11\uff09\uff0c\u800c\u5927\u90e8\u5206\u86cb\u767d\u8d28\u53ef\u80fd\u4e0d\u5177\u5907\u67d0\u4e2a\u7279\u5b9a\u529f\u80fd\uff08\u8d1f\u4f8b\u591a\uff09\uff0c\u56e0\u6b64\u7c7b\u522b\u4e0d\u5e73\u8861\u73b0\u8c61\u975e\u5e38\u666e\u904d\u3002</p> </li> </ul> </li> <li> <p>\u4e0eAUROC\u7684\u6bd4\u8f83\uff1a</p> <ul> <li> <p>AUPR\u548cAUROC\uff08ROC\u66f2\u7ebf\u4e0b\u9762\u79ef\uff09\u90fd\u662f\u5206\u7c7b\u8bc4\u4f30\u4e2d\u975e\u5e38\u901a\u7528\u7684\u6807\u51c6 \u3002</p> </li> <li> <p>\u7136\u800c\uff0c\u5728\u5206\u7c7b\u4e0d\u5e73\u8861\u7684\u60c5\u51b5\u4e0b\uff0cAUROC\u53ef\u80fd\u4e0d\u591f\u654f\u611f\uff0c\u56e0\u4e3a\u5b83\u8003\u8651\u7684\u662f\u771f\u9633\u6027\u7387\u548c\u5047\u9633\u6027\u7387\u4e4b\u95f4\u7684\u5e73\u8861\uff0c\u8fd9\u53ef\u80fd\u53d7\u5230\u5927\u91cf\u8d1f\u7c7b\u6837\u672c\u7684\u5f71\u54cd \u3002</p> </li> <li> <p>\u76f8\u6bd4\u4e4b\u4e0b\uff0cAUPR\u80fd\u66f4\u597d\u5730\u53cd\u6620\u5206\u7c7b\u5668\u5728\u9884\u6d4b\u6b63\u4f8b\uff08\u5373\u6b63\u786e\u9884\u6d4b\u86cb\u767d\u8d28\u5177\u6709\u67d0\u4e2a\u529f\u80fd\uff09\u65b9\u9762\u7684\u6027\u80fd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u5b83\u66f4\u80fd\u60e9\u7f5a\u5047\u9633\u6027\uff08\u9519\u8bef\u5730\u9884\u6d4b\u86cb\u767d\u8d28\u5177\u6709\u67d0\u4e2a\u529f\u80fd\uff09 \u3002</p> </li> </ul> </li> <li> <p>\u8ba1\u7b97\u65b9\u6cd5\uff1a</p> <ul> <li>AUPR\u662f\u7cbe\u786e\u7387-\u53ec\u56de\u7387\uff08PR\uff09\u66f2\u7ebf\u4e0b\u65b9\u7684\u9762\u79ef\u3002PR\u66f2\u7ebf\u662f\u5728\u4e0d\u540c\u9608\u503c\u4e0b\uff0c\u4ee5\u53ec\u56de\u7387\u4e3a\u6a2a\u8f74\uff0c\u7cbe\u786e\u7387\u4e3a\u7eb5\u8f74\u7ed8\u5236\u5f97\u5230\u7684\u66f2\u7ebf\u3002</li> </ul> </li> <li>\u7279\u70b9\u5206\u6790\uff1a<ul> <li>\u529f\u80fd\u4e3a\u4e2d\u5fc3\uff1aAUPR\u901a\u5e38\u662f\u9488\u5bf9\u6bcf\u4e2aGO\u672f\u8bed\uff08\u529f\u80fd\uff09\u5206\u522b\u8ba1\u7b97PR\u66f2\u7ebf\u5e76\u5f97\u5230\u5176AUPR\u503c\uff0c\u7136\u540e\u5bf9\u6240\u6709\u529f\u80fd\u7684AUPR\u8fdb\u884c\u5e73\u5747\uff08\u4f8b\u5982\u5b8f\u5e73\u5747\u6216\u5fae\u5e73\u5747\uff0c\u6587\u732e\u672a\u8be6\u8ff0\u5177\u4f53\u5e73\u5747\u65b9\u5f0f\uff0c\u4f46\u5176\u201cfunction-centered\u201d\u7279\u6027\u6307\u660e\u4e86\u8fd9\u4e00\u70b9\uff09\u3002\u8fd9\u610f\u5473\u7740\u5b83\u5173\u6ce8\u7684\u662f\u6a21\u578b\u5bf9\u6bcf\u4e2a\u201c\u529f\u80fd\u7c7b\u522b\u201d\u7684\u9884\u6d4b\u80fd\u529b\u3002</li> <li>\u9002\u7528\u4e8e\u4e0d\u5e73\u8861\u6570\u636e\uff1a\u5982\u524d\u6240\u8ff0\uff0c\u8fd9\u662fAUPR\u5728\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u9886\u57df\u7279\u522b\u6709\u4ef7\u503c\u7684\u4e00\u70b9\u3002\u7531\u4e8e\u5b83\u5173\u6ce8\u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\uff0c\u8fd9\u4e24\u4e2a\u6307\u6807\u90fd\u4e3b\u8981\u5173\u5fc3\u6b63\u7c7b\u7684\u9884\u6d4b\u60c5\u51b5\uff0c\u56e0\u6b64\u5728\u8d1f\u7c7b\u6837\u672c\u8fdc\u591a\u4e8e\u6b63\u7c7b\u6837\u672c\u65f6\uff0cAUPR\u6bd4AUROC\u66f4\u80fd\u53cd\u6620\u6a21\u578b\u5bf9\u7a00\u6709\u529f\u80fd\uff08\u6b63\u7c7b\uff09\u7684\u6355\u6349\u80fd\u529b\u3002</li> <li>\u5bf9\u5047\u9633\u6027\u654f\u611f\uff1a\u5728\u5e0c\u671b\u4e25\u683c\u63a7\u5236\u5047\u9633\u6027\uff08\u4f8b\u5982\uff0c\u4e0d\u5e0c\u671b\u9519\u8bef\u5730\u6ce8\u91ca\u4e00\u4e2a\u86cb\u767d\u8d28\u5177\u6709\u67d0\u529f\u80fd\uff09\u7684\u573a\u666f\u4e0b\uff0cAUPR\u662f\u4e00\u4e2a\u5f88\u597d\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u5b83\u5728\u7cbe\u786e\u7387\u7684\u8ba1\u7b97\u4e2d\u76f4\u63a5\u4f53\u73b0\u4e86\u5047\u9633\u6027\u7684\u5f71\u54cd\u3002</li> </ul> </li> </ul> <p>\u603b\u7ed3</p> <p>Fmax\u200b \u548c AUPR \u4ece\u4e0d\u540c\u7684\u7ef4\u5ea6\u8861\u91cf\u9884\u6d4b\u6027\u80fd\u3002Fmax\u200b \u4ee5\u86cb\u767d\u8d28\u4e3a\u5355\u4f4d\uff0c\u5bfb\u627e\u6700\u4f73\u9608\u503c\u4e0b\u7684\u7efc\u5408\u8868\u73b0\uff1b\u800cAUPR\u4ee5\u529f\u80fd\u4e3a\u5355\u4f4d\uff08\u6216\u7efc\u5408\u6240\u6709\u529f\u80fd\uff09\uff0c\u7279\u522b\u5173\u6ce8\u5728\u7c7b\u522b\u4e0d\u5e73\u8861\u60c5\u51b5\u4e0b\u7684\u7a33\u5065\u6027\u548c\u5bf9\u6b63\u7c7b\u7684\u9884\u6d4b\u80fd\u529b\u3002\u540c\u65f6\u4f7f\u7528\u8fd9\u4e24\u4e2a\u6307\u6807\u53ef\u4ee5\u66f4\u5168\u9762\u5730\u4e86\u89e3\u4e00\u4e2a\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u6a21\u578b\u7684\u4f18\u52a3\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#5","title":"5 \u5b9e\u9a8c\u7ed3\u679c","text":"<ul> <li> <p>\u603b\u4f53\u6700\u4f73\uff1a \u57fa\u4e8e\u6df7\u5408\u4fe1\u606f\u7684\u65b9\u6cd5\u5728\u591a\u9879\u6307\u6807\u4e0a\u4f18\u4e8e\u5176\u4ed6\u4e09\u7c7b\u65b9\u6cd5 \u3002</p> <ul> <li> <p>HNetGO\uff1a MFO Fmax\u200b (0.523)\u6700\u4f73\uff0cCCO Fmax\u200b (0.618)\u6700\u4f73\u3002MFO AUPR (0.570)\u6700\u4f73\uff0cBPO AUPR (0.512)\u6700\u4f73\uff0cCCO AUPR (0.669)\u6700\u4f73 \u3002</p> </li> <li> <p>PFresGO\uff1a BPO Fmax\u200b (0.527)\u6700\u4f73 \u3002</p> </li> </ul> </li> <li> <p>\u6df7\u5408\u65b9\u6cd5\u4f18\u52bf\u539f\u56e0\uff1a \u6709\u6548\u5229\u7528\u6765\u81ea\u4e0d\u540c\u6765\u6e90\u7684\u4e92\u8865\u6570\u636e\uff08\u5e8f\u5217\u3001\u7ed3\u6784\u3001PPI\u3001InterPro\u3001GO\u672f\u8bed\u7b49\uff09\uff0c\u4e30\u5bcc\u4e86\u5bf9\u86cb\u767d\u8d28\u529f\u80fd\u7684\u7406\u89e3 \u3002</p> <ul> <li> <p>\u5e8f\u5217\uff1a\u63d0\u4f9b\u6c28\u57fa\u9178\u7ec4\u6210\u548c\u6392\u5217\u4fe1\u606f \u3002</p> </li> <li> <p>\u7ed3\u6784\uff1a\u63d0\u4f9b3D\u7ed3\u6784\u3001\u6784\u8c61\u548c\u529f\u80fd\u4f4d\u70b9\u4fe1\u606f \u3002</p> </li> <li> <p>PPI\uff1a\u63d0\u4f9b\u86cb\u767d\u8d28\u5728\u751f\u7269\u4f53\u5185\u7684\u76f8\u4e92\u4f5c\u7528\u5168\u5c40\u89c6\u56fe \u3002</p> </li> <li> <p>InterPro/GO\uff1a\u63d0\u4f9b\u86cb\u767d\u8d28\u7684\u591a\u7c7b\u578b\u8868\u5f81\u548c\u529f\u80fd\u7684\u8be6\u7ec6\u63cf\u8ff0 \u3002</p> </li> </ul> </li> </ul> <p>\u5e8f\u5217\u548c\u7ed3\u6784\u4fe1\u606f\u6709\u52a9\u4e8e\u63d0\u9ad8 MFO \u548c CCO \u65b9\u9762\u7684\u6027\u80fd\uff0c\u800c PPI \u4fe1\u606f\u6709\u52a9\u4e8e\u63d0\u9ad8 BPO \u65b9\u9762\u7684\u6027\u80fd\u3002\u5177\u4f53\u6765\u8bf4\uff0cMFO \u4e3b\u8981\u63cf\u8ff0\u86cb\u767d\u8d28\u7684\u5206\u5b50\u529f\u80fd\uff0c\u800c CCO \u63cf\u8ff0\u86cb\u767d\u8d28\u6240\u5728\u7ec6\u80de\u7684\u7ec4\u6210\u548c\u7ed3\u6784\u3002\u5e8f\u5217\u4fe1\u606f\u63d0\u4f9b\u6709\u5173\u86cb\u767d\u8d28\u6c28\u57fa\u9178\u7ec4\u6210\u7684\u8be6\u7ec6\u4fe1\u606f\uff0c\u5e76\u4e14\u53ef\u4ee5\u4ece\u5e8f\u5217\u4e2d\u63d0\u53d6\u4e0e\u529f\u80fd\u76f8\u5173\u7684\u529f\u80fd\u76f8\u5173\u8bed\u4e49\u4fe1\u606f\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u7ed3\u6784\u4fe1\u606f\u63d0\u4f9b\u4e86\u66f4\u591a\u65b9\u9762\u7684\u4fe1\u606f\uff0c\u5305\u62ec\u4e9a\u7ec6\u80de\u4f4d\u7f6e\u3001\u86cb\u767d\u8d28\u7ed3\u6784\u57df\u548c\u5185\u90e8\u7ed3\u6784\u7279\u5f81\u3002\u8fd9\u4e9b\u4fe1\u606f\u76f8\u8f85\u76f8\u6210\uff0c\u4e0d\u4ec5\u63ed\u793a\u4e86\u86cb\u767d\u8d28\u7684\u5206\u5b50\u529f\u80fd\u53ca\u5176\u5728\u7ec6\u80de\u5185\u5916\u7684\u4f5c\u7528\u673a\u5236\uff0c\u8fd8\u63ed\u793a\u4e86\u86cb\u767d\u8d28\u5728\u7ec6\u80de\u5185\u7684\u5b9a\u4f4d\u548c\u7ec4\u6210\u3002 \u6b64\u5916\uff0cBPO \u4e3b\u8981\u63cf\u8ff0\u86cb\u767d\u8d28\u53c2\u4e0e\u7684\u751f\u7269\u8fc7\u7a0b\u6216\u6d3b\u52a8\uff0c\u901a\u5e38\u6d89\u53ca\u591a\u79cd\u86cb\u767d\u8d28\u4e4b\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u548c\u8c03\u8282\u3002PPI \u4fe1\u606f\u63d0\u4f9b\u6709\u5173\u86cb\u767d\u8d28\u76f8\u4e92\u4f5c\u7528\u7f51\u7edc\u3001\u4fe1\u53f7\u4f20\u5bfc\u548c\u4ee3\u8c22\u8c03\u8282\u7684\u4fe1\u606f\uff0c\u63ed\u793a\u4e86\u86cb\u767d\u8d28\u5728\u751f\u7269\u8fc7\u7a0b\u4e2d\u7684\u6574\u4f53\u4f5c\u7528\u548c\u529f\u80fd\u3002\u56e0\u6b64\uff0c\u5e8f\u5217\u4fe1\u606f\u3001\u7ed3\u6784\u4fe1\u606f\u548c PPI \u4fe1\u606f\u5728\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u4efb\u52a1\u4e2d\u626e\u6f14\u4e0d\u540c\u7684\u89d2\u8272\uff0c\u8fd9\u4e5f\u53cd\u6620\u4e86\u5b83\u4eec\u5728 MFO\u3001BPO \u548c CCO \u4e09\u4e2a\u65b9\u9762\u7684\u4e0d\u540c\u4fa7\u91cd\u70b9\u548c\u7279\u70b9\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#51","title":"5.1 \u7ed3\u6784\u9884\u6d4b\u7684\u51c6\u786e\u6027\u6bd4\u8f83","text":"<p>\u7531\u4e8e\u4f1a\u62c5\u5fc3\u57fa\u4e8e 3D \u7ed3\u6784\u7684\u65b9\u6cd5\u4e2d\u4f7f\u7528\u7684\u7ed3\u6784\u7684\u51c6\u786e\u6027\u3002</p> <p>\u5728\u8fd9\u65b9\u9762\uff0c\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u663e\u793a\u51fa\u5de8\u5927\u7684\u6f5c\u529b\u3002\u5176\u4e2d\uff0c\u5305\u62ec AlphaFold [ 120] \u548c RaptorX [ 121] \u5728\u5185\u7684\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u5df2\u7ecf\u53d6\u5f97\u4e86\u4e0d\u9519\u7684\u6548\u679c\u3002\u6b64\u5916\uff0c\u6211\u4eec\u8fd8\u9009\u62e9\u4e86\u53e6\u5916\u4e24\u79cd\u9ad8\u7ea7\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5 ProSPr [ 122] \u548c trRosetta [ 123] \u8fdb\u884c\u6bd4\u8f83\u3002RaptorX \u548c trRosetta \u4f7f\u7528\u6df1\u5ea6\u6b8b\u5dee\u795e\u7ecf\u7f51\u7edc \uff08ResNet\uff09 \u4f5c\u4e3a\u5176\u6838\u5fc3\u6df1\u5ea6\u5b66\u4e60\u67b6\u6784\u3002\u76f8\u6bd4\u4e4b\u4e0b\uff0cAlphaFold \u548c ProSPr \u7684\u6838\u5fc3\u7ec4\u4ef6\u662f\u6df1\u5ea6 CNN\u3002</p> <p>\u503c\u5f97\u6ce8\u610f\u7684\u662f\uff0c\u5728\u6700\u8fd1\u7684\u4e00\u9879\u7814\u7a76 [ 125] \u4e2d\u8bc4\u4f30\u4e86\u8fd9\u56db\u79cd\u65b9\u6cd5\u5728 CASP13 [ 124] \u6d4b\u8bd5\u96c6\u4e0a\u7684\u63a5\u89e6\u7cbe\u5ea6\uff0c\u8868 4 \u8be6\u7ec6\u603b\u7ed3\u4e86\u8fd9\u56db\u79cd\u65b9\u6cd5\u7684\u6027\u80fd\u7ed3\u679c\u3002\u5f88\u660e\u663e\uff0cAlphaFold \u5728\u5404\u4e2a\u65b9\u9762\u90fd\u8868\u73b0\u51fa\u6700\u51fa\u8272\u7684\u8868\u73b0\u3002\u6b63\u56e0\u4e3a\u5982\u6b64\uff0c\u5927\u591a\u6570\u57fa\u4e8e 3D \u7ed3\u6784\u7684\u65b9\u6cd5\u9009\u62e9\u4f7f\u7528 AlphaFold \u9884\u6d4b\u7684\u86cb\u767d\u8d28\u7ed3\u6784\u4f5c\u4e3a\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u7684\u8f93\u5165\u7279\u5f81\uff0c\u800c AlphaFold \u6240\u5c55\u793a\u7684\u51c6\u786e\u6027\u548c\u53ef\u9760\u6027\u4e3a\u8fd9\u4e9b\u65b9\u6cd5\u63d0\u4f9b\u4e86\u6709\u529b\u7684\u652f\u6301\u3002\u4f7f\u7528 AlphaFold \u9884\u6d4b\u7684\u9ad8\u7cbe\u5ea6\u7ed3\u6784\u4f5c\u4e3a\u8f93\u5165\u7279\u5f81\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u53ef\u4ee5\u66f4\u51c6\u786e\u5730\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd\u3002</p> <p></p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#52","title":"5.2 \u9884\u6d4b\u672a\u6ce8\u91ca\u86cb\u767d\u8d28\u7684\u51c6\u786e\u6027","text":"<p>\u4ece Uniprot [ 24] \u6570\u636e\u5e93\u4e2d\u9009\u62e9\u4e86\u6700\u65b0\u7684 100 \u79cd\u4eba\u7c7b\u86cb\u767d\u8d28\u8fdb\u884c\u9884\u6d4b\u8bc4\u4f30</p> <p>MFO\u3001BPO \u548c CCO \u4e09\u4e2a\u529f\u80fd\u7c7b\u522b\u7684\u6700\u5927\u51c6\u786e\u6027\u4e3a 0.316\u3001 0.378 \u548c 0.371\uff0c \u5e73\u5747\u7cbe\u5ea6\u5206\u522b\u4e3a 0.138\u30010.229 \u548c 0.220\u3002\u5c3d\u7ba1\u5f53\u524d\u6027\u80fd\u6700\u597d\u7684\u8ba1\u7b97\u65b9\u6cd5\u6ca1\u6709\u8fbe\u5230\u6240\u9700\u7684\u7cbe\u5ea6\uff0c\u4f46\u6211\u4eec\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9b\u7ed3\u679c\u53ea\u662f\u9884\u6d4b\u503c\uff0c\u5e76\u4e14\u53d7\u5230\u4e00\u5b9a\u7a0b\u5ea6\u7684\u4e0d\u786e\u5b9a\u6027\u7684\u5f71\u54cd\u3002\u6b64\u5916\uff0c\u51c6\u786e\u6027\u8bc4\u4f30\u8fd8\u53d7\u5230\u4e00\u5b9a\u7a0b\u5ea6\u4e0d\u786e\u5b9a\u6027\u7684\u5f71\u54cd\uff0c\u56e0\u4e3a\u8bc4\u4f30\u6240\u4f9d\u8d56\u7684\u6807\u7b7e\u57fa\u4e8e\u9884\u6d4b\u7684\u8ba1\u7b97\u65b9\u6cd5\uff0c\u7f3a\u4e4f\u5b9e\u9a8c\u9a8c\u8bc1\u3002\u56e0\u6b64\uff0c\u6211\u4eec\u8ba4\u4e3a\u4f7f\u7528\u6df1\u5ea6\u5b66\u4e60\u7684\u8ba1\u7b97\u65b9\u6cd5\u5728\u672a\u6ce8\u91ca\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u9886\u57df\u4ecd\u5177\u6709\u5f88\u5927\u7684\u53d1\u5c55\u6f5c\u529b\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#6","title":"6 \u524d\u666f","text":""},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#61-datasets","title":"6.1 datasets","text":"<p>\u5f53\u524d\u53ef\u7528\u7684\u86cb\u767d\u8d28\u6570\u636e\u96c6\u5b58\u5728\u51e0\u4e2a\u95ee\u9898\u3002 - \uff08i\uff09 \u975e\u5e38\u6709\u9650\u7684\u5ba1\u67e5\u86cb\u767d\u8d28\u6570\u636e\u3002\u6700\u65b0\u7248\u672c\u7684 Uniprot \u6570\u636e\u5e93\u4e2d\u8d85\u8fc7 99% \u7684\u86cb\u767d\u8d28\u4ecd\u9700\u8981\u5ba1\u67e5\u3002\u5b9e\u9a8c\u786e\u5b9a\u86cb\u767d\u8d28\u7ed3\u6784\u7684\u9ad8\u6210\u672c\u5bfc\u81f4\u7ed3\u6784\u6570\u636e\u7684\u8986\u76d6\u8303\u56f4\u76f8\u5bf9\u6709\u9650 \u3002\u6b64\u5916\uff0cPPI \u6570\u636e\u53ef\u80fd\u5305\u542b\u566a\u58f0\u548c\u5047\u9633\u6027\uff0c\u8fd9\u53ef\u80fd\u4f1a\u5f71\u54cd\u86cb\u767d\u8d28\u76f8\u4e92\u4f5c\u7528\u7684\u51c6\u786e\u6027\u548c\u53ef\u9760\u6027\u3002\u56e0\u6b64\uff0c\u5e94\u8be5\u6295\u5165\u66f4\u591a\u7cbe\u529b\u6765\u6536\u96c6\u53ef\u9760\u7684\u86cb\u767d\u8d28\u6570\u636e\u3002 - \uff08ii\uff09 \u5df2\u7ecf\u63d0\u51fa\u4e86\u8bb8\u591a\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u65b9\u6cd5\uff0c\u4f46\u5927\u591a\u6570\u90fd\u662f\u4f7f\u7528\u4e0d\u540c\u7684\u6570\u636e\u96c6\u8fdb\u884c\u8bad\u7ec3\u548c\u6d4b\u8bd5\u7684\u3002\u4f7f\u7528\u4e00\u79cd\u65b9\u6cd5\u6536\u96c6\u7684\u6570\u636e\u8bad\u7ec3\u7684\u6a21\u578b\u53ef\u80fd\u5728\u5176\u4ed6\u65b9\u6cd5\u6784\u5efa\u7684\u6570\u636e\u96c6\u4e0a\u8868\u73b0\u4e0d\u4f73\uff0c\u56e0\u6b64\u5f88\u96be\u6839\u636e\u4e0d\u540c\u7684\u6d4b\u8bd5\u96c6\u76f4\u63a5\u5ba2\u89c2\u5730\u6bd4\u8f83\u4e0d\u540c\u65b9\u6cd5\u7684\u6027\u80fd\u3002</p>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#62","title":"6.2 \u7279\u5f81\u63d0\u53d6\u65b9\u6cd5","text":"<ul> <li>\u76ee\u524d\u65b9\u6cd5\u4f9d\u8d56\u4e8e\u6709\u6548\u6574\u5408\u73b0\u6709\u7279\u5f81\u63d0\u53d6\u6280\u672f\uff08\u5e8f\u5217\u76f8\u4f3c\u6027\u3001\u86cb\u767d\u8d28\u8bed\u8a00\u6a21\u578b\u3001\u63a5\u89e6\u56fe\u3001\u56fe\u62d3\u6251\u7ed3\u6784\u3001InterPro\u7b49\uff09\u3002</li> </ul>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#-","title":"- \u9700\u6c42\uff1a \u5f00\u53d1\u65b0\u7684\u7279\u5f81\u63d0\u53d6\u65b9\u6cd5\uff0c\u4ee5\u63d0\u4f9b\u66f4\u5168\u9762\u3001\u66f4\u51c6\u786e\u7684\u86cb\u767d\u8d28\u7279\u5f81\u8868\u793a \u3002","text":""},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#63","title":"6.3 \u7b97\u6cd5","text":"<ul> <li> <p>\u6df1\u5ea6\u5b66\u4e60\u70ed\u70b9\uff1a \u56fe\u795e\u7ecf\u7f51\u7edc\u3001\u81ea\u7f16\u7801\u5668\u3001\u6ce8\u610f\u529b\u673a\u5236\u7b49\u663e\u793a\u51fa\u63d0\u5347\u9884\u6d4b\u6027\u80fd\u7684\u6f5c\u529b \u3002</p> </li> <li> <p>\u9700\u6c42\uff1a \u5982\u4f55\u5229\u7528\u6216\u7ec4\u5408\u8fd9\u4e9b\u5148\u8fdb\u7684\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\u6784\u5efa\u66f4\u51c6\u786e\u7684\u86cb\u767d\u8d28\u529f\u80fd\u9884\u6d4b\u5668\u662f\u5f53\u524d\u91cd\u8981\u8bae\u9898\u4e4b\u4e00 \u3002</p> </li> <li> <p>\u5904\u7406\u7a00\u758f\u6570\u636e\uff1a \u5bf9\u4e8e\u6570\u636e\u7a00\u758f\u3001\u4fe1\u606f\u4e0d\u8db3\u7684\u7269\u79cd\uff0c\u73b0\u6709\u65b9\u6cd5\u9884\u6d4b\u6027\u80fd\u53ef\u80fd\u4e0d\u4f73 \u3002</p> </li> <li> <p>\u6f5c\u5728\u89e3\u51b3\u65b9\u6848\uff1a\u8fc1\u79fb\u5b66\u4e60\uff1a \u5229\u7528\u73b0\u6709\u7269\u79cd\u4fe1\u606f\uff0c\u901a\u8fc7\u4e0d\u540c\u8bad\u7ec3\u7b56\u7565\u6539\u8fdb\u65b0\u7269\u79cd\u7684\u9884\u6d4b\u6027\u80fd\uff0c\u7f13\u89e3\u6570\u636e\u7a00\u758f\u95ee\u9898</p> </li> </ul>"},{"location":"note/%E6%9C%AA%E5%91%BD%E5%90%8D/#7","title":"7 \u603b\u7ed3","text":"<p>\u672c\u6587\u4ecb\u7ecd\u4e86\u86cb\u767d\u8d28\u6570\u636e\u5e93\uff0c\u8ba8\u8bba\u4e86\u5404\u79cd\u8ba1\u7b97\u65b9\u6cd5\uff08\u4f18\u7f3a\u70b9\uff09\uff0c\u5e76\u5217\u4e3e\u4e86\u53ef\u7528\u5de5\u5177 \u3002</p> <ul> <li> <p>\u6027\u80fd\u6d1e\u5bdf\uff1a</p> <ul> <li> <p>\u57fa\u4e8e\u6df7\u5408\u4fe1\u606f\u7684\u65b9\u6cd5\u901a\u5e38\u8868\u73b0\u66f4\u4f18 \u3002</p> </li> <li> <p>\u5e8f\u5217/\u7ed3\u6784\u6570\u636e\u5bf9MFO/CCO\u9884\u6d4b\u5173\u952e\uff1bPPI\u6570\u636e\u5bf9BPO\u9884\u6d4b\u5173\u952e \u3002</p> </li> <li> <p>\u9ad8\u7cbe\u5ea6\u9884\u6d4b\u7ed3\u6784\uff08\u5982AlphaFold\uff09\u63d0\u5347\u4e86\u57fa\u4e8e3D\u7ed3\u6784\u65b9\u6cd5\u7684\u6027\u80fd \u3002</p> </li> </ul> </li> <li> <p>\u672a\u6765\u7126\u70b9\uff1a \u89e3\u51b3\u6570\u636e\u96c6\u3001\u7279\u5f81\u63d0\u53d6\u548c\u7b97\u6cd5\uff08\u7279\u522b\u662f\u5229\u7528\u6df1\u5ea6\u5b66\u4e60\u548c\u8fc1\u79fb\u5b66\u4e60\uff09\u65b9\u9762\u7684\u6311\u6218\uff0c\u5bf9\u672a\u6765\u8fdb\u5c55\u81f3\u5173\u91cd\u8981</p> </li> </ul>"},{"location":"note/courses/AI/Chapter%202/","title":"\u77e5\u8bc6\u8868\u8fbe\u4e0e\u63a8\u7406","text":""},{"location":"note/courses/AI/Chapter%202/#1","title":"1 \u547d\u9898\u903b\u8f91","text":"<p>\u4ec0\u4e48\u662f\u903b\u8f91\uff1a \u8fdb\u884c\u6b63\u786e\u63a8\u7406\u548c\u5145\u5206\u8bba\u8bc1\u7684\u7814\u7a76</p> <p>\u65e9\u671f\u7b26\u53f7\u4e3b\u4e49\u4eba\u5de5\u667a\u80fd\uff08symbolic AI\uff09 \u5c31\u662f\u8131\u80ce\u4e8e\u903b\u8f91\u63a8\u7406</p> <p>\u903b\u8f91\u5173\u7cfb\u7684\u95ee\u9898\uff1a</p> <ul> <li>\u4ece\u4e00\u4e2a\u6216\u82e5\u5e72\u524d\u63d0\u51fa\u53d1\uff0c\u662f\u5426\u6751\u5b50\u554a\u4e00\u4e2a\u6709\u6548\u7684\u8bba\u8bc1\u6216\u8005\u63a8\u7406\u6765\u652f\u6301\u6240\u5f97\u5230\u7684\u7ed3\u8bba</li> <li>\u903b\u8f91\u548c\u63a8\u7406\u662f\u4eba\u5de5\u667a\u80fd\u7684\u6838\u5fc3\u95ee\u9898</li> </ul> <p>\u547d\u9898\uff1a\u786e\u5b9a\u4e3a\u771f\u6216\u4e3a\u5047\u7684\u9648\u8ff0\u53e5\u3002\u547d\u9898\u603b\u662f\u5177\u6709\u4e00\u4e2a\u201c\u771f\u503c\u201d\u3002\u53ea\u6709\u5177\u6709\u786e\u5b9a\u771f\u503c\u7684\u9648\u8ff0\u53e5\u624d\u662f\u547d\u9898\uff0c\u65e0\u6cd5\u5224\u65ad\u771f\u6216\u5047\u7684\u63cf\u8ff0\u6027\u53e5\u5b50\u4e0d\u80fd\u4f5c\u4e3a\u547d\u9898\u3002</p> <p>Note</p> <p>\u4e0d\u5305\u542b\u5176\u4ed6\u547d\u9898\u4f5c\u4e3a\u5176\u7ec4\u6210\u90e8\u5206\u7684\u547d\u9898\uff0c\u53c8\u79f0\u4e3a\u7b80\u5355\u547d\u9898</p> <p>\u590d\u5408\u547d\u9898\uff1a \u5305\u542b\u5176\u4ed6\u547d\u9898\u4f5c\u4e3a\u5176\u7ec4\u6210\u90e8\u5206\u7684\u547d\u9898</p> <p>\u4f18\u5148\u7ea7\uff1a</p> <p>\u903b\u8f91\u7b49\u4ef7\uff1a\u5177\u6709\u76f8\u540c\u7684\u771f\u5047\u7ed3\u679c</p> <p>Exmaple</p> <p></p> <p>\u547d\u9898\u903b\u8f91\u63a8\u7406\u7684\u624b\u6bb5\u548c\u65b9\u6cd5\uff1a</p> <p>\u547d\u9898\u8303\u5f0f - \u6709\u9650\u4e2a\u7b80\u5355\u5408\u53d6\u5f0f\u6784\u6210\u7684\u6790\u53d6\u5f0f\u79f0\u4e3a\u6790\u53d6\u8303\u5f0f - \u6709\u9650\u4e2a\u7b80\u5355\u7684\u6790\u53d6\u5f0f\u6784\u6210\u7684\u5408\u53d6\u5f0f\u79f0\u4e3a\u5408\u53d6\u8303\u5f0f</p> <p>Note</p> <ul> <li>\u4e00\u4e2a\u6790\u53d6\u8303\u5f0f\u662f\u4e0d\u6210\u7acb\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u6bcf\u4e2a\u7b80\u5355\u5408\u53d6\u5f0f\u90fd\u662f\u4e0d\u6210\u7acb\u7684</li> <li>\u4e00\u4e2a\u5408\u53d6\u8303\u5f0f\u662f\u6210\u7acb\u7684\uff0c\u5f53\u4e14\u4ec5\u5f53\u5b83\u7684\u6bcf\u4e2a\u7b80\u5355\u6790\u53d6\u5f0f\u90fd\u662f\u6210\u7acb\u7684</li> <li>\u4efb\u4e00\u547d\u9898\u516c\u5f0f\u90fd\u5b58\u5728\u7740\u4e0e\u4e4b\u7b49\u503c\u7684\u6790\u53d6\u8303\u5f0f\u5408\u5408\u53d6\u8303\u5f0f\uff08\u4e0d\u552f\u4e00\uff09</li> </ul>"},{"location":"note/courses/AI/Chapter%202/#2","title":"2 \u8c13\u8bcd\u903b\u8f91","text":"<p>!!! note \u4e3a\u4ec0\u4e48\u8981\u4ece\u547d\u9898\u903b\u8f91\u5230\u8c13\u8bcd\u903b\u8f91\uff1f</p> <pre><code>\u5728\u547d\u9898\u903b\u8f91\u4e2d\uff0c\u539f\u5b50\u547d\u9898\u662f\u6700\u57fa\u672c\u7684\u5355\u4f4d\u3002\u7531\u539f\u5b50\u547d\u9898\u51fa\u53d1\uff0c\u901a\u8fc7\u4f7f\u7528\u547d\u9898\u8054\u7ed3\u8bcd\uff0c\u6784\u6210\u590d\u5408\u547d\u9898\u3002\u547d\u9898    \n\u903b\u8f91\u53ea\u80fd\u628a\u590d\u5408\u547d\u9898\u5206\u89e3\u4e3a\u7b80\u5355\u547d\u9898\uff08\u5373\u539f\u5b50\u547d\u9898\uff09\uff0c\u65e0\u6cd5\u5bf9\u539f\u5b50\u547d\u9898\u6240\u5305\u542b\u7684\u4e30\u5bcc\u8bed\u4e49\uff08\u5982\u4e2a\u4f53\u3001\u90e8\u5206\n\u6216\u5168\u4f53\u7b49\uff09\u8fdb\u884c\u523b\u753b\u3002\u56e0\u6b64\uff0c\u547d\u9898\u903b\u8f91\u65e0\u6cd5\u8868\u8fbe\u5c40\u90e8\u4e0e\u6574\u4f53\u3001\u4e00\u822c\u4e0e\u4e2a\u522b\u7684\u5173\u7cfb\u3002\n</code></pre> <p>\u8c13\u8bcd\u903b\u8f91\uff1a \u523b\u753b\u4e3b\u4f53\u4e4b\u95f4\u903b\u8f91\u5173\u7cfb\u7684\u65b9\u6cd5</p> <p>\u5728\u8c13\u8bcd\u903b\u8f91\u4e2d\uff0c\u5c06\u539f\u5b50\u547d\u9898\u8fdb\u4e00\u6b65\u7ec6\u5316\uff0c\u5206\u89e3\u51fa\u4e2a\u4f53\u3001\u8c13\u8bcd\u548c\u91cf\u8bcd\uff0c\u6765\u8868\u8fbe\u4e2a\u4f53\u4e0e\u603b\u4f53 \u7684\u5185\u5728\u8054\u7cfb\u548c\u6570\u91cf\u5173\u7cfb\uff0c\u8fd9\u5c31\u662f\u8c13\u8bcd\u903b\u8f91\u7684\u7814\u7a76\u5185\u5bb9\u3002</p> <ul> <li> <p>\u4e2a\u4f53\uff1a\u4e2a\u4f53\u662f\u6307\u6240\u7814\u7a76\u9886\u57df\u4e2d\u53ef\u4ee5\u72ec\u7acb\u5b58\u5728\u7684\u5177\u4f53\u6216\u62bd\u8c61\u7684\u6982\u5ff5\u3002</p> </li> <li> <p>\u8c13\u8bcd\uff1a\u8c13\u8bcd\u662f\u7528\u6765\u523b\u753b\u4e2a\u4f53\u5c5e\u6027\u6216\u8005\u63cf\u8ff0\u4e2a\u4f53\u4e4b\u95f4\u5173\u7cfb\u5b58\u5728\u6027\u7684\u5143\u7d20\uff0c\u5176\u503c\u4e3a\u771f\u6216\u4e3a\u5047</p> </li> </ul> <p>\u5168\u79f0\u91cf\u8bcd\u548c\u5b58\u5728\u91cf\u8bcd</p> <p>\u7ea6\u675f\u53d8\u5143\uff1a \u5728\u5168\u79f0\u91cf\u8bcd\u6216\u5b58\u5728\u91cf\u8bcd\u7684\u7ea6\u675f\u6761\u4ef6\u4e0b\u7684\u53d8\u91cf\u7b26\u53f7\u79f0\u4e3a\u7ea6\u675f\u53d8\u5143 \u81ea\u7531\u53d8\u5143\uff1a \u4e0d\u53d7\u5168\u79f0\u91cf\u8bcd\u6216\u8005\u5b58\u5728\u91cf\u8bcd\u7ea6\u675f\u7684\u53d8\u91cf\u7b26\u53f7 e.g. \\(Q(x)\\)</p> <p>\u5f53\u516c\u5f0f\u4e2d\u5b58\u5728\u591a\u4e2a\u91cf\u8bcd\u65f6\uff0c\u82e5\u591a\u4e2a\u91cf\u8bcd\u90fd\u662f\u5168\u79f0\u91cf\u8bcd\u6216\u8005\u90fd\u662f\u5b58\u5728\u91cf\u8bcd\uff0c\u5219</p> <p>\u91cf\u8bcd\u7684\u4f4d\u7f6e\u53ef\u4ee5\u4e92\u6362\uff1b\u82e5\u591a\u4e2a\u91cf\u8bcd\u4e2d\u65e2\u6709\u5168\u79f0\u91cf\u8bcd\u53c8\u6709\u5b58\u5728\u91cf\u8bcd\uff0c\u5219\u91cf\u8bcd\u7684\u4f4d\u7f6e\u4e0d\u53ef \u4ee5\u968f\u610f\u4e92\u6362</p> <p>Example</p> <p></p> <p>\u9879\uff1a \u9879\u662f\u63cf\u8ff0\u5bf9\u8c61\u7684\u903b\u8f91\u8868\u8fbe\u5f0f\uff0c\u88ab\u9012\u5f52\u5730\u5b9a\u4e49\u4e3a\uff1a</p> <p>(1) \u5e38\u91cf\u7b26\u53f7\u548c\u53d8\u91cf\u7b26\u53f7\u662f\u9879\uff1b</p> <p>(2) \u82e5\\(f(x_1,x_2,\\cdots,x_n)\\)\u662fn\u5143\u51fd\u6570\u7b26\u53f7\uff0c\\(t_1,t_2,\\cdots,t_n\\)\u662f\u9879\uff0c\u5219\\(f(t_1,t_2,\\cdots,t_n)\u662f\u9879\\)</p> <p>(3) \u6709\u9650\u6b21\u6570\u5730\u4f7f\u7528\u4e0a\u8ff0\u89c4\u5219\u4ea7\u751f\u7684\u7b26\u53f7\u4e32\u662f\u9879</p> <p>\u539f\u5b50\u8c13\u8bcd\u516c\u5f0f:\u82e5\\(P(x_1,\\cdots,x_n)\\)\u662fn\u5143\u8c13\u8bcd\uff0c\\(t_1,t_2,\\cdots,t_n\\)\u662f\u9879\uff0c\u5219\u79f0\\(P(t_1,t_2,\\cdots,t_n)\\)\u662f\u539f\u5b50\u8c13\u8bcd\u516c\u5f0f</p> <p>\u5408\u5f0f\u516c\u5f0f:\u5408\u5f0f\u516c\u5f0f\u662f\u7531\u903b\u8f91\u8054\u7ed3\u8bcd\u548c\u539f\u5b50\u516c\u5f0f\u6784\u6210\u7684\u7528\u4e8e\u9648\u8ff0\u4e8b\u5b9e\u7684\u590d\u6742\u8bed\u53e5\uff0c\u53c8\u79f0\u8c13\u8bcd\u516c\u5f0f\uff0c\u7531</p> <p>\u4ee5\u4e0b\u89c4\u5219\u5b9a\u4e49\uff1a - \u547d\u9898\u5e38\u9879\u3001\u547d\u9898\u53d8\u9879\u3001\u539f\u5b50\u8c13\u8bcd\u516c\u5f0f\u662f\u5408\u5f0f\u516c\u5f0f\uff1b - \u5982\u679cA\u662f\u5408\u5f0f\u516c\u5f0f\uff0c\u5219\\(\\neg A\\)\u4e5f\u662f\u5408\u5f0f\u516c\u5f0f\uff1b - \u5982\u679cA\u548cB\u662f\u5408\u5f0f\u516c\u5f0f\uff0c\u5219\\(A\\wedge B,A\\vee B,A\\rightarrow B, A\\leftarrow B ,A \\leftrightarrow B\\)\u662f\u5408\u5f0f\u516c\u5f0f - </p> <p>\u8c13\u8bcd\u903b\u8f91\u63a8\u7406\u7684\u624b\u6bb5\u548c\u65b9\u6cd5\uff1a</p> <p>\u4e13\u5bb6\u7cfb\u7edf\uff1a</p>"},{"location":"note/courses/AI/Chapter%202/#3","title":"3 \u77e5\u8bc6\u56fe\u8c31\u63a8\u7406","text":"<p>\u77e5\u8bc6\u56fe\u8c31(knowledge graph)\u7531\u6709\u5411\u56fe(directed graph)\u6784\u6210\uff0c\u88ab\u7528\u6765\u63cf\u8ff0 \u73b0\u5b9e\u4e16\u754c\u4e2d\u5b9e\u4f53\u53ca\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u662f\u4eba\u5de5\u667a\u80fd\u4e2d\u8fdb\u884c\u77e5\u8bc6\u8868\u8fbe\u7684\u91cd \u8981\u65b9\u5f0f\u3002</p> <p>\u77e5\u8bc6\u56fe\u8c31\u4e2d\u5b58\u5728\u8fde\u7ebf\u7684\u4e24\u4e2a\u5b9e\u4f53\u53ef\u4ee5\u8868\u793a\u4e3a\u5f62\u5982\\(&lt;left\\_node,relation,right\\_node&gt;\\)\u7684\u4e09\u5143\u7ec4\uff0c\u8fd9\u79cd\u4e09\u5143\u7d20\u4e5f\u53ef\u4ee5\u8868\u793a\u4e3a\u4e00\u9636\u903b\u8f91\u7684\u5f62\u5f0f</p>"},{"location":"note/courses/AI/Chapter%202/#31","title":"3.1 \u77e5\u8bc6\u56fe\u8c31\u63a8\u7406\uff1a \u5f52\u7eb3\u5b66\u4e60","text":"**FOIL\u7b97\u6cd5\uff1a** \u5728FOIL\u4e2d\uff0c\u76ee\u6807\u8c13\u8bcd\u662f\u9700\u8981\u63a8\u65ad\u89c4\u5219\u7684\u7ed3\u8bba\uff0c\u4e5f\u79f0 \u4e3a\u89c4\u5219\u5934\u3002\u5728\u7ed9\u5b9a\u63a8\u7406\u7ed3\u8bba\u540e\uff0cFOIL\u7b97\u6cd5\u5b66\u4e60\u5f97\u5230 \u4f7f\u5f97\u7ed3\u8bba\u6ee1\u8db3\u7684\u524d\u63d0\u6761\u4ef6\uff0c\u5373\u76ee\u6807\u8c13\u8bcd\u4f5c\u4e3a\u7ed3\u8bba\u7684\u63a8 \u7406\u89c4\u5219\u3002  \u4e3a\u4e86\u5b66\u4e60\u63a8\u7406\u89c4\u5219\uff0c\u9700\u8981\u6784\u9020\u76ee\u6807\u8c13\u8bcd?\u7684\u8bad\u7ec3\u6837\u4f8b\uff0c\u8bad\u7ec3\u6837\u4f8b\u5305\u542b\u6b63\u4f8b\u96c6\u5408$E^+$\u548c\u53cd\u4f8b\u96c6\u5408$E^-$\u3002  - \u5f52\u7eb3\u903b\u8f91\u7a0b\u5e8f\u8bbe\u8ba1\uff08inductive logic programming\uff0cILP\uff09     - ILP \u662f\u673a\u5668\u5b66\u4e60\u548c\u903b\u8f91\u7a0b\u5e8f\u8bbe\u8ba1\u4ea4\u53c9\u9886\u57df\u7684\u7814\u7a76\u5185\u5bb9     - ILP \u4f7f\u7528\u4e00\u9636\u8c13\u8bcd\u903b\u8f91\u8fdb\u884c\u77e5\u8bc6\u8868\u793a\uff0c\u901a\u8fc7\u4fee\u6539\u548c\u6269\u5145\u903b\u8f91\u8868\u8fbe\u5f0f\u5bf9\u73b0\u6709\u77e5\u8bc6\u8fdb\u884c\u5f52\u7eb3\uff0c\u5b8c\u6210\u63a8\u7406\u5185\u5bb9     - FOIL\uff08first order inductive learner\uff09\u7b97\u6cd5\u662f ILP \u7684\u4ee3\u8868\u6027\u65b9\u6cd5\uff0c\u901a\u8fc7**\u5e8f\u8d2f\u8986\u76d6**\u5b66\u4e60\u63a8\u7406\u89c4\u5219 - \u8def\u5f84\u6392\u5e8f\u7b97\u6cd5\uff08path ranking algorithm\uff0cGRA\uff09     - \u5c06\u5b9e\u4f53\u4e4b\u95f4\u7684\u5173\u8054\u8def\u5f84\u4f5c\u4e3a\u7279\u5f81\uff0c\u6765\u5b66\u4e60\u76ee\u6807\u5173\u7cfb\u7684\u5206\u7c7b\u5668     - \u6d41\u7a0b\uff1a         1. \u7279\u5f81\u62bd\u53d6\uff1a\u751f\u6210\u5e76\u9009\u62e9\u8def\u5f84\u7279\u5f81\u96c6\u5408\u3002\u751f\u6210\u8def\u5f84\u65b9\u6cd5\uff1a\u968f\u673a\u6e38\u8d70\uff08random walk\uff09\u3001BFS\u3001DFS         2. \u7279\u5f81\u8ba1\u7b97\uff1a\u8ba1\u7b97\u6bcf\u4e2a\u8bad\u7ec3\u6837\u4f8b\u7684\u7279\u5f81\u503c $P(s\\rightarrow t; \\pi_j)$\uff0c\u8868\u793a\u4ece\u5b9e\u4f53\u8282\u70b9 $s$ \u51fa\u53d1\uff0c\u901a\u8fc7\u5173\u7cfb\u8def\u5f84 $\\pi_j$ \u8fbe\u5230\u5b9e\u4f53\u8282\u70b9 $t$ \u7684\u6982\u7387\u3002\u6216\u8868\u793a\u662f\u5426\u5b58\u5728\u8fd9\u6837\u4e00\u6761\u8def\u5f84\uff0c\u6216\u8868\u793a\u8def\u5f84\u51fa\u73b0\u7684\u9891\u6b21\u9891\u7387         3. \u5206\u7c7b\u5668\u8bad\u7ec3\uff1a\u6839\u636e\u8bad\u7ec3\u6837\u4f8b\u7279\u5f81\u503c\uff0c\u4e3a\u76ee\u6807\u5173\u7cfb\u8bad\u7ec3\u5206\u7c7b\u5668\u3002\u8bad\u7ec3\u540e\u53ef\u7528\u4e8e\u63a8\u7406\u4e24\u4e2a\u5b9e\u4f53\u95f4\u662f\u5426\u5b58\u5728\u76ee\u6807\u5173\u7cfb  ??? note \"FOIL \u7b97\u6cd5\"     - \u7b97\u6cd5\u5185\u5bb9         - \u8f93\u5165\uff1a\u76ee\u6807\u8c13\u8bcd $P$\uff0c\u76ee\u6807\u8c13\u8bcd $P$ \u7684\u8bad\u7ec3\u6837\u4f8b\uff08\u6b63\u4f8b\u96c6\u5408 $E^+$ \u548c\u53cd\u4f8b\u96c6\u5408 $E^-$\uff09\uff0c\u4ee5\u53ca\u5176\u5b83\u80cc\u666f\u77e5\u8bc6\u6837\u4f8b         - \u8f93\u51fa\uff1a\u53ef\u5f97\u5230\u76ee\u6807\u8c13\u8bcd\u8fd9\u4e00\u7ed3\u8bba\u7684\u63a8\u7406\u89c4\u5219         - \u8fc7\u7a0b\uff1a             1. \u5c06\u76ee\u6807\u8c13\u8bcd\u4f5c\u4e3a\u6240\u5b66\u4e60\u63a8\u7406\u89c4\u5219\u7684\u7ed3\u8bba             2. \u5c06\u5176\u5b83\u8c13\u8bcd\u9010\u4e00\u4f5c\u4e3a**\u524d\u63d0\u7ea6\u675f\u8c13\u8bcd**\u52a0\u5165\u63a8\u7406\u89c4\u5219\uff0c\u8ba1\u7b97\u6240\u5f97\u5230\u63a8\u7406\u89c4\u5219\u7684 FOIL \u4fe1\u606f\u589e\u76ca\u503c\uff0c\u9009\u53d6\u53ef\u5e26\u6765\u6700\u5927\u4fe1\u606f\u589e\u76ca\u503c\u7684\u524d\u63d0\u7ea6\u675f\u8c13\u8bcd\u52a0\u5165\u539f\u6765\u7684\u63a8\u7406\u89c4\u5219\uff0c\u5f97\u5230\u65b0\u7684\u63a8\u7406\u89c4\u5219\uff0c\u5e76\u5c06\u8bad\u7ec3\u6837\u4f8b\u96c6\u5408\u4e2d\u4e0e\u8be5\u63a8\u7406\u89c4\u5219\u4e0d\u7b26\u7684\u6837\u4f8b\u53bb\u6389             3. \u91cd\u590d b. \u8fc7\u7a0b\uff0c\u77e5\u9053\u6240\u5f97\u5230\u7684\u63a8\u7406\u89c4\u5219\u4e0d\u8986\u76d6\u4efb\u4f55\u53cd\u4f8b     - \u76ee\u6807\u8c13\u8bcd\u662f\u9700\u8981\u63a8\u65ad\u89c4\u5219\u7684\u7ed3\u8bba\uff0c\u4e5f\u79f0\u4e3a\u89c4\u5219\u5934     - \u7ed9\u5b9a\u63a8\u7406\u7ed3\u8bba\u540e\uff0cFOIL \u7b97\u6cd5\u5b66\u4e60\u5f97\u5230\u4f7f\u5f97\u7ed3\u8bba\u6ee1\u8db3\u7684\u524d\u63d0\u6761\u4ef6\uff0c\u5373\u76ee\u6807\u8c13\u8bcd\u4f5c\u4e3a\u7ed3\u8bba\u7684\u63a8\u7406\u89c4\u5219     - FOIL \u7b97\u6cd5\u4ece\u4e00\u822c\u5230\u7279\u6b8a\uff0c\u9010\u6b65\u6dfb\u52a0\u76ee\u6807\u8c13\u8bcd\u7684\u524d\u63d0\u7ea6\u675f\u8c13\u8bcd\uff0c\u76f4\u5230\u6240\u6784\u6210\u7684\u63a8\u7406\u89c4\u5219\u4e0d\u8986\u76d6\u4efb\u4f55\u53cd\u4f8b     - \u6dfb\u52a0\u524d\u63d0\u7ea6\u675f\u8c13\u8bcd\u540e\u6240\u5f97\u7684\u63a8\u7406\u89c4\u5219\u7684\u8d28\u91cf\u7684\u597d\u574f\u7531\u4fe1\u606f\u589e\u76ca\u503c\uff08information gain\uff09\u4f5c\u4e3a\u8bc4\u4f30\u6807\u51c6\uff0c\u8ba1\u7b97\u65b9\u6cd5\uff1a          $$         \\mathrm{FOIL\\_Gain} = \\widehat{m_+}\\cdot\\left(\\log_2\\frac{\\widehat{m_+}}{\\widehat{m_+}+\\widehat{m_-}}-\\log_2\\frac{m_+}{m_++m_-}\\right)         $$          - $\\widehat{m_+}, \\widehat{m_-}$ \u662f\u589e\u52a0\u524d\u63d0\u7ea6\u675f\u8c13\u8bcd\u540e\u5f97\u5230\u7684\u65b0\u63a8\u7406\u89c4\u5219\u80fd\u8986\u76d6\u7684\u6b63\u4f8b\u548c\u53cd\u4f8b\u6570\u76ee         - $m_+, m_-$ \u662f\u539f\u63a8\u7406\u89c4\u5219\u8986\u76d6\u7684\u6b63\u4f8b\u548c\u53cd\u4f8b\u6570\u76ee ## 4 \u6982\u7387\u56fe\u63a8\u7406  **\u523b\u753b\u4fe1\u606f\u7684\u4e0d\u786e\u5b9a\u6027**  \u8d1d\u53f6\u65af\u7f51\u7edc \uff1a \u7528\u4e00\u4e2a\u6709\u5411\u65e0 \u73af \u56fe\uff08 directedacyclic graph\uff09\u6765\u8868\u793a\uff0c\u5176\u7528\u6709\u5411\u8fb9\u6765\u8868\u793a\u8282\u70b9\u548c\u8282\u70b9\u4e4b\u95f4\u7684\u5355\u5411\u6982\u7387\u4f9d\u8d56\u3002  \u9a6c\u5c14\u53ef\u592b\u7f51\u7edc\uff1a\u8868\u793a\u6210\u4e00\u4e2a\u65e0\u5411\u56fe\u7684\u7f51\u7edc\u7ed3\u6784\uff0c\u5176\u7528\u65e0\u5411\u8fb9\u6765\u8868\u793a\u8282\u70b9\u548c\u8282\u70b9\u4e4b\u95f4\u7684\u76f8\u4e92\u6982\u7387\u4f9d\u8d56  ### 4.1 \u8d1d\u53f6\u65af\u7f51\u7edc  \u6ee1\u8db3\u5c40\u90e8\u9a6c\u5c14\u53ef\u592b\u6027\uff0c\u5373\u5728\u7ed9\u5b9a\u4e00\u4e2a\u8282\u70b9\u7684\u7236\u8282\u70b9\u7684\u60c5\u51b5\u4e0b\uff0c\u8be5\u7236\u4eb2\u8282\u70b9\u6709\u6761\u4ef6\u7684\u72ec\u7acb\u4e8e\u5b83\u7684\u975e\u540e\u4ee3\u8282\u70b9   \u56fe\u4e2d\u7ed9\u51fa\u7684\u662f\u6761\u4ef6\u53d8\u91cf\uff0c\u53ea\u548c\u4e0a\u4e00\u7ea7\u6709\u5173   ### 4.2 \u9a6c\u5c14\u53ef\u592b\u903b\u8f91\u7f51\u7edc  ![](assets/Chapter%202/file-20250306142819971.png)  $$P(X=x)=\\frac{1}{Z}exp(\\sum_i w_in_i(x))$$  ## 5 \u56e0\u679c\u63a8\u7406   **\u8f9b\u666e\u68ee\u6096\u8bba\uff1a** \u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5ffd\u7565\u6f5c\u5728\u7684\u7b2c\u4e09\u4e2a\u53d8\u91cf\u53ef\u80fd\u4f1a\u6539\u53d8\u5df2\u6709 \u7684\u7ed3\u8bba\uff0c\u800c\u6211\u4eec\u5e38\u5e38\u4f1a\u5ffd\u7565\u8fd9\u4e00\u56e0\u7d20  ![](assets/Chapter%202/file-20250306150626378.png)   **\u4e24\u79cd\u7406\u8bba\u6846\u67b6\uff1a**"},{"location":"note/courses/AI/Chapter%203/","title":"\u641c\u7d22\u63a2\u5bfb\u4e0e\u95ee\u9898\u6c42\u89e3","text":""},{"location":"note/courses/AI/Chapter%203/#1","title":"1 \u641c\u7d22\u57fa\u672c\u6982\u5ff5","text":"<p>\u641c\u7d22\u7684\u5f62\u5f0f\u5316\u63cf\u8ff0\uff1a - \u72b6\u6001\uff08state\uff09\u662f\u5bf9\u641c\u7d22\u7b97\u6cd5\u548c\u641c\u7d22\u73af\u5883\u5f53\u524d\u6240\u5904\u60c5\u5f62\u7684\u63cf\u8ff0\u4fe1\u606f\uff0c\u53ea\u4fdd\u7559\u4e00\u4e9b\u5bf9\u6c42\u89e3\u6a21\u578b\u4ea7\u751f\u4f5c\u7528\u7684\u4fe1\u606f - \u52a8\u4f5c(action)\uff0c\u4ece\u4e00\u4e2a\u72b6\u6001\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u72b6\u6001\u6240\u91c7\u53d6\u7684\u884c\u4e3a - \u72b6\u6001\u8f6c\u79fb(state teansition),\u7b97\u6cd5\u9009\u62e9\u4e86\u4e00\u4e2a\u52a8\u4f5c\u4e4b\u540e\uff0c\u5176\u6240\u5904\u72b6\u6001\u4e5f\u4f1a\u53d1\u751f\u76f8\u5e94\u53d8\u5316\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u88ab\u79f0\u4e3a\u72b6\u6001\u8f6c\u79fb - \u8def\u5f84\u548c\u4ee3\u4ef7(path, cost): \u8def\u5f84\u662f\u4e00\u4e2a\u72b6\u6001\u5e8f\u5217\uff0c\u6bcf\u6761\u8def\u5f84\u5bf9\u5e94\u4e00\u4e2a\u4ee3\u4ef7 - \u76ee\u6807\u6d4b\u8bd5(goal test), \u76ee\u6807\u6d4b\u8bd5\u51fd\u6570\u7528\u4e8e\u5224\u65ad\u72b6\u6001s\u662f\u5426\u4e3a\u76ee\u6807\u72b6\u6001</p> <p>\u53ef\u4ee5\u7528\u4e00\u68f5\u6811\u6765\u8bb0\u5f55\u7b97\u6cd5\u6240\u63a2\u7d22\u7684\u8def\u5f84\uff0c\u641c\u7d22\u6811\u8bb0\u5f55\u4e86\u4ece\u6839\u7ed3\u70b9\u51fa\u53d1\u76ee\u524d\u6240\u6709\u63a2\u7d22\u8fc7\u7684\u8def\u5f84\u3002\u641c\u7d22\u7b97\u6cd5\u53ef\u4ee5\u88ab\u770b\u6210\u662f\u4e00\u4e2a\u6784\u5efa\u641c\u7d22\u6811\u7684\u8fc7\u7a0b\uff0c\u4ece\u6839\u8282\u70b9\u5f00\u59cb\uff0c\u4e0d\u65ad\u5c55\u5f00\u6bcf\u4e2a\u8282\u70b9\u7684\u540e\u8bb0\u7ed3\u70b9\uff0c\u77e5\u9053\u67d0\u4e2a\u8282\u70b9\u901a\u8fc7\u4e86\u76ee\u6807\u6d4b\u8bd5</p>"},{"location":"note/courses/AI/Chapter%203/#11","title":"1.1 \u641c\u7d22\u7b97\u6cd5\u7684\u8bc4\u6d4b\u6807\u51c6","text":"<ul> <li>\u5b8c\u5907\u6027\uff1a \u5f53\u95ee\u9898\u5b58\u5728\u89e3\u65f6\uff0c\u7b97\u6cd5\u80fd\u591f\u4fdd\u8bc1\u627e\u5230\u4e00\u4e2a\u89e3\uff0c\u867d\u7136\u8fd9\u4e2a\u89e3\u53ef\u80fd\u4e0d\u662f\u6700\u4f18\u89e3</li> <li>\u6700\u4f18\u6027\uff0c\u641c\u7d22\u7b97\u6cd5\u662f\u5426\u80fd\u591f\u4fdd\u8bc1\u627e\u5230\u7684\u7b2c\u4e00\u4e2a\u89e3\u662f\u6700\u4f18\u89e3</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6</li> </ul> <p>\u5b8c\u5907\u6027\u548c\u6700\u4f18\u6027\u523b\u753b\u4e86\u7b97\u6cd5\u627e\u5230\u89e3\u7684\u80fd\u529b\u4ee5\u53ca\u6240\u6c42\u7684\u89e3\u7684\u8d28\u91cf\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u548c\u7a7a\u95f4\u590d\u6742\u5ea6\u8861\u91cf\u4e86\u7b97\u6cd5\u7684\u8d44\u6e90\u6d88\u8017\uff0c\u901a\u5e38\u7528\\(O\\)\u7b26\u53f7\uff08big O notation\uff09\u6765\u63cf\u8ff0\u3002</p> <p>\u4e00\u822c\u6765\u8bf4\uff0c\u641c\u7d22\u7b97\u6cd5\u590d\u6742\u5ea6\u53ef\u80fd\u548c\u4ee5\u4e0b\u53d8\u91cf\u6709\u5173\uff1a - \u5206\u652f\u56e0\u5b50\\(b\\), \u5373\u641c\u7d22\u6811\u4e2d\u6bcf\u4e2a\u7ed3\u70b9\u7684\u6700\u5927\u5206\u652f\u6570\u76ee - \u76ee\u6807\u8282\u70b9\u5230\u6839\u8282\u70b9\u7684\u6700\u524d\u6df1\u5ea6\\(d\\),  - \u641c\u7d22\u6811\u4e2d\u8def\u5f84\u7684\u6700\u5927\u53ef\u80fd\u957f\u5ea6\\(m\\) - \u72b6\u6001\u7a7a\u95f4\u7684\u5927\u5c0f\\(n\\)</p> <p>\u641c\u7d22\u6846\u67b6</p> <p></p> <ul> <li>\u7b97\u6cd5\u4e2d\u96c6\u5408\\(F\\)\u7528\u4e8e\u4fdd\u5b58\u641c\u7d22\u6811\u4e2d\u53ef\u7528\u4e8e\u4e0b\u4e00\u6b65\u641c\u7d22\u7684\u6240\u6709\u5019\u9009\u7ed3\u70b9\uff0c\u6b64\u96c6\u5408\u88ab\u79f0\u4e3a\u8fb9\u7f18(fridge)\u96c6\u5408</li> <li>\u51fd\u6570pick_from: \u51b3\u5b9a\u4e86\u6269\u5c55\u7ed3\u70b9\u7684\u987a\u5e8f</li> <li>\u51fd\u6570successor_nodes: \u51b3\u5b9a\u4e86\u54ea\u4e9b\u7ed3\u70b9\u53ef\u60b2\u653e\u5165\u8fb9\u7f18\u96c6\u5408\u4f9b\u540e\u7eed\u88ab\u6269\u5c55</li> </ul> <p>\u653e\u5f03\u6269\u5c55\u90e8\u5206\u7ed3\u70b9\u7684\u505a\u6cd5\u88ab\u79f0\u4e3a\u526a\u679d(prunning)\uff0c\u5176\u5bf9\u5e94\u7684\u641c\u7d22\u7b97\u6cd5\u88ab\u79f0\u4e3a\u526a\u679d\u641c\u7d22</p> <p>\u56fe\u641c\u7d22-\u4e0d\u5141\u8bb8\u73af\u8def\u7684\u5b58\u5728</p> <p> \u5728\u56fe\u641c\u7d22\u7b56\u7565\u4e0b\uff0c\u5728\u8fb9\u7f18\u96c6\u5408\u4e2d\u6240\u6709\u4ea7\u751f\u73af\u8def\u7684\u8282\u70b9\u90fd\u8981\u88ab\u526a\u679d\uff0c\u4f46\u4e0d\u4f1a\u6392\u9664\u6240\u6709\u6f5c\u5728\u7684\u53ef\u884c\u89e3</p>"},{"location":"note/courses/AI/Chapter%203/#12-a","title":"1.2 \u8d2a\u5a6a\u6700\u4f73\u4f18\u5148\u641c\u7d22\u4e0eA*\u641c\u7d22","text":"<p>\u8d2a\u5a6a\u6700\u4f73\u4f18\u5148\u641c\u7d22: \u6709\u4fe1\u606f\u641c\u7d22\u548c\u542f\u53d1\u5f0f\u641c\u7d22, \u5c06\u542f\u53d1\u51fd\u6570\u4f5c\u4e3a\u8bc4\u4ef7\u51fd\u6570</p> <p>\u4e24\u4e2a\u91cd\u8981\u51fd\u6570:\u8bc4\u4ef7\u51fd\u6570\u4e0e\u542f\u53d1\u51fd\u6570</p> <p></p>"},{"location":"note/courses/AI/Chapter%204/","title":"\u673a\u5668\u5b66\u4e60","text":""},{"location":"note/courses/AI/Chapter%204/#1","title":"1 \u673a\u5668\u5b66\u4e60\u57fa\u672c\u6982\u5ff5","text":"<p>\u673a\u5668\u5b66\u4e60\u901a\u8fc7\u5bf9\u6570\u636e\u7684\u4f18\u5316\u5b66\u4e60\uff0c\u5efa\u7acb\u80fd\u591f\u523b\u753b\u6570\u636e\u4e2d\u6240\u8574\u542b\u8bed\u4e49\u6982\u5ff5\u6216\u5206\u5e03\u7ed3\u6784\u7b49\u4fe1\u606f\u7684\u6a21\u578b\u3002</p> <p>\u4ece\u6570\u636e\u5229\u7528\u7684\u89d2\u5ea6\uff0c\u53ef\u5c06\u673a\u5668\u5b66\u4e60\u5212\u5206\u4e3a\u76d1\u7763\u5b66\u4e60\uff08supervised learning\uff09\u3001\u65e0\u76d1\u7763\u5b66\u4e60\uff08unsupervised learning\uff09\u53ca\u534a\u76d1\u7763\u5b66\u4e60\uff08semi-supervised learning\uff09\u7b49</p>"},{"location":"note/courses/AI/Chapter%204/#11","title":"1.1 \u6709\u76d1\u7763\u5b66\u4e60","text":"<p>\u5176\u76ee\u6807\u662f\u7ed9\u5b9a\u5e26\u6709\u6807\u7b7e\u4fe1\u606f\u6570\u636e\u7684\u8bad\u7ec3\u96c6\\(D=\\{(x_i,y_i)\\}^n_{i=1}\\), \u5b66\u4e60\u4e00\u4e2a\u4ece\u8f93\u5165\\(x_i\\)\u5230\u8f93\u51fa\\(y_i\\)\u7684\u6620\u5c04\uff0c\u5176\u4e2dD\u88ab\u79f0\u4e3a\u8bad\u7ec3\u96c6\uff0cn\u662f\u8bad\u7ec3\u6837\u4f8b\u7684\u6570\u91cf\u3002</p> <p>\u76d1\u7763\u5b66\u4e60\u7b97\u6cd5\u4ece\u5047\u8bbe\u7a7a\u95f4\u5b66\u4e60\u5f97\u5230\u4e00\u4e2a\u6700\u4f18\u6620\u5c04\u51fd\u6570\\(f\\)(\u51b3\u7b56\u51fd\u6570), \u6620\u5c04\u51fd\u6570\\(f\\)\u5c06\u8f93\u5165\u6570\u636e\u6620\u5c04\u5230\u8bed\u4e49\u6807\u6ce8\u7a7a\u95f4\uff0c\u5b9e\u73b0\u6570\u636e\u7684\u5206\u7c7b\u548c\u8bc6\u522b</p> <p>\u65e0\u76d1\u7763\u5b66\u4e60\u5219\u662f\u76f4\u63a5\u4ece\u65e0\u6807\u7b7e\u6570\u636e\\(x_i\\)\u51fa\u53d1\u5b66\u4e60\u6620\u5c04\u51fd\u6570</p> <p>\u534a\u76d1\u7763\u5b66\u4e60\u5219\u662f\u5b66\u4e60\u8fc7\u7a0b\u4e2d\u7684\u6570\u636e\u4e00\u90e8\u5206\u6709\u6807\u7b7e\uff0c\u4e00\u90e8\u5206\u6ca1\u6709\u6807\u7b7e</p> <p>\u8bad\u7ec3\u96c6\uff0c\u9a8c\u8bc1\u96c6\uff0c\u6d4b\u8bd5\u96c6\uff1a\u2f00\u65e6\u5728\u8bad\u7ec3\u96c6\u4e0a\u5b8c\u6210\u4e86\u6a21\u578b\u53c2\u6570\u4f18\u5316\u540e\uff0c\u9700\u8981\u5728\u6d4b\u8bd5\u6570\u636e\u96c6\u4e0a\u5bf9\u6a21\u578b\u6027\u80fd\u8fdb\u2f8f\u6d4b\u8bd5\uff0c\u4e3a\u4e86\u5728\u8bad\u7ec3\u4f18\u5316\u8fc7\u7a0b\u4e2d\u6311\u9009\u66f4\u597d\u7684\u6a21\u578b\u53c2\u6570\uff0c\u2f00\u822c\u53ef\u5c06\u8bad\u7ec3\u96c6\u4e2d\u2f00\u90e8\u5206\u6570\u636e\u4f5c\u4e3a\u9a8c\u8bc1\u96c6\uff08validation set\uff09</p> <p>\u79bb\u5f00\u5177\u4f53\u573a\u666f\u548c\u95ee\u9898\u53bb\u8ba8\u8bba\u91c7\u7528\u54ea\u79cd\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u662f\u6beb\u2f46\u610f\u4e49\u7684\uff0c\u5e94\u8be5\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u5408\u7406\u5f15\u2f0a\u5df2\u6709\u5148\u9a8c\u5047\u8bbe\u5bf9\u6a21\u578b\u8fdb\u2f8f\u7ea6\u675f\uff0c\u4ee5\u63d0\u5347\u6a21\u578b\u6548\u679c</p> <p>\u6cdb\u5316\u80fd\u529b\uff1a\u5728\u673a\u5668\u5b66\u4e60\u4e2d\uff0c\u9700\u8981\u4fdd\u8bc1\u6a21\u578b\u5728\u8bad\u7ec3\u96c6\u4e0a\u6240\u53d6\u5f97\u6027\u80fd\u4e0e\u5728\u6d4b\u8bd5\u96c6\u4e0a\u6240\u53d6\u5f97\u6027\u80fd\u4fdd\u6301\u4e00\u81f4\uff0c\u5373\u6a21\u578b\u5177\u6709\u6cdb\u5316\u80fd\u529b\uff08generalization\uff09\u3002</p> <p>\u635f\u5931\u51fd\u6570 \u5c06\u6620\u5c04\u51fd\u6570\u8bb0\u4e3a f \uff64\u7b2c i \u4e2a\u8bad\u7ec3\u6570\u636e\u8bb0\u4e3a \\((x_{i}, y_{i})\\) \u4ee5\u53ca f \u5bf9 \\(x_{i}\\)\u7684 \u9884\u6d4b\u7ed3\u679c\u8bb0\u4e3a(\\(y_i\\)(\u5373 \\(\\widehat{y}_{i}=f(x_{i})\\)),\u53ef\u5b9a\u4e49\u635f\u5931\u51fd\u6570 \\(Loss(f(x_{i}), y_{i})\\) \u6765\u4f30\u91cf\u9884\u6d4b\u503c(\\(\\widehat y_i\\)\u548c\u771f\u5b9e\u503c \\(y_{i}\\) )\u4e4b\u95f4\u7684\u5dee\u5f02\uff61\u5f88\u663e\u7136, \u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u5e0c\u671b\u6620\u5c04\u51fd\u6570\u5728\u8bad\u7ec3\u96c6\u4e0a\u7d2f\u52a0\u5dee\u5f02\u6700\u5c0f,\u5373 \\(min \\sum_{i=1}^{n} Loss(f(x_{i}), y_{i})\\)\u3002</p>"},{"location":"note/courses/AI/Chapter%204/#111","title":"1.1.1 \u7ecf\u9a8c\u98ce\u9669\u4e0e\u671f\u671b\u98ce\u9669","text":"<p>\u6620\u5c04\u51fd\u6570\ud835\udc53\u5728\u8bad\u7ec3\u96c6\u4e0a\u6240\u4ea7\u2f63\u635f\u5931\u2f00\u822c\u88ab\u79f0\u4e3a \u7ecf\u9a8c\u98ce\u9669\\(\\Re_{emp}\\) (empirical risk)\uff61\u7ecf\u9a8c\u98ce\u9669\u8d8a\u5c0f \u8bf4\u660e \u98ce\u9669\u88ab\u5b9a\u4e49\u4e3a: \\(\\(\\frac {1}{n}\\sum ^n_{i=1}Loss(y_i,f(x_i))\\)\\)</p> <p>\u5982\u679c\u77e5\u9053\u67d0\u2f00\u4efb\u52a1\u5305\u542b\u7684\u6240\u6709\u6570\u636e,\u5219\u53ef\u4ee5\u4ece \u6240\u6709\u6570\u636e\u4e2d\u8ba1\u7b97\u6a21\u578b\u4ea7\u2f63\u7684\u635f\u5931,\u8fd9\u2f00\u8bef\u5dee\u635f \\(\\Re\\)(expected risk),\u5373\u771f\u5b9e\u98ce\u9669\u6216\u771f\u5b9e\u8bef\u5dee \uff61\u8bb0\u8be5\u4efb\u52a1\u4e2d\u6240\u6709\u6570\u636e\u7684\u8054\u5408\u5206\u5e03\u4e3a\\(P(x,y)\\),\u671f\u671b\u98ce\u9669\u88ab\u5b9a\u4e49\u4e3a:</p> \\[\\int_{x\\times y}Loss(y,f(x))P(x,y)\\mathrm d x\\mathrm d y\\] <p>\u673a\u5668\u5b66\u4e60\u4e2d\u6a21\u578b\u4f18\u5316\u7684\u76ee\u6807\u4e00\u822c\u4e3a\u7ecf\u9a8c\u98ce\u9669\u6700\u5c0f\u5316</p> <p>\u671f\u671b\u98ce\u9669\\(\\Re\\)\u4e0e\u7ecf\u9a8c\u98ce\u9669\\(\\Re_{emp}\\) \u4e4b\u95f4\u5b58\u5728\u5982\u4e0b\u5173\u7cfb: \\(\\(\\mathfrak{R} \\leq \\mathfrak{R}_{emp }+e r r\\)\\) \u5176\u4e2d\ud835\udc52\ud835\udc5f\ud835\udc5f\u53d6\u503c\u4e0e\u673a\u5668\u5b66\u4e60\u6a21\u578b\u7684\u590d\u6742\u7a0b\u5ea6\u548c\u8bad\u7ec3\u96c6\u6837\u672c\u6570\u76ee \u6709\u5173\uff61\u5728\u6a21\u578b\u8bad\u7ec3\u8fc7\u7a0b\u4e2d,\u5982\u679c\u4f7f\u7528\u540c\u4e00\u6279\u8bad\u7ec3\u6570\u636e\u53cd\u590d \u8bad\u7ec3,\u6a21\u578b\u4f1a\u53d8\u5f97\u8d8a\u6765\u8d8a\u590d\u6742,\u867d\u7136\u7ecf\u9a8c\u98ce\u9669 \u4f1a\u964d\u4f4e, \u4f46\u662f\ud835\udc52\ud835\udc5f\ud835\udc5f\u53d6\u503c\u4f1a\u8d8a\u5927,\u5bfc\u81f4\u671f\u671b\u98ce\u9669\u589e\u52a0,\u8fd9\u4e00\u73b0\u8c61\u88ab\u79f0 \u4e3a\u8fc7\u5b66\u4e60(overfitting)\uff61</p> \u7ecf\u9a8c\u98ce\u9669 \u671f\u671b\u98ce\u9669 \u6a21\u578b\u6cdb\u5316\u80fd\u529b \u7ecf\u9a8c\u98ce\u9669\u5c0f (\u8bad\u7ec3\u96c6\u4e0a\u8868\u73b0\u597d) \u671f\u671b\u98ce\u9669\u5c0f (\u6240\u6709\u6570\u636e\u4e0a\u8868\u73b0\u597d) \u6cdb\u5316\u80fd\u529b\u5f3a \u7ecf\u9a8c\u98ce\u9669\u5c0f (\u8bad\u7ec3\u96c6\u4e0a\u8868\u73b0\u597d) \u671f\u671b\u98ce\u9669\u5927 (\u6240\u6709\u6570\u636e\u4e0a\u8868\u73b0\u4e0d\u597d) \u8fc7\u5b66\u4e60 (\u6a21\u578b\u8fc7\u4e8e\u590d\u6742) \u7ecf\u9a8c\u98ce\u9669\u5927 (\u8bad\u7ec3\u96c6\u4e0a\u8868\u73b0\u4e0d\u597d) \u671f\u671b\u98ce\u9669\u5927 (\u6240\u6709\u6570\u636e\u4e0a\u8868\u73b0\u4e0d\u597d) \u6b20\u5b66\u4e60 \u7ecf\u9a8c\u98ce\u9669\u5927 (\u8bad\u7ec3\u96c6\u4e0a\u8868\u73b0\u4e0d\u597d) \u671f\u671b\u98ce\u9669\u5c0f (\u6240\u6709\u6570\u636e\u4e0a\u8868\u73b0\u597d) \"\u795e\u4ed9\u7b97\u6cd5\"\u6216\"\u9ec4\u7cb1\u7f8e\u68a6\" <p>\u5728\u6a21\u578b\u4f18\u5316\u4e2d\u5f15\u5165\u6070 \u5f53\u5148\u9a8c\u7ea6\u675f\u53ef\u63d0\u5347\u6a21\u578b\u6027\u80fd\uff61\u4e3a\u4e86\u9632\u6b62\u8fc7\u5b66\u4e60,\u7ed3\u6784\u98ce\u9669 \u6700\u5c0f\u5316(structural risk minimization)\u5f15\u5165\u6b63\u5219\u5316(regularizer) \u6216\u60e9\u7f5a\u9879(penalty term) \u6765\u964d\u4f4e\u6a21\u578b\u6a21\u578b\u590d\u6742\u5ea6,\u65e2\u6700\u5c0f\u5316 \u7ecf\u9a8c\u98ce\u9669\uff64\u53c8\u529b\u6c42\u964d\u4f4e\u6a21\u578b\u590d\u6742\u5ea6,\u5728\u4e24\u8005\u4e4b\u95f4\u5bfb\u627e\u5e73\u8861: \\(\\(\\frac{1}{n} \\sum_{i=1}^{n} Loss\\left(y_{i}, f\\left(x_{i}\\right)\\right)+\\lambda J(f)\\)\\)</p> <p>\u5176\u4e2d \ud835\udc3d(\ud835\udc53)\u662f\u6b63\u5219\u5316\u56e0\u5b50\u6216\u60e9\u7f5a\u9879\u56e0\u5b50\uff0c\\(\\lambda\\)\u662f\u7528\u6765\u8c03\u6574\u60e9 \u7f5a\u5f3a\u5ea6\u7684\u7cfb\u6570</p>"},{"location":"note/courses/AI/Chapter%204/#112","title":"1.1.2 \u6a21\u578b\u5ea6\u91cf\u65b9\u6cd5","text":"<p>\u4ee5\u4e8c\u5206\u7c7b\u4e3a\u4f8b\uff1an\u4e3a\u8bad\u7ec3\u6837\u4f8b\u7684\u603b\u6570\uff0c\u6b63\u4f8b\u6570\u91cf\u548c\u53cd\u4f8b\u6570\u91cf\u5206\u522b\u4e3aprP\u548cN\u3002\u673a\u5668\u6a21\u578b\u9884\u6d4b\u7c7b\u578b\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b:\u771f\u6b63\u4f8bTP,\u5047\u6b63\u4f8bFP,\u771f\u53cd\u4f8bTN,\u5047\u53cd\u4f8bFN - \u51c6\u786e\u7387accuracy:\\(ACC=\\frac{TP+TN}{P+N}\\) - \u9519\u8bef\u7387error rate: \\(errorRate=\\frac{FP+FN}{P+N}\\) - \u7cbe\u786e\u7387precision: \\(precision=\\frac{TP}{TP+FP}\\) - \u53ec\u56de\u7387recall: \\(recall = \\frac{TP}{TP+FN}\\)</p> <p>\u5728\u5b9e\u9645\u5e94\u7528\u4e2d\uff0c\u4e3a\u4e86\u7efc\u5408\u8003\u8651\u7cbe\u786e\u7387\u548c\u53ec\u56de\u7387\uff0c\u53ef\u91c7\u7528\u7efc\u5408\u5206\u7c7b\u7387F1-score:</p> \\[F1score=2\\times\\frac{Precision\\times Recall}{Precision+Recall}\\]"},{"location":"note/courses/AI/Chapter%204/#113","title":"1.1.3 \u53c2\u6570\u4f18\u5316","text":"<p>\u9891\u7387\u5b66\u6d3e\uff1a \u5728\u9891\u7387\u5b66\u6d3e\u4e2d,\u9891\u7387\u662f\u6982\u7387\u7684\u7ecf\u9a8c\u57fa\u7840,\u6982 \u7387\u8868\u793a\u7684\u662f\u4e8b\u4ef6\u53d1\u2f63\u9891\u7387\u7684\u6781\u9650\u503c\uff61\u5f53\u91cd\u590d \u8bd5\u9a8c\u7684\u6b21\u6570\u8d8b\u8fd1\u4e8e\u2f46\u7a77\u2f24\u65f6,\u4e8b\u4ef6\u53d1\u2f63\u7684\u9891 \u7387\u4f1a\u6536\u655b\u5230\u771f\u5b9e\u6982\u7387,\u5373\u201c\u9891\u7387\u4f9d\u6982\u7387\u6536\u655b\u4e8e \u6982\u7387\u201d\uff61\u4ece\u9891\u7387\u5b66\u6d3e\u89d2\u5ea6\u2f7d\u2f94,\u5bf9\u6a21\u578b\u53c2\u6570\u4f18 \u5316\u5b66\u4e60\u7684\u7ed3\u679c\u5c31\u662f\u5f97\u5230\u4f7f\u89c2\u6d4b\u6570\u636e\u53d1\u2f63\u6982\u7387 \u6700\u2f24\u7684\u6a21\u578b\u53c2\u6570,\u53c8\u79f0\u4e3a\u6700\u2f24\u4f3c\u7136\u4f30\u8ba1 (maximum likelihood estimation,MLE)\uff61\u8fd9 \u91cc\u7684\u6700\u2f24\u4f3c\u7136\u53ef\u7406\u89e3\u4e3a\u901a\u8fc7\u8c03\u6574\u6a21\u578b\u53c2\u6570\u4f7f \u5f97\u6a21\u578b\u80fd\u591f\u6700\u2f24\u5316\u6837\u672c\u60c5\u51b5\u51fa\u73b0\u7684\u6982\u7387\uff61</p> <p>\u8d1d\u53f6\u65af\u5b66\u6d3e\uff1a \u5728\u8d1d\u53f6\u65af\u5b66\u6d3e\u4e2d,\u4e8b\u4ef6\u53d1\u2f63\u7684\u9891\u7387\u65e2\u4e0e\u5f53\u524d\u89c2 \u6d4b\u6570\u636e\u6709\u5173,\u53c8\u4e0e\u5bf9\u8be5\u4e8b\u4ef6\u5df2\u83b7\u5f97\u7684\u5386\u53f2\u5148\u9a8c \u77e5\u8bc6\u6709\u5173\uff61\u4ece\u8d1d\u53f6\u65af\u5b66\u6d3e\u89d2\u5ea6\u2f7d\u2f94,\u5bf9\u6a21\u578b\u53c2 \u6570\u4f18\u5316\u5b66\u4e60\u7684\u7ed3\u679c\u5c31\u662f\u4f3c\u7136\u6982\u7387(\u6a21\u578b\u53c2\u6570\u4ea7 \u2f63\u6570\u636e\u7684\u6982\u7387)\u4e0e\u5148\u9a8c\u6982\u7387(\u6ca1\u6709\u4efb\u4f55\u5b9e\u9a8c\u6570 \u636e\u65f6\u5bf9\u6a21\u578b\u53c2\u6570\u7684\u7ecf\u9a8c\u5224\u65ad)\u4e58\u79ef\u6700\u2f24,\u53c8\u79f0 \u4e3a\u6700\u2f24\u540e\u9a8c\u4f30\u8ba1(maximum a posteriori estimation, MAP)\uff61\u8fd9\u91cc\u7684\u6700\u2f24\u540e\u9a8c\u4f30\u8ba1\u53ef\u7406 \u89e3\u4e3a\u6700\u2f24\u5316\u5728\u7ed9\u5b9a\u6570\u636e\u6837\u672c\u7684\u60c5\u51b5\u4e0b\u6a21\u578b\u53c2\u6570 \u7684\u540e\u9a8c\u6982\u7387\uff61</p>"},{"location":"note/courses/AI/Chapter%204/#2","title":"2 \u76d1\u7763\u5b66\u4e60:\u56de\u5f52\u5206\u6790\u548c\u51b3\u7b56\u6811","text":""},{"location":"note/courses/AI/Chapter%204/#21","title":"2.1 \u56de\u5f52\u5206\u6790","text":"<p>\u5728\u73b0\u5b9e\u2f63\u6d3b\u4e2d,\u5f80\u5f80\u9700\u8981\u5206\u6790\u82e5\u2f32\u53d8\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb,\u5982\u78b3\u6392\u653e\u91cf\u4e0e\u2f53\u5019\u53d8\u6696\u4e4b\u95f4\u7684\u5173\u7cfb,\u67d0\u2f00\u5546 \u54c1\u2f34\u544a\u6295\u2f0a\u91cf\u4e0e\u8be5\u5546\u54c1\u9500\u552e\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\u7b49,\u8fd9\u79cd\u5206\u6790\u4e0d\u540c\u53d8\u91cf\u4e4b\u95f4\u5b58\u5728\u5173\u7cfb\u7684\u7814\u7a76\u53eb\u4f5c\u56de\u5f52\u5206 \u6790,\u523b\u753b\u4e0d\u540c\u53d8\u91cf\u4e4b\u95f4\u5173\u7cfb\u7684\u6a21\u578b\u79f0\u4e3a\u56de\u5f52\u6a21\u578b\uff61</p> <p>\u7ebf\u6027\u56de\u5f52\u4e00\u4e2a\u660e\u663e\u7684\u95ee\u9898\u662f\u5bf9\u79bb\u7fa4\u70b9\u975e\u5e38\u654f\u611f\uff0c\u5bfc\u81f4\u6a21\u578b\u5efa\u6a21\u5efa\u6a21\u4e0d\u7a33\u5b9a\uff0c\u4f7f\u7ed3\u679c\u6709\u504f\uff0c\u4e3a\u4e86\u7f13\u89e3\u8fd9\u4e2a\u95ee\u9898\u5e26\u6765\u7684\u5f71\u54cd\uff0c\u53ef\u4ee5\u8003\u8651\u903b\u8f91\u65af\u8482\u56de\u5f52\uff1a\u5728\u56de\u5f52\u6a21\u578b\u4e2d\u5f15\u5165sigmod\u51fd\u6570\u7684\u4e00\u79cd\u975e\u7ebf\u6027\u56de\u5f52\u6a21\u578b\uff0c\u53ef\u4ee5\u8868\u793a\u5982\u4e0b\uff1a\\(\\(y=\\frac 1{1+e^{-z}}(sigmod\u51fd\u6570)=\\frac{1}{1+e^{-(w^Tx+b)}}\\)\\) \u5176\u4e2d\\(y\\in (0,1)\\)</p> <p>logistic\u56de\u5f52\u53ea\u80fd\u7528\u4e8e\u89e3\u51b3\u4e8c\u5206\u7c7b\u95ee\u9898,\u5c06\u5b83\u63a8\u5e7f\u4e3a\u591a\u9879\u903b\u8f91\u65af\u8482\u56de\u5f52\u6a21\u578b(multi-nominal logistic model,\u5373softmax\u51fd\u6570),\u7528\u4e8e\u5904\u7406\u591a\u7c7b\u5206\u7c7b\u95ee\u9898,\u53ef\u4ee5\u5f97\u5230\u5904\u7406\u591a\u7c7b\u5206\u7c7b\u95ee\u9898\u7684softmax\u56de\u5f52\uff61</p> <p>Sigmod\u51fd\u6570\u7684\u7279\u70b9\uff1a</p> <p>sigmoid\u51fd\u6570\u662f\u5355\u8c03\u9012\u589e\u7684,\u5176\u503c\u57df\u4e3a(0,1),\u56e0\u6b64\u4f7fsigmoid\u51fd\u6570\u8f93\u51fa\u53ef\u4f5c\u4e3a\u6982\u7387\u503c\uff61 \u5728\u524d\u9762\u4ecb\u7ecd\u7684\u7ebf\u6027\u56de\u5f52\u4e2d,\u56de\u5f52\u51fd\u6570\u7684\u503c\u57df\u2f00\u822c\u4e3a(\u2212\u221e, +\u221e)</p> <p>\u5bf9\u8f93\u2f0a\ud835\udc67\u53d6\u503c\u8303\u56f4\u6ca1\u6709\u9650\u5236,\u4f46\u5f53 z \u2f24\u4e8e\u2f00\u5b9a\u6570\u503c\u540e,\u51fd\u6570\u8f93\u51fa\u2f46\u9650\u8d8b\u8fd1\u4e8e1,\u2f7d\u5c0f \u4e8e\u2f00\u5b9a\u6570\u503c\u540e,\u51fd\u6570\u8f93\u51fa\u2f46\u9650\u8d8b\u8fd1\u4e8e0\uff61\u7279\u522b\u5730,\u5f53 \\(z=0\\) \u65f6,\u51fd\u6570\u8f93\u51fa\u4e3a0.5\uff61\u8fd9\u91cc Z \u662f\u8f93\u2f0a\u6570\u636e x \u548c\u56de\u5f52\u51fd\u6570\u7684\u53c2\u6570 w \u5185\u79ef\u7ed3\u679c(\u53ef\u89c6\u4e3a x \u5404\u7ef4\u5ea6\u8fdb\u2f8f\u52a0\u6743\u53e0\u52a0)</p> <p>x \u5404\u7ef4\u5ea6\u52a0\u6743\u53e0\u52a0\u4e4b\u548c\u7ed3\u679c\u53d6\u503c\u57280\u9644\u8fd1\u65f6,\u51fd\u6570\u8f93\u51fa\u503c\u7684\u53d8\u5316\u5e45\u5ea6\u6bd4\u8f83\u2f24(\u51fd\u6570\u503c \u53d8\u5316\u9661\u5ced),\u4e14\u662f\u975e\u7ebf\u6027\u53d8\u5316\uff61\u4f46\u662f,\u5404\u7ef4\u5ea6\u52a0\u6743\u53e0\u52a0\u4e4b\u548c\u7ed3\u679c\u53d6\u503c\u5f88\u2f24\u6216\u5f88\u5c0f\u65f6, \u51fd\u6570\u8f93\u51fa\u503c\u2f0f\u4e4e\u4e0d\u53d8\u5316,\u8fd9\u662f\u57fa\u4e8e\u6982\u7387\u7684\u2f00\u79cd\u8ba4\u8bc6\u4e0e\u9700\u8981\uff61</p>"},{"location":"note/courses/AI/Chapter%204/#22","title":"2.2 \u51b3\u7b56\u6811","text":"<p>\u2022 \u51b3\u7b56\u6811\u5c06\u5206\u7c7b\u95ee\u9898\u5206\u89e3\u4e3a\u82e5\u5e72\u57fa\u4e8e\u5355\u4e2a \u4fe1\u606f\u7684\u63a8\u7406\u4efb\u52a1,\u91c7\u7528\u6811\u72b6\u7ed3\u6784\u6765\u9010\u6b65 \u5b8c\u6210\u51b3\u7b56\u5224\u65ad\uff61\u4e8b\u5b9e\u4e0a,\u4eba\u4eec\u5728\u903b\u8f91\u63a8 \u7406\u8fc7\u7a0b\u4e2d\u7ecf\u5e38\u4f7f\u7528\u51b3\u7b56\u6811\u7684\u601d\u60f3\uff61 </p> <p>\u6784\u5efa\u51b3\u7b56\u6811\uff1a</p> <ul> <li>\u5efa\u7acb\u51b3\u7b56\u6811\u7684\u8fc7\u7a0b\uff0c\u5c31\u662f\u4e0d\u65ad\u9009\u62e9\u5c5e\u6027\u503c\u5bf9\u6837\u672c\u96c6\u8fdb\u884c\u5212\u5206\uff0c\u76f4\u81f3\u6bcf\u4e2a\u5b50\u6837\u672c\u4e3a\u540c\u4e00\u4e2a\u7c7b\u522b\u3002</li> <li>\u6784\u5efa\u51b3\u7b56\u6811\u65f6\u5212\u5206\u5c5e\u6027\u7684\u987a\u5e8f\u9009\u62e9\u662f\u91cd\u8981\u7684\u3002\u6027\u80fd\u597d\u7684\u51b3\u7b56\u6811\u968f\u7740\u5212\u5206\u4e0d\u65ad\u8fdb\u884c\uff0c\u51b3\u7b56\u6811\u5206 \u652f\u7ed3\u70b9\u6837\u672c\u96c6\u7684\u201c\u7eaf\u5ea6\u201d\u4f1a\u8d8a\u6765\u8d8a\u9ad8\uff0c\u5373\u5176\u6240\u5305\u542b\u6837\u672c\u5c3d\u53ef\u80fd\u5c5e\u4e8e\u76f8\u540c\u7c7b\u522b</li> <li>\u4fe1\u606f\u71b5\uff08entropy\uff09\u5c31\u662f\u4e00\u79cd\u8861\u91cf\u6837\u672c\u96c6\u5408\u201c\u7eaf\u5ea6\u201d\u7684\u4e00\u79cd\u6307\u6807\uff0c\u5982\u679c\u6211\u4eec\u8ba1\u7b97\u9009\u62e9\u4e0d\u540c\u5c5e\u6027\u5212 \u5206\u540e\u6837\u672c\u96c6\u7684\u201c\u7eaf\u5ea6\u201d\uff0c\u90a3\u4e48\u5c31\u53ef\u4ee5\u6bd4\u8f83\u548c\u9009\u62e9\u5c5e\u6027\u3002\u4fe1\u606f\u71b5\u8d8a\u5927\uff0c\u8bf4\u660e\u8be5\u96c6\u5408\u7684\u4e0d\u786e\u5b9a\u6027\u8d8a \u5927\uff0c\u201c\u7eaf\u5ea6\u201d\u8d8a\u4f4e\u3002\u9009\u62e9\u5c5e\u6027\u5212\u5206\u6837\u672c\u96c6\u524d\u540e\u4fe1\u606f\u71b5\u7684\u51cf\u5c11\u91cf\u88ab\u79f0\u4e3a\u4fe1\u606f\u589e\u76ca\uff08information gain\uff09\uff0c\u4e5f\u5c31\u662f\u8bf4\u4fe1\u606f\u589e\u76ca\u88ab\u7528\u6765\u8861\u91cf\u6837\u672c\u96c6\u5408\u590d\u6742\u5ea6\uff08\u4e0d\u786e\u5b9a\u6027\uff09\u6240\u51cf\u5c11\u7684\u7a0b\u5ea6\u3002</li> </ul>"},{"location":"note/courses/AI/Chapter%205/","title":"\u795e\u7ecf\u7f51\u7edc\u548c\u6df1\u5ea6\u5b66\u4e60","text":""},{"location":"note/courses/AI/Chapter%205/#1","title":"1 \u524d\u9988\u795e\u7ecf\u7f51\u7edc\u4e0e\u53c2\u6570\u4f18\u5316","text":"<p>\u5728\u4eba\u5de5\u795e\u7ecf\u7f51\u7edc\u4e2d\uff0cMCP\u6a21\u578b\u6210\u4e3a\u6700\u57fa\u672c\u7684\u7ed3\u6784,\u53ef\u6c42\u89e3\u4e8c\u5206\u7c7b\u95ee\u9898</p> <p></p>"},{"location":"note/courses/AI/Chapter%205/#11","title":"1.1 \u5355\u5c42\u611f\u77e5\u673a","text":"<p>\u5355\u5c42\u611f\u77e5\u673a\u7531\u4e00\u4e2a\u8f93\u5165\u5c42\u548c\u4e00\u4e2a\u8f93\u51fa\u5c42\u6784\u6210\uff0c\u53ef\u4f5c\u4e3a\u4e00\u79cd\u7ebf\u6027\u4e8c\u5206\u7c7b\u6a21\u578b</p> <p></p> \\[ z : z = \\sum_{i=1}^{n} w_ix_i+b \\] <p>\\(z\\)\u662f\u6fc0\u6d3b\u51fd\u6570\u7684\u8f93\u5165\uff0c\\(w_i\\)\u662f\u6743\u91cd\uff0c\\(x_i\\)\u662f\u8f93\u5165\u6570\u636e\uff0c\\(b\\)\u662f\u504f\u7f6e\u9879</p> <p>\u5355\u5c42\u611f\u77e5\u673a\u6784\u5efa \u635f\u5931\u51fd\u6570\uff0c\u6765\u8ba1\u7b97\u6a21\u578b\u9884\u6d4b\u503c\u4e0e\u6570\u636e\u771f\u5b9e\u503c\u4e4b\u95f4\u7684\u201c\u8bef\u5dee\u201d\uff0c\u901a\u8fc7\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u53d6\u503c\uff0c\u6765\u4f18\u5316\u6a21\u578b\u53c2\u6570\u3002</p> <p>\u5355\u5c42\u611f\u77e5\u673a\u53ef\u4ee5\u6a21\u62df\u903b\u8f91\u4e0e\uff0c\u903b\u8f91\u4e0e\u975e\uff0c\u903b\u8f91\u6216\u7b49\u7ebf\u6027\u53ef\u5206\u51fd\u6570\uff0c\u4f46\u662f\u65e0\u6cd5\u5b8c\u6210\u903b\u8f91\u5f02\u6216\u8fd9\u4e00\u975e\u7ebf\u6027\u64cd\u4f5c</p>"},{"location":"note/courses/AI/Chapter%205/#12","title":"1.2 \u524d\u9988\u795e\u7ecf\u7f51\u7edc","text":"<p>\u5728\u611f\u77e5\u673a\u6a21\u578b\u4e2d\u589e\u52a0\u82e5\u5e72\u9690\u85cf\u5c42\uff0c\u589e\u5f3a\u795e\u7ecf\u7f51\u7edc\u7684\u975e\u7ebf\u6027\u8868\u8fbe\u80fd\u529b\uff0c\u5373\u7531\u591a\u4e2a\u9690\u85cf\u5c42\u6784\u6210\u7684\u591a\u5c42\u611f\u77e5\u673a</p>"},{"location":"note/courses/AI/Chapter%205/#2","title":"2 \u5377\u79ef\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"note/courses/AI/Chapter%205/#3","title":"3 \u5faa\u73af\u795e\u7ecf\u7f51\u7edc","text":""},{"location":"note/courses/AI/Chapter%205/#4","title":"4 \u6ce8\u610f\u529b\u673a\u5236\u4e0e\u6b63\u5219\u5316","text":""},{"location":"note/courses/AI/Chapter%205/#5","title":"5 \u81ea\u7136\u8bed\u8a00\u4e0e\u8ba1\u7b97\u673a\u89c6\u89c9\u5e94\u7528","text":""},{"location":"note/courses/AI/Chapter%206/","title":"\u5f3a\u5316\u5b66\u4e60","text":""},{"location":"note/courses/AI/Chapter%206/#1","title":"1 \u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u5b9a\u4e49","text":"<p>\u5728\u5f3a\u5316\u5b66\u4e60\u4e2d\uff0c\u5b66\u4e60\u4fe1\u53f7\u4ee5\u5956\u52b1\u5f62\u5f0f\u51fa\u73b0</p> <p>\u672f\u8bed\uff1a - \u667a\u80fd\u4f53agent - \u73af\u5883environment - \u72b6\u6001state</p> <p></p>"},{"location":"note/courses/AI/Index/","title":"Index","text":""},{"location":"note/courses/Computer%20Architecture/Chapter%201%20Fundamentals%20of%20computer%20design/","title":"Chapter 1 Fundamentals of computer design","text":""},{"location":"note/courses/Computer%20Architecture/Chapter%201%20Fundamentals%20of%20computer%20design/#1-introduction","title":"1 Introduction","text":"<p>Von Neumann Structure </p> <p>Classes of Computers</p> <ul> <li>Desktop computers     PC: Personal Computers</li> <li>Servers computers     \u66f4\u5f3a\u5927\u7684\u5904\u7406\u901f\u5ea6\uff0c\u5bb9\u91cf\uff08\u7528\u4e8e\u5197\u4f59\u5907\u4efd\uff09\uff1b\u5f3a\u8c03\u540c\u4e00\u65f6\u95f4\u591a\u4eba\u8bbf\u95ee\u66f4\u597d\u7684\u6027\u80fd</li> <li>Embedded computers     \u4e0d\u80fd\u968f\u610f\u5b89\u88c5\u7b2c\u4e09\u65b9\u5e94\u7528\u7684\uff0c\u4e0e\u7cfb\u7edf\u4e00\u4f53\uff0c\u79f0\u4e3a\u5d4c\u5165\u5f0f     \u6700\u5927\u7684\u79cd\u7c7b\u5e76\u6700\u591a\u5143\u5316</li> <li>Personal Mobile Devices     \u5982\u624b\u673a\uff0ciPad</li> <li>Supercomputer \u8ba1\u7b97\u673a\u96c6\u7fa4</li> </ul> <p>Classed by Flynn \u6309\u7167\u6307\u4ee4\u6d41\u548c\u6570\u636e\u6d41\u8fdb\u884c\u5206\u7c7b</p> <p></p> <p>Performance</p> <ul> <li>Algorithm,\u51b3\u5b9a\u64cd\u4f5c\u7684\u6570\u91cf</li> <li>Programming language, compiler, architecture,\u51b3\u5b9a\u4e00\u4e2a\u64cd\u4f5c\u7684\u673a\u5668\u6307\u4ee4\u7684\u6570\u91cf</li> <li>Processor and memory system\uff0c \u51b3\u5b9a\u6307\u4ee4\u6267\u884c\u7684\u901f\u5ea6</li> <li>I/O system(including OS),\u51b3\u5b9aI/O\u64cd\u4f5c\u6267\u884c\u7684\u901f\u5ea6</li> </ul> <p>\u8fd9\u91cc\u6709\u5f88\u591a\u56e0\u7d20\u4f1a\u5f71\u54cd\u6027\u80fd\uff1a\u4f53\u7cfb\u7ed3\u6784\uff0c\u786c\u4ef6\u5b9e\u73b0\uff0c\u7f16\u8bd1\u5668\uff0cOS...</p> <p>We need to be able to define a measure of performance. </p> <ul> <li>Single users on a PC -&gt; a minimization of response time</li> <li>Large data -&gt; a maximization of throughput</li> </ul> <p>\u4e3a\u4e86\u8861\u91cf\u6027\u80fd\uff0c\u6211\u4eec\u6709\u54cd\u5e94\u65f6\u95f4\u548c\u541e\u5410\u91cf\u4e24\u4e2a\u6307\u6807\uff1a</p> <ul> <li>Latency (Response time \u54cd\u5e94\u65f6\u95f4) \u4e00\u4e2a\u4e8b\u4ef6\u5f00\u59cb\u5230\u7ed3\u675f\u7684\u65f6\u95f4  </li> <li>Throughput (bandwidth \u5e26\u5bbd) \u7ed9\u5b9a\u65f6\u95f4\u8303\u56f4\u5185\u5b8c\u6210\u4e86\u591a\u5c11\u7684\u5de5\u4f5c\u91cf</li> </ul> <p>\u5b9a\u4e49performance\u548c\u6267\u884c\u65f6\u95f4\u6210\u53cd\u6bd4\uff0c\u6027\u80fd\u7684\u6bd4\u8f83\u53ef\u4ee5\u7406\u89e3\u4e3a\u6267\u884c\u65f6\u95f4\u7684\u6bd4\u8f83</p> <p>Measuring Execution Time - Elapse time</p> <p>\u6574\u4f53\u8fd0\u884c\u7684\u65f6\u95f4</p> <ul> <li>CPU Time</li> </ul> <p>\u5728CPU\u4e0a\u82b1\u8d39\u7684\u65f6\u95f4</p> <p>The main goal of architecture improvement is to improve the performance of the system.</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%201%20Fundamentals%20of%20computer%20design/#2-technology-trend","title":"2 Technology Trend","text":"<p>The improvement of computer architecture</p> <ul> <li>Improvement of input / output </li> <li>The development of memory organization structure</li> <li>Two directions of instruction set development<ul> <li>CISC / RISC </li> </ul> </li> <li>Parallel processing technology \u4e0d\u540c\u5c42\u6b21\u3001\u7c92\u5ea6\u7684\u5e76\u884c</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%201%20Fundamentals%20of%20computer%20design/#3-quantitative-approaches","title":"3 Quantitative approaches","text":""},{"location":"note/courses/Computer%20Architecture/Chapter%201%20Fundamentals%20of%20computer%20design/#31-cpu-performance","title":"3.1 CPU Performance","text":"<ul> <li>CPU \u6267\u884c\u65f6\u95f4 = CPU \u65f6\u949f\u5468\u671f\u6570 * CPU \u65f6\u949f\u5468\u671f\u65f6\u95f4 = CPU \u65f6\u949f\u5468\u671f\u6570 / CPU \u65f6\u949f\u9891\u7387</li> <li>IC\uff1aInstruction Count\uff0c\u6307\u4ee4\u6570</li> <li>CPI\uff1aCycle Per Instruction\uff0c\u6bcf\u6761\u6307\u4ee4\u7684\u5e73\u5747\u65f6\u949f\u5468\u671f\u6570<ul> <li>\u7531 CPU \u786c\u4ef6\u51b3\u5b9a</li> <li>\u4e0d\u540c\u7684\u6307\u4ee4\u4e5f\u4f1a\u6709\u4e0d\u540c\u7684 CPI\uff0c\u5e73\u5747 CPI \u53d6\u51b3\u4e8e\u6307\u4ee4\u7684\u7ec4\u5408\u65b9\u5f0f</li> <li>CPI = CPU \u65f6\u949f\u5468\u671f\u6570 / IC</li> <li>CPU \u6267\u884c\u65f6\u95f4 = IC * CPI / CPU \u65f6\u949f\u9891\u7387</li> </ul> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%201%20Fundamentals%20of%20computer%20design/#32-amdahls-law","title":"3.2 Amdahl's Law","text":"<p>Amdahl's Law: the performance improvement to be gained from using some faster mode of execution is limited by the fraction of the time the faster mode can be used. \u5f53\u63d0\u5347\u7cfb\u7edf\u6027\u80fd\u65f6\uff0c\u6709\u591a\u5927\u7684\u6536\u76ca\u53d7\u9650\u4e8e\u88ab\u63d0\u5347\u7684\u90e8\u5206\u6240\u5360\u7684\u8fd0\u884c\u65f6\u95f4\u6bd4\u4f8b</p> <p>\\(T_{improved}=\\dfrac{T_{affected}}{\\text{improvement factor}}+T_{unaffected}\\)</p> <p>Make the common case fast!</p> <p>\u4e5f\u88ab\u7528\u6765\u5206\u6790\u53ef\u884c\u6027</p> <ul> <li> <p>\u52a0\u901f\u6bd4  </p> \\[ \\begin{align*} \\text{Speedup} &amp; =\\dfrac{\\text{Performance for entire task}_\\text{using Enhancement}}{\\text{Performance for entire task}_\\text{without Enhancement}}\\\\ &amp; = \\dfrac{\\text{Total Execution Time}_\\text{without Enhancement}}{\\text{Total Execution Time}_\\text{using Enhancement}} \\end{align*} \\] <p>\u52a0\u901f\u6bd4 Sp = \u6539\u8fdb\u540e\u7684\u6027\u80fd / \u6539\u8fdb\u524d\u7684\u6027\u80fd = \u6539\u8fdb\u524d\u7684\u65f6\u95f4 / \u6539\u8fdb\u540e\u7684\u65f6\u95f4</p> </li> <li> <p>\u6267\u884c\u65f6\u95f4 \\(T_{new} = T_{old}\\times \\left((1-f)+\\dfrac{f}{Sp}\\right)\\) \\(f\\) \u6307\u6539\u8fdb\u7684\u90e8\u5206\u6240\u5360\u7684\u6bd4\u4f8b</p> </li> <li>\\(Sp_{overall} = \\dfrac{T_{old}}{T_{new}} = \\dfrac{1}{(1-f)+\\dfrac{f}{Sp}}\\)<ul> <li>\u5176\u4e2d \\(Sp\\) \u4e3a\u88ab\u4f18\u5316\u90e8\u5206\u7684\u52a0\u901f\u6bd4\uff0c\\(Sp_\\text{overall}\\) \u4e3a\u6574\u4f53\u52a0\u901f\u6bd4\uff0c\\(f\\) \u4e3a\u88ab\u4f18\u5316\u90e8\u5206\u6240\u5360\u7684\u8fd0\u884c\u65f6\u95f4\u6bd4\u4f8b</li> </ul> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%201%20Fundamentals%20of%20computer%20design/#4-great-architecture-ideas","title":"4 Great Architecture Ideas","text":"<ul> <li>\u6469\u5c14\u5b9a\u5f8b<ul> <li>\u6bcf\u8fc7 18-24 \u4e2a\u6708\uff0c\u96c6\u6210\u7535\u8def\u7684\u6676\u4f53\u7ba1\u6570\u91cf\u5c06\u589e\u52a0\u4e00\u500d</li> </ul> </li> <li>\u4f7f\u7528\u62bd\u8c61\u6765\u7b80\u5316\u8bbe\u8ba1</li> <li>\u8ba9\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u66f4\u5feb</li> <li>\u901a\u8fc7\u5e76\u884c\u6765\u63d0\u9ad8\u6027\u80fd</li> <li>\u7531\u5f88\u591a\u7ea7\u522b\u7684\u5e76\u884c\uff0c\u6bd4\u5982\u6307\u4ee4\u96c6\u5e76\u884c\u3001\u8fdb\u7a0b\u5e76\u884c\u7b49</li> <li>\u901a\u8fc7\u6d41\u6c34\u7ebf\u6765\u63d0\u9ad8\u6027\u80fd<ul> <li>\u5c06\u4efb\u52a1\u5206\u4e3a\u591a\u6bb5\uff0c\u8ba9\u591a\u4e2a\u4efb\u52a1\u7684\u4e0d\u540c\u9636\u6bb5\u540c\u65f6\u8fdb\u884c</li> <li>\u901a\u5e38\u7528\u6765\u63d0\u9ad8\u6307\u4ee4\u541e\u5410\u91cf</li> </ul> </li> <li>\u901a\u8fc7\u9884\u6d4b\u6765\u63d0\u9ad8\u6027\u80fd</li> <li>\u4f7f\u7528\u5c42\u6b21\u5316\u7684\u5185\u5b58<ul> <li>\u8ba9\u6700\u5e38\u8bbf\u95ee\u7684\u6570\u636e\u5728\u66f4\u9ad8\u5c42\u7ea7\uff0c\u8bbf\u95ee\u66f4\u5feb</li> </ul> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%201%20Fundamentals%20of%20computer%20design/#5-isa","title":"5 ISA","text":"<ul> <li>Instruction Set Architecture  </li> </ul> <p>Instruction Set Design Issues</p> <ul> <li>Where are operands stored? registers, memory, stack, accumulator</li> <li>How many explicit operands are there? (Classification of ISAs)  0, 1, 2, or 3 </li> <li>How is the operand location specified? (Addressing Modes) register, immediate, indirect, ...</li> <li>What type &amp; size of operands are supported? (Data Representation) byte, int, float, double, string, vector, ...</li> <li>What operations are supported? (Types of Instructions) add, sub, mul, move, compare, ...</li> </ul> <p>Basic Principles</p> <ul> <li>Compatibility</li> <li>Versatility</li> <li>High efficiency</li> <li>Security</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%201%20Fundamentals%20of%20computer%20design/#51-isa-classification-basis","title":"5.1 ISA Classification Basis","text":"<p>\u8fd9\u91cc\u4e3b\u8981\u6307\u7684\u662f\u4ece\u54ea\u91cc\u53d6\u6570\uff0c\u5b58\u5230\u54ea\u91cc\u4ee5\u53ca\u8ba1\u7b97\u7684\u89c4\u5219\u3002</p> <ul> <li>stack     First operand removed from second op replaced by the result.  </li> </ul> <p>Example</p> <p> <ul> <li>accumulator \u7d2f\u52a0\u5668<ul> <li>One implicit operand: the accumulator; one explicit operand: mem location</li> <li>Accumulator is both an implicit input operand and a result  </li> <li></li> </ul> </li> <li>register<ul> <li>Register-memory architecture \u4efb\u4f55\u6307\u4ee4\u90fd\u53ef\u4ee5\u8bbf\u5b58</li> <li>Load-store architecture \u53ea\u6709 load/store \u7684\u65f6\u5019\u624d\u80fd\u8bbf\u5b58\uff0c\u5176\u4ed6\u65f6\u5019\u90fd\u662f\u57fa\u4e8e\u5bc4\u5b58\u5668\u64cd\u4f5c </li> </ul> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%201%20Fundamentals%20of%20computer%20design/#52-gpr-classification","title":"5.2 GPR Classification","text":"<p>A+B</p> <p></p> <p>More: try to do with \\(D=A*B-(A+C*B)\\)</p> <p>GPR \u901f\u5ea6\u5feb\uff0c\u4f46\u662f GPR \u592a\u591a\u4e5f\u4f1a\u6709\u8d44\u6e90\u7684\u6d6a\u8d39\u548c\u6027\u80fd\u4e0b\u964d\uff08\u5982\u5bfb\u627e\u5bf9\u5e94\u7684\u5bc4\u5b58\u5668\uff09</p> <ul> <li>Registers are much faster than memory , even cache</li> <li>Register are convenient for variable storage</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/","title":"Pipelining","text":"<p>Abstract</p> <p></p> <p>What is pipelining? How is the pipelining Implemented? What makes pipelining hard to implement?  </p>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#1-what-is-pipelining","title":"1 What is pipelining?","text":"<p>\u4ece\u4e24\u4e2a\u89d2\u5ea6\u8fdb\u884c\u52a0\u901f\uff1a</p> <ul> <li>\u5bf9\u6bcf\u4e00\u6761\u7684\u6307\u4ee4\u8fdb\u884c\u52a0\u901f<ul> <li>\u66f4\u9ad8\u901f\u7684\u88c5\u7f6e</li> <li>\u66f4\u597d\u7684\u8ba1\u7b97\u65b9\u5f0f</li> <li>\u63d0\u9ad8\u6307\u4ee4\u4e2d\u4f4d\u64cd\u4f5c\u7684\u5e76\u884c\u5ea6</li> <li>\u51cf\u5c11\u8bd1\u7801\u8fc7\u7a0b\u4e2d\u9700\u8981\u7684\u8282\u62cd\u6570</li> </ul> </li> <li>\u5bf9\u4e00\u6bb5\u7a0b\u5e8f\u7684\u6267\u884c\u8fdb\u884c\u52a0\u901f<ul> <li>\u901a\u8fc7\u63a7\u5236\u673a\u5236\u5bf9\u6574\u4e2a\u7a0b\u5e8f\u8fdb\u884c\u8bd1\u7801</li> </ul> </li> </ul> <p>Pipelining is an implementation technique whereby multiple instructions are overlapped in execution; it takes advantage of parallelism that exists among the actions needed to execute an instruction.</p> <p>\u673a\u5236\u4e0a\uff0c\u5148\u8fdb\u884c\u5206\u6bb5\uff0c\u6bcf\u4e00\u6bb5\u7528\u4e0d\u540c\u7684\u90e8\u4ef6\uff0c\u5c31\u53ef\u4ee5\u5e76\u884c\u6267\u884c\u3002\u6211\u4eec\u7528 Buffer \u5b58\u653e\u4e86\u4e34\u65f6\u7684\u7ed3\u679c\uff0c\u6709\u4eba\u653e\u6709\u4eba\u53d6</p> <p>\u5047\u8bbe\u4e00\u6761\u6307\u4ee4\u7684\u6267\u884c\u5206\u4e3a\u4e0b\u9762\u4e09\u6bb5\uff1a</p> <p>\u90a3\u4e48\u6211\u4eec\u6267\u884c\u7684\u6a21\u5f0f\u53ef\u4ee5\u6709\u4e0b\u9762\u4e09\u79cd\uff1a</p> <p>Three modes of execution</p> <ul> <li>Sequential execution  </li> <li>Single overlapping execution</li> <li>Twice overlapping execution</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#11-sequential-execution","title":"1.1 Sequential execution","text":"<p>\u6ca1\u6709\u6d41\u6c34\u7ebf\u7684\u65f6\u5019\uff0c\u6bcf\u4e00\u6761\u6307\u4ee4\u987a\u5e8f\u6267\u884c\uff0c\u6267\u884c\u65f6\u95f4\u5c31\u662f\u6bcf\u4e00\u6761\u6307\u4ee4\u7684\u6bcf\u4e2a\u9636\u6bb5\u65f6\u95f4\u6c42\u548c\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#12-overlapping-execution","title":"1.2 Overlapping execution","text":"<p>\u91cd\u53e0\u6267\u884c\u65f6\uff0c\u5982\u679c\u4e0d\u540c\u9636\u6bb5\u65f6\u95f4\u4e0d\u4e00\u81f4\uff0c\u5982 ID \u9636\u6bb5\u65f6\u95f4\u8f83\u957f\uff0c\u90a3\u4e48\u9700\u8981\u7b49\u5f85\uff0c\u6d6a\u8d39\u8d44\u6e90\uff1b\u5982 EX \u9636\u6bb5\u65f6\u95f4\u8f83\u957f\uff0c\u90a3\u4e48\u4ea7\u751f\u51b2\u7a81\uff0c\u6267\u884c\u90e8\u4ef6\u4e0d\u591f\u3002</p> <p>\u56e0\u6b64\u7406\u60f3\u60c5\u51b5\u662f\u8ba9\u4e09\u4e2a\u9636\u6bb5\u7684\u65f6\u95f4\u76f8\u7b49\u3002</p> <ul> <li> <p>Single \u597d\u5904\uff1a\u65f6\u95f4\u7f29\u77ed 1/3\uff0c\u660e\u663e\u63d0\u9ad8\u4e86\u529f\u80fd\u5355\u5143\u7684\u5229\u7528\u7387\uff0c\u4f46\u63d0\u9ad8\u4e86\u786c\u4ef6\u5f00\u9500\uff0c\u800c\u4e14\u63a7\u5236\u53d8\u5f97\u590d\u6742     </p> </li> <li> <p>Twice   \u597d\u5904\uff1a\u65f6\u95f4\u7f29\u77ed 2/3\uff0c\u4f46\u9700\u8981\u66f4\u590d\u6742\u7684\u786c\u4ef6\uff0c\u800c\u4e14\u9700\u8981\u5355\u72ec\u7684 FETCH DECODE EXE \u90e8\u4ef6\u3002     </p> </li> </ul> <p>Conflict in access memory: - Instruction memory  &amp; data memory - Instruction cache &amp; data cache - Multibody cross structure - Adding instruction buffer between memory and instruction decode unit</p> <p>\u5982\u4f55\u5b9e\u73b0\u91cd\u53e0\uff1f- buffer Adding instruction buffer between memory and instruction decode unit. \u6dfb\u52a0 buffer \u4e4b\u540e\uff0cIF \u9636\u6bb5\u65f6\u95f4\u53d8\u5f97\u5f88\u77ed\uff0c\u6b64\u65f6\u53ef\u4ee5\u548c ID \u9636\u6bb5\u5408\u5e76\uff08\u628a\u4e8c\u6b21\u91cd\u53e0\u53d8\u4e3a\u4e86\u4e00\u6b21\u91cd\u53e0\uff09\u3002</p> <p>\u4f46\u5982\u679c\u5408\u5e76\u540e IFID \u548c EX \u9636\u6bb5\u65f6\u95f4\u4e0d\u4e00\u81f4\uff0c\u4e5f\u4f1a\u6709\u6267\u884c\u90e8\u4ef6\u7684\u6d6a\u8d39\u3002 \u5982\u4f55\u5e73\u6ed1\u901f\u5ea6\u7684\u5dee\u5f02\uff1f- buffer  </p> <p>single overlapping execution</p> <p>Common features: They work by FIFO, and are composed of a group of several storage units that can be accessed quickly and related control logic. </p> <p>\u53ef\u4ee5\u770b\u5230\uff0c\u6dfb\u52a0 buffer \u4e4b\u540e\uff0cID \u9636\u6bb5\u4e0d\u7528\u7b49\u5f85 EX \u9636\u6bb5\u7ed3\u675f\u624d\u80fd\u8fdb\u884c\u4e0b\u4e00\u6761\u7684\u8bd1\u7801\uff0c\u56e0\u4e3a ID \u9636\u6bb5\u7684\u7ed3\u679c\u5df2\u7ecf\u5b58\u653e\u5728 buffer \u4e2d\u4e86\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#13-what-is-pipeling","title":"1.3 What is pipeling","text":"<p>Pipelining: \u5728\u5904\u7406\u4e00\u6761\u6307\u4ee4\u65f6\u5728\u540c\u4e00\u65f6\u95f4\u5206\u4e3am\u4e2a\u5b50\u8fdb\u7a0b\uff0cm\u6761\u76f8\u90bb\u6307\u4ee4\u7684\u8fdb\u7a0b</p> <p>\u5728\u540c\u4e00\u65f6\u95f4\u4ea4\u9519\u91cd\u53e0\u3002</p> <p>\u6d41\u6c34\u7ebf\u53ef\u4ee5\u770b\u4f5c\u662f\u91cd\u53e0\u6267\u884c\u7684\u6269\u5c55</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#14-characteristics-of-pipeling","title":"1.4 Characteristics of pipeling","text":"<p>\u6d41\u6c34\u7ebf\u6280\u672f\u9002\u7528\u4e8e\u5927\u91cf\u7684\u91cd\u590d\u987a\u5e8f\u6d41\u7a0b\u3002\u53ea\u6709\u5728\u8f93\u5165\u65f6\u4e0d\u65ad\u5730\u63d0\u4f9b\u4efb\u52a1\uff0c\u6548\u7387\u624d\u4f1a\u63d0\u9ad8\u53ef\u4ee5\u5145\u5206\u53d1\u6325\u6d41\u6c34\u7ebf\u7684\u4f5c\u7528</p> <p>\u6d41\u6c34\u7ebf\u9700\u8981pass time and empty time</p> <ul> <li>pass time : \u7b2c\u4e00\u4e2a\u4efb\u52a1\u8fdb\u5165\u6d41\u6c34\u7ebf\u5230\u7ed3\u675f\u7684\u65f6\u95f4</li> <li>empty time\uff1a \u6700\u540e\u4e00\u4e2a\u4efb\u52a1\u4ece\u8fdb\u5165\u6d41\u6c34\u7ebf\u5230\u5f97\u5230\u7ed3\u679c\u7684\u65f6\u95f4</li> </ul> <p>single function pipelining:  \u53ea\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u529f\u80fd\u6d41\u6c34\u7ebf</p> <p>Multi function pipelining: \u53ef\u5bf9\u5404\u6bb5\u8fdb\u884c\u6d41\u6c34\u7ebf\u4e0d\u540c\u7684\u8fde\u63a5\u65b9\u5f0f\u7528\u4e8e\u51e0\u4e2a\u4e0d\u540c\u7684\u529f\u80fd</p> <p>static pipelining: \u540c\u4e00\u65f6\u95f4\uff0c\u591a\u529f\u80fd\u6d41\u6c34\u7ebf\u7684\u6bcf\u4e00\u6bb5\u53ea\u80fd\u6309\u8fde\u63a5\u65b9\u5f0f\u5de5\u4f5c\u76f8\u540c\u7684\u51fd\u6570\u3002\u5bf9\u4e8e\u9759\u6001\u6d41\u6c34\u7ebf\uff0c\u53ea\u6709\u8f93\u5165\u662f\u4e00\u7cfb\u5217\u76f8\u540c\u7684\u64cd\u4f5c\u4efb\u52a1\uff0c\u5373 \u53ef\u4ee5\u5145\u5206\u53d1\u6325\u6d41\u6c34\u7ebf\u4f5c\u4e1a\u7684\u6548\u7387</p> <p>dynamic pipelining: \u5728\u540c\u4e00\u65f6\u95f4\uff0c\u5404\u6bb5\u7684\u591a\u529f\u80fd\u6d41\u6c34\u7ebf\u53ef\u4ee5\u4ee5\u4e0d\u540c\u7684\u65b9\u5f0f\u8fde\u63a5\u5e76\u6267\u884c\u591a\u79cd\u529f\u80fd\uff0c\u7075\u6d3b\u4f46\u63a7\u5236\u590d\u6742\uff0c\u53ef\u63d0\u9ad8\u6d41\u6c34\u7ebf\u7684\u53ef\u7528\u6027</p> <p>Static VS Dynamic</p> <p></p>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#2-classes-of-pipelining","title":"2 Classes of pipelining","text":"<p>Characteristics of pipelining</p> <ul> <li>Single function pipelining: only one fixed function pipelining.</li> <li> <p>Multi function pipelining: each section of the pipelining can be connected differently for several different functions. \u4e0d\u540c\u8fd0\u7b97\uff0c\u7528\u5230\u6d41\u6c34\u7ebf\u4e2d\u4e0d\u540c\u7684\u6bb5\uff0c\u8fd9\u6837\u5b9e\u73b0\u4e86\u4e0d\u540c\u7684\u529f\u80fd\u3002</p> Example <p></p> <p>\u9488\u5bf9\u591a\u529f\u80fd\u6d41\u6c34\u7ebf\u7684\u5212\u5206:</p> <ul> <li>Static pipelining \u9759\u6001\u6d41\u6c34\u7ebf\uff1a\u540c\u4e00\u4e2a\u65f6\u523b\u6d41\u6c34\u7ebf\u53ea\u80fd\u505a\u4e00\u4e2a\u529f\u80fd\u3002 \u4f8b\u5982\u5728\u521a\u521a\u7684\u4f8b\u5b50\u4e2d\uff0c\u6d41\u6c34\u7ebf\u8981\u4e48\u505a\u6d6e\u70b9\u52a0\u6cd5\uff0c\u8981\u4e48\u505a\u4e58\u6cd5\u3002</li> <li> <p>Dynamic pipelining \u52a8\u6001\u6d41\u6c34\u7ebf\uff1a\u540c\u4e00\u4e2a\u65f6\u523b\u6d41\u6c34\u7ebf\u53ef\u4ee5\u505a\u591a\u4e2a\u529f\u80fd\u3002  </p> Example <p></p> <p>\u53ef\u4ee5\u4e0d\u7528\u7b49\u6d6e\u70b9\u52a0\u6cd5\u7b2c n \u6761\u7ed3\u675f\uff0c\u5c31\u53ef\u4ee5\u5f00\u59cb\u6d6e\u70b9\u4e58\u6cd5\u3002</p> </li> </ul> </li> </ul> <p>\u8fd8\u53ef\u4ee5\u4ece\u4e0d\u540c\u7c92\u5ea6\u5206\u7c7b\uff1a</p> <ul> <li>Component level pipelining (in component - operation pipelining) \u5904\u7406\u5668\u7684\u7b97\u672f\u548c\u903b\u8f91\u9519\u505a\u90e8\u4ef6\u5206\u6210\u5f88\u591a\u6bb5\uff0c\u6240\u4ee5\u591a\u79cd\u7c7b\u578b\u7684\u64cd\u4f5c\u53ef\u4ee5\u88ab\u6d41\u6c34\u7ebf\u8ba1\u7b97</li> <li>Processor level pipelining (inter component - instruction pipelining) \u901a\u8fc7\u6d41\u6c34\u7ebf\u5b9e\u73b0\u8bd1\u7801\u548c\u6267\u884c\u3002\u6267\u884c\u8fdb\u7a0b\u88ab\u5206\u4e3a\u591a\u4e2a\u5b50\u8fdb\u7a0b\uff0c\u6bcf\u4e2a\u5b50\u8fdb\u7a0b\u5728\u4e00\u4e2a\u72ec\u7acb\u7684\u529f\u80fd\u5355\u5143\u4e2d\u6267\u884c</li> <li> <p>Inter processor pipelining (inter processor - macro pipelining) \u8fd9\u662f\u4e00\u4e2a\u4e24\u4e2a\u6216\u591a\u4e2a\u5904\u7406\u5668\u7684\u4e32\u884c\u8fde\u63a5\u4ee5\u5904\u7406\u76f8\u540c\u7684\u6570\u636e\u6d41\uff0c\u6bcf\u4e2a\u5904\u7406\u5668\u5b8c\u6210\u6574\u4e2a\u4efb\u52a1\u7684\u4e00\u90e8\u5206\u3002</p> </li> <li> <p>Linear pipelining\uff1a\u6bcf\u4e2a\u90e8\u5206\u4e32\u884c\uff0c\u65e0\u53cd\u9988\u7684\u5faa\u73af\u3002\u5f53\u6570\u636e\u5728\u6d41\u6c34\u7ebf\u7684\u6bcf\u4e00\u6bb5\u4e2d\u4f20\u64ad\uff0c\u6bcf\u4e00\u6bb5\u6700\u591a\u7ecf\u8fc7\u4e00\u6b21</p> </li> <li> <p>Nonlinear pipelining  \uff1a \u975e\u7ebf\u6027\uff0c\u529f\u80fd\u90e8\u4ef6\u53ef\u80fd\u591a\u6b21\u4f7f\u7528\uff0c\u9020\u6210\u56de\u8def</p> <ul> <li>Scheduling problem of nonlinear pipelining: \u51b3\u5b9a\u4ec0\u4e48\u65f6\u5019\u5411\u6d41\u6c34\u7ebf\u4e2d\u5f15\u5165\u65b0\u7684\u4efb\u52a1\uff0c\u4f7f\u5f97\u8fd9\u4e2a\u4efb\u52a1\u4e0d\u4f1a\u548c\u4e4b\u524d\u7684\u4efb\u52a1\u4ea7\u751f\u51b2\u7a81</li> </ul> Example <p></p> </li> </ul> <p>\u8fd8\u53ef\u4ee5\u5206\u4e3a\u987a\u5e8f/\u4e71\u5e8f\uff1a</p> <ul> <li>Ordered pipelining \u5728\u6d41\u6c34\u7ebf\u4e2d\uff0c\u4efb\u52a1\u7684\u6d41\u51fa\u987a\u5e8f\u4e3a\u548c\u6d41\u5165\u987a\u5e8f\u5b8c\u5168\u4e00\u6837\u3002\u6bcf\u4e2a\u4efb\u52a1\u6309\u987a\u5e8f\u6d41\u8fdb\u6d41\u6c34\u7ebf\u7684\u6bcf\u4e00\u6bb5</li> <li>Disordered pipelining \u8fdb\u6765\u548c\u6d41\u51fa\u7684\u987a\u5e8f\u4e0d\u4e00\u6837\u3002\u540e\u9762\u7684\u6307\u4ee4\u4e0e\u524d\u9762\u7684\u6307\u4ee4\u65e0\u5173\uff0c\u5219\u53ef\u4ee5\u5148\u51fa\u6765\uff0c\u4e0d\u80fd\u5219\u8981\u7b49\u5f85\u3002</li> </ul> <p>\u8fd8\u53ef\u4ee5\u5206\u4e3a\u6807\u91cf/\u5411\u91cf\u5904\u7406\u5668\uff1a</p> <ul> <li>Scalar processor The processor does not have vector data representation and vector instructions, and only deal with scalar datathrough pipelining</li> <li>Vector pipelining processor: The processor has vector data representation and vector instructions. It is the combination of vector data representation and pipelining technology.  </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#3-performance-evaluation-of-pipelining","title":"3 Performance evaluation of pipelining","text":""},{"location":"note/courses/Computer%20Architecture/Chapter%202/#31-throughput","title":"3.1 Throughput","text":"<p>\u6d41\u6c34\u7ebf\u5e0c\u671b\u6211\u4eec\u5355\u4f4d\u65f6\u95f4\u5185\u5904\u7406\u7684\u4efb\u52a1\u8d8a\u591a\u8d8a\u597d\uff0c\u5373\u63d0\u9ad8\u541e\u5410\u7387\u3002</p> <p>Throughput(TP) \\(TP=\\dfrac{n}{T_K}&lt;TP_{max}\\)\uff08\u5b9e\u9645\u4e0a TP \u4f1a\u6709\u635f\u8017\uff09 </p> <p>\\(TP=\\dfrac{n}{n+m-1}TP_{max}\\)</p> <ul> <li>if \\(n&gt;&gt;m, TP\\approx TP_{max}\\)</li> </ul> <p>Suppose the time of segments are different in pipelining, then the longest segment in the pipelining is called the bottleneck segment.</p> <p>Example</p> <ul> <li>\\(M = 4\\)</li> <li>Time of S1, S3, S4: \\(\\delta t\\)</li> <li>Time of S2: \\(3\\delta t\\) (Bottleneck)</li> </ul> <p> </p> <p>\u53ef\u4ee5\u770b\u5230 \\(TP_{max}\\) \u53ea\u548c\u74f6\u9888\u6bb5\u7684\u65f6\u95f4\u6709\u5173</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#311-common-methods-to-solve-pipeline-bottleneck","title":"3.1.1 Common methods to solve pipeline bottleneck","text":"<ul> <li> <p>Subdivision </p> <p>\u628a\u74f6\u9888\u6bb5\u5206\u6210\u82e5\u5e72\u6bb5\u6267\u884c </p> </li> <li> <p>Repetition</p> <p>\u5728\u74f6\u9888\u6bb5\u591a\u4f7f\u7528\u51e0\u4e2a\u90e8\u4ef6 </p> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#32-speedup","title":"3.2 Speedup","text":"<p>\\(S_p = \\dfrac{n\\times m \\times \\delta t_0}{m(m+n-1)\\delta t_0} = \\dfrac{n}{m+n-1}\\)</p> <ul> <li>if \\(n&gt;&gt;m, S_p\\approx m\\)</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#33-efficiency","title":"3.3 Efficiency","text":"<p>\u6548\u7387\uff0c\u4ece\u8ba1\u7b97\u673a\u90e8\u4ef6\u7684\u89d2\u5ea6\uff1a\u7eb5\u8f74\u4ee3\u8868\u4f7f\u7528\u7684\u4e0d\u540c\u7684\u529f\u80fd\u90e8\u4ef6\u3002\u6548\u7387\u6307\u7684\u662f\u6211\u4eec\u771f\u6b63\u4f7f\u7528\u8fd9\u4e2a\u90e8\u4ef6\u5360\u6574\u4e2a\u65f6\u7a7a\u7684\u767e\u5206\u6bd4\u3002</p> <p>\\(\\eta = \\dfrac{n\\times m \\times \\delta t_0}{m(m+n-1)\\delta t_0} = \\dfrac{n}{m+n-1}\\)</p> <ul> <li>\u6ce8\u610f\u6548\u7387\u5f97\u5230\u7684\u7ed3\u679c\u5e94\u8be5\u662f\u767e\u5206\u6bd4\uff0c\u4e4b\u524d\u7684\u541e\u5410\u91cf\u3001\u52a0\u901f\u6bd4\u90fd\u662f\u6ca1\u6709\u91cf\u7eb2\u7684\u6570\u3002</li> <li>if \\(n&gt;&gt;m, \\eta\\approx m\\)</li> </ul> <p>Throughput(TP): \\(\\(\\begin{align}TP=&amp;\\frac{n}{T_k}\\\\ TP&lt;&amp;TP_{max}\\\\ TP=&amp;\\frac{n}{m+n-1}\\Delta t_0 \\end{align}\\)\\)</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#34-pipeline-performance","title":"3.4 Pipeline Performance","text":"<p>\u6d41\u6c34\u7ebf\u7684\u5b9e\u9645\u541e\u5410\u91cf\u5c0f\u4e8e\u6700\u5927\u541e\u5410\u91cf\uff0c\u8fd9\u4e0d\u4ec5\u4e0e\u6bcf\u4e2asegment\u7684\u65f6\u95f4\u6709\u5173\uff0c\u8fd8\u4e0em\u548cn\u6709\u5173</p> <p>\u6d41\u6c34\u7ebf\u4e2d\u6700\u957f\u7684\u6bb5\u88ab\u79f0\u4e3a\u74f6\u9888\u6bb5</p> <p>common methods to solve pipeline bottleneck: - Subdivision  - Repetition </p> \\[ \\begin{align} Speedup=&amp;(n\\times m )/(m+n-1) \\\\ \\eta=&amp;n/(n+m+1) \\end{align} \\] <p>Vector Calculation in Static Pipeline</p> <p>\u73b0\u5728\u6709\u4e24\u4e2a\u5411\u91cf A \u548c B\uff0c\u6211\u4eec\u8981\u8ba1\u7b97 A \u70b9\u4e58 B\uff0c\u901a\u8fc7\u4e0b\u9762\u7684\u52a8\u6001\u53cc\u529f\u80fd\u6d41\u6c34\u7ebf\u8fd0\u7b97\u3002 </p> <p>\u6ce8\u610f\u5230\u8fd9\u91cc\u662f\u9759\u6001\u6d41\u6c34\u7ebf\uff0c\u540c\u4e00\u65f6\u523b\u53ea\u80fd\u505a\u4e00\u7c7b\u4e8b\u60c5\uff0c\u9700\u8981\u5148\u5b8c\u6210\u4e00\u79cd\u64cd\u4f5c\u518d\u5b8c\u6210\u53e6\u4e00\u79cd\u3002\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u5148\u505a\u4e58\u6cd5\uff0c\u6392\u7a7a\uff0c\u518d\u505a\u52a0\u6cd5\u3002\u505a\u52a0\u6cd5\u65f6\uff0c\u7b2c\u4e09\u4e2a\u4e58\u6cd5\u7684\u7ed3\u679c\u9700\u8981\u7b49\u524d\u4e24\u4e2a\u4e58\u6cd5\u7684\u7ed3\u679c\u76f8\u52a0\u540e\uff0c\u518d\u8ba1\u7b97\u3002 </p> <p>\u5f97\u5230 \\(T_p=7/15\\delta t, S_p = 1.6, \\eta=32%\\)</p> <p>Vector Calculation in Dynamic Pipeline</p> <p>\u52a8\u6001\u6d41\u6c34\u7ebf\uff0c\u53ef\u4ee5\u5728\u524d\u4e00\u4e2a\u529f\u80fd\u8fd8\u6ca1\u6709\u505a\u5b8c\u7684\u65f6\u5019\u6267\u884c\u53e6\u4e00\u4e2a\u529f\u80fd\uff0c\u4e0d\u9700\u8981\u6392\u7a7a\u3002 </p> <p>\u8fd9\u91cc\u5f53\u4e24\u4e2a\u4e58\u6cd5\u7684\u7ed3\u679c\u7b97\u51fa\u6765\u4e4b\u540e\uff0c\u5c31\u53ef\u4ee5\u6267\u884c\u5bf9\u5e94\u7684\u52a0\u6cd5\u3002 </p> <p>\u6d41\u6c34\u7ebf\u7684\u6bb5\u6570 m \u4e0d\u662f\u8d8a\u591a\u8d8a\u597d\u3002</p> <ul> <li>\u4e3a\u4ec0\u4e48\u4e0d\u91c7\u7528 50 \u7ea7\u6d41\u6c34\u7ebf\uff1a\u9636\u6bb5\u8fc7\u591a\u4f1a\u5e26\u6765\u5f88\u591a\u590d\u6742\u6027\uff0c\u9700\u8981\u5904\u7406\u6307\u4ee4\u4e4b\u95f4\u53ef\u80fd\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u63a7\u5236\u903b\u8f91\u5e9e\u5927\uff1b\u9501\u5b58\u5668\u4f1a\u5360\u7528\u9762\u79ef\uff0c\u4e14\u9501\u5b58\u5668\u672c\u8eab\u5b58\u5728\u5ef6\u8fdf\uff0c\u673a\u5668\u5468\u671f &gt; \u9501\u5b58\u5668\u5ef6\u8fdf + \u65f6\u949f\u504f\u79fb\uff0c\u5728\u73b0\u4ee3\u6df1\u5ea6\u6d41\u6c34\u7ebf\uff0810 - 20 \u7ea7\uff09\u4e2d\uff0c\u9501\u5b58\u5668\u5ef6\u8fdf\u7684\u5f71\u54cd\u5f88\u660e\u663e\u3002</li> <li> <p>\u5f71\u54cd\u591a\u529f\u80fd\u6d41\u6c34\u7ebf\u6548\u7387\u7684\u56e0\u7d20\uff1a\u591a\u529f\u80fd\u6d41\u6c34\u7ebf\u6267\u884c\u67d0\u4e00\u529f\u80fd\u65f6\uff0c\u603b\u4f1a\u6709\u4e00\u4e9b\u6bb5\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\uff1b\u6d41\u6c34\u7ebf\u5efa\u7acb\u8fc7\u7a0b\u4e2d\uff0c\u4e00\u4e9b\u8981\u4f7f\u7528\u7684\u6bb5\u4e5f\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\uff1b\u6bb5\u65f6\u95f4\u4e0d\u76f8\u7b49\u65f6\uff0c\u65f6\u949f\u5468\u671f\u53d6\u51b3\u4e8e\u74f6\u9888\u6bb5\u7684\u65f6\u95f4\uff1b\u529f\u80fd\u5207\u6362\u65f6\uff0c\u6d41\u6c34\u7ebf\u9700\u8981\u6e05\u7a7a\uff1b\u4e0a\u4e00\u6b21\u64cd\u4f5c\u7684\u8f93\u51fa\u662f\u4e0b\u4e00\u6b21\u64cd\u4f5c\u7684\u8f93\u5165\uff1b\u989d\u5916\u6210\u672c\uff0c\u5982\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\u5ef6\u8fdf\u548c\u65f6\u949f\u504f\u79fb\u5f00\u9500\u3002 Too many stages:</p> </li> <li> <p>Lots of complications</p> </li> <li>Should take care of possible dependencies among in-flight instructions</li> <li>Control logic is huge</li> </ul> <p>\u6d41\u6c34\u7ebf\u7684\u6027\u80fd\u6709\u5173\uff1a\u52a8\u6001\uff08\u4e0d\u9700\u8981\u6392\u7a7a\uff0c\u4f46\u9700\u8981\u786c\u4ef6\u652f\u6301\uff09\u8fd8\u662f\u9759\u6001\uff0c\u6d41\u6c34\u7ebf\u6bb5\u6570\uff0c\u4ee3\u7801\u8d28\u91cf\uff08\u5192\u9669\uff09</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#4-hazards-of-pipelining","title":"4 Hazards of Pipelining","text":"<p>Hazards</p> <ul> <li>Situations that prevent starting the next instruction in the next cycle.</li> <li> <p>Structure hazards</p> <p>A required resource is busy.</p> </li> <li> <p>Data hazard</p> <p>Need to wait for previous instruction to complete its data read/write.</p> </li> <li> <p>Control hazard</p> <p>Deciding on control action depends on previous instruction.</p> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#41-structure-hazards","title":"4.1 Structure Hazards","text":"<p>\u5bf9\u7ed3\u6784\u7684\u4e89\u7528\uff0c\u5982 memory. </p> <p>\u6d41\u6c34\u7ebf\u6570\u636e\u901a\u8def\u9700\u8981\u72ec\u7acb\u7684\u6307\u4ee4 / \u6570\u636e\u5b58\u50a8\u5668\u6216\u72ec\u7acb\u7684\u6307\u4ee4 / \u6570\u636e\u7f13\u5b58\u3002</p> <p>\u5904\u7406\u7ed3\u6784\u5192\u9669\u7684\u65b9\u6cd5\uff1a\u6307\u4ee4\u8f6e\u6d41\u4f7f\u7528\u8d44\u6e90\uff0c\u90e8\u5206\u6307\u4ee4\u5fc5\u987b\u505c\u987f\uff1b\u589e\u52a0\u66f4\u591a\u786c\u4ef6\u3002\u589e\u52a0\u786c\u4ef6\u603b\u80fd\u89e3\u51b3\u7ed3\u6784\u5192\u9669\u95ee\u9898\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#42-data-hazards","title":"4.2 Data Hazards","text":"<p>An instruction depends on completion of data access by a previous instruction.  </p> <p>\u53ef\u4ee5\u52a0 bubble, \u6216\u8005\u901a\u8fc7 forwarding \u524d\u9012\u6570\u636e\uff0c\u4f46\u5e76\u4e0d\u662f\u6240\u6709\u7684\u60c5\u51b5\u90fd\u53ef\u4ee5\u89e3\u51b3\u3002</p> <ul> <li> <p>Read after write: RAW  </p> <pre><code>FADD.D F6\uff0cF0\uff0cF12\nFSUB.D F8\uff0cF6\uff0cF14\n</code></pre> <p>Forwarding \u89e3\u51b3\u8fd9\u79cd\u7c7b\u578b\u7684\u5192\u9669\u3002 </p> </li> <li> <p>Write after read: WAR</p> <pre><code>FDIV.D F2\uff0cF6\uff0cF4\nFADD.D F6\uff0cF0\uff0cF12\n</code></pre> <p>Name Dependences\uff08\u5728\u4e71\u5e8f\u6d41\u6c34\u7ebf\u4e2d\u53ef\u80fd\u51fa\u73b0\u5192\u9669\uff09</p> </li> <li> <p>Write after write: WAW</p> <pre><code>FDIV.D F2\uff0cF0\uff0cF4\nFSUB.D F2\uff0cF6\uff0cF14\n</code></pre> <p>Name Dependences</p> </li> </ul> <p>\u4f46\u662f\u5e76\u4e0d\u662f\u6240\u6709\u7684 RAW \u90fd\u53ef\u4ee5\u901a\u8fc7 Forwarding \u89e3\u51b3\uff0c\u5982 Load-use Hazard. </p> <p>\u6709\u7684\u65f6\u5019\uff0c\u6211\u4eec\u53ef\u4ee5\u5bf9\u6307\u4ee4\u8fdb\u884c\u8c03\u5ea6\uff0c\u6539\u53d8\u6307\u4ee4\u7684\u987a\u5e8f\uff0c\u4ece\u800c\u907f\u514d stall \u7684\u60c5\u51b5\u3002</p> <p>Code Scheduling to Avoid Stalls</p> <p></p> <ul> <li>\u9759\u6001\u8c03\u5ea6\uff1a\u7a0b\u5e8f\u8fd8\u6ca1\u6709\u8fd0\u884c\uff0c\u7f16\u8bd1\u5668\u4e3a\u6211\u4eec\u4f18\u5316\u4e86\u4ee3\u7801\uff0c\u6539\u53d8\u6267\u884c\u987a\u5e8f\u3002</li> <li>\u52a8\u6001\u8c03\u5ea6\uff1a\u7a0b\u5e8f\u8fd0\u884c\u65f6\uff0c\u5904\u7406\u5668\u4e3a\u6211\u4eec\u4f18\u5316\u4e86\u4ee3\u7801\uff0c\u6539\u53d8\u6267\u884c\u987a\u5e8f\u3002</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#43-control-hazards","title":"4.3 Control Hazards","text":"<p>\u4e3a\u4e86\u51cf\u5c11\u5206\u652f\u6307\u4ee4\u5e26\u6765\u7684 stall\uff0c\u6211\u4eec\u4f7f\u7528\u5206\u652f\u9884\u6d4b\u7684\u6280\u672f\u3002</p> <ul> <li>Static branch prediction<ul> <li>Based on typical branch behavior</li> <li>e.g. \u5faa\u73af\uff0cif-else \u8bed\u53e5<ul> <li>Predict backward branches taken</li> <li>Predict forward branches not taken</li> </ul> </li> </ul> </li> <li>Dynamic branch prediction<ul> <li>Hardware measures actual branch behavior<ul> <li>e.g. \u6839\u636e\u5386\u53f2\u8bb0\u5f55\uff08\u5982\u4e0a\u4e00\u6b21\u5206\u652f\u7684\u7ed3\u679c\uff09\uff0c\u9884\u6d4b\u4e0b\u4e00\u6b21\u7684\u5206\u652f</li> </ul> </li> <li>Assume future behavior will continue the trend</li> </ul> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#5-data-hazards-forwarding-vs-stalling","title":"5 Data Hazards: Forwarding vs. Stalling","text":""},{"location":"note/courses/Computer%20Architecture/Chapter%202/#51-data-hazards-in-alu-instructions","title":"5.1 Data Hazards in ALU Instructions","text":""},{"location":"note/courses/Computer%20Architecture/Chapter%202/#52-forwarding-conditions","title":"5.2 Forwarding Conditions","text":"<p>double data hazard:</p> <p>both hazards occur: want to use the most recent</p> <p>only forward if EX hazard condition isn't true, consider MEM hazard</p> <p>MEM hazard:</p> <ul> <li>if (MEM/WB.RegWrite and (MEM/WB. Rd \u2260 0) </li> <li>and not(EX hazard) </li> <li>and (MEM/WB. Rd = ID/EX. Rs1)) ForwardA = 01 </li> <li>if (MEM/WB.RegWrite and (MEM/WB. Rd \u2260 0) </li> <li>and not(EX hazard) </li> <li>and (MEM/WB. Rd = ID/EX. Rs2))</li> </ul> <p>Load use hazard \u2022 ID/EX.MemRead and ((ID/EX.RegisterRt = IF/ID.RegisterRs) or (ID/EX.RegisterRt = IF/ID.RegisterRt))</p> <p>datapath with hazard detection </p>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#53-how-to-stall-the-pipeline","title":"5.3 How to stall the Pipeline","text":"<p>NOP instruction <code>addi x0, x0, 0</code></p> <p>\u2022 Force control values in ID/EX register to 0: MEM and WB do nop  \u2022 Prevent update of PC and IF/ID register: Using instruction is decoded again</p> <p></p>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#6-control-hazards","title":"6 Control Hazards","text":"<p>\u5728 RISC-V \u4e2d\uff0c\u6709\u65e0\u6761\u4ef6\u8df3\u8f6c <code>jal, jalr</code> \u548c\u6709\u6761\u4ef6\u8df3\u8f6c <code>beq, bne, blt, bge, bltu, bgeu</code>\u3002</p> <p>\u53ef\u4ee5\u5728 ID \u9636\u6bb5\u5c31\u7b97\u51fa\u8981\u8df3\u8f6c\u7684\u76ee\u6807\u5730\u5740\uff0c\u540c\u65f6\u9884\u6d4b\u5206\u652f\u7684\u7ed3\u679c\u3002\u53ea\u6709\u9884\u6d4b\u9519\u8bef\u65f6\u624d\u9700\u8981 stall \u6765 flush \u6389\u4e4b\u524d\u7684\u7ed3\u679c\uff0c\u9884\u6d4b\u6210\u529f\u4e0d\u9700\u8981 stall\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#61-static-branch-prediction","title":"6.1 Static Branch Prediction","text":"<ul> <li> <p>Prediction taken</p> <p></p> </li> <li> <p>Prediction not taken</p> </li> <li> <p>Delayed Branch</p> <p>The behavior of a delayed branched is the same whether or not the branch is taken. \u5373\u65e0\u8bba\u5206\u652f\u662f\u5426\u53d1\u751f\uff0c\u5206\u652f\u540e\u9762\u7684\u6307\u4ee4\u90fd\u8981\u6267\u884c\u3002\uff08\u5ef6\u65f6\u69fd\uff09</p> </li> </ul> <p>Is delay slot a really good design?</p> <p>RISC-V \u548c\u5fae\u67b6\u6784\u7ed1\u5b9a\u4e0d\u6df1\uff0c\u800c\u4e14\u5ef6\u8fdf\u69fd\u4e5f\u6709\u5f0a\u7aef\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#62-dynamic-branch-prediction","title":"6.2 Dynamic Branch Prediction","text":"<p>Use dynamic prediction</p> <ul> <li>Branch prediction buffer (aka branch history table)</li> <li>Indexed by recent branch instruction addresses</li> <li>Stores outcome (taken/not taken)</li> <li> <p>To execute a branch</p> <ul> <li> <p>Check table, expect the same outcome</p> <p>\u628a\u4e4b\u524d\u5927\u5bb6\u7684\u7ed3\u679c\u5b58\u5728\u4e00\u4e2a\u8868\u91cc\uff0c\u901a\u8fc7\u5386\u53f2\u5224\u65ad\u672a\u6765\uff0c\u6839\u636e\u4e4b\u524d\u7684\u5206\u652f\u7ed3\u679c\u9884\u6d4b\u8fd9\u6b21\u3002</p> </li> <li> <p>Start fetching from fall-through or target</p> </li> <li>If wrong, flush pipeline and flip prediction</li> </ul> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#621-branch-history-tablebht","title":"6.2.1 Branch History Table(BHT)","text":"<ul> <li>1-Bit Predictor</li> <li> <p>2-Bit Predictor</p> <p></p> <p>\u5b9e\u9645\u4e0a\u4e24\u4f4d\u7684\u6548\u679c\u5df2\u7ecf\u5f88\u597d\uff0c\u800c\u4e14\u8d44\u6e90\u5f00\u9500\u4e0d\u5c0f\uff0c\u56e0\u6b64\u6211\u4eec\u4e00\u822c\u4e0d\u4f1a\u518d\u63d0\u5347\u4f4d\u6570\u3002</p> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#622-advanced-techniques-for-instruction-delivery-and-speculation","title":"6.2.2 Advanced Techniques for Instruction Delivery and Speculation","text":"<ul> <li>Increasing Instruction Fetch Bandwidth<ul> <li> <p>Branch-Target Buffers(BTBs)     </p> <p>\u7c7b\u4f3c\u4e8e TLB\uff0c\u653e\u5206\u652f\u9884\u6d4b\u7684\u76ee\u6807\u5730\u5740\u3002\u5982\u679c\u6709\u8df3\u8f6c\u7684\u5206\u652f\u6307\u4ee4\u4e0d\u5728\u8868\u4e2d\uff0c\u5c31\u52a0\u5165\uff1b\u5982\u679c\u6709\u8868\u4e2d\u7684\u5206\u652f\u6307\u4ee4\u4e0d\u53d1\u751f\u8df3\u8f6c\uff0c\u5c31\u53bb\u6389\u3002      Even with predictor, still need to calculate the target address, 1-cycle penalty for a taken branch </p> </li> </ul> </li> </ul> <p>\u2022 Branch target buffer     \u2022 Cache of target addresses     \u2022 Indexed by PC when instruction fetched         \u2022 If hit and instruction is branch predicted taken, can fetch target immediately</p> <ul> <li> <p>Specialized Branch Predictors: Predicting Procedure Returns, Indirect Jumps, and Loop Branches</p> <ul> <li>Integrated Instruction Fetch Units</li> </ul> </li> <li> <p>Benefit</p> <ul> <li>Get instructions at branch target faster</li> <li>It can provide multiple instructions at the branch target once, which is necessary for the multi processor;</li> <li>branch folding<ul> <li>It is possible to achieve unconditional branching without delay, or sometimes conditional branching without delay</li> </ul> </li> </ul> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#7-schedule-of-nonlinear-pipelining","title":"7 Schedule of Nonlinear pipelining","text":"<p>\u5bf9\u4e8e\u975e\u7ebf\u6027\u6d41\u6c34\u7ebf\uff0c\u529f\u80fd\u90e8\u4ef6\u53ef\u80fd\u7ecf\u5386\u591a\u6b21\uff0c\u6709\u8c03\u5ea6\u95ee\u9898\u3002</p> <p>Question</p> <p>\u7eb5\u8f74\u4ee3\u8868\u4e0d\u540c\u7684\u529f\u80fd\u90e8\u4ef6\uff0c\u6a2a\u5750\u6807\u8868\u793a\u62cd\u6570\u3002\u5373\u6bcf\u4e00\u62cd\u9700\u8981\u7528\u5230\u7684\u529f\u80fd\u90e8\u4ef6\u3002 </p> <p>\u7b97\u6cd5\uff1a</p> <ul> <li> <p>Initial conflict vector</p> <p>\u4e8c\u8fdb\u5236\u8868\u793a\uff0c\u7b2c\u51e0\u62cd\u662f\u4e0d\u80fd\u4f7f\u7528\u7684\u3002\u5c06\u51e0\u4e2a\u4e8c\u8fdb\u5236\u6570\u53d6\u5e76\u96c6\u3002</p> </li> <li> <p>Conflict vector</p> </li> <li>State transition graph</li> <li>Circular queue</li> <li>Shortest average interval</li> </ul> <p>Example</p> <ul> <li> <p>Initial conflict vector</p> <p></p> <p>\u5bf9\u6bcf\u4e00\u4e2a\u90e8\u4ef6\u5206\u5f00\u6765\u770b</p> <ul> <li>\u7b2c\u4e00\u4e2a\u90e8\u4ef6\uff0c\u9694 8 \u62cd\u4f1a\u4ea7\u751f\u51b2\u7a81\uff1b\u7b2c\u4e8c\u4e2a\u90e8\u4ef6\uff1a1\uff0c5\uff0c6\uff1b\u7b2c\u4e09\u4e2a\u90e8\u4ef6\uff1a\u65e0\uff1b\u7b2c\u56db\u3001\u4e94\u4e2a\u90e8\u4ef6\uff1a1</li> <li>\u5c06\u5bf9\u5e94\u4e8c\u8fdb\u5236\u6570\u7684\u7b2c 1\u30015\u30016\u30018 \u4f4d\u8bbe\u4e3a 1\uff0c\u5176\u4ed6\u4f4d\u4e3a 0\uff0c\u5f97\u5230\u4e86\u521d\u59cb\u7684\u51b2\u7a81\u5411\u91cf 10110001\u3002</li> </ul> </li> <li> <p>Conflict vector</p> <p></p> <p>\u5bf9\u4e8e\u7b2c\u4e09\u5217\uff0c\u9694\u4e24\u62cd\u8fdb\u4e0b\u4e00\u6761\u6307\u4ee4\uff0c\u6211\u4eec\u5c31\u628a\u51b2\u7a81\u5411\u91cf\u5411\u53f3\u79fb\u4e24\u4f4d\uff08\u9ad8\u4f4d\u8865 0\uff09\uff0c\u5f97\u5230\u4e86\u65b0\u7684\u51b2\u7a81\u5411\u91cf\uff0c\u5e76\u548c\u672c\u6765\u7684\u51b2\u7a81\u5411\u91cf\u6216\u8d77\u6765\u5f97\u5230 CCV\u3002\uff08\u6ce8\u610f\u8fd9\u91cc\u6700\u5de6\u4fa7\u7684\u4e00\u5217\u8868\u793a\u5411\u53f3\u79fb\u52a8\u4e86\u591a\u5c11\u6b21\uff09</p> <p>\u627e\u5230\u4e86\u4e00\u4e2a\u5faa\u73af\u8c03\u5ea6\uff1a2-2-7</p> </li> <li> <p>State transition graph</p> <p></p> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%202/#8-summary","title":"8 Summary","text":"<p>Summary</p> <ol> <li>How the instruction is executed<ul> <li>Sequential execution</li> <li>Overlap once</li> <li>Second overlap</li> <li>Pipeline</li> </ul> </li> <li>Classification of pipelines<ul> <li>Single function, multi-function</li> <li>Static, dynamic</li> <li>Linear, non-linear</li> <li>In-order, out-of-order</li> </ul> </li> <li>Performance indicators of the pipeline<ul> <li>Throughput rate</li> <li>Speedup ratio effectiveness</li> </ul> </li> <li>Factors affecting the performance of the pipeline<ul> <li>Pipeline design</li> <li>Type of instructions</li> <li>Instructions related<ul> <li>Data dependence</li> <li>Name dependence</li> <li>Control dependence</li> </ul> </li> </ul> </li> <li>Dynamic Branch Prediction<ul> <li>Branch History Table (BHT)</li> <li>Branch-Target Buffer (BTB)</li> </ul> </li> <li>Non-linear pipeline scheduling problem</li> </ol>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/","title":"Memory Hierachy","text":""},{"location":"note/courses/Computer%20Architecture/Chapter%203/#1-introduction","title":"1 Introduction","text":""},{"location":"note/courses/Computer%20Architecture/Chapter%203/#11-memory","title":"1.1 Memory","text":"<p>\u5185\u5b58\u5c42\u6b21\uff1a</p> <ul> <li>Register</li> <li>Cache</li> <li>Memory</li> <li>Storage</li> </ul> <p>\u5b58\u50a8\u6280\u672f\uff1a</p> <ul> <li>Mechanical Memory</li> <li>Electronic Memory<ul> <li>SRAM</li> <li>DRAM<ul> <li>SDRAM </li> <li>DDR</li> </ul> </li> <li>GDRAM<ul> <li>GDDR</li> </ul> </li> <li>HBM</li> <li>EPPROM<ul> <li>NAND</li> <li>NOR</li> </ul> </li> </ul> </li> <li>Optical Memory</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#12-cache-concept","title":"1.2 Cache Concept","text":"<p>Cache: a safe place for hiding or storing things. </p> <p>\u91c7\u7528\u7f13\u51b2\u6280\u672f\u6765\u91cd\u590d\u4f7f\u7528\u9891\u7e41\u51fa\u73b0\u7684\u9879\u76ee\u3002</p> <ul> <li> <p>Cache Hit/Miss: When the processor can/cannot find a requested data item in the cache\u4e00\u4e2a\u5305\u542b\u88ab\u8bf7\u6c42\u5b57\u7684\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u636e\u96c6\u5408\uff0c\u5b83\u4ece\u4e3b\u5185\u5b58\u4e2d\u53d6\u51fa\u5e76\u653e\u5165\u7f13\u5b58\u4e2d\u3002</p> <p>Cache Miss \u4f1a\u5e26\u6765\u989d\u5916\u7684\u5f00\u9500\uff1a\u7531 Latency, Bandwith \u51b3\u5b9a\u3002</p> </li> <li> <p>Cache Block/Line: A fixed-size collection of data containing the requested word, retrieved from the main memory and placed into the cache.</p> </li> <li> <p>Cache Locality: </p> <ul> <li> <p>Temporal locality: need the requested word again soon</p> <p>\u8bbf\u95ee\u8fc7\u8fd9\u4e2a\u6570\u636e\uff0c\u4e4b\u540e\u5f88\u53ef\u80fd\u518d\u6b21\u8bbf\u95ee\u8fd9\u4e2a\u6570\u636e\u3002</p> </li> <li> <p>Spatial locality: likely need other data in the block soon</p> <p>\u8bbf\u95ee\u4e86\u8fd9\u4e2a\u4f4d\u7f6e\uff0c\u4e4b\u540e\u5f88\u53ef\u80fd\u8bbf\u95ee\u4e0b\u4e00\u4e2a\u4f4d\u7f6e\u3002</p> </li> </ul> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#cache-miss","title":"Cache Miss","text":"<p>cache miss \u7684\u65f6\u95f4\u4f9d\u8d56\u4e8e\uff1a</p> <ul> <li>Latency: \u53d6\u56deblock\u4e2d\u7b2c\u4e00\u4e2aword\u7684\u65f6\u95f4</li> <li>Bandwidth: \u53d6\u56deblock\u4e2d\u5269\u4f59word\u7684\u65f6\u95f4</li> </ul> <p>Causes of Cache Misses:</p> <ul> <li>Compulsory: \u5bf9\u4e00\u4e2a\uff08\u6570\u636e\uff09\u5757\u7684\u9996\u6b21\u8bbf\u95ee</li> <li>Capacity: \uff08\u6570\u636e\uff09\u5757\u88ab\u4e22\u5f03\u540e\u53c8\u518d\u6b21\u88ab\u83b7\u53d6</li> <li>Conflict: \u7a0b\u5e8f\u5bf9\u591a\u4e2a\u6765\u81ea\u4e0d\u540c\uff08\u6570\u636e\uff09\u5757\u3001\u4f46\u6620\u5c04\u5230\u7f13\u5b58\u4e2d\u540c\u4e00\u4f4d\u7f6e\u7684\u5730\u5740\u8fdb\u884c\u91cd\u590d\u8bbf\u95ee\u3002</li> </ul> <p>Enhancing Cache Performance:</p> <p>\u5229\u7528\u597d\u5c40\u90e8\u6027\u539f\u5219</p> <ul> <li>\u5927\u591a\u6570\u7a0b\u5e8f\u5e76\u4e0d\u4f1a\u7edf\u4e00\u5730\u8bbf\u95ee\u6240\u6709\u4ee3\u7801\u6216\u6570\u636e</li> <li>\u65f6\u95f4\u5c40\u90e8\u6027\uff1a\u5c06\u6700\u8fd1\u8bbf\u95ee\u8fc7\u7684\u6570\u636e\u9879\u66f4\u9760\u8fd1\u5904\u7406\u5668</li> <li>\u7a7a\u95f4\u5c40\u90e8\u6027\uff1a\u5c06\u6700\u8fd1\u8bbf\u95ee\u8fc7\u7684\u8fde\u7eed\u6570\u636e\u5757\u66f4\u9760\u8fd1\u5904\u7406\u5668</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#13-three-classes-of-computers-with-different-concerns-in-memory-hierarchy","title":"1.3 Three classes of computers with different  concerns in memory hierarchy","text":"<ul> <li>Desktop Computers \u66f4\u5173\u5fc3\u5185\u5b58\u5c42\u6b21\u7ed3\u6784\u7684\u5e73\u5747\u5ef6\u8fdf</li> <li>Server Computers \u5173\u5fc3\u5185\u5b58\u5e26\u5bbd</li> <li>Embedded Computers: \u66f4\u5173\u5fc3\u529f\u7387\u548c\u7535\u6c60\u5bff\u547d</li> </ul> <p>36 terms of Cache</p> <p></p>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#14-enhance-speed-of-memory","title":"1.4 Enhance speed of memory","text":"<p>Component character of hardware: - \u786c\u4ef6\u8d8a\u5c0f\uff0c\u6210\u672c\u8d8a\u9ad8\uff0c\u901f\u5ea6\u8d8a\u5feb - \u66f4\u5927\u7684\u5185\u5b58\u66f4\u4fbf\u5b9c</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#15-the-method-enhance-speed-of-memory","title":"1.5 The method enhance speed of  memory","text":"<p>\u5229\u7528\u5c40\u90e8\u6027\u539f\u5219\uff1a - Temporary locality: \u4f7f\u6700\u8fd1\u8bbf\u95ee\u7684\u6570\u636e\u66f4\u9760\u8fd1\u5904\u7406\u5668 - Spatial locality: \u5c06\u6700\u8fd1\u8bbf\u95ee\u7684\u8fde\u7eed\u6570\u636e\u5757\u79fb\u8fd1\u5904\u7406\u5668</p> <p>The method - Hierarchies bases on memories of different speeds and size - The more closely CPU the level is, the faster the one is. - The more closely CPU the level is, the smaller the one is. - The more closely CPU the level is, the more expensive one is.</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#16-what-is-cache","title":"1.6 What is Cache?","text":"<p>small, fast storage \u7528\u6765\u63d0\u5347slow memory\u7684\u5e73\u5747\u8bbf\u5b58\u65f6\u95f4</p> <p>In computer architecture, almost everything is a cache:</p> <ul> <li>Registers: a cache on variable --sofware managed</li> <li>First-level cache: a cache on second-level cache</li> <li>Second-level: a cache on memory</li> <li>Memory: a cache on disk(virtual memory) = TLB: a cache on page table</li> <li>Branch predictor: a cache on prediction information</li> </ul> <p></p>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#split-vs-unified-cache","title":"Split vs Unified Cache","text":"<p>Unified cache: </p> <ul> <li>\u6240\u6709\u5185\u5b58\u8bf7\u6c42\u90fd\u7ecf\u8fc7\u540c\u4e00\u4e2a\u7f13\u5b58</li> <li>\u9700\u8981\u66f4\u5c11\u7684\u786c\u4ef6\uff0c\u4f46\u662f\u6027\u80fd\u4e5f\u66f4\u5dee</li> </ul> <p>Split cache:</p> <ul> <li>\u5c06\u6307\u4ee4\u548c\u6570\u636e\u5206\u5f00\u5b58\u50a8</li> <li>\u9700\u8981\u66f4\u591a\u7684\u786c\u4ef6\uff0c\u56e0\u6b64\u4e5f\u6709\u4e00\u4e9b\u7b80\u5316\uff08I-cache \u53ea\u8bfb\uff09</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#2-four-questions-for-cache-designers","title":"2 Four Questions for Cache Designers","text":"<p>\u8fd9\u90e8\u5206\u5185\u5bb9\u53ef\u89c1\u8ba1\u7ec4\u7b14\u8bb0</p> <p>Caching is a general concept used in processors, operating systems, file systems, and applications.</p> <ul> <li>Q1: Where can a block be placed in the upper level/main memory? (Block placement)<ul> <li>Fully Associative, Set Associative, Direct Mapped</li> </ul> </li> <li>Q2: How is a block found if it is in the upper level/main memory? (Block identification)<ul> <li>Tag/Block</li> </ul> </li> <li>Q3: Which block should be replaced on a Cache/main memory miss? (Block replacement)<ul> <li>Random, LRU,FIFO</li> </ul> </li> <li>Q4: What happens on a write? (Write strategy)<ul> <li>Write Back or Write Through (with Write Buffer)</li> </ul> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#21-q1-block-placement","title":"2.1 Q1: Block Placement","text":"<ul> <li> <p>Direct mapped</p> <p>\u4e00\u4e2a\u5757\u5728 cache \u4e2d\u6709\u4e00\u4e2a\u56fa\u5b9a\u7684\u4f4d\u7f6e\uff08\u901a\u5e38\u901a\u8fc7\u53d6\u6a21\u5f97\u5230\uff09\u3002</p> <p></p> </li> <li> <p>Fully associative</p> <p>\u5757\u53ef\u4ee5\u653e\u5728 cache \u91cc\u7684\u4efb\u610f\u4f4d\u7f6e\u3002\uff08\u4e0d\u597d\u627e\uff09</p> <p></p> </li> <li> <p>Set associative</p> <ul> <li>\u5757\u53ef\u4ee5\u5728\u4e00\u4e2a\u7ec4\u91cc\u7684\u4efb\u4f55\u4f4d\u7f6e\uff0c\u7ec4\u91cc\u53ef\u4ee5\u653e\u82e5\u5e72\u4e2a\u5757\u3002</li> <li>\u76f4\u63a5\u6620\u5c04\u76f8\u5f53\u4e8e\u4e00\u8def\u7ec4\u76f8\u8054\uff0c\u5168\u76f8\u8054\u76f8\u5f53\u4e8e n \u8def\u7ec4\u76f8\u8054\uff08n \u662f cache \u7684\u5757\u6570\uff09</li> </ul> <p></p> </li> </ul> <p>\u4e00\u822c\u60c5\u51b5\uff0c\\(n\\leq 4\\)</p> <p>4-way Set-associative</p> <p> Why Index With the Middle Bits?</p> <p>\u4f7f\u7528Higher-order bits\u7684\u8bdd\uff0c\u8fde\u7eed\u7684\u5730\u5740\u4f1a\u88ab\u6620\u5c04\u5230\u540c\u4e00\u4e2a\u7ec4\u4e2d\uff0c\u5bfc\u81f4\u51b2\u7a81\u3002</p> <p>The higher the degree of association, the higher the utilization of cache</p> <p>space, the lower the probability of block collision and the lower the</p> <p>failure rate.</p> <p>\u5173\u8054\u5ea6\u8d8a\u9ad8\uff0c\u7f13\u5b58\u7a7a\u95f4\u7684\u5229\u7528\u7387\u5c31\u8d8a\u9ad8\uff0c\u5757\u51b2\u7a81\u7684\u6982\u7387\u5c31\u8d8a\u4f4e\uff0c\u5931\u8d25\u7387\u4e5f\u5c31\u8d8a\u4f4e\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#22-q2-block-identification","title":"2.2 Q2: Block Identification","text":"<p>\u6bcf\u4e2ablock\u6709\u4e00\u4e2a\u5b58\u50a8\u4e3b\u5b58\u4e2dblock\u5730\u5740\u7684 address tag\u3002</p> <p>When checking the cache, \u5904\u7406\u5668\u4f1a\u5c06\u8bf7\u6c42\u7684\u5185\u5b58\u5730\u5740\u4e0ecache tag\u8fdb\u884c\u6bd4\u8f83\uff0c\u5982\u679c\u4e24\u4e2a\u76f8\u540c\uff0ccache hit \u5e76\u4e14\u6570\u636e\u5728cache\u4e2d</p> <p>\u901a\u5e38\uff0c \u6bcf\u4e2acache block \u4e5f\u6709\u4e00\u4e2avalid \u4f4d\u7528\u6765\u5206\u8fa8cache block\u7684\u5185\u5bb9\u662f\u5426\u6709\u6548</p> <p></p> <ul> <li>Index has many bits as log2(#sets(\u7ec4\u76f8\u8054\u4e2d\u7684\u7ec4\u6570\uff0c\u76f4\u63a5\u76f8\u8054\u4e2d\u7684block\u6570))</li> <li>Byte Offset: the byte within the block, has as many bits as log2(size of block)</li> <li>Tag: \u7528\u4e8e\u5339\u914d\uff0caddress_size - index_size - byte_offset_size</li> </ul> <p>Example</p> <p>=== Direct-mapped Cache Example           - \u9996\u5148\u4f7f\u7528\u5730\u5740\u7684\u7ec4\u7d22\u5f15\u90e8\u5206\u6765\u5b9a\u4f4d\u5230\u7f13\u5b58\u4e2d\u7684\u4e00\u4e2a\u7279\u5b9a\u7ec4\u3002     - \u7136\u540e\uff0c\u5728\u8be5\u7ec4\u5185\u5e76\u884c\u6bd4\u8f83\u5730\u5740\u7684\u6807\u8bb0\u90e8\u5206\u548c\u6240\u6709\u7f13\u5b58\u884c\u7684\u6807\u8bb0\uff0c\u5e76\u68c0\u67e5\u6709\u6548\u4f4d\u3002     - \u5982\u679c\u627e\u5230\u5339\u914d\u4e14\u6709\u6548\u7684\u884c\uff0c\u5219\u4e3a\u7f13\u5b58\u547d\u4e2d\u3002     - \u6700\u540e\uff0c\u4f7f\u7528\u5730\u5740\u7684\u5757\u504f\u79fb\u90e8\u5206\u4ece\u547d\u4e2d\u7684\u7f13\u5b58\u884c\u4e2d\u8bfb\u53d6\u5177\u4f53\u7684\u5b57\u3002</p> <p>=== Fully-Associative Cache Example       === 2-way set-Associative Cache      </p> <p></p> <p>\u5148\u7b97index\uff0c\u518d\u7b97offset,\u6700\u540e\u5f97\u51fatag</p> <p>Bits in Cache</p> <p>=== example 1     How many total bits are required for a direct-mapped     cache with 16 KiB of data and four-word blocks, assuming a 64-bit     address?     </p> <p>=== example 2     Consider a cache with 64 blocks and a block size of 16     bytes. To what block number does byte address 1200 map?     </p>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#using-a-finite-state-machine-fsm-to-control-a-simple-cache","title":"Using a Finite State Machine (FSM) to Control a Simple Cache","text":"<p>\u6709\u9650\u72b6\u6001\u673a\uff08FSM\uff09\uff1a\u4e00\u79cd\u65f6\u5e8f\u903b\u8f91\u529f\u80fd\uff0c\u7531\u4e00\u7ec4\u8f93\u5165\u548c\u8f93\u51fa\u3001\u4e00\u4e2a\u5c06\u5f53\u524d\u72b6\u6001\u548c\u8f93\u5165\u6620\u5c04\u5230\u65b0\u72b6\u6001\u7684\u4e0b\u4e00\u72b6\u6001\u51fd\u6570 (next-state function)\uff0c\u4ee5\u53ca\u4e00\u4e2a\u5c06\u5f53\u524d\u72b6\u6001\u548c\uff08\u53ef\u80fd\u5305\u62ec\uff09\u8f93\u5165\u6620\u5c04\u5230\u4e00\u7ec4\u6709\u6548\u8f93\u51fa\u7684\u8f93\u51fa\u51fd\u6570 (output function) \u7ec4\u6210\u3002</p> <p>\u4e0b\u4e00\u72b6\u6001\u51fd\u6570 (next-state function)\uff1a \u4e00\u79cd\u7ec4\u5408\u903b\u8f91\u51fd\u6570\uff0c\u5b83\u6839\u636e\u8f93\u5165\u548c\u5f53\u524d\u72b6\u6001\u6765\u786e\u5b9a\u6709\u9650\u72b6\u6001\u673a\u7684\u4e0b\u4e00\u72b6\u6001\u3002</p> <p></p> <p></p>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#23-q3-block-replacement","title":"2.3 Q3: Block Replacement","text":"<ul> <li>Random replacement - randomly pick any block\uff0c\u6613\u4e8e\u5b9e\u73b0\uff0c\u5185\u5b58\u5757\u7684\u5206\u914d\u5747\u5300\u5730\u5206\u5e03\u5728\u6574\u4e2a\u7f13\u5b58\u4e2d\uff0c\u5b83\u53ef\u80fd\u4f1a\u66ff\u6362\u6389\u4e00\u4e2a\u5373\u5c06\u88ab\u518d\u6b21\u8bbf\u95ee\u7684\u6570\u636e\u5757\uff0c\u8fd9\u5bf9\u6027\u80fd\u5e76\u4e0d\u7406\u60f3\u3002</li> <li> <p>Least-Recently Used (LRU) - pick the block in the set which was least recently accessed</p> <p>\u9700\u8981\u989d\u5916\u7684\u4f4d\u6570\u6765\u8bb0\u5f55\u8bbf\u95ee\u7684\u65f6\u95f4\u3002\u4e00\u822c\u6211\u4eec\u7528\u7684\u662f\u8fd1\u4f3c\u7684 LRU\u3002</p> </li> <li> <p>First In, First Out (FIFO) - Choose a block from the set which was first came into the cache</p> </li> </ul> <p>Strategy of Block Replacement</p> <p>Suppose: </p> <ul> <li> <p>Cache block size is 3, and access sequence is shown as follows.  </p> <p>2, 3, 2, 1, 5, 2, 4, 5, 3, 4</p> </li> <li> <p>FIFO, LRU and OPT are used to simulate the use and replacement of cache block. \uff08OPT \u662f\u4e00\u79cd\u7406\u60f3\u60c5\u51b5\uff0c\u7528\u6765\u8861\u91cf\u7b97\u6cd5\u6027\u80fd\uff09</p> <ul> <li> <p>FIFO</p> <p></p> </li> <li> <p>LRU</p> <p></p> </li> <li> <p>OPT</p> </li> </ul> <p>\u5f53\u9700\u8981\u66ff\u6362\u4e00\u4e2a\u9875\u9762\uff08\u6216\u7f13\u5b58\u5757\uff09\u65f6\uff0c\u9009\u62e9\u672a\u6765\u6700\u957f\u65f6\u95f4\u5185\u4e0d\u4f1a\u88ab\u8bbf\u95ee\u7684\u90a3\u4e2a\u9875\u9762\u8fdb\u884c\u66ff\u6362\u3002</p> <pre><code>&lt;div align = center&gt;&lt;img src=\"https://cdn.hobbitqia.cc/20231028141338.png\" width=40%&gt;&lt;/div&gt;\n</code></pre> </li> </ul> <p>Hit rate is related to the replacement algorithm, the access sequence, the cache block size.</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#231-stack-replacement-algorithm","title":"2.3.1 Stack replacement algorithm","text":"<p>\u6709\u4e9b\u7b97\u6cd5\u968f\u7740 N \u589e\u5927\u547d\u4e2d\u7387\u975e\u4e0b\u964d\uff0c\u6709\u4e9b\u7b97\u6cd5\u968f\u7740 N \u589e\u5927\u547d\u4e2d\u7387\u53cd\u800c\u4f1a\u4e0b\u964d\u3002 \u6211\u4eec\u628a\u968f\u7740N \u589e\u5927\u547d\u4e2d\u7387\u975e\u4e0b\u964d\u7684\u7b97\u6cd5\u79f0\u4e3a stack replacement algorithm\u3002</p> <p>\\(B_t(n)\\) represents the set of access sequences contained in a cache block of size \\(n\\) at time \\(t\\).</p> <ul> <li>\\(B_t(n)\\) is the subset of \\(B_t(n\uff0b1)\\).</li> </ul> <p>LRU replacement algorithm is a stack replacement algorithm, while FIFO is not. For LRU algorithm, the hit ratio always increases with the increase of cache block.</p> <p>Using LRU</p> <p>\u7528\u6808\u6765\u6a21\u62df LRU\uff0c\u6808\u9876\u662f\u6700\u8fd1\u8bbf\u95ee\u7684\uff0c\u6808\u5e95\u662f\u6700\u4e45\u672a\u8bbf\u95ee\u7684\uff0c\u6bcf\u6b21\u8981\u66ff\u6362\u7684\u65f6\u5019\uff0c\u66ff\u6362\u6808\u5e95\u7684\u5143\u7d20\u3002\u901a\u8fc7\u4e0b\u9762\u7684\u56fe\u53ef\u4ee5\u5feb\u901f\u770b\u5230\u6808\u5927\u5c0f\u4e3a n \u65f6\u7684\u547d\u4e2d\u7387\u3002 </p>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#232-lru-implementation-comparison-pair-method","title":"2.3.2 LRU Implementation - Comparison Pair Method","text":"<p>\u5982\u4f55\u53ea\u901a\u8fc7\u95e8\u548c\u89e6\u53d1\u5668\u6765\u5b9e\u73b0 LRU \u7b97\u6cd5\uff1f\u2014\u2014 Comparison Pair Method</p> <ul> <li> <p>Basic idea</p> <p>Let each cache block be combined in pairs, use a comparison pair flip-flop to record the order in which the two cache blocks have been accessed in the comparison pair, and then use a gate circuit to combine the state of each comparison pair flip-flop, you can find the block to be replaced according to the LRU algorithm.</p> <p>\u8ba9\u4efb\u4f55\u4e24\u4e2a cache \u5757\u4e4b\u95f4\u4e24\u4e24\u7ed3\u5bf9\uff0c\u7528\u4e00\u4e2a\u89e6\u53d1\u5668\u7684\u72b6\u6001\u6765\u4ee3\u8868\u8fd9\u4e24\u4e2a\u5757\u7684\u5148\u540e\u8bbf\u95ee\u987a\u5e8f\uff08\u6bd4\u5982 1 \u8868\u793a A \u521a\u88ab\u8bbf\u95ee\uff0c0 \u8868\u793a B \u521a\u88ab\u8bbf\u95ee\uff09\u3002\u901a\u8fc7\u95e8\u7535\u8def\u5bf9\u89e6\u53d1\u5668\u7684\u72b6\u6001\u8fdb\u884c\u903b\u8f91\u7ec4\u5408\uff0c\u627e\u5230\u6700\u4e45\u672a\u88ab\u8bbf\u95ee\u7684\u5757\u3002</p> </li> </ul> <p>Comparison Pair Method</p> <p>\u8fd9\u91cc\u6709 3 \u4e2a cache blocks A, B, C\u3002\u90a3\u4e48\u6211\u4eec\u9700\u8981 3 \u4e2a\u89e6\u53d1\u5668\u6765\u8bb0\u5f55\u4e4b\u95f4\u7684\u72b6\u6001\u3002\u5047\u8bbe \\(T_{AB}=1\\) \u8868\u793a A \u88ab\u66f4\u8fd1\u8bbf\u95ee\uff0c\\(T_{AC}, T_{BC}\\) \u540c\u7406\u3002  </p> <ul> <li> <p>Hardware usage analysis</p> <p>\u5047\u8bbe\u6709 p \u4e2a cache blocks, \u6211\u4eec\u9700\u8981 \\(C_p^2=p\\cdot (p-1)/2\\) \u4e2a\u89e6\u53d1\u5668\u3002\u6bcf\u4e2ablock\u7684\u8f93\u51fa\u5bf9\u5e94\u4e00\u4e2aand\u95e8\uff0c\u5171\u6709p\u4e2a\uff0c\u6bcf\u4e2a\u4e0e\u95e8\u7684\u8f93\u5165\u662f \\(p-1\\) \u4e2a\u89e6\u53d1\u5668\u7684\u8f93\u51fa\u3002 \u5f53 \\(p\\) \u8d85\u8fc7 8 \u65f6\uff0c\u9700\u8981\u7684\u89e6\u53d1\u5668\u8fc7\u591a\uff0c\u8fd9\u4e2a\u7b97\u6cd5\u5c31\u4e0d\u9002\u7528\u4e86\u3002</p> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#24-q4-write-strategy","title":"2.4 Q4: Write Strategy","text":"<ul> <li> <p>Write Hit</p> <ul> <li> <p>Write Through\uff1a\u76f4\u63a5\u5199\u56de\u5230\u5185\u5b58\u3002</p> <p>\u5199\u5230\u5185\u5b58\u7684\u65f6\u95f4\u8f83\u957f\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u9700\u8981 Write Stall\uff0c\u6216\u8005\u4f7f\u7528 Write Buffer\u3002 </p> </li> <li> <p>Write Back\uff1a\u5728 Cache \u4e2d\u5199\uff0c\u540c\u65f6\u901a\u8fc7\u4e00\u4e2a\u989d\u5916\u7684 dirty bit \u8868\u793a\u8fd9\u4e2a\u5757\u5df2\u7ecf\u88ab\u4fee\u6539\u4f46\u5e76\u672a\u5199\u56de\u4e0b\u4e00\u7ea7\u5185\u5b58\u4e2d\u3002</p> </li> </ul> </li> <li> <p>Write Miss</p> <ul> <li>Write Allocate\uff1a\u5c06\u8981\u5199\u7684\u5757\u5148\u8bfb\u5230 Cache \u4e2d\uff0c\u518d\u5199\u3002</li> <li>Write Around\uff1a\u76f4\u63a5\u5199\u5230\u5185\u5b58\u3002</li> </ul> </li> <li>In general, write-back caches use write-allocate , and write-through caches use write-around.</li> </ul> Example <p></p> <p>Read Strategy:</p> <ul> <li>Read through: \u53ef\u4ee5\u76f4\u63a5\u8bfbcache\u5185\u5b58\u4e2d\u7684</li> <li>Read allocate: \u5148\u4ecememory\u4e2d\u8bfb\u5230cache\u4e2d</li> </ul> <p></p>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#3-memory-system-performance","title":"3 Memory System Performance","text":"<p>\u8fd9\u90e8\u5206\u4e5f\u53ef\u89c1\u8ba1\u7ec4\u7b14\u8bb0</p> <p> </p> <p>Example</p> <p></p> <p>How to improve</p> <ul> <li>Reduce the miss penalty\uff1a \u591a\u7ea7\u7f13\u5b58\u3001\u5173\u952e\uff08\u6570\u636e\uff09\u5b57\u4f18\u5148\u3001\u8bfb\u672a\u547d\u4e2d\u4f18\u5148\u4e8e\u5199\u672a\u547d\u4e2d\u5904\u7406\u3001\u5408\u5e76\u5199\u7f13\u51b2\u4ee5\u53ca\u53d7\u5bb3\u8005\u7f13\u5b58</li> <li>Reduce the miss rate\uff1a \u66f4\u5927\u7684\u5757\u5927\u5c0f\u3001\u66f4\u5927\u7684\u7f13\u5b58\u5bb9\u91cf\u3001\u66f4\u9ad8\u7684\u76f8\u8054\u5ea6\u3001\u8def\u9884\u6d4b (way prediction) \u548c\u4f2a\u76f8\u8054 (pseudo-associativity) \u4ee5\u53ca\u7f16\u8bd1\u5668\u4f18\u5316</li> <li>Reduce the time to hit in the cache\uff1a \u5c0f\u578b\u7b80\u5355\u7f13\u5b58\u3001\u907f\u514d\u5730\u5740\u8f6c\u6362\u3001\u6d41\u6c34\u7ebf\u5f0f\u7f13\u5b58\u8bbf\u95ee\u4ee5\u53ca\u8ffd\u8e2a\u7f13\u5b58 (trace caches)</li> <li>Reduce the miss penalty and miss rate via parallelism\uff1a \u975e\u963b\u585e\u7f13\u5b58 (non-blocking caches)\u3001\u786c\u4ef6\u9884\u53d6\u4ee5\u53ca\u7f16\u8bd1\u5668\u9884\u53d6</li> </ul> <p></p> <p></p>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#4-virtual-memory","title":"4 Virtual Memory","text":"<p>Program Uses:</p> <ul> <li>discontiguout memory locations \u975e\u8fde\u7eed\u7684\u5185\u5b58 \u4f4d\u7f6e</li> <li>seconddary/non-memory storage \u4f7f\u7528\u4e8c\u7ea7/\u975e\u5185\u5b58\u5b58\u50a8\uff0c\u7a0b\u5e8f\u7684\u4e00\u90e8\u5206\u6570\u636e\uff08\u5982\u6bb5D\uff09\u53ef\u4ee5\u5b58\u653e\u5728\u78c1\u76d8\u8fd9\u6837\u7684\u4e8c\u7ea7\u5b58\u50a8\u4e2d\uff0c\u800c\u4e0d\u662f\u5fc5\u987b\u5168\u90e8\u5728\u7269\u7406\u5185\u5b58\u91cc\u3002</li> </ul> <p>\u5728\u7a0b\u5e8f\u7684\u4e25\u91cd\uff0c\u6240\u6709\u7684\u6bb5\u90fd\u5728\u4e00\u4e2a\u5de8\u5927\u4e14\u8fde\u7eed\u7684\u5730\u5740\u7a7a\u95f4\u4e2d\uff0c\u4e0d\u5173\u5fc3\u5176\u5728\u7269\u7406\u4e0a\u662f\u600e\u4e48\u5b58\u50a8\u7684</p> <p>\u7a0b\u5e8f\u8ba4\u4e3a\u5b83\u62e5\u6709\u4e00\u4e2a\u6bd4\u5b9e\u9645\u7269\u7406\u5185\u5b58\u5927\u5f97\u591a\u7684\u53ef\u7528\u5185\u5b58\u7a7a\u95f4</p> <p>\u7269\u7406\u5185\u5b58\u6709\u9650\uff0c\u865a\u62df\u5185\u5b58\u8ba9\u7528\u6237\u4f53\u9a8c\u5230\u4e00\u4e2a\u62bd\u8c61\u7684\u66f4\u5927\u7684\u5185\u5b58\u3002</p> <ul> <li> <p>Why virtual memory?</p> <p>\u53ef\u4ee5\u8ba9\u8fdb\u7a0b\u4f7f\u7528\u4e0d\u8fde\u7eed\u7684\u7269\u7406\u5185\u5b58\u7a7a\u95f4\uff08\u865a\u62df\u5730\u5740\u4e0a\u662f\u8fde\u7eed\u7684\uff09\uff1b\u66f4\u597d\u5730\u9694\u79bb\u4e0d\u540c\u8fdb\u7a0b\u3002</p> </li> <li> <p>virtual-physical address translation</p> </li> <li>memory protection/sharing among multi-program</li> </ul> <p>Virtual Memory = Main Memory + Secondary Storage</p> <p>Physical memory allocations need  not to be contiguous</p> <p>\u5185\u5b58\u4fdd\u62a4\uff0c\u8fdb\u7a0b\u9694\u79bb</p> <ul> <li> <p>Virtual Memory Allocation</p> <ul> <li> <p>Paged virtual memory \u9875\u5f0f\u865a\u62df\u5185\u5b58</p> <p>page: fixed-size block</p> </li> <li> <p>Segmented virtual memory \u6bb5\u5f0f\u865a\u62df\u5185\u5b58</p> <p>segment: variable-size block</p> </li> </ul> </li> </ul> <p></p> <p>page address \u901a\u5e38\u7531\u4e00\u4e2aword\u8868\u793a\uff0c\u800csegment address \u901a\u5e38\u7531\u4e24\u4e2aword\u8868\u793a\u3002</p> <p>Paging vs Segmentation (\u9875\u5f0f\u7ba1\u7406\u4e0e\u6bb5\u5f0f\u7ba1\u7406\u7684\u5bf9\u6bd4)</p> \u7279\u5f81 Page (\u9875\u5f0f) Segment (\u6bb5\u5f0f) Words per address (\u6bcf\u4e2a\u5730\u5740\u7684\u5b57\u6570) One (\u4e00\u4e2a) Two (segment and offset) (\u4e24\u4e2a\uff1a\u6bb5\u53f7\u548c\u504f\u79fb\u91cf) Programmer visible? (\u7a0b\u5e8f\u5458\u662f\u5426\u53ef\u89c1\uff1f) Invisible to application programmer (\u5bf9\u5e94\u7528\u7a0b\u5e8f\u5458\u4e0d\u53ef\u89c1) May be visible to application programmer (\u53ef\u80fd\u5bf9\u5e94\u7528\u7a0b\u5e8f\u5458\u53ef\u89c1) Replacing a block (\u66ff\u6362\u4e00\u4e2a\u5757) Trivial (all blocks are the same size) (\u7b80\u5355\uff0c\u56e0\u4e3a\u6240\u6709\u5757\u5927\u5c0f\u76f8\u540c) Hard (must find contiguous, variable-size, unused portion of main memory) (\u56f0\u96be\uff0c\u5fc5\u987b\u627e\u5230\u4e3b\u5b58\u4e2d\u8fde\u7eed\u7684\u3001\u53ef\u53d8\u5927\u5c0f\u7684\u3001\u672a\u4f7f\u7528\u7684\u90e8\u5206) Memory use inefficiency (\u5185\u5b58\u4f7f\u7528\u6548\u7387\u4f4e\u4e0b) Internal fragmentation (unused portion of page) (\u5185\u90e8\u788e\u7247\uff1a\u9875\u5185\u672a\u4f7f\u7528\u7684\u90e8\u5206) External fragmentation (unused pieces of main memory) (\u5916\u90e8\u788e\u7247\uff1a\u4e3b\u5b58\u4e2d\u672a\u4f7f\u7528\u7684\u96f6\u6563\u90e8\u5206) Efficient disk traffic (\u9ad8\u6548\u7684\u78c1\u76d8\u8bfb\u5199) Yes (adjust page size to balance access time and transfer time) (\u662f\uff0c\u8c03\u6574\u9875\u5927\u5c0f\u4ee5\u5e73\u8861\u8bbf\u95ee\u65f6\u95f4\u548c\u4f20\u8f93\u65f6\u95f4) Not always (small segments may transfer just a few bytes) (\u4e0d\u603b\u662f\uff0c\u5c0f\u6bb5\u53ef\u80fd\u53ea\u4f20\u8f93\u51e0\u4e2a\u5b57\u8282) <pre><code>\u5206\u9875\u5f0f\u7684\u6613\u4e8e\u5b9e\u73b0\uff0c\u65b9\u4fbf\u66ff\u6362\u3002\u73b0\u5728\u5e38\u7528\u6bb5\u9875\u5f0f\u7ed3\u5408\uff0c\u6216\u8005\u7eaf\u9875\u5f0f\u3002\n</code></pre>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#41-how-virtual-memory-works","title":"4.1 How virtual memory works?","text":"<p>Cache \u7684\u56db\u4e2a\u95ee\u9898\u5728\u865a\u62df\u5185\u5b58\u4e2d\u90fd\u6709\u5bf9\u5e94\u3002</p> <ul> <li> <p>Q1. Where can a block be placed in main memory?</p> <p>\u7f3a\u5931\u4ee3\u4ef7\u5f88\u9ad8\uff0c\u56e0\u6b64\u6211\u4eec\u91c7\u7528\u5168\u76f8\u8054\u7684\u65b9\u5f0f\uff0c\u4ee5\u964d\u4f4e miss rate\u3002\u64cd\u4f5c\u7cfb\u7edf\u5141\u8bb8\uff08\u6570\u636e\uff09\u5757\u653e\u7f6e\u5728\u4e3b\u5185\u5b58\u4e2d\u7684\u4efb\u4f55\u4f4d\u7f6e</p> </li> <li> <p>Q2. How is a block found if it is in main memory?</p> <p>\u865a\u62df\u5730\u5740\u5206\u4e24\u90e8\u5206\uff0c\u504f\u79fb\u91cf\u548c\u9875\u53f7\u3002\u9875\u53f7\u662f\u9875\u8868\u7684\u7d22\u5f15\u3002 </p> </li> <li> <p>Q3. Which block should be replaced on a virtual memory miss?</p> <p>Least Recently Used (LRU) block, with use/reference bit.\u5f53\u4e00\u4e2a\u9875\u9762\u88ab\u8bbf\u95ee\u65f6\uff0c\u903b\u8f91\u4e0a\uff08\u8be5\u4f4d\uff09\u88ab\u8bbe\u7f6e\u3002\u64cd\u4f5c\u7cfb\u7edf\uff08OS\uff09\u4f1a\u5468\u671f\u6027\u5730\u6e05\u9664\u4f7f\u7528\u4f4d\uff0c\u4e4b\u540e\u518d\u8bb0\u5f55\u5b83\u4eec\uff0c\u4ee5\u4fbf\u8ddf\u8e2a\u6700\u8fd1\u6700\u5c11\u88ab\u5f15\u7528\u7684\u9875\u9762\uff1b</p> </li> <li> <p>Q4. What happens on a write?</p> <p>Write-back strategy, with diry bit. \u5f80disk\u4e0a\u5199\u7684\u4ee3\u4ef7\u592a\u5927</p> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#42-page-table","title":"4.2 Page Table","text":"<ul> <li> <p>Page tables are often large</p> <p>e.g. 32-bit virtual address, 4KB pages, 4 bytes per page table entry. page table size: \\((2^{32}/2^{12}) \\times 2^2 = 2^{22}\\) bytes = \\(4\\) MB</p> </li> <li> <p>page table\u5b58\u50a8\u5728main memory\u4e2d</p> </li> <li> <p>Logically two memory accesses for data access \u4e24\u6b21\u8bbf\u5b58:</p> <ul> <li>one to obtain the physical address from page table;</li> <li>one to get the data from the physical address;</li> </ul> </li> </ul> <p>\u6b63\u5e38\u6765\u8bf4\u9875\u8868\u9700\u8981\u4e24\u6b21\u5185\u5b58\u8bbf\u95ee\uff0c\u8bbf\u95ee\u6548\u7387\u4f4e\u4e0b\uff0c\u56e0\u6b64\u6211\u4eec\u9700\u8981 cache page table\uff0c\u5373 TLB\uff08\u5757\u8868\uff09\u3002</p> <p>Translation lookaside buffer (TLB)</p> <p>\u4e00\u79cd\u7279\u6b8a\u7684\u7f13\u5b58\uff0c\u5b83\u4fdd\u5b58\u4e86\u5148\u524d\u7684\u5730\u5740\u8f6c\u6362\u8bb0\u5f55</p> <ul> <li>tag: portions of the virtual address (VPN);\u865a\u62df\u5730\u5740\u7684\u4e00\u90e8\u5206</li> <li>data: a physical page frame number (PPN), protection field, valid bit, use bit, dirty bit;</li> </ul> <p>Example</p> <p>\u53d1\u9001 tag (VPN) \u5c1d\u8bd5\u5339\u914d\uff0c\u5e76\u770b\u8bbf\u95ee\u7c7b\u578b\u662f\u5426\u8fdd\u89c4\u3002\u5982\u679c\u5339\u914d\u6210\u529f\uff0c\u5c31\u628a\u5bf9\u5e94\u7684 PPN \u9001\u5230 Mux\uff0c\u5c06\u504f\u79fb\u91cf\u52a0\u4e0a PPN \u5f97\u5230\u7269\u7406\u5730\u5740\u3002  </p>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#43-page-size-selection","title":"4.3 Page Size Selection","text":"<ul> <li> <p>Pros of larger page size</p> <ul> <li> <p>Smaller page table, less memory (or other resources used for the memory map);</p> <p>\u9875\u66f4\u5c11\uff0c\u6240\u4ee5\u9875\u8868\u66f4\u5c0f\u3002</p> </li> <li> <p>Larger cache with fast cache hit;</p> <p>\u9875\u66f4\u5927\uff0c\u6240\u4ee5 cache \u547d\u4e2d\u7684\u65f6\u95f4\u66f4\u77ed\uff08\u56e0\u4e3a\u6211\u4eec\u9700\u8981\u904d\u5386\u7684\u9875\u66f4\u5c11\uff09\u3002</p> </li> <li> <p>Transferring larger pages to or from secondary storage is more efficient than transferring smaller pages;</p> <p>\u4e00\u6b21\u642c\u8fd0\u66f4\u591a\u7684\u6570\u636e\uff0c\u6240\u4ee5\u66f4\u9ad8\u6548\uff0c\u5c0f\u9875\u53ef\u80fd\u9700\u8981\u642c\u8fd0\u591a\u6b21\u3002</p> </li> <li> <p>Map more memory, reduce the number of TLB misses;</p> <p>TLB miss \u6b21\u6570\u66f4\u5c11\u3002</p> </li> </ul> </li> <li> <p>Pros of smaller page size</p> <ul> <li> <p>Conserve storage</p> <p>\u8282\u7701\u5b58\u50a8\u7a7a\u95f4</p> <p>When a contiguous region of virtual memory is not equal in size to a multiple of the page size, a small page size results in less wasted storage.</p> <p>\u5f53\u4e00\u4e2a\u8fde\u7eed\u7684\u865a\u62df\u5185\u5b58\u533a\u57df\u7684\u5927\u5c0f\u4e0d\u662f\u9875\u9762\u5927\u5c0f\u7684\u6574\u6570\u500d\u65f6\uff08\u6ca1\u6cd5\u586b\u6ee1\uff09\uff0c\u8f83\u5c0f\u7684\u9875\u9762\u5c3a\u5bf8\u4f1a\u5bfc\u81f4\u66f4\u5c11\u7684\u5b58\u50a8\u7a7a\u95f4\u6d6a\u8d39\u3002</p> </li> </ul> </li> </ul> <p>Use both: multiple page sizes</p> <p>Address Translation</p> <p></p> <p></p>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#44-multiprogramming","title":"4.4 Multiprogramming","text":"<p>\u4f7f\u8ba1\u7b97\u673a\u80fd\u591f\u540c\u65f6\u88ab\u591a\u4e2a\u7a0b\u5e8f\u540c\u65f6\u8fd0\u884c\uff0c\u9700\u8981\u591a\u4e2a\u7a0b\u5e8f\u4e4b\u95f4\u7684\u4fdd\u62a4\u548c\u5171\u4eab</p> <p>process:</p> <p>A running program plus any state needed to continue running it</p> <p>\u4e00\u4e2a\u8fd0\u884c\u4e2d\u7684\u7a0b\u5e8f\u52a0\u4e0a\u4f7f\u4ed6\u8fd0\u884c\u9700\u8981\u7684\u4efb\u4f55\u72b6\u6001</p> <ul> <li>Time-Sharing\uff1a     shares processor and memory with interactive users simultaneously;     gives the illusion that all users have their own computers     \u4e0e\u4ea4\u4e92\u5f0f\u7528\u6237\u540c\u65f6\u5171\u4eab\u5904\u7406\u5668\u548c\u5185\u5b58\u3002</li> <li>Process/Context Switch:     \u4ece\u4e00\u4e2a\u8fdb\u7a0b\u5230\u53e6\u5916\u4e00\u4e2a</li> <li>\u5206\u5272\u4e3b\u5185\u5b58\uff0c\u4ee5\u4fbf\u591a\u4e2a\u4e0d\u540c\u7684\u8fdb\u7a0b\u53ef\u4ee5\u540c\u65f6\u5c06\u5176\u72b6\u6001\u4fdd\u7559\u5728\u5185\u5b58\u4e2d</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u8bbe\u8ba1\u8005\u5fc5\u987b\u4fdd\u8bc1\u8fdb\u7a0b\u4e4b\u95f4\u4e0d\u4f1a\u5e72\u6270\u5f7c\u6b64\u7684\u8ba1\u7b97\uff1b</li> <li>Maintain correct process behavior<ul> <li>computer designer must ensure that the processor portion of the process state can be saved and restored;\u8ba1\u7b97\u673a\u8bbe\u8ba1\u8005\u5fc5\u987b\u786e\u4fdd\u8fdb\u7a0b\u7684\u5904\u7406\u5668\u90e8\u5206\u53ef\u4ee5\u88ab\u4fdd\u5b58</li> </ul> </li> <li>Proprietary page tables \u4e13\u4e1a\u9875\u8868\u3002\u901a\u8fc7\u8ba9\u6bcf\u4e2a\u8fdb\u7a0b\u62e5\u6709\u81ea\u5df1\u7684\u9875\u8868\uff0c\u53ef\u4ee5\u5b9e\u73b0\u8fdb\u7a0b\u95f4\u7684\u4fdd\u62a4\uff0c\u6bcf\u4e2a\u9875\u8868\u6307\u5411\u5185\u5b58\u4e2d\u56fd\u4e0d\u540c \u7684\u9875\u9762\uff0c\u5fc5\u987b\u7ec4\u7ec7\u7528\u6237\u7a0b\u5e8f\u4fee\u6539\u81ea\u8eab\u7684\u9875\u8868</li> <li>Rings:<ul> <li>\u5c06\u5185\u5b58\u8bbf\u95ee\u4fdd\u62a4\u6269\u5c55\u5230\u591a\u4e2a\u7ea7\u522b</li> </ul> </li> <li>Keys and Locks:<ul> <li>\u9664\u975e\u7a0b\u5e8f\u62e5\u6709\u5bc6\u94a5\uff0c\u5426\u5219\u5b83\u65e0\u6cd5\u89e3\u9501\u5bf9\u6570\u636e\u7684\u8bbf\u95ee\u6743\u9650</li> <li>\u4e3a\u4e86\u4f7f\u5bc6\u94a5/\u6743\u80fd\uff08capabilities\uff09\u6709\u6548\uff0c\u786c\u4ef6\u548c\u64cd\u4f5c\u7cfb\u7edf\u5fc5\u987b\u80fd\u591f\u663e\u5f0f\u5730\u5c06\u5b83\u4eec\u4ece\u4e00\u4e2a\u7a0b\u5e8f\u4f20\u9012\u7ed9\u53e6\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u540c\u65f6\u4e0d\u5141\u8bb8\u7a0b\u5e8f\u81ea\u8eab\u4f2a\u9020\u5b83\u4eec</li> </ul> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%203/#5-summary","title":"5 Summary","text":"<p>Summary</p> <ul> <li> <p>Memory hierarchy</p> <ul> <li>From single level to multi level</li> <li>Evaluate the performance parameters of the storage system (average price per bit C; hit rate H; average memory access time T)</li> </ul> </li> <li> <p>Cache basic knowledge</p> <ul> <li>Mapping rules</li> <li>Access method</li> <li>Replacement algorithm</li> <li>Write strategy</li> <li>Cache performance analysis</li> </ul> </li> <li> <p>Virtual Memory (the influence of memory organization structure on Cache failure rate)</p> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%204/","title":"Instruction-Level parallelism(ILP)","text":""},{"location":"note/courses/Computer%20Architecture/Chapter%204/#1-the-classic-five-stage-pipeline-for-a-risc-processor","title":"1 The Classic Five-Stage Pipeline for a RISC Processor","text":"<p>\u91cd\u547d\u540d\u53ef\u4ee5\u7528\u4e8e\u89e3\u51b3Name Dependences</p> <p>A major limitation of simple pipelining techniques:\u4f7f\u7528\u987a\u5e8f\u7684\u53d1\u5c04\u548c\u6267\u884c</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%204/#2-dynamic-scheduling","title":"2 Dynamic Scheduling \u52a8\u6001\u8c03\u5ea6","text":"<p>out-of-order execution \u4f1a\u5bfc\u81f4<code>WAR</code>\u548c<code>WAW</code>\u5192\u9669, \u5728\u4e94\u7ea7\u6d41\u6c34\u7ebf\u4e2d\u4e0d\u5b58\u5728</p> <p>Idea: Dynamic Scheduling</p> <p>Method: out-of-order execution</p> <p>Dynamic Scheduling with scoreboard</p> <p></p> <ul> <li>scoreboard\u7b97\u6cd5\u662f\u4e00\u79cd\u8c03\u5ea6\u6307\u4ee4\u7684\u65b9\u6cd5</li> <li>Robert Tomasulo \u5f15\u5165\u4e86\u786c\u4ef6\u4e2d\u5bc4\u5b58\u5668\u91cd\u547d\u540d\u6765\u6700\u5c0f\u5316   <code>WAR</code>\u548c<code>WAW</code>\u5192\u9669</li> </ul> <p>\u4e3a\u4e86\u80fd\u591f\u5b9e\u73b0\u4e71\u5e8f\u6267\u884c\uff0c\u6211\u4eec\u5c06ID\u9636\u6bb5\u5206\u89e3\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1a</p> <ul> <li>Issue Stage (IS): \u89e3\u7801\u6307\u4ee4\uff0c\u68c0\u67e5\u7ed3\u6784\u51b2\u7a81(in - order issue)</li> <li>Read Operands Stage (RO): Wait \u76f4\u5230\u6ca1\u6709\u6570\u636e\u51b2\u7a81\uff0c \u63a5\u7740\u8bfb\u53d6\u64cd\u4f5c\u6570(out - of - order issue)</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%204/#21-scoreboard","title":"2.1 Scoreboard","text":"<ul> <li>\u529f\u80fd\u5355\u5143\u72b6\u6001\uff1a\u8bb0\u5206\u724c\u662f\u9762\u5411\u529f\u80fd\u90e8\u4ef6\u7684\uff0c\u5728\u8bb0\u5206\u724c\u4e2d\u6bcf\u4e00\u4e2a\u529f\u80fd\u90e8\u4ef6\u90fd\u6709\u4e00\u7ec4\u4fe1\u606f\uff0c\u4fe1\u606f\u5305\u62ec\u90e8\u4ef6\u662f\u5426\u6b63\u5728\u5fd9\u3001\u90e8\u4ef6\u6267\u884c\u7684\u6307\u4ee4\u7c7b\u578b\u3001\u90e8\u4ef6\u73b0\u5728\u9700\u8981\u7684\u6e90\u5bc4\u5b58\u5668\u3001\u90e8\u4ef6\u73b0\u5728\u7684\u76ee\u7684\u5bc4\u5b58\u5668\u3001\u6e90\u5bc4\u5b58\u5668\u662f\u5426\u51c6\u5907\u597d\uff08Rj\u3001Rk \u8868\u793a\uff09\u548c\u5982\u679c\u6e90\u5bc4\u5b58\u5668\u6ca1\u51c6\u5907\u597d\u90e8\u4ef6\u8be5\u5411\u54ea\u91cc\u8981\u6570\u636e\uff08Qj\u3001Qk \u8868\u793a</li> <li>\u5bc4\u5b58\u5668\u7ed3\u679c\u72b6\u6001\uff1a\u91cc\u9762\u4e3b\u8981\u8bb0\u5f55\u5bf9\u4e8e\u67d0\u4e00\u4e2a\u5bc4\u5b58\u5668\uff0c\u662f\u5426\u6709\u90e8\u4ef6\u6b63\u51c6\u5907\u5199\u5165\u6570\u636e\u3002</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%204/#22","title":"2.2 \u53d1\u5c04","text":"<p>\u5bf9\u6307\u4ee4\u8fdb\u884c\u89e3\u7801\uff0c\u5e76\u89c2\u5bdf\u8bb0\u5206\u724c\u4fe1\u606f\uff0c\u4e3b\u8981\u89c2\u5bdf\u5404\u4e2a\u529f\u80fd\u90e8\u4ef6\u7684\u5360\u7528\u60c5\u51b5\uff0c\u548c\u5bc4\u5b58\u5668\u5806\u7684\u5199\u60c5\u51b5\uff0c\u4ee5\u6b64\u6765\u5224\u65ad\u662f\u5426\u53ef\u4ee5\u628a\u89e3\u7801\u5f97\u5230\u7684\u4fe1\u606f\u5b58\u8fdb\u5bf9\u5e94\u7684\u90e8\u4ef6\u5bc4\u5b58\u5668\u3002</p> <p>\u5982\u679c\u6307\u4ee4\u5bf9\u5e94\u7684\u529f\u80fd\u90e8\u4ef6\u7a7a\u95f2\uff0c\u4e14\u6307\u4ee4\u8981\u5199\u7684\u76ee\u6807\u5bc4\u5b58\u5668\u6ca1\u6709\u522b\u7684\u6307\u4ee4\u5c06\u8981\u5199\uff08\u8fd9\u662f\u4e3a\u4e86\u89e3\u51b3 WAW \u5192\u9669\uff09\uff0c\u90a3\u4e48\u9636\u6bb5\u7ed3\u675f\u7684\u65f6\u5019\uff0c\u5c31\u53ef\u4ee5\u628a\u6307\u4ee4\u4fe1\u606f\u5b58\u8fdb\u90e8\u4ef6\u5bc4\u5b58\u5668\uff0c\u540c\u65f6\u6539\u5199\u8bb0\u5206\u724c\uff0c\u628a\u6307\u4ee4\u76f8\u5173\u4fe1\u606f\u8fdb\u5165\u8bb0\u5206\u724c\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%204/#221-summary","title":"2.2.1 Summary","text":"<p>IS\u9636\u6bb5\u80fd\u591f\u8fdb\u5165\u53d6\u51b3\u4e8e\u8fd0\u7b97\u9700\u8981\u7684\u90e8\u4ef6\u662f\u5426\u7a7a\u95f2,\u5982\u679c\u529f\u80fd\u90e8\u4ef6\u88ab\u4e0a\u4e00\u6761\u6307\u4ee4\u5360\u7528\uff0c\u5219\u4e0d\u80fd\u8fdb\u5165IS\u9636\u6bb5\uff0c\u5728\u4e0a\u4e00\u6761\u6307\u4ee4WB\u9636\u6bb5\u5b8c\u6210\u4e4b\u524d\uff0c\u4e0d\u80fd\u8fdb\u5165IS\u9636\u6bb5\u3002</p> <p>RO\u9636\u6bb5\u80fd\u5426\u8fdb\u5165\u53d6\u51b3\u4e8e\u4f9d\u8d56\u7684register\u662f\u5426ready</p> <p>WB\u9636\u6bb5\u80fd\u5426\u8fdb\u5165\u53d6\u51b3\u4e8e\u9700\u8981\u5199\u5165\u7684\u5bc4\u5b58\u5668\u662f\u5426\u8bfb\u8d70</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%204/#23-tomasulos-approach","title":"2.3 Tomasulo's Approach","text":"<p>Tomasulo's Approach</p> <p>consider the following code:  WAW\u548cWAR\u5192\u9669\uff08\u5373name dependency\uff09\u90fd\u53ef\u4ee5\u901a\u8fc7\u5bc4\u5b58\u5668\u91cd\u547d\u540d\u6765\u89e3\u51b3</p> <pre><code>- \u5047\u8bbe\u73b0\u5728\u6709\u4e24\u4e2a\u4e34\u65f6\u5bc4\u5b58\u5668S\u3001T\n- \u8fd9\u4e2a\u6307\u4ee4\u5e8f\u5217\u53ef\u4ee5\u88ab\u91cd\u5199\u4e3a\uff08\u6ca1\u6709\u4efb\u4f55dependencies\uff09\n</code></pre> <p></p> <p>\u7eff\u8272\u7684\u662f\u4fdd\u7559\u6808\uff0c\u53ef\u4ee5\u7528\u4e8e\u5b58\u50a8\u6307\u4ee4\u548c\u91cd\u547d\u540d</p> <ul> <li> <p>It tracks when operands for instructions are available to minimize RAW hazards;</p> </li> <li> <p>It introduces register renaming in hardware to minimize WAW and WAR hazards.</p> </li> </ul> <p>\u5206\u4e3a3\u6b65(Get the next instruction from the head of the instruction queue (FIFO))\uff1a</p> <ul> <li>\u53d1\u5c04\uff1a\u4ece\u6307\u4ee4\u961f\u5217\uff08\u5148\u8fdb\u5148\u51fa\uff09\u7684\u5934\u90e8\u83b7\u53d6\u4e0b\u4e00\u6761\u6307\u4ee4\u3002 </li> <li>\u5982\u679c\u6709\u4e00\u4e2a\u5339\u914d\u7684\u4e14\u4e3a\u7a7a\u7684\u4fdd\u7559\u6808\uff0c\u82e5\u64cd\u4f5c\u6570\u5f53\u524d\u5728\u5bc4\u5b58\u5668\u4e2d\uff0c\u5c31\u5c06\u5e26\u6709\u64cd\u4f5c\u6570\u7684\u6307\u4ee4\u53d1\u5c04\u5230\u8be5\u4fdd\u7559\u6808\u3002 </li> <li>\u5982\u679c\u6ca1\u6709\u7a7a\u7684\u4fdd\u7559\u7ad9\uff0c\u90a3\u4e48\u5c31\u5b58\u5728\u7ed3\u6784\u5192\u9669\uff0c\u5e76\u4e14\u8be5\u6307\u4ee4\u4f1a\u6682\u505c\uff0c\u76f4\u5230\u6709\u4e00\u4e2a\u4fdd\u7559\u7ad9\u6216\u7f13\u51b2\u533a\u88ab\u91ca\u653e\u3002 </li> <li>\u5982\u679c\u64cd\u4f5c\u6570\u4e0d\u5728\u5bc4\u5b58\u5668\u4e2d\uff0c\u8ffd\u8e2a\u5c06\u4f1a\u4ea7\u751f\u8fd9\u4e9b\u64cd\u4f5c\u6570\u7684\u529f\u80fd\u5355\u5143\u3002 </li> </ul> <p>\u8fd9\u4e9b\u6b65\u9aa4\u91cd\u547d\u540d\u4e86\u5bc4\u5b58\u5668\uff0c\u907f\u514d\u4e86</p> <p>Issue \u65f6\u5bc4\u5b58\u5668\u5185\u5bb9\u5c31\u5df2\u7ecf\u88ab\u8bfb\u8d70\u4e86\uff0c\u53ef\u4ee5\u8fdb\u884c\u5199\u5165</p> <p>Execute: </p> <ul> <li>\u5f53\u6240\u6709\u64cd\u4f5c\u6570\u90fd\u7a7a\u95f2\uff0c\u64cd\u4f5c\u53ef\u4ee5\u5728\u5bf9\u5e94\u7684\u529f\u80fd\u5355\u5143\u4e2d\u6267\u884c</li> <li>Load and Store require a two-step execu process:<ul> <li>\u5f53base register\u53ef\u7528\u65f6\uff0c\u8ba1\u7b97effective address(\u662f\u6307\u6307\u4ee4\u5728\u6267\u884c\u65f6\uff0c\u7ecf\u8fc7\u5bfb\u5740\u6a21\u5f0f\u8ba1\u7b97\u540e\u5f97\u5230\u7684\u5b9e\u9645\u5185\u5b58\u5730\u5740\uff0c\u7528\u4e8e\u8bbf\u95ee\uff08\u8bfb\u53d6\u6216\u5199\u5165\uff09\u6570\u636e\u3002\u5b83\u662f\u7a0b\u5e8f\u8fd0\u884c\u65f6\u786e\u5b9a\u7684\u5730\u5740\uff0c\u800c\u4e0d\u662f\u6307\u4ee4\u4e2d\u76f4\u63a5\u7f16\u7801\u7684\u5730\u5740\uff08\u5982\u7acb\u5373\u6570\u6216\u6807\u7b7e\uff09\u3002) </li> </ul> </li> </ul> <p>Write Result:</p> <ul> <li>\u5f53\u7ed3\u679c\u53ef\u83b7\u5f97\u65f6\uff0c\u7ed3\u679c\u4f1a\u88ab\u5199\u5165\u5230Common Data Bus\u4e2d\uff0c\u63a5\u7740\u4eceCDB\u4e2d\u5199\u5165\u5230reservation stations\u4e2d(\u5305\u62ecstore buffers)</li> <li>\u8981\u5199\u5165\u5185\u5b58\u7684\u503c\u5b58\u50a8\u5728store buffer \u4e2d\u76f4\u5230\u8981\u88ab\u5199\u5165\u7684\u503c\u548c\u5730\u5740\u90fd\u53ef\u7528\uff0c\u63a5\u7740\u7ed3\u679c\u5728memory unit\u7a7a\u95f2\u65f6\u88ab\u5199\u5165</li> </ul> <p>There are three tables for Tomasulo's Approach:</p> <ul> <li>Instruction Status Table: \u8fd9\u4e2a\u8868\u4ec5\u4ec5\u7528\u6765\u5e2e\u52a9\u7406\u89e3\u7b97\u6cd5\uff0c\u5e76\u975e\u662f\u786c\u4ef6\u5b9e\u73b0\u7684\u4e00\u90e8\u5206</li> <li>Reservation Stations Table: \u4fdd\u7559\u6bcf\u4e2a\u88ab\u53d1\u5c04\u7684\u64cd\u4f5c\u7684\u72b6\u6001</li> <li>Register status table (Field Qj): The number of the reservation station <ul> <li>\u5b58\u50a8\u5e94\u8be5\u88ab\u5b58\u50a8\u5728\u5bc4\u5b58\u5668\u4e2d\u7684\u64cd\u4f5c</li> </ul> </li> </ul> <p>Each reservation station has 7 fields:</p> <ul> <li>Op: \u539f\u64cd\u4f5c\u4e0a\u7684\u64cd\u4f5c\u6570</li> <li>Qj,Qk: \u4f1a\u4ea7\u751f\u5bf9\u5e94\u7684\u64cd\u4f5c\u6570\u7684\u4fdd\u7559\u7ad9</li> <li>Vj,Vk: \u6e90\u64cd\u4f5c\u6570\u7684\u503c</li> <li>A: \u7528\u6765\u8bb0\u5f55\u8ba1\u7b97store\u548cload\u6307\u4ee4\u7684\u5730\u5740\u9700\u8981\u7684\u4fe1\u606f</li> <li>Busy: \u8be5\u4fdd\u7559\u7ad9\u548c\u5b83\u4f7f\u7528\u7684\u529f\u80fd\u5355\u5143\u662f\u5426\u88ab\u5360\u7528</li> </ul> <p></p>"},{"location":"note/courses/Computer%20Architecture/Chapter%204/#24-hardware-based-speculation","title":"2.4 Hardware-Based Speculation","text":"<p>Cache for uncommitted instruction results:</p> <p>3 fields: instruction type, destination address, value</p> <ul> <li>\u5f53\u6307\u4ee4\u7684execution\u9636\u6bb5\u5df2\u7ecf\u5b8c\u6210\uff0c\u5c06RS\u4e2d\u7684\u503c\u66ff\u6362\u4e3athe number of ROB</li> <li>Increase instruction submission stage</li> <li>ROB\u63d0\u4f9b\u4e86completion\u548c commit \u9636\u6bb5operation\u7684\u6570\u91cf</li> <li>\u5f53\u64cd\u4f5c\u6570\u88ab\u63d0\u4ea4\u4e4b\u540e\uff0c\u7ed3\u679c\u5c31\u4f1a\u88ab\u5199\u56de\u5230\u5bc4\u5b58\u5668\u4e2d</li> <li>\u4ee5\u8fd9\u79cd\u65b9\u5f0f\uff0c\u5f53\u9884\u6d4b\u5931\u8d25\u65f6\uff0c\u5bb9\u6613\u5b58\u50a8\u9884\u6d4b\u6267\u884c\u7684\u6307\u4ee4\uff0c\u5f53\u5f02\u5e38\u53d1\u751f\u65f6\uff0c\u5bb9\u6613\u5b58\u50a8\u72b6\u6001</li> </ul> <ul> <li>Issue: \u4ece instruction queue \u53d6\u6307\u4ee4</li> <li>Execution: \u64cd\u4f5c\u64cd\u4f5c\u6570</li> <li>Write Result: \u5b8c\u6210\u6267\u884c</li> <li>Commit: \u7528reorder result\u66f4\u65b0\u5bc4\u5b58\u5668</li> </ul> <p>\u5c31\u6211\u7684\u7406\u89e3\u800c\u8a00\uff0c\u672c\u6765\u662f\u5728WB\u9636\u6bb5\u76f4\u63a5\u5c06\u7ed3\u679c\u5199\u5165\u5bc4\u5b58\u5668\u5806\uff0c\u5e94\u7528Hardware-based speculation\u540e\uff0cWB\u9636\u6bb5\u7684\u7ed3\u679c\u662f\u5199\u5165\u5230ROB\u4e2d\uff0c\u7b49\u5230commit\u9636\u6bb5\u518d\u5c06ROB\u4e2d\u7684\u7ed3\u679c\u5199\u5165\u5bc4\u5b58\u5668\u5806\u4e2d\u3002</p> <p>Hardware-based speculation combines three key ideas</p> <ul> <li>dynamic branch prediction to choose which instructions to execute</li> <li>speculation to allow the execution of instructions before the control dependences are resolved (with the ability to undo the effects of an incorrectly speculated sequence)\u5373\u52a0\u5165ROB\u7ed9\u4e86\u53cd\u6094\u7684\u4f59\u5730</li> <li>dynamic scheduling to deal with the scheduling of different combinations of basic blocks</li> </ul> <p>\u6267\u884c\u8fc7\u7a0b</p> WB <p>\u91cd\u6392\u5e8f\u7f13\u51b2\u533a\uff08ROB\uff09(Reorder Buffer)\u5728\u6307\u4ee4\u64cd\u4f5c\u5b8c\u6210\u5230\u6307\u4ee4\u63d0\u4ea4\u671f\u95f4\uff0c\u4e34\u65f6\u4fdd\u5b58\u8be5\u6307\u4ee4\u7684\u7ed3\u679c\u3002 ROB\u4e3a\u6307\u4ee4\u63d0\u4f9b\u64cd\u4f5c\u6570\uff0c\u5176\u4f5c\u7528\u7c7b\u4f3c\u4e8eTomasulo\u7b97\u6cd5\u4e2d\u4fdd\u7559\u7ad9\uff08reservation stations\uff09\u7684\u529f\u80fd\u3002</p> Commit <p>\u5b9e\u73b0\u63a8\u6d4b\u6267\u884c\u7684\u6838\u5fc3\u601d\u60f3\u662f\uff1a\u5141\u8bb8\u6307\u4ee4\u4e71\u5e8f\u6267\u884c\uff0c\u4f46\u5f3a\u5236\u6309\u5e8f\u63d0\u4ea4\uff0c\u5e76\u5728\u6307\u4ee4\u63d0\u4ea4\u524d\u963b\u6b62\u4efb\u4f55\u4e0d\u53ef\u9006\u64cd\u4f5c\u3002 \u91cd\u6392\u5e8f\u7f13\u51b2\u533a\uff08ROB\uff09\u901a\u8fc7\u63d0\u4f9b\u989d\u5916\u7684\u5bc4\u5b58\u5668\uff0c\u5176\u4f5c\u7528\u4e0eTomasulo\u7b97\u6cd5\u4e2d\u4fdd\u7559\u7ad9\u6269\u5c55\u5bc4\u5b58\u5668\u96c6\u7684\u65b9\u5f0f\u7c7b\u4f3c\u3002   </p> <p>Hardware-based speculation</p> <p> \u6309\u5e8f Issue/Commit, \u4e71\u5e8fExecution/WriteBack</p> <ul> <li>\u6307\u4ee4\u6309\u7167ROB\u4e2d\u7684\u987a\u5e8f\u6765\u5b8c\u6210</li> <li>\u53ef\u4ee5\u5b9e\u73b0\u7cbe\u786e\u5f02\u5e38</li> <li>\u65b9\u4fbf\u6269\u5c55</li> <li>\u4f46\u662f\u786c\u4ef6\u5b9e\u73b0\u975e\u5e38\u590d\u6742</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%204/#3-exploiting-ilp-using-multiple-issue-and-static-scheduling","title":"3 Exploiting ILP Using Multiple Issue and Static Scheduling","text":"<p>\u591a\u6d41\u51fa\uff0c\u5373\u4e00\u62cd\u53ef\u4ee5\u6d41\u51fa\u591a\u6761\u6307\u4ee4\u3002</p> <ul> <li> <p>Superscalar</p> <ul> <li>\u53ef\u4ee5\u5206\u4e3a\u9759\u6001\u8c03\u5ea6\u8d85\u6807\u91cf\u548c\u52a8\u6001\u8c03\u5ea6\u8d85\u6807\u91cf\u3002\u9759\u6001\u8c03\u5ea6\u662f\u901a\u8fc7\u7f16\u8bd1\u5668\u6765\u5b8c\u6210\u7684\uff0c\u52a8\u6001\u8c03\u5ea6\u662f\u901a\u8fc7\u786c\u4ef6\u6765\u5b8c\u6210\u7684\u3002</li> <li>\u662f\u6700\u6210\u529f\u7684General Computing \u65b9\u6cd5</li> <li>\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u53d1\u5c04\u7684\u6307\u4ee4\u6761\u6570\u53ef\u4ee5\u4e0d\u4e00\u6837\uff081~8\uff09</li> <li>n-issue\uff1a\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u6700\u591a\u53d1\u5c04n\u6761\u6307\u4ee4</li> </ul> </li> <li> <p>VLIW \uff08very long instruction word\uff09</p> <p>\u8d85\u957f\u6307\u4ee4\u5b57\u4e5f\u662f\u901a\u8fc7\u7f16\u8bd1\u5668\u5b8c\u6210\u9759\u6001\u8c03\u5ea6\u3002</p> <p>\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u53d1\u5c04\u7684\u6307\u4ee4\u6761\u6570\u662f\u56fa\u5b9a\u7684\uff084-16\uff09\u3002\u4ed6\u4eec\u7ec4\u6210\u4e00\u6761\u957f\u6307\u4ee4\u6216\u8005\u4e00\u4e2a\u6307\u4ee4\u5305</p> <p>\u5728\u6307\u4ee4\u5305\u4e2d\uff0c\u6307\u4ee4\u95f4\u7684\u5e76\u884c\u901a\u8fc7\u6307\u4ee4\u663e\u793a\u5730\u8868\u8fbe</p> <p>It has been successfully applied to digital signal processing and</p> </li> </ul> <p>SuperScalar &amp; VLIW</p> <p> </p>"},{"location":"note/courses/Computer%20Architecture/Chapter%204/#31-multi-issue-technology-based-on-static-scheduling","title":"3.1 Multi-issue Technology based on Static Scheduling","text":"<p>\u5728\u5178\u578b\u7684\u8d85\u6807\u91cf\u5904\u7406\u5668\u4e2d\uff0c\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u53ef\u4ee5\u53d1\u5c041\u81f38\u6761\u6307\u4ee4\u3002\u6307\u4ee4\u6309\u5e8f\u53d1\u5c04\uff0c\u5e76\u5728\u53d1\u5c04\u65f6\u8fdb\u884c\u51b2\u7a81\u68c0\u6d4b\u3002\u5f53\u524d\u6307\u4ee4\u5e8f\u5217\u4e2d\u9700\u786e\u4fdd\u4e0d\u5b58\u5728\u6570\u636e\u51b2\u7a81\u6216\u8fd1\u4f4d\u51b2\u7a81\u3002</p> <p>\u6307\u4ee4\u987a\u5e8f\u6d41\u51fa\uff0c\u5728\u6d41\u51fa\u65f6\u8fdb\u884c\u51b2\u7a81\u68c0\u6d4b\uff1b\u5728\u5e76\u884c\u7684\u6307\u4ee4\u4e2d\uff0c\u4e0d\u5b58\u5728data conflict and close conflict</p> <pre><code>- **Data conflict**: \u8bfb\u5199\u540c\u4e00\u4e2a\u5bc4\u5b58\u5668\n- **Close conflict**: \u8bfb\u5199\u540c\u4e00\u4e2a\u5bc4\u5b58\u5668\uff0c\u4e14\u8bfb\u64cd\u4f5c\u5728\u5199\u64cd\u4f5c\u4e4b\u524d\n</code></pre> <p>Outgoing Component \u68c0\u6d4b\u7ed3\u6784\u51b2\u7a81\u548c\u6570\u636e\u51b2\u7a81</p> <ul> <li>The first Stage: \u8fdb\u884c\u8f93\u51fa\u5305\u4e2d\u7684\u51b2\u7a81\u68c0\u6d4b\uff0c\u6311\u9009\u53ef\u4ee5\u88ab\u6d41\u51fa\u7684\u8fd9\u4ee4</li> <li>The second Stage: \u68c0\u67e5\u88ab\u6311\u9009\u7684\u6307\u4ee4\u6267\u884c\u65f6\u662f\u5426\u53d1\u751f\u51b2\u7a81</li> </ul> <p>RISC-V\u591a\u53d1\u5c04\u5b9e\u73b0</p> <ul> <li>two instruction flow out every cycle(\u4e00\u4e2ainteger instruction\u548c\u4e00\u4e2afloating point instruction)</li> <li>load ,store, and branch instructions \u662f integer instructions</li> </ul> <p>Claim\uff1aFetch two instructions(64-bit) at the same time and decode two instructions(64-bit)</p> <ul> <li>\u6307\u4ee4\u7684\u52a0\u8f7d\u5305\u62ec\u63a5\u4e0b\u6765\u7684\u6b65\u9aa4\uff1a<ul> <li>\u4ececache\u4e2d\u52a0\u8f7d\u4e24\u6761\u6307\u4ee4</li> <li>\u786e\u5b9a\u8fd9\u4e24\u6761\u6307\u4ee4\u53ef\u4ee5\u6d41\u51fa</li> <li>\u5c06\u6307\u4ee4\u9001\u5230\u5bf9\u5e94\u7684\u529f\u80fd\u5355\u5143</li> </ul> </li> </ul> <p>\u5728\u8fd9\u79cd\u8bbe\u8ba1\u4e0b\uff0c\u9700\u8981\u589e\u52a0\u7684\u786c\u4ef6\u5f88\u5c11\u3002\u6d6e\u70b9\u6570load/store\u65f6\u9700\u8981\u4f7f\u7528integer part,\u4f1a\u589e\u52a0\u6d6e\u70b9\u6570\u5bc4\u5b58\u5668\u7684\u5ef6\u8fdf</p> <p>\u589e\u52a0floating point register\u7684\u8bfb\u5199\u901a\u9053</p> <p>Since the number of instructions in the pipeline has doubled, the directional path has to be increased.</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%204/#32-multi-issue-technology-based-on-dynamic-scheduling","title":"3.2 Multi-issue Technology based on Dynamic Scheduling","text":"<p>Extended Tomasulo Algorithm: \u652f\u63012\u8def\u591a\u53d1\u5c04\uff1b\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u53ef\u4ee5\u53d1\u5c04\u4e24\u6761\u6307\u4ee4\uff0c\u4e00\u4e2a\u662finterger\u6307\u4ee4\uff0c\u4e00\u4e2a\u662f\u6d6e\u70b9\u6307\u4ee4</p> <p>\u4f7f\u7528\u4e24\u79cd\u7b80\u5355\u65b9\u6cd5\uff1a</p> <ul> <li>\u6307\u4ee4\u987a\u5e8f\u6d41\u5411RS\uff0c\u5426\u5219\u7a0b\u5e8fsemantics\u4f1a\u88ab\u7834\u574f</li> <li>\u5c06\u7528\u4e8e\u6574\u6570\u7684\u8868\u7ed3\u6784\u4e0e\u8868\u7ed3\u6784\u5206\u5f00</li> </ul> <p>\u7528\u4e8e\u6d6e\u70b9\u6570\uff0c\u5e76\u5c06\u5b83\u4eec\u5206\u5f00\u5904\u7406\uff0c\u4f7f\u4e00\u4e2a\u6d6e\u70b9\u6307\u4ee4\u548c\u4e00\u4e2a\u6574\u6570\u6307\u4ee4\u53ef\u4ee5\u540c\u4e00\u65f6\u95f4\u5404\u81ea\u53d1\u9001\u81f3\u4fdd\u7559\u7ad9\u3002</p> <p>Extended Tomasulo Algorithm</p> Question:SolutionAnalysis <p>For the RISC-V pipeline that uses the Tomasulo algorithm and multiissue technology, consider the following simple loop execution. This program adds the scalar in X2 to each element of a vector. <pre><code>    ld x2, 0(x1) //X2=array element\n    addi x2, x2, 1 //increment X2\n    sd x2, 0(x1) //store X2\n    addi x1,x1,8//increment pointer by 8 (each data occupies 8 bytes)\n    bne x2,x3,loop //branch if not equal\n</code></pre> Now make the following assumptions:</p> <ul> <li>\u6bcf\u4e2a\u5468\u671f\u4e00\u4e2a\u6574\u6570\u6307\u4ee4\u548c\u4e00\u4e2a\u6d6e\u70b9\u6570\u6307\u4ee4\uff0c\u5373\u4f7f\u4ed6\u4eec\u5173\u8054</li> <li>\u4e00\u4e2a\u505a\u6574\u6570ALU\u64cd\u4f5c\u548c\u5730\u5740\u8ba1\u7b97\u7684\u6574\u6570\u5355\u5143\uff0c\u5bf9\u4e8e\u6bcf\u4e00\u79cd\u7c7b\u578b\u7684\u6d6e\u70b9\u6570\u64cd\u4f5c\uff0c\u6709\u4e00\u4e2a\u72ec\u7acb\u7684\u6d6e\u70b9\u5355\u5143</li> <li>\u6307\u4ee4\u53ef\u4ee5\u6d41\u51fa\u548c\u5199\u5165\u7ed3\u679c\u82b1\u8d391\u4e2a\u5468\u671f</li> <li>\u6709\u52a8\u6001\u5206\u652f\u9884\u6d4b\u5355\u5143\u548c\u4e00\u4e2a\u72ec\u7acb\u7684\u529f\u80fd\u5355\u5143\u6765\u8ba1\u7b97\u5206\u652f\u60c5\u51b5</li> <li>Branch instructions flowed out separately, no delayed branch was used, but branch prediction was perfect. Before the branch instruction is completed, its subsequent instructions can only be fetched and flowed out, but cannot be executed</li> </ul> <p>\u7531\u4e8e\u5199\u56de\u64cd\u4f5c\u5360\u636e\u4e00\u4e2a\u5468\u671f\uff0c\u4ea7\u751f\u7ed3\u679c\u7684\u5ef6\u8fdf\u662f\uff1a 1 cycle for operation, 2 cycles for load, 3 cycles for floating point addition</p> <p>List the issue of each instruction in the first three loops of the program, start execution, and write the results to the CDB.</p> <p>\u5728\u6267\u884c\u65f6\uff0cloop\u4f1a\u52a8\u6001\u5c55\u5f00\uff0c\u5728\u4efb\u4f55\u53ef\u80fd\u7684\u65f6\u5019\u4e24\u6761\u6307\u4ee4\u4f1a\u4e00\u8d77\u53d1\u5c04\u3002 For ease of analysis, the time when the memory fetch occurs is listed in the table. The running result is shown in the figure below.  \u53ef\u4ee5\u770b\u5230\uff0cdata-dependent branches \u548c ALU components\u6210\u4e3a\u4e86\u74f6\u9888</p> <p>Solution: add an adder to separate the ALU function from the address calculation function</p> <p></p> <ul> <li>In this case , \u5728\u5206\u652f\u6210\u4e3a\u74f6\u9888\u7684\u65f6\u5019\uff0cspeculation \u5f88\u6709\u7528</li> <li>\u8fd9\u4e2a\u4f18\u52bf\u5efa\u7acb\u5728\u6b63\u786e\u7684\u5206\u652f\u9884\u6d4b\u4e0a</li> <li>\u9519\u8bef\u7684\u5206\u652f\u9884\u6d4b\u65e0\u6cd5\u63d0\u9ad8\u6027\u80fd\uff0c\u53cd\u800c\u5f71\u54cd\u6027\u80fd\u5e76\u6781\u5927\u964d\u4f4e\u80fd\u6548</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%204/#33-vlim","title":"3.3 VLIM","text":"<ul> <li>VLIW: Very Long Instruction Word</li> </ul> <p>Assemble multiple instructions that can be executed in parallel into a very long instruction (more than 100 bits to hundreds of bits).</p> <p>\u6307\u4ee4\u88ab\u5212\u5206\u4e3a\u591a\u4e2afields, \u6bcf\u4e2afield\u53eb\u505a\u4e00\u4e2aoperaion slot, \u76f4\u63a5\u72ec\u7acb\u63a7\u5236\u4e00\u4e2a\u529f\u80fd\u5355\u5143</p> <p>\u5728VLIW\u4e2d\uff0c\u6240\u6709\u7684\u52a0\u8f7d\u548c\u6307\u4ee4\u5b89\u6392\u7531\u7f16\u8bd1\u5668\u5b8c\u6210</p> <p>\u5728\u7f16\u8bd1\u65f6\uff0c\u4e0d\u76f8\u5173\u7684\u64cd\u4f5c\u53ef\u4ee5\u5e76\u884c\u6267\u884c\uff0c\u88ab\u5408\u5e76\u4e3a\u4e00\u4e2a\u6307\u4ee4\u5305with multiple operation segments</p> <p></p> <p>!!! example the unrolled version of the loop <code>x[i] = x[i] + 1</code> </p> <p>some problems with VLIW - \u4ee3\u7801\u5927\u5c0f\u589e\u52a0 - Lockstep mechanism - Machine code incompatibility</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%204/#34-super-pipelined","title":"3.4 Super Pipelined","text":"<ul> <li>\u6bcf\u4e2a\u6d41\u6c34\u7ebf\u9636\u6bb5\u88ab\u8fdb\u4e00\u6b65\u5212\u5206\uff0c\u4ee5\u81f3\u4e8e\u591a\u6761\u6307\u4ee4\u53ef\u4ee5\u5728\u540c\u4e00\u65f6\u949f\u5468\u671f\u5185time-shared</li> <li>\u5728\u4e00\u4e2a\u5468\u671f\u80fd\u6d41\u51fan\u6761\u6307\u4ee4\u7684super pipelined processor\u4e2d\uff0cn\u6761\u6307\u4ee4\u4e0d\u662f\u5728\u540c\u4e00\u65f6\u95f4\u6d41\u51fa\u7684\uff0c\u800c\u662f\u6bcf1/n\u5468\u671f\u6d41\u51fa\u4e00\u6761\u6307\u4ee4</li> <li>the time-space diagram of a super pipelined processor that isuues 2 instructions per cycle</li> </ul> <p>\u2022 A pipeline processor with 8 or more instruction pipeline stages is called a superpipelining processor</p> <p>Example</p> <ul> <li>2 caches in the R4000 microprocessor chip<ul> <li>instruction cache</li> <li>data cache</li> <li>the capacity is 8kB</li> <li>the data with of each Cache is 64b</li> </ul> </li> <li>Core processing components: integer components<ul> <li>a 32*32 bit general register bank</li> <li>An ALU</li> <li>A dedicated Multiplition/division unit </li> </ul> </li> <li>IF: first half fetch,\u5728\u6b64\u65f6\u9009\u62e9PC\uff0c\u540c\u65f6\u521d\u59cb\u5316 I cache \u52a0\u8f7d</li> <li>IS: second half fetch, \u5b8c\u6210 I cache \u7684\u52a0\u8f7d</li> <li>RF: Instruction decode and register fetch, hazard checking , and instrction cache hit detection</li> <li>EX: Execute, effective address calculation, ALU operaion, and branch-target calculation and condition evaluation</li> <li>DF: Data fetch, first half of data cache access</li> <li>DS: second half of data cache access, completion fo data cache access</li> <li>TC: Tag check , \u786e\u8ba4D cache \u662f\u5426\u547d\u4e2d</li> <li>WB: Write back, write back for loads and register-register operations</li> </ul> <p> </p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/","title":"DLP and TLP","text":"<p>\u5728\u5176\u4e2d\u8bbe\u7f6e\u4e86\u77e2\u91cf\u6570\u636e\u8868\u793a\u548c\u76f8\u5e94\u77e2\u91cf\u6307\u4ee4\u7684\u6d41\u6c34\u7ebf\u5904\u7406\u5668\u79f0\u4e3avector processor, \u5bf9\u5e94\u6ca1\u6709\u7684\u5219\u88ab\u79f0\u4e3ascalar processor</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#1-simd-vector-processor","title":"1 SIMD: vector processor","text":"<p>vector pipeline\u7684\u7279\u70b9\uff1a</p> <ul> <li>The elements in the vector are rarely correlated during operations. vector\u4e2d\u7684\u5143\u7d20\u5728\u6267\u884c\u65f6\u76f8\u4e92\u4e0d\u5173\u8054</li> <li> <p>Improper vector handling can also cause related problem and frequent function switching;</p> </li> <li> <p>SIMD architectures can exploit significant data-level parallelism</p> <ul> <li>Matrix-oriented scientific computing</li> <li>Media-oriented image and sound processors</li> </ul> </li> <li> <p>SIMD is more energy efficient than MIMD</p> </li> <li>SIMD allows programmer to continue to think sequentially</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#11-vector-processor-scalar-processor","title":"1.1 Vector Processor &amp; Scalar Processor","text":"<p>Problems to be solved by vector pipeline processing: \u5982\u4f55\u5904\u7406\u5411\u91cf\u548carrays\u4e2d\u7684\u6570\u636e,\u6765\u6700\u5927\u5316\u6d41\u6c34\u7ebf\u7684\u6548\u7387</p> <ul> <li>A pipeline processor, in which the vector data representation and the corresponding vector instructions are set, is called the vector processor.</li> <li>A pipeline processor that does not have vector data representation and corresponding vector instructions is called a scalar processor.</li> </ul> <p>\u5728\u5176\u4e2d\u8bbe\u7f6e\u4e86\u77e2\u91cf\u6570\u636e\u8868\u793a\u548c\u76f8\u5e94\u77e2\u91cf\u6307\u4ee4\u7684\u6d41\u6c34\u7ebf\u5904\u7406\u5668\u79f0\u4e3avector processor, \u5bf9\u5e94\u6ca1\u6709\u7684\u5219\u88ab\u79f0\u4e3ascalar processor</p> <p>\u901a\u5e38\u6709\u4e09\u79cd\u5904\u7406\u6a21\u5f0f\uff1a</p> <ul> <li> <p>Horizontal processing method</p> <ul> <li> <p>Vector calculations are performed horizontally from left to right in a row.</p> <p>\u6a2a\u5411\u8ba1\u7b97\uff0c\u4ece\u5de6\u5230\u53f3\uff0c\u9010\u4e2a\u8ba1\u7b97\u51fa\u540e\u518d\u8fdb\u884c\u4e0b\u4e00\u884c\u3002 \u65f6\u95f4\u5e76\u884c\uff1a\u5c06\u5411\u91cf\u4e2d\u7684\u5143\u7d20\u6309\u7167\u987a\u5e8f\u9010\u4e2a\u9001\u5165\u5355\u5143\u8fdb\u884c\u8ba1\u7b97</p> </li> <li> <p>Problems with horizontal processing:</p> <ul> <li>When calculating each component, RAW correlation occurs, and the pipeline efficiency is low.</li> <li> <p>If a static multi-functional pipeline is used, the pipeline must be switched frequently; the throughput  of the pipeline is lower than that of sequential serial execution.</p> <p>\u5982\u679c\u662f\u9759\u6001\u7684\u591a\u529f\u80fd\u6d41\u6c34\u7ebf\uff0c\u6211\u4eec\u6bcf\u6b21\u90fd\u8981\u6392\u7a7a\u624d\u80fd\u8fdb\u884c\u4e0b\u4e00\u6b21\u8fd0\u7b97\uff0c\u8fd9\u6837\u7684\u6548\u7387\u5f88\u4f4e\u3002</p> </li> <li> <p>The horizontal processing method is not suitable for vector processors.</p> </li> </ul> </li> </ul> </li> <li> <p>Vertical processing method</p> <p>The vector calculation is performed vertically from top to bottom in a column  manner.\u4ece\u9876\u5230\u5e95\u8fdb\u884c\u8ba1\u7b97</p> <p>Data related: 1 times Function switching: 2 times</p> <p>Requirements for processor structure: memory-memory structure</p> <p>\u6e90\u5411\u91cf\u548c\u76ee\u6807\u5411\u91cf\uff0c\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\uff0c\u5904\u7406\u5668\u4e0d\u4f1a\u9884\u5148\u5c06\u6240\u6709\u6570\u636e\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668\u3002\u64cd\u4f5c\u7684\u4e2d\u95f4\u7ed3\u679c\u4e5f\u9700\u8981\u53d1\u9001\u56de\u5185\u5b58</p> <p></p> <p>\u2022The source vector and destination vector of the vector instruction are stored in the memory, and the intermediate result of the operation needs to be sent back to the memory.</p> </li> <li> <p>Horizontal and vertical processing method(group processing method)</p> <ul> <li>Requirements for Processor Structure: Register - Register structure</li> <li>\u8bbe\u7f6e\u53ef\u5feb\u901f\u8bbf\u95ee\u7684\u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u4ee5\u5b58\u50a8\u6e90\u5411\u91cf\u3001\u76ee\u6807\u5411\u91cf\u548c\u4e2d\u95f4\u7ed3\u679c\uff0c\u4f7f\u7b97\u672f\u5206\u91cf\u7684\u8f93\u5165\u7aef\u548c\u8f93\u51fa\u7aef\u4e0e\u5411\u91cf\u5bc4\u5b58\u5668\u8fde\u63a5\uff0c\u5f62\u6210\u5bc4\u5b58\u5668-\u5bc4\u5b58\u5668\u7c7b\u578b\u7684\u4f5c\u6d41\u6c34\u7ebf\u3002</li> </ul> </li> </ul> <p>Example</p> <p>D = A \\(\\times\\) (B + C) A, B, C, D \u2500\u2500 vector of length N</p> <ul> <li> <p>Horizontal processing method</p> <p>\u5148\u8ba1\u7b97 \\(d_1\\leftarrow a_1\\times(b_1 +c_1)\\)\uff0c\u518d\u8ba1\u7b97 \\(d_2\\leftarrow a_2\\times(b_2 +c_2)\\)\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002\u5199\u4f5c\u5faa\u73af\u53ef\u4ee5\u5199\u4f5c\uff1a</p> \\[ \\begin{aligned} k_i &amp; \\leftarrow b_i+c_i\\\\ d_i &amp; \\leftarrow a_i \\times k_i \\end{aligned} \\] <p>\u5faa\u73af\u91cc\u7684\u4e24\u4e2a\u8bed\u53e5\u5b58\u5728\u6570\u636e\u76f8\u5173\u3002\u56e0\u6b64\u6709 N \u4e2a\u6570\u636e\u76f8\u5173\uff0c\u9700\u8981\u8fdb\u884c 2N \u6b21\u529f\u80fd\u5207\u6362\u3002</p> </li> <li> <p>Vertical processing method</p> <p>\u5148\u8ba1\u7b97\u52a0\u6cd5\uff0cB+C \u5f97\u5230\u4e00\u4e2a\u5411\u91cf K\uff0c\u518d\u8ba1\u7b97\u4e58\u6cd5\uff0cA*K \u5f97\u5230 D\u3002</p> \\[ \\begin{aligned} K &amp; \\leftarrow B + C\\\\ D&amp; \\leftarrow A\\times K \\end{aligned} \\] <p>\u8fd9\u91cc\u53ea\u6709 1 \u4e2a\u6570\u636e\u76f8\u5173\uff0c2 \u6b21\u529f\u80fd\u5207\u6362\u3002</p> </li> <li> <p>Horizontal and vertical processing method</p> <p>\u5982\u679c N \u592a\u5927\u4e86\uff0c\u6211\u4eec\u4e0d\u80fd\u7528\u4e00\u4e2a\u5411\u91cf\u6765\u76f4\u63a5\u88c5\u4e0b\u6240\u6709\u6570\u636e\uff0c\u5c31\u9700\u8981\u591a\u6b21\u8fd0\u7b97\u3002\u5047\u8bbe \\(N=S\\times n +r\\)\uff0c\u5373\u6211\u4eec\u628a N \u4e2a\u6570\u636e\u5206\u6210\u4e86 S \u7ec4\uff0c\u6bcf\u7ec4\u6709 n \u4e2a\u6570\u636e\uff0c\u6700\u540e\u4e00\u7ec4\u6709 r \u4e2a\u6570\u636e\u3002\u7ec4\u5185\u505a\u7eb5\u5411\u8fd0\u7b97\uff0c\u7ec4\u95f4\u505a\u6a2a\u5411\u8fd0\u7b97\u3002</p> <p>Data Related: S+1 Function Switching: 2(S+1)</p> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#12-vector-processor-example-cray-1","title":"1.2 Vector Processor Example - Cray-1","text":"<p>\u6709 8 \u4e2a\u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u6bcf\u7ec4\u5411\u91cf\u5bc4\u5b58\u5668\u6709 64 \u4f4d\u3002\u6709 12 \u6761\u5355\u529f\u80fd\u6d41\u6c34\u7ebf\uff0c\u53ef\u4ee5\u5e76\u884c\u5de5\u4f5c\u3002 </p> <p>Each vector register Vi has a separate bus connected to 6 vector functional units.</p> <p>\u6bcf\u4e2a\u77e2\u91cf\u51fd\u6570\u5355\u5143\u8fd8\u5177\u6709\u4e00\u6761\u603b\u7ebf\uff0c\u8be5\u603b\u7ebf\u5c06\u4f5c\u7ed3\u679c\u8fd4\u56de\u5230\u77e2\u91cf\u5bc4\u5b58\u5668\u603b\u7ebf\u3002</p> <p>\u53ea\u8981\u6ca1\u6709 Vi \u51b2\u7a81\u548c\u529f\u80fd\u51b2\u7a81\uff0c\u6bcf\u4e2a Vi \u548c\u6bcf\u4e2a\u529f\u80fd\u5355\u5143\u90fd\u53ef\u4ee5\u5e76\u884c\u5de5\u4f5c\uff0c\u5927\u5927\u52a0\u5feb\u4e86\u5411\u91cf\u6307\u4ee4\u7684\u5904\u7406\u901f\u5ea6\u3002</p> <p>\u4e0d\u540c\u7684\u529f\u80fd\u9700\u8981\u7684\u62cd\u6570\u4e0d\u540c\u3002</p> <p>\u5411\u91cf\u7684\u6307\u4ee4\u4e5f\u662f\u53ef\u80fd\u5b58\u5728\u76f8\u5173\u6027\uff1a  </p> <ul> <li> <p>Vi conflict: The source vector or result vector of each vector instruction working in parallel uses the same Vi.</p> <p>\u5f53\u5411\u91cf\u5bc4\u5b58\u5668\u6709\u4f9d\u8d56\u7684\u65f6\u5019\uff0c\u540e\u7eed\u6307\u4ee4\u8981\u5728\u524d\u9762\u6307\u4ee4\u7684\u7ed3\u679c\u51fa\u6765\u4e4b\u540e\u518d\u6267\u884c\u3002\u8fd9\u91cc\u5e76\u4e0d\u662f\u7b49\u524d\u9762\u7684\u5411\u91cf\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\u90fd\u8ba1\u7b97\u5b8c\uff0c\u800c\u662f\u7b49\u524d\u9762\u7684\u5411\u91cf\u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u8ba1\u7b97\u5b8c\u5c31\u5f00\u59cb\u8ba1\u7b97\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u540e\u7eed\u6307\u4ee4\uff0c\u7b49\u7b2c\u4e8c\u4e2a\u5143\u7d20\u8ba1\u7b97\u5b8c\u5c31\u5f00\u59cb\u8ba1\u7b97\u7b2c\u4e8c\u4e2a\u5143\u7d20\u7684\u540e\u7eed\u6307\u4ee4\uff0c\u4ee5\u6b64\u7c7b\u63a8\u3002</p> <ul> <li> <p>Writing and reading data related</p> \\[ \\begin{aligned} V0 &amp; \\leftarrow V1+V2\\\\ V3&amp; \\leftarrow V0\\times V4 \\end{aligned} \\] </li> <li> <p>Reading data related</p> \\[ \\begin{aligned} V0 &amp; \\leftarrow V1+V2\\\\ V3&amp; \\leftarrow V4\\times V0 \\end{aligned} \\] </li> </ul> </li> <li> <p>Functional conflict: Each vector instruction working in parallel must use the same functional unit.</p> \\[ \\begin{aligned} V3 &amp; \\leftarrow V1\\times V2\\\\ V5&amp; \\leftarrow V4\\times V6 \\end{aligned} \\] <p>\u5982\u679c\u6211\u4eec\u53ea\u6709\u4e00\u4e2a\u4e58\u6cd5\u90e8\u4ef6\uff0c\u5c31\u4f1a\u6709\u7ed3\u6784\u51b2\u7a81\u3002\u6211\u4eec\u53ea\u80fd\u7b49\u524d\u4e00\u6761\u6307\u4ee4\u5168\u90e8\u5b8c\u6210\uff08\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u505a\u5b8c\u624d\u53ef\u4ee5\uff09\uff0c\u624d\u80fd\u5f00\u59cb\u4e0b\u4e00\u6761\u6307\u4ee4\u3002</p> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#121-instruction-types-of-cray-1","title":"1.2.1 Instruction Types of CRAY-1","text":"<p>\u5411\u91cf\u52a0\u6cd5\u9700\u8981 6 \u62cd\uff1b\u4e58\u6cd5\u9700\u8981 7 \u62cd\uff1b\u8bfb\u5199\u9700\u8981 6 \u62cd\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#122-improve-the-performance-of-vector-processor","title":"1.2.2 Improve the Performance of Vector Processor","text":"<ul> <li>Set up multiple functional units and make them work in parallel.\u8bbe\u7f6e\u591a\u4e2a\u529f\u80fd\u90e8\u4ef6\u4f7f\u5176\u5e76\u884c\u5de5\u4f5c</li> <li>Use link technology to speed up the execution of a string of vector instructions.\u4f7f\u7528\u5411\u91cf\u94fe\u63a5\u6280\u672f</li> <li>Adopt recycling mining technology to speed up recycling processing.\u4f7f\u7528\u5faa\u73af\u6316\u6398\u57fa\u7840\u6765\u52a0\u901f\u5bfb\u51fa\u5904\u7406\u3002</li> <li>Using a multi-processor system to further improve the performance.\u4f7f\u7528\u591a\u5904\u7406\u5668\u7cfb\u7edf\u8fdb\u4e00\u6b65\u63d0\u9ad8\u6027\u80fd</li> </ul> <p>1. Set up multiple functional units and make them work in parallel:     \u6bd4\u5982 CRAY-1 vector processor \u6709\u56db\u7ec4 12\u4e2a\u5355\u529f\u80fd\u6d41\u6c34\u7ebf\u90e8\u4ef6\uff1a     - Vector components     - Floating point components     - Scalar components     - Address calculation components</p> <p>2.Use link technology to speed up the execution of a string of a string of vector instruction:</p> <p>Link feature: It has two related instructions that are written first and then read. In the case of no conflicts between functional components and source vector conflicts, functional components can be linked for pipeline processing to achieve the purpose of speeding up execution.  </p> <p>\u94fe\u63a5\u7279\u6027\uff1a\u5b83\u6709\u4e24\u4e2a\u76f8\u5173\u7684\u6307\u4ee4\uff0c\u5148\u5199\u5165\u7136\u540e\u8bfb\u53d6\u3002\u5728\u529f\u80fd\u90e8\u4ef6\u548c\u6e90\u5411\u91cf\u6ca1\u6709\u51b2\u7a81\u7684\u60c5\u51b5\u4e0b\uff0c\u529f\u80fd\u90e8\u4ef6\u53ef\u4ee5\u88ab\u94fe\u63a5\u8d77\u6765\u8fdb\u884c\u6d41\u6c34\u7ebf\u5904\u7406\uff0c\u4ee5\u8fbe\u5230\u52a0\u901f\u6267\u884c\u7684\u76ee\u7684\u3002</p> <p>\u5982\u679c\u6211\u4eec\u6709\u4e24\u6761\u6307\u4ee4\uff0c\u7b2c\u4e00\u6761\u6307\u4ee4\u7684\u7ed3\u679c\u662f\u7b2c\u4e8c\u6761\u6307\u4ee4\u7684\u8f93\u5165\uff0c\u90a3\u4e48\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u8fd9\u4e24\u6761\u6307\u4ee4\u94fe\u63a5\u8d77\u6765\uff0c\u8fd9\u6837\u5c31\u53ef\u4ee5\u51cf\u5c11\u4e00\u6b21\u8bfb\u5199\u7684\u65f6\u95f4\u3002</p> <p>Use link technology to perform vector operations on CRAY-1</p> <p>D = A \\(\\times\\) (B + C) A, B, C, D \u2500\u2500 vector of length N\uff0c\u5047\u8bbe \\(N\\leq 64\\)\uff0c\u5747\u4e3a\u6d6e\u70b9\u6570\uff0cB \u548c C \u5df2\u7ecf\u88ab\u5b58\u5728 V0 \u548c V1 \u4e2d\u3002</p> <p><pre><code>V3 &lt;- memory    // access vector A\nV2 &lt;- V0 \uff0b V1  // Vector B and Vector C perform floating point addition\nV4 &lt;- V2 * V3   // Floating point multiplication, the result is stored in V4\n</code></pre> \u8fd9\u91cc\u524d\u4e24\u6761\u6307\u4ee4\u6ca1\u6709\u51b2\u7a81\uff0c\u53ef\u4ee5\u5e76\u884c\u5b8c\u6210\u3002\u7b2c\u4e09\u6761\u6307\u4ee4\u9700\u8981\u7b49\u524d\u4e24\u6761\u6307\u4ee4\u5b8c\u6210\uff0c\u5b58\u5728 RAW\uff0c\u4e0d\u80fd\u5e76\u884c\u4f46\u53ef\u4ee5\u94fe\u63a5\u3002</p> <p>\u8fd9\u91cc\u5047\u8bbe\u628a\u6570\u636e\u4ece\u5bc4\u5b58\u5668\u9001\u5230\u529f\u80fd\u90e8\u4ef6\u9700\u8981\u4e00\u62cd\uff0c\u529f\u80fd\u90e8\u4ef6\u7684\u7ed3\u679c\u5199\u56de\u5230\u5bc4\u5b58\u5668\u4e5f\u9700\u8981\u4e00\u62cd\u3002\u5f00\u59cb\u4ece\u5185\u5b58\u4e2d\u53d6\u6570\u636e\u4e5f\u9700\u8981\u4e00\u62cd </p> <p>Question</p> <p>\u8ba1\u7b97\u4e0b\u9762\u7684\u6307\u4ee4\uff0c\u5047\u8bbe\u4e09\u6761\u6307\u4ee4\u4e32\u884c\u6267\u884c\uff1b1 \u548c 2 \u5e76\u884c\u6267\u884c\u540e\u6267\u884c 3\uff1b\u4f7f\u7528 link \u6280\u672f\uff0c\u8fd9\u4e09\u79cd\u60c5\u51b5\u4e0b\u7684\u62cd\u6570\u3002 <pre><code>V3 &lt;- A\nV2 &lt;- V0 + V1\nV4 &lt;- V2 * V3\n</code></pre> \u6ce8\u610f\u5230\u5411\u91cf\u529f\u80fd\u5185\u90e8\u4e5f\u662f\u6d41\u6c34\u7684\u3002</p> <ul> <li> <p>The execution time using serial method. </p> <p>\u7ecf\u8fc7 8 \u62cd V0 \u7684\u7b2c\u4e00\u4e2a\u5143\u7d20\u5230\u8fbe V2\uff0c\u90a3\u4e48\u518d\u8fc7 (N-1) \u62cd V0 \u7684\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u5c31\u4f1a\u5230\u8fbe V2\u3002\u56e0\u6b64\u603b\u5171\u9700\u8981 [(1+6+1)+N-1] + [(1+6+1)+N-1] + [(1+7+1)+N-1] = 3N+22 \u62cd\u3002</p> </li> <li> <p>The first two instructions are parallel, and the third is serial.</p> <p>max{[(1+6+1)+N-1], [(1+6+1)+N-1]} + [(1+7+1)+N-1] = 2N+15</p> </li> <li> <p>Use link technology.</p> <p>\u6211\u4eec\u53ea\u9700\u8981\u77e5\u9053 V4 \u7684\u7b2c\u4e00\u4e2a\u7ed3\u679c\u591a\u4e45\u53ef\u4ee5\u51fa\u6765\uff1a8+1+7+1=9 \u62cd\uff0c\u968f\u540e\u8fd8\u6709 (N-1) \u6761\u6307\u4ee4\uff0c\u56e0\u6b64\u603b\u5171\u9700\u8981\u7684\u62cd\u6570\u4e3a max{(1+6+1), (1+6+1)} + (1+7+1)+N-1 = N+16.</p> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#123-segmented-vector","title":"1.2.3 Segmented Vector","text":"<p>\u5982\u679c\u5411\u91cf\u7684\u957f\u5ea6\u6bd4\u5411\u91cf\u8981\u957f\uff1f</p> <p>\u5f53\u5411\u91cf\u7684\u957f\u5ea6\u5927\u4e8e\u5411\u91cf\u5bc4\u5b58\u5668\u7684\u957f\u5ea6\u65f6\uff0c\u957f\u5411\u91cf\u5fc5\u987b\u88ab\u5206\u6210\u56fa\u5b9a\u957f\u5ea6\u7684\u6bb5\uff0c\u7136\u540e\u901a\u8fc7\u5faa\u73af\u8fdb\u884c\u5904\u7406\uff0c\u6bcf\u4e2a\u5faa\u73af\u53ea\u5904\u7406\u4e00\u4e2a\u5411\u91cf\u6bb5</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#124-adopt-multi-processor-system","title":"1.2.4 Adopt multi-processor system","text":""},{"location":"note/courses/Computer%20Architecture/Chapter%205/#13-rv64v","title":"1.3 RV64V","text":"<ul> <li>Loosely based on Cray-1</li> <li>32 62-bit vector registers<ul> <li>Register file has 16 read ports and 8 write ports</li> </ul> </li> <li>Vector functional units<ul> <li>Fully pipelined</li> <li>Data and control hazards are detected</li> </ul> </li> <li>Vector load-store unit<ul> <li>Fully pipelined</li> <li>One word per clock cycle after initial latency</li> </ul> </li> <li>Scalar registers<ul> <li>31 general-purpose registers</li> <li>32 floating-point registers</li> </ul> </li> </ul> <p>DAXPY (Double Precision a*X plus Y)</p> <p></p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#2-simd-array-processor","title":"2 SIMD: array processor","text":"<p>N processing elements \\(PE_0\\) to \\(PE_{N-1}\\) are repeatedly set.</p> <p>\u4e0d\u540c\u7684\u9635\u5217\u9700\u8981\u4e92\u76f8\u901a\u4fe1\u4ee5\u8fde\u63a5\uff0c\u5f62\u6210\u4e00\u4e2a\u9635\u5217</p> <p>\u5728\u5355\u4e2a\u63a7\u5236\u5355\u5143\u7684\u63a7\u5236\u4e0b\uff0c\u5904\u7406\u5668\u6240\u5206\u914d\u7684\u6570\u636e\u5e76\u884c\u5b8c\u6210\u540c\u4e00\u6761\u6307\u4ee4\u6307\u5b9a\u7684\u64cd\u4f5c</p> <p>ILLIAC IV</p> <p> </p> <p>According to the composition of the memory in the system, the array processor can be divided into two basic structures:</p> <ul> <li>Distributed memory</li> <li>Centralized shared memory</li> </ul> <p>\u4e24\u79cd\u5206\u5e03\u5f0f\u5185\u5b58\u7c7b\u578b\u7684\u533a\u522b\uff1a</p> <ul> <li>\u5185\u5b58\u5206\u5e03\u4e0d\u540c</li> <li>\u4e92\u8054\u7f51\u7edc\u7684\u89c4\u5219\u4e0d\u540c</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#21-distributed-memory","title":"2.1 Distributed memory","text":"<p>PE \u4ee3\u8868\u5904\u7406\u5668\uff0cPEM \u662f\u5176\u5bf9\u5e94\u7684\u5185\u5b58\uff0cICN \u662f\u4e00\u4e2a\u5185\u90e8\u7684\u4e92\u8054\u7f51\u7edc\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#22-centralized-shared-memory","title":"2.2 Centralized shared memory","text":"<p>\u7f51\u7edc\u4e4b\u95f4\u4f1a\u901a\u8fc7\u62d3\u6251\u7ed3\u6784\u8bbe\u8ba1\u8c01\u548c\u8c01\u8054\u901a\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#23-parallel-computer-design","title":"2.3 Parallel computer design","text":"<p>The communication architecture of the parallel computer is the core of the system.</p> <p>\u5982\u679c\u6211\u4eec\u60f3\u8ba9\u4efb\u4f55\u4e24\u4e2a\u5904\u7406\u5668\u90fd\u4e92\u76f8\u8fde\u63a5\uff0c\u5982\u679c\u90fd\u662f\u76f4\u8fde\uff0c\u90a3\u4e48\u9700\u8981 $C_n^2 $ \u4e2a\u8fde\u63a5\u3002</p> <p>Definition: A network composed of switching units according to a certain topology and control mode to realize the interconnection between multiple processors or multiple functional components within a computer system. </p> <p>\u6839\u636e\u4e00\u5b9a\u7684\u62d3\u6251\u7ed3\u6784\u548c\u63a7\u5236\u6a21\u5f0f\uff0c\u7531\u4ea4\u6362\u5355\u5143\u7ec4\u6210\u7684\u7f51\u7edc\uff0c\u7528\u4e8e\u5b9e\u73b0\u8ba1\u7b97\u673a\u7cfb\u7edf\u5185\u90e8\u591a\u4e2a\u5904\u7406\u5668\u6216\u591a\u4e2a\u529f\u80fd\u7ec4\u4ef6\u4e4b\u95f4\u7684\u4e92\u8fde\u3002</p> <p>\u7f51\u7edc\u4e2d\u7684\u8282\u70b9\u4ee3\u8868\u4e00\u4e2a\u5904\u7406\u5668\u5355\u5143\uff0c\u6bcf\u6761\u8fb9\u5c31\u4ee3\u8868\u4e00\u4e2a\u8fde\u63a5\u3002\u8fde\u63a5\u7684\u901a\u8def\u8d8a\u77ed\u5c31\u8ba4\u4e3a\u6548\u7387\u8d8a\u9ad8\u3002</p> <p>\u8fde\u63a5\u7684\u4e1c\u897f\u5305\u62ec CPU\uff0c\u5185\u5b58\uff0c\u63a5\u53e3\uff0clink and switch node\u3002</p> <ul> <li>Interface: It is a device that obtains information from CPU and memory and sends information to another CPU and memory. Typical devices are network interface cards.</li> <li>Link: A physical channel to transmit data bits. The link can be a cable, twisted pair or optical fiber, it can be serial or parallel, and each link has its maximum bandwidth. The link can be simplex half-duplex and full-duplex, the clock mechanism used by the link can be synchronous or asynchronous.</li> <li>Switch node: It is the information exchange and control station of the interconnected network. It is a device with multiple input ports and multiple output ports which is able to perform data buffer storage and path selection.</li> </ul> <p>Some key points</p> <ul> <li> <ul> <li> <p>Static topology</p> <p>\u9759\u6001\u7f51\u7edc\uff1a\u7f51\u7edc\u8bbe\u5b9a\u597d\u540e\u8282\u70b9\u548c\u8fb9\u7684\u8fde\u63a5\u65b9\u5f0f\u5c31\u786e\u5b9a\u4e0b\u6765\u3002</p> </li> </ul> <p>Topology of interconnection network</p> <ul> <li> <p>Dynamic topology</p> <p>\u52a8\u6001\u7f51\u7edc\uff1a\u7f51\u7edc\u7531\u5f88\u591a\u5f00\u5173\u7ec4\u6210\uff0c\u7f51\u7edc\u7684\u8fde\u63a5\u65b9\u5f0f\u4f1a\u53d8\u5316\uff0c\u5982\u4ea4\u53c9\u5f00\u5173\u6211\u4eec\u62e8\u52a8\u4e4b\u540e\u4e24\u4e2a\u70b9\u7684\u8fde\u63a5\u6539\u53d8\u3002</p> </li> </ul> </li> <li> <p>Timing mode of interconnection network</p> <ul> <li>Synchronization system: Use a unified clock. Such as SIMD array processor</li> <li>Asynchronous system: No uniform clock. Each processor in the system works independently</li> </ul> </li> <li>Exchange method of interconnection network<ul> <li>Circuit switching</li> <li>Packet switching</li> </ul> </li> <li>Control Strategy of interconnection network<ul> <li>Centralized control mode: have a global controller</li> <li>Distributed control mode: no global controller</li> </ul> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#3-dlp-in-gpu","title":"3 DLP in GPU","text":"<ul> <li> <p>Heterogeneous execution model</p> <ul> <li>CPU is the host, GPU is the device</li> </ul> </li> <li> <p>Unify all forms of GPU parallelism as CUDA thread</p> </li> <li>Programming model is \u201cSingle Instruction Multiple Thread\u201d</li> </ul> <p>GPUs are really just multithreaded SIMD Processors.</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#31-programming-the-gpu-cuda","title":"3.1 Programming the GPU: CUDA","text":"<ul> <li>CUDA: Compute Unified Device Architecture</li> </ul> <p>GPUs \u53ea\u662f multithreaded SIMD \u5904\u7406\u5668\u3002</p> <p>Example</p> <p></p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#32-grid-thread-blocks-and-threads","title":"3.2 Grid, Thread Blocks and Threads","text":"<ul> <li>A thread is associated with each data element</li> <li>Threads are organized into blocks</li> <li>Blocks are organized into a grid</li> </ul> <p>GPU hardware handles thread management, not applications or OS. GPU\u786c\u4ef6\u5904\u7406\u7ebf\u7a0b\u7ba1\u7406\uff0c\u800c\u4e0d\u662f\u5e94\u7528\u7a0b\u5e8f\u6216\u64cd\u4f5c\u7cfb\u7edf\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#33-gpu-memory-structures","title":"3.3 GPU memory structures","text":"<ul> <li>GPU memory is shared by all Grids (vectorized loops).</li> <li>Local memory is shared by all threads of SIMD instructions within a Thread Block (body of a vectorized loop). </li> <li>Private memory is private to a single CUDA Thread.</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#nvidia-gpu-rightand-vector-machine-left","title":"NVIDIA GPU (right)and vector machine (left)","text":"<p>nvidia GPU and vector machine:</p> <ul> <li> <p>\u4e0e\u5411\u91cf\u673a\u7684\u76f8\u4f3c\u4e4b\u5904\uff1a</p> <ul> <li>\u64c5\u957f\u6570\u636e\u7ea7\u5e76\u884c\u95ee\u9898</li> <li>\u6563\u5e03-\u805a\u96c6\u4f20\u8f93 (Scatter-gather transfers)</li> <li>\u63a9\u7801\u5bc4\u5b58\u5668 (Mask registers)</li> <li>\u5927\u578b\u5bc4\u5b58\u5668\u6587\u4ef6 (Large register files)</li> </ul> </li> <li> <p>\u4e0d\u540c\u4e4b\u5904\uff1a</p> <ul> <li>\u6ca1\u6709\u6807\u91cf\u5904\u7406\u5668</li> <li>\u4f7f\u7528\u591a\u7ebf\u7a0b\u6765\u9690\u85cf\u5185\u5b58\u5ef6\u8fdf</li> <li>\u62e5\u6709\u8bb8\u591a\u529f\u80fd\u5355\u5143\uff0c\u800c\u4e0d\u662f\u50cf\u5411\u91cf\u5904\u7406\u5668\u90a3\u6837\u5c11\u6570\u51e0\u4e2a\u6df1\u5ea6\u6d41\u6c34\u7ebf\u5355\u5143</li> </ul> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#4-loop-level-parallelism-llp","title":"4 Loop-Level Parallelism (LLP)","text":"<p>\u505a\u5e76\u884c\u65f6\u4e0d\u80fd\u6709\u76f8\u4e92\u4f9d\u8d56\u3002</p> <p>\u7a0b\u5e8f\u4e2d\u7684\u5faa\u73af\u662f\u8bb8\u591a\u7c7b\u578b\u5e76\u884c\u7684\u6e90\u6cc9\u3002</p> <p>\u53d1\u73b0\u548c\u5229\u7528\u5faa\u73af\u7ea7\u5e76\u884c\u5bf9\u4e8e\u5f00\u53d1\u6570\u636e\u7ea7\u5e76\u884c (DLP) \u548c\u7ebf\u7a0b\u7ea7\u5e76\u884c (TLP) \u81f3\u5173\u91cd\u8981\uff0c\u540c\u65f6\u5bf9\u4e8e\u66f4\u79ef\u6781\u7684\u9759\u6001\u6307\u4ee4\u7ea7\u5e76\u884c (ILP) \u65b9\u6cd5\uff08\u4f8b\u5982 VLIW\uff09\u4e5f\u540c\u6837\u5173\u952e\u3002</p> <p>Finding and manipulating loop-level parallelism is critical to exploiting both DLP and TLP, as well as the more aggressive static ILP approaches (e.g., VLIW).</p> <p>Focuses on determining whether data accesses in later iterations are dependent on data values produced in earlier iterations.</p> <p>\u4e13\u6ce8\u4e8e\u5224\u65ad\u540e\u7eed\u8fed\u4ee3\u4e2d\u7684\u6570\u636e\u8bbf\u95ee\u662f\u5426\u4f9d\u8d56\u4e8e\u524d\u9762\u8fed\u4ee3\u4e2d\u4ea7\u751f\u7684\u6570\u636e\u503c\u3002</p> <p><pre><code>for (i = 999; i&gt;= 0; i--){\n    x[i] = x[i] + s;\n}\n</code></pre> \u65e0\u5faa\u73af\u4f9d\u8d56</p> <p>Example</p> <p><pre><code>for (i=0; i&lt;100; i=i+1) {\n    A[i+1] = A[i] + C[i]; /* S1 */\n    B[i+1] = B[i] + A[i+1]; /* S2 */\n}\n</code></pre> \u90fd\u4f7f\u7528\u4e86\u524d\u4e00\u6b21\u8fed\u4ee3\u4e2d\u8ba1\u7b97\u7684\u7ed3\u679c\uff0cS2 \u4f9d\u8d56\u4e8e S1 \u7684\u7ed3\u679c</p> <p>Example</p> <p><pre><code>for (i=0; i&lt;100; i=i+1) {\n    A[i] = A[i] + B[i]; /* S1 */\n    B[i+1] = C[i] + D[i]; /* S2 */\n}\n</code></pre> \u4ea4\u6362 S1 S2\uff0c\u968f\u540e\u628a\u7b2c\u4e00\u6b21\u548c\u6700\u540e\u4e00\u6b21\u8fd0\u7b97\u63d0\u51fa\u53bb\uff0c\u53ef\u4ee5\u6539\u4e3a\u4e0b\u9762\u8fd9\u6837\uff0c\u5c31\u53ef\u4ee5\u5e76\u884c\u3002 <pre><code>A[0] = A[0] + B[0];\nfor (i=0; i&lt;99; i=i+1) {\n    B[i+1] = C[i] + D[i]; /* S2 */\n    A[i+1] = A[i+1] + B[i+1]; /* S1 */\n}\nB[100] = C[99] + D[99];\n</code></pre></p> <p>Example</p> <p></p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#5-mimd-tread-level-parallelism","title":"5 MIMD: Tread-level Parallelism","text":"<p>\u7ebf\u7a0b\u7ea7\u7684\u5e76\u884c\u88ab\u8ba4\u4e3a\u662f\u7531\u8f6f\u4ef6\u6216\u8005\u7a0b\u5e8f\u5458\u6765\u5b8c\u6210\u7684\u9ad8\u7ea7\u522b\u7684\u5e76\u884c</p> <p>\u7ebf\u7a0b\u7ea7\u7684\u5e76\u884c\uff0c\u79f0\u4e3a TLP\uff0c\u662f\u7531\u8f6f\u4ef6\u7cfb\u7edf\u6765\u786e\u8ba4\u7684\u3002</p> <p>The threads consist of hundreds to millions of instructions that may be executed in parallel.</p> <p>\u6211\u4eec\u7684\u53d1\u5c55\u4ece ILP\uff0c\u5230 TLP\uff0c\u518d\u5230 MIMD\u3002</p> <p>Multi-processor system \u53ef\u4ee5\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a</p> <ul> <li> <p>based on shared memory</p> <p>\u7cfb\u7edf\u4e2d\u53ea\u6709\u552f\u4e00\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u6240\u6709\u8fdb\u7a0b\u5171\u4eab\u3002</p> <p>\u5e76\u4e0d\u4ee3\u8868\u53ea\u6709\u4e00\u4e2a\u7269\u7406\u4e0a\u7684\u5185\u5b58\uff0c\u5b9e\u9645\u4e0a\u53ef\u4ee5\u901a\u8fc7\u4e00\u5757\u7269\u7406\u5171\u4eab\u7684\u5185\u5b58\u5b9e\u73b0\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7\u5206\u5e03\u5f0f\u7684\u5185\u5b58\u5b9e\u73b0\u3002</p> </li> <li> <p>based on message passing</p> <p>\u6bcf\u4e2a\u5904\u7406\u5668\u90fd\u6709\u81ea\u5df1\u7684\u5730\u5740\u7a7a\u95f4\uff0c\u901a\u8fc7\u6d88\u606f\u4f20\u9012\u6765\u901a\u4fe1\u3001\u4f20\u9001\u6570\u636e\u3002</p> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#51-shared-memory-system","title":"5.1 Shared Memory System","text":"<p>\u53ef\u4ee5\u628a\u5171\u4eab\u5185\u5b58\u5212\u5206\u4e3a\u82e5\u5e72\u5757\uff0c\u4ed6\u4eec\u5171\u540c\u6784\u6210\u4e00\u4e2a\u62fc\u56fe\uff08\u5373\u7edf\u4e00\u7684\u5730\u5740\u7a7a\u95f4\uff09\u3002</p> <p>\u6709\u4e00\u4e2a\u7edf\u4e00\u7684\u64cd\u4f5c\u7cfb\u7edf\uff0c\u8d1f\u8d23\u7ba1\u7406\u6240\u6709\u7684\u4fe1\u606f\u3001\u5185\u5b58\uff0c\u7ed9\u4e0d\u540c\u7684\u8fdb\u7a0b\u4f7f\u7528\u5185\u5b58\u3002</p> <p>If in a system, each CPU has equal access to all memory modules and input/output devices, and these CPUs are interchangeable in the operating system, then the system is a symmetric multiprocessor system SMP (Symmetric Multi- processor).</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#52-message-passing-system","title":"5.2 Message Passing System","text":"<p> \u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u90fd\u6709\u81ea\u5df1\u7684\u5185\u5b58\uff0c\u901a\u8fc7 ICN \u6765\u4f20\u9012\u4fe1\u606f\uff0c\u53ef\u4ee5\u5171\u540c\u5b8c\u6210\u4efb\u52a1\u3002</p> <p>\u4e00\u822c\u6bcf\u4e2a\u8fdb\u7a0b\u6709\u81ea\u5df1\u7684 OS\uff0c\u4f46\u662f\u7ec4\u5408\u5728\u4e00\u8d77\u5f62\u6210\u4e00\u4e2a\u5927\u7684\u7cfb\u7edf\u3002</p> <p>Communication in the system is achieved by using an interconnection network to pass messages.</p> <p>\u53ef\u4ee5\u5206\u5c42\u6b21\uff0cICN \u4e5f\u53ef\u4ee5\u8fde\u63a5\u5176\u4ed6\u7684 ICN\uff0c\u7ed3\u70b9\u91cc\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u591a\u673a\u7cfb\u7edf\u3002  \u6bcf\u4e2a\u8282\u70b9\u7531\u4e00\u4e2a\u6216\u591a\u4e2a CPU\u3001RAM\u3001\u78c1\u76d8\u53ca\u5176\u4ed6\u8f93\u5165/\u8f93\u51fa\u8bbe\u5907\u548c\u901a\u4fe1\u5904\u7406\u5668\u7ec4\u6210\u3002</p> <p>\u901a\u4fe1\u5904\u7406\u5668\u901a\u8fc7\u4e92\u8fde\u7f51\u7edc\u76f8\u4e92\u8fde\u63a5\u3002\u53ef\u4ee5\u4f7f\u7528\u5404\u79cd\u4e0d\u540c\u7684\u62d3\u6251\u7ed3\u6784\u3001\u4ea4\u6362\u7b56\u7565\u548c\u8def\u5f84\u67e5\u627e\u7b97\u6cd5\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#multi-computer-memory-access-model","title":"Multi-Computer memory access model","text":"<p>NORMA(No-Remote Memory Access)</p> <p></p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#53-mimd-architecture","title":"5.3 MIMD Architecture","text":"<ul> <li> <p>Different memory access models of MIMD multiprocessor system</p> <ul> <li>Uniform Memory Access (UMA)</li> <li>Non Uniform Memory Access (NUMA)</li> <li>Cache Only Memory Access (COMA)</li> </ul> </li> <li> <p>Further division of MIMD multi-computer system</p> <ul> <li>Massively Parallel Processors (MPP)</li> <li>Cluster of Workstations(COW)</li> </ul> </li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#531-uma","title":"5.3.1 UMA","text":"<p>\u8fdb\u7a0b\u53ef\u4ee5\u6709\u81ea\u5df1\u7684\u62d3\u5c55\uff0c\u6bd4\u5982 cache\u3001IO\u3001local memory\u3002</p> <p>\u56e0\u4e3a\u4ed6\u7684\u9ad8\u5ea6\u5171\u4eab\u6027\uff0cUMA \u4e5f\u53eb\u7d27\u8026\u5408\u7cfb\u7edf\u3002</p> <ul> <li> <p>Physical memory is uniformly shared by all processors.\u7269\u7406\u5b58\u50a8\uff0c\u7531\u6240\u6709\u7684\u8fdb\u7a0b\u4e00\u8d77\u4f7f\u7528\uff0c\u5747\u5300\u5171\u4eab\uff0c\u5373\u6ca1\u6709\u8fdb\u7a0b\u5bf9\u67d0\u4e2a\u5b58\u50a8\u5668\u6709\u7279\u6b8a\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u8bbf\u95ee\u7684\u65f6\u95f4\u76f8\u540c\uff0c\u5373\u4e0d\u5b58\u5728\u8c01\u79bb\u8c01\u66f4\u8fd1\u7684\u95ee\u9898\u3002</p> </li> <li> <p>It takes the same time for all processors to access any memory word.\u8bbf\u95ee\u4efb\u4f55memory word \u7684\u65f6\u95f4\u662f\u4e00\u6837\u7684\u3002</p> </li> <li>Each processor can be equipped with private cache or private memory.</li> </ul> <p>UMA Multiprocessor system \u57fa\u4e8e\u603b\u7ebf     </p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#532-numa","title":"5.3.2 NUMA","text":"<p>\u5bf9\u67d0\u4e2a\u8fdb\u7a0b\u90fd\u81ea\u5df1\u7684 local memory\uff0c\u7531 ICN \u8fde\u8d77\u6765\u3002\u88ab\u5171\u4eab\u7684\u5b58\u50a8\u5668\u662f\u4e0d\u5747\u5300\u7684\u3002\u8bbf\u95ee\u81ea\u5df1\u7684 local memory \u6700\u5feb\uff0c\u8bbf\u95ee\u522b\u4eba\u7684\u6162\u3002</p> <p>\u8fdb\u7a0b\u4e5f\u53ef\u4ee5\u6709\u81ea\u5df1\u7684\u62d3\u5c55\u3002</p> <p>NUMA \u6709\u4e24\u79cd\u62d3\u5c55\uff0c</p> <ul> <li>NC-NUMA: Non Cache NUMA,\u8fdc\u7a0b\u5185\u5b58\u8bbf\u95ee\u65f6\u95f4\u5728\u7cfb\u7edf\u4e2d\u4e0d\u88ab\u9690\u85cf</li> <li> <p>CC-NUMA: Coherent Cache NUMA\uff0c</p> <p>\u6709\u81ea\u5df1\u7684 cache \u548c\u76ee\u5f55\uff0c\u5b58\u5728 cache \u4e00\u81f4\u6027\u7684\u95ee\u9898\u3002\u5f53\u6709\u4e00\u4e2a\u6570\u636e\u6539\u4e86\uff0c\u5982\u4f55\u4fdd\u8bc1\u5176\u4ed6 cache \u91cc\u7684\u6570\u636e\u7684\u6b63\u786e\u6027\u3002</p> </li> </ul> <p></p> <ul> <li>All CPUs share an uniform address space\u3002\u6240\u6709\u7684CPU\u6709\u7edf\u4e00\u7684\u5730\u5740\u7a7a\u95f4\u3002</li> <li>Use LOAD and STORE instructions to access remote memory\u3002\u4f7f\u7528load \u548c store \u6307\u4ee4\u6765\u8bbf\u95ee\u8fdc\u7a0b\u5185\u5b58\u3002</li> <li>Access to remote memory is slower than access to local memory\u3002\u8bbf\u95ee\u8fdc\u7a0b\u5185\u5b58\u6bd4\u8bbf\u95ee\u672c\u5730\u5185\u5b58\u6162\u3002</li> <li>The processor in the NUMA system can use cache\u3002\u5904\u7406\u5668\u53ef\u4ee5\u4f7f\u7528cache</li> </ul> <p>UMA and NUMA</p> <ul> <li>UMA is also called symmetric (shared-memory) multiprocessors (SMP) or centralized shared-memory multiprocessors.</li> <li>NUMA is called distributed shared-memory multiprocessor (DSP).</li> </ul> <p></p> <p>\u53ef\u4ee5\u770b\u5230 UMA \u6709 shared cache\uff0c\u56e0\u6b64\u4e00\u81f4\u6027\u662f\u4fdd\u8bc1\u7684\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#533-coma","title":"5.3.3 COMA","text":"<p>COMA \u662f NUMA \u6a21\u578b\u7684\u7279\u4f8b\uff0c\u6bcf\u4e2a\u8fdb\u7a0b\u4e4b\u95f4\u4e0d\u5b58\u5728\u5c42\u6b21\u5173\u7cfb\uff0c\u53ef\u4ee5\u7ec4\u6210\u4e00\u4e2a\u5168\u5c40\u7684 cache\u3002\u53ef\u4ee5\u901a\u8fc7\u4e00\u4e2a\u76ee\u5f55\u3002</p> <p></p> <ul> <li>COMA is a special case of NUMA. There is no storage hierarchy in each processor node, and all caches form a uniform address space.</li> <li>Use the distributed cache directory for remote cache access. When using COMA, the data can be allocated arbitrarily at the beginning, because it will eventually be moved to the place where it is used at runtime.</li> </ul> <p>COMA (Cache-Only Memory Architecture) \u662f NUMA (Non-Uniform Memory Access) \u7684\u4e00\u79cd\u7279\u4f8b\u3002\u5728\u6bcf\u4e2a\u5904\u7406\u5668\u8282\u70b9\u4e2d\u6ca1\u6709\u5b58\u50a8\u5c42\u6b21\u7ed3\u6784\uff08\u5373\u6ca1\u6709\u4f20\u7edf\u7684\u672c\u5730\u5185\u5b58\uff09\uff0c\u6240\u6709\u7f13\u5b58\u5f62\u6210\u4e00\u4e2a\u7edf\u4e00\u7684\u5730\u5740\u7a7a\u95f4\u3002</p> <p>\u4f7f\u7528\u5206\u5e03\u5f0f\u7f13\u5b58\u76ee\u5f55\u8fdb\u884c\u8fdc\u7a0b\u7f13\u5b58\u8bbf\u95ee\u3002\u4f7f\u7528 COMA \u65f6\uff0c\u6570\u636e\u5728\u5f00\u59cb\u65f6\u53ef\u4ee5\u4efb\u610f\u5206\u914d\uff0c\u56e0\u4e3a\u5b83\u6700\u7ec8\u4f1a\u5728\u8fd0\u884c\u65f6\u88ab\u79fb\u52a8\u5230\u4f7f\u7528\u5b83\u7684\u5730\u65b9\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#challenge-of-parallel-processing","title":"Challenge of Parallel Processing","text":"<p>\u591a\u5904\u7406\u5668\u7684\u5e94\u7528\u8303\u56f4\u4ece\u8fd0\u884c\u51e0\u4e4e\u6ca1\u6709\u901a\u4fe1\u7684\u72ec\u7acb\u4efb\u52a1\u5230\u8fd0\u884c\u7ebf\u7a0b\u5fc5\u987b\u901a\u4fe1\u624d\u80fd\u5b8c\u6210\u4efb\u52a1\u7684\u5e76\u884c\u7a0b\u5e8f\u3002</p> <p>\u7b2c\u4e00\u4e2a\u969c\u788d\u4e0e\u7a0b\u5e8f\u4e2d\u53ef\u7528\u7684\u5e76\u884c\u6027\u6709\u9650\u6709\u5173\u3002</p> <p>\u7b2c\u4e8c\u4e2a\u969c\u788d\u6765\u81ea\u4e8e\u76f8\u5bf9\u8f83\u9ad8\u7684\u901a\u4fe1\u5f00\u9500\u3002</p> <p>\u8fd9\u4e24\u8005\u90fd\u53ef\u4ee5\u7528\u963f\u59c6\u8fbe\u5c14\u5b9a\u5f8b\u6765\u89e3\u91ca\u3002</p> <p>Example</p> <p>=== \u5e76\u884c\u5ea6</p> <p>\u8981\u4f7f\u7528100\u4e2a\u5904\u7406\u5668\u5b9e\u73b080\u500d\u7684\u52a0\u901f\u6bd4\uff0c\u539f\u59cb\u8ba1\u7b97\u4e2d\u53ea\u67090.25%\u7684\u90e8\u5206\u53ef\u4ee5\u662f\u4e32\u884c\u7684</p> <p>\u5982\u679c\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u768495%\u65f6\u95f4\u53ef\u4ee5\u5b8c\u7f8e\u5730\u4f7f\u7528100\u4e2a\u5904\u7406\u5668\uff0c\u90a3\u4e48\u8981\u8fbe\u523080\u500d\u7684\u52a0\u901f\u6bd4\uff0c\u5269\u4e0b\u65f6\u95f4\u76844.8%\u5fc5\u987b\u4f7f\u752850\u4e2a\u5904\u7406\u5668\uff0c\u5e76\u4e14\u53ea\u67090.2%\u7684\u65f6\u95f4\u53ef\u4ee5\u662f\u4e32\u884c\u7684\uff01 \u8fd9\u4e0e\u56fe\u7247\u4e2d\u7684\u7ed3\u8bba\u4e00\u81f4\u3002\u8fd9\u4e2a\u4f8b\u5b50\u518d\u6b21\u5f3a\u8c03\u4e86\u8981\u8fbe\u5230\u9ad8\u52a0\u901f\u6bd4\uff0c\u4e32\u884c\u90e8\u5206\u5fc5\u987b\u975e\u5e38\u5c0f\u3002</p> <p>=== \u901a\u4fe1\u5f00\u9500 \u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u5728\u4e00\u4e2a32\u5904\u7406\u5668\u7684\u591a\u5904\u7406\u5668\u4e0a\uff0c\u5904\u7406\u8fdc\u7a0b\u5185\u5b58\u5f15\u7528\u6709100 ns\u7684\u5ef6\u8fdf\u3002\u5bf9\u4e8e\u8fd9\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u5047\u8bbe\u9664\u4e86\u6d89\u53ca\u901a\u4fe1\u7684\u5f15\u7528\u5916\uff0c\u6240\u6709\u5f15\u7528\u90fd\u5728\u672c\u5730\u5185\u5b58\u5c42\u6b21\u7ed3\u6784\u4e2d\u547d\u4e2d\uff08\u5373\u7f13\u5b58\u547d\u4e2d\uff09\u3002\u5904\u7406\u5668\u5728\u8fdc\u7a0b\u8bf7\u6c42\u65f6\u4f1a\u505c\u987f\uff0c\u5e76\u4e14\u5904\u7406\u5668\u65f6\u949f\u9891\u7387\u662f4 GHz\u3002\u5982\u679c\u57fa\u672c CPI\uff08\u5047\u8bbe\u6240\u6709\u5f15\u7528\u90fd\u5728\u7f13\u5b58\u4e2d\u547d\u4e2d\uff09\u662f0.5\uff0c\u5e76\u4e140.2%\u7684\u6307\u4ee4\u6d89\u53ca\u8fdc\u7a0b\u901a\u4fe1\u5f15\u7528\uff0c\u90a3\u4e48\u591a\u5904\u7406\u5668\u5728\u6ca1\u6709\u901a\u4fe1\u65f6\u4f1a\u5feb\u591a\u5c11\uff1f</p> <p>2.6\u500d</p> <p>\u7f13\u5b58\u4e00\u81f4\u6027\u95ee\u9898</p> <p></p> <p>\u4e24\u4e2a\u5904\u7406\u5668\uff08A \u548c B\uff09\u8bfb\u5199\u5355\u4e2a\u5185\u5b58\u4f4d\u7f6e\uff08X\uff09\u65f6\u7684\u7f13\u5b58\u4e00\u81f4\u6027\u95ee\u9898\u3002\u6211\u4eec\u6700\u521d\u5047\u8bbe\u4e24\u4e2a\u7f13\u5b58\u90fd\u4e0d\u5305\u542b\u8be5\u53d8\u91cf\uff0c\u5e76\u4e14 X \u7684\u503c\u4e3a 1\u3002\u6211\u4eec\u8fd8\u5047\u8bbe\u4f7f\u7528\u7684\u662f\u5199\u76f4\u8fbe\uff08writethrough\uff09\u7f13\u5b58\uff1b\u5199\u56de\uff08write-back\uff09\u7f13\u5b58\u4f1a\u589e\u52a0\u4e00\u4e9b\u989d\u5916\u4f46\u7c7b\u4f3c\u7684\u590d\u6742\u6027\u3002\u5728 X \u7684\u503c\u88ab A \u5199\u5165\u4e4b\u540e\uff0cA \u7684\u7f13\u5b58\u548c\u5185\u5b58\u90fd\u5305\u542b\u65b0\u503c\uff0c\u4f46 B \u7684\u7f13\u5b58\u4e0d\u5305\u542b\uff0c\u5982\u679c B \u8bfb\u53d6 X \u7684\u503c\uff0c\u5b83\u5c06\u63a5\u6536\u5230 1\uff01</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#54-cache-coherence","title":"5.4 Cache Coherence","text":""},{"location":"note/courses/Computer%20Architecture/Chapter%205/#memory-consistency-and-cache-coherence","title":"Memory Consistency and Cache Coherence","text":"<p>\u5185\u5b58\u4e00\u81f4\u6027 (Memory Consistency) \u9700\u8981\u5185\u5b58\u4e00\u81f4\u6027\u6a21\u578b</p> <ul> <li>\u5f53\u4e00\u4e2a\u5199\u5165\u7684\u503c\u4f55\u65f6\u4f1a\u88ab\u8bfb\u53d6\u8fd4\u56de\u3002</li> <li>\u5982\u679c\u4e00\u4e2a\u5904\u7406\u5668\u5148\u5199\u5165\u4f4d\u7f6e A\uff0c\u63a5\u7740\u5199\u5165\u4f4d\u7f6e B\uff0c\u90a3\u4e48\u4efb\u4f55\u770b\u5230 B \u7684\u65b0\u503c\u7684\u5904\u7406\u5668\u4e5f\u5fc5\u987b\u770b\u5230 A \u7684\u65b0\u503c\u3002</li> </ul> <p>\u7f13\u5b58\u8fde\u8d2f\u6027 (Cache Coherence) \u9700\u8981\u7f13\u5b58\u8fde\u8d2f\u6027\u534f\u8bae</p> <ul> <li>\u4efb\u4f55\u5904\u7406\u5668\u53d1\u51fa\u7684\u6240\u6709\u8bfb\u53d6\u64cd\u4f5c\u90fd\u5fc5\u987b\u8fd4\u56de\u6700\u8fd1\u5199\u5165\u7684\u503c\u3002</li> <li>\u4efb\u4f55\u4e24\u4e2a\u5904\u7406\u5668\u5bf9\u540c\u4e00\u4f4d\u7f6e\u7684\u5199\u5165\u64cd\u4f5c\uff0c\u5fc5\u987b\u4ee5\u76f8\u540c\u7684\u987a\u5e8f\u88ab\u6240\u6709\u5904\u7406\u5668\u770b\u5230\u3002</li> <li>\u6b63\u786e\u7684\u8fde\u8d2f\u6027\u786e\u4fdd\u7a0b\u5e8f\u5458\u901a\u8fc7\u5206\u6790\u52a0\u8f7d\u548c\u5b58\u50a8\u7684\u7ed3\u679c\u65e0\u6cd5\u5224\u65ad\u7cfb\u7edf\u662f\u5426\u6709\u7f13\u5b58\u4ee5\u53ca\u7f13\u5b58\u7684\u4f4d\u7f6e\u3002\u8fd9\u662f\u56e0\u4e3a\u6b63\u786e\u7684\u8fde\u8d2f\u6027\u786e\u4fdd\u7f13\u5b58\u7edd\u4e0d\u4f1a\u542f\u7528\u65b0\u7684\u6216\u4e0d\u540c\u7684\u529f\u80fd\u884c\u4e3a\u3002</li> </ul>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#cache-coherence","title":"Cache Coherence","text":"<p>\u5bfc\u81f4\u7f13\u5b58\u4e00\u81f4\u6027\u95ee\u9898\u7684\u539f\u56e0\uff1a\u4e00\u4e2a\u6570\u636e\u5728\u7cfb\u7edf\u4e2d\u6709\u591a\u4efd\u62f7\u8d1d</p> <p>Cache coherence protocol:\u7531\u7f13\u5b58\u3001CPU \u548c\u5185\u5b58\u5b9e\u73b0\u7684\u4e00\u5957\u89c4\u5219\uff0c\u7528\u4e8e\u9632\u6b62\u76f8\u540c\u6570\u636e\u7684\u4e0d\u540c\u7248\u672c\u51fa\u73b0\u5728\u591a\u4e2a\u7f13\u5b58\u4e2d\uff0c\u4ece\u800c\u5f62\u6210\u7f13\u5b58\u4e00\u81f4\u6027\u534f\u8bae\u3002</p> <p>In modern parallel computers, processors often have Cache. One memory data may have multiple copies in the entire system. This leads to the Cache coherence problem.  </p> <p>\u53ef\u80fd\u6709\u591a\u4e2a cache\uff0c\u90fd\u653e\u6709\u5185\u5b58\u62f7\u8d1d\u7684\u6570\u636e\uff0c\u53ef\u80fd\u4e0d\u4e00\u81f4\u3002\u6211\u4eec\u4e00\u822c\u901a\u8fc7\u4e00\u4e2a\u534f\u8bae\u6765\u7ea6\u5b9a\u3002</p> <ul> <li>Bus snooping protocol \u603b\u7ebf\u76d1\u542c\u534f\u8bae</li> <li>Directory based protocol \u57fa\u4e8e\u76ee\u5f55\u7684\u534f\u8bae</li> </ul> <p>For UMA : Snoopy coherence protocols.\u6240\u6709\u5904\u7406\u5668\u90fd\u76d1\u542c\u603b\u7ebf\uff0c\u5f53\u4e00\u4e2a\u5904\u7406\u5668\u4fee\u6539\u4e86\u79c1\u6709\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u65f6\uff0c\u5b83\u4f1a\u5728\u603b\u7ebf\u4e0a\u5e7f\u64ad\u65e0\u6548\u4fe1\u606f\u6216\u8005\u66f4\u65b0\u7684\u6570\u636e\uff0c\u4f7f\u5176\u4ed6\u526f\u672c\u5931\u6548</p> <p>For NUMA: Directory protocol.\u4f7f\u7528\u4e00\u4e2a\u76ee\u5f55\u6765\u8bb0\u5f55\u7cfb\u7edf\u4e2d\u54ea\u4e9b\u5904\u7406\u5668\u5728\u7f13\u5b58\u4e2d\u62e5\u6709\u7279\u5b9a\u5b58\u50a8\u5757\u7684\u526f\u672c\u3002\u5f53\u4e00\u4e2a\u5904\u7406\u5668\u60f3\u8981\u5199\u5165\u4e00\u4e2a\u5171\u4eab\u5757\u65f6\uff0c\u5b83\u4f1a\u901a\u8fc7\u76ee\u5f55\u4ee5\u201c\u70b9\u5bf9\u70b9\u201d\u7684\u65b9\u5f0f\u5411\u90a3\u4e9b\u62e5\u6709\u8be5\u5757\u526f\u672c\u7684\u5904\u7406\u5668\u53d1\u9001\u65e0\u6548\u4fe1\u53f7\uff0c\u4ee5\u4fbf\u4f7f\u6240\u6709\u5176\u4ed6\u526f\u672c\u5931\u6548\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#snoopy-coherence-protocols","title":"Snoopy Coherence Protocols","text":"<ul> <li>Write-through cache \u5199\u76f4\u8fbe\u7f13\u5b58</li> <li>Write-back cache \u5199\u56de\u7f13\u5b58</li> </ul> <p>Write-Through Cache Conherence Protocols</p> <ul> <li>\u6839\u636e\u6b64\u534f\u8bae\uff0c\u76d1\u542c\u7f13\u5b58\u6267\u884c\u8bfb\u5199\u64cd\u4f5c\u65f6\u6709\u56db\u79cd\u60c5\u51b5\uff1a</li> </ul> \u672c\u5730\u8bf7\u6c42 \u8fdc\u7a0b\u8bf7\u6c42 \u8bfb\u672a\u547d\u4e2d \u4ece\u5185\u5b58\u8bbf\u95ee\u6570\u636e \u8bfb\u547d\u4e2d \u4f7f\u7528\u672c\u5730\u7f13\u5b58\u6570\u636e \u5199\u672a\u547d\u4e2d \u4fee\u6539\u5185\u5b58\u4e2d\u7684\u6570\u636e \u5199\u547d\u4e2d \u4fee\u6539\u7f13\u5b58\u548c\u5185\u5b58 \u4f7f\u7f13\u5b58\u9879\u65e0\u6548 <ul> <li> <p>\u57fa\u672c\u534f\u8bae\u4e2d\u5b58\u5728\u8bb8\u591a\u53d8\u5316\uff1a</p> <ul> <li>\u8fdc\u7a0b\u5199\u547d\u4e2d\u65f6\u662f\u4f7f\u7528\u66f4\u65b0\u7b56\u7565 (Update Strategy) \u8fd8\u662f\u65e0\u6548\u7b56\u7565 (Invalidate Strategy)\u3002</li> <li>\u5f53\u7f13\u5b58\u5199\u672a\u547d\u4e2d\u65f6\uff0c\u662f\u5426\u5c06\u76f8\u5e94\u7684\u5b57\u4f20\u8f93\u5230\u7f13\u5b58\u4e2d\uff0c\u8fd9\u5c31\u662f\u662f\u5426\u4f7f\u7528\u5199\u5206\u914d\u7b56\u7565 (Write-allocate Policy)\u3002</li> </ul> <p></p> </li> </ul> <p>Write update/broadcast protocols</p> <p>\u5f53\u5199\u5165\u6570\u636e\u9879\u65f6\uff0c\u66f4\u65b0\u8be5\u6570\u636e\u9879\u7684\u6240\u6709\u7f13\u5b58\u526f\u672c\u3002</p>"},{"location":"note/courses/Computer%20Architecture/Chapter%205/#write-invalidate-protocols","title":"Write invalidate protocols","text":"<ul> <li>\u5904\u7406\u5668\u5728\u5199\u5165\u6570\u636e\u65f6\u4f1a\u5c06\u5176\u4ed6\u5904\u7406\u5668\u7684\u7f13\u5b58\u9879\u6807\u8bb0\u4e3a\u65e0\u6548\u3002</li> </ul> <p>\u65e0\u6548\u534f\u8bae\u5728\u5177\u6709\u5199\u56de\u7f13\u5b58\u7684\u5355\u4e2a\u7f13\u5b58\u5757\uff08X\uff09\u7684\u4fa6\u542c\u603b\u7ebf\u4e0a\u8d77\u4f5c\u7528\u3002</p> <p>\u4e09\u79cd\u72b6\u6001</p> <p>\u65e0\u6548\uff08Invalid\uff09 \u5171\u4eab\uff08Shared\uff09\uff1a\u8868\u793a\u79c1\u6709\u9ad8\u901f\u7f13\u5b58\u4e2d\u7684\u5757\u53ef\u80fd\u88ab\u591a\u4e2a\u6838\u5171\u4eab \u4fee\u6539\uff08Modified\uff09\uff1a\u8868\u660e\u67d0\u4e2a\u5757\u5df2\u5728\u79c1\u6709\u9ad8\u901f\u7f13\u5b58\u4e2d\u88ab\u66f4\u65b0\uff1b\u5e76\u4e14\u8be5\u72b6\u6001\u610f\u5473\u7740\u8be5\u5757\u5177\u6709\u72ec\u5360\u6027</p> <p>Write Invalidation Protocol(write back)</p> <p> </p> <p>MSI protocol</p> <p></p> <p>Q\uff081\uff09</p> <p><pre><code>C0, R, A10C\nC0 Read miss\nC2 write back A10C\nMemoryA10C, 010C \u2192 020C\nC2.3 (S, A10C, 020C)\nMemory returns 020C to C0\nC0.3 (S, A10C, 020C)\n</code></pre> Q(2)</p> <p><pre><code>C1, W, A104, 0204\nC1 write hit\nC0 invalidation\nC0.1 (I, A104, 0104)\nC2 invalidation\nC2.1 (I, A104, 0104)\nC1.1 (M, A104, 0204)\n</code></pre> Q(3)</p> <p>```txt</p>"},{"location":"note/courses/Computer%20Architecture/CourseReview/","title":"Computer Architecture Course Review","text":""},{"location":"note/courses/Computer%20Architecture/CourseReview/#eight-great-architecture-ideas","title":"Eight great architecture ideas","text":""},{"location":"note/courses/Computer%20Architecture/CourseReview/#_1","title":"\u91cf\u5316\u5206\u6790\u65b9\u6cd5","text":"<p>CPU Performance\u516c\u5f0f</p> <p>Amdahl's law</p> <p>AMAT = HitTime + MissRate*MissPanelty</p>"},{"location":"note/courses/Computer%20Architecture/CourseReview/#pipeline","title":"Pipeline","text":"<p>Hazard \u4ee5\u53ca\u4ed6\u4eec\u7531\u4ec0\u4e48\u539f\u56e0\u5f15\u8d77\u7684</p> <p>WAR, WAW\u5728\u4e71\u5e8f\u65f6\u624d\u4f1a\u4ea7\u751f\u9519\u8bef\uff0c\u4f1a\u5bfc\u81f4\u8bfb\u51fa\u7684\u5bc4\u5b58\u5668\u503c\u4e0d\u5bf9\u6216\u8005\u6700\u540e\u5199\u5165\u7684\u503c\u4e0d\u5bf9</p> <p>Four Questions for Memory Hierarchy Designers</p> <p>\u5757\u7684\u5927\u5c0f\u548c\u6027\u80fd\u5bf9performance\u7684\u5f71\u54cd</p> <p>How to Improve</p> <ul> <li>reduce the miss penalty</li> <li>reduce .....</li> </ul> <p>Average Memory access time</p> <p>\u865a\u62df\u5730\u5740\uff0c TLB</p> <p>Cache performance analysis</p>"},{"location":"note/courses/Computer%20Architecture/CourseReview/#dynamic-scheduling","title":"Dynamic Scheduling","text":"<p>\u8bb0\u5206\u724c\u4e09\u5f20\u8868</p> <p>ROB\u6ee1\u4e86\uff0c\u6307\u4ee4\u4e0d\u80fd\u8fdb\u4fdd\u7559\u7ad9</p>"},{"location":"note/courses/Computer%20Architecture/CourseReview/#parallel-arch","title":"Parallel Arch","text":"<p>SIMD</p> <p>Vector Processor</p> <p>\u5f71\u54cd\u6027\u80fd\uff1a \u5411\u91cf\u957f\u5ea6     - \u7b49\u5f85\uff1a Data dependence, \u7ed3\u6784\u51b2\u7a81</p> <p>\u5411\u91cf\u7684\u94fe\u63a5\u6280\u672f</p> <p>MIMD</p> <p>consistensy</p> <p>coherence</p> <p>UMA/NUMA</p>"},{"location":"note/courses/Computer%20Architecture/Presentation/","title":"Pseudo-Associative Cache","text":""},{"location":"note/courses/Computer%20Architecture/Presentation/#1","title":"1 \u80cc\u666f","text":"<p> <pre><code>\u4e00\u822c\u6765\u8bf4\uff0c\u5185\u5b58\u5b50\u7cfb\u7edf\u5728\u5fae\u5904\u7406\u5668\u7684\u82af\u7247\u9762\u79ef\u4e2d\u5360\u6bd4\u5f88\u5927\uff0c\u7f13\u5b58\u6d88\u8017\u7684\u529f\u7387\u8d85\u8fc7\u5904\u7406\u5668\u603b\u529f\u7387\u7684 40%\n\n\u8bbe\u8ba1\u7f13\u5b58\u4ee5\u63d0\u9ad8\u6027\u80fd\u7684\u4e00\u79cd\u7b80\u5355\u65b9\u6cd5\u662f\u5c06\u7f13\u5b58\u5927\u5c0f\u7ffb\u500d\u3002\u7136\u800c\uff0c\u5728\u79fb\u52a8\u5904\u7406\u5668\u4e2d\uff0c\u7b80\u5355\u5730\u589e\u52a0\u7f13\u5b58\u5927\u5c0f\u4f1a\u663e\u8457\u5f71\u54cd\u82af\u7247\u9762\u79ef\u548c\u529f\u8017\u3002\u968f\u7740\u591a\u6838\u8d8b\u52bf\u7684\u65e5\u76ca\u663e\u8457\uff0c\u7f13\u5b58\u7ed3\u6784\u53d8\u5f97\u590d\u6742\u3002\u4e3a\u4e86\u83b7\u5f97\u66f4\u9ad8\u7684\u7f13\u5b58\u6027\u80fd\uff0c\u9700\u8981\u66f4\u5927\u7684\u5171\u4eab\u4e8c\u7ea7\uff08L2\uff09\u7f13\u5b58\uff0c\u4f46\u5927\u7f13\u5b58\u5927\u5c0f\u76f4\u63a5\u5173\u7cfb\u5230\u4e92\u8fde\u9762\u79ef\u548c\u76f8\u5173\u529f\u8017\u3002\n\n\ncache performance can be significantly increased by doubling cache \nsizes and increasing set associativity, but it results in hardware\ncost, larger area and power consumption.\n\n\u5c06\u7f13\u5b58\u5927\u5c0f\u7ffb\u500d\u5e76\u589e\u52a0\u7ec4\u76f8\u8054\u5ea6\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u7f13\u5b58\u6027\u80fd\uff0c\u4f46\u8fd9\u4f1a\u5bfc\u81f4\u786c\u4ef6\u6210\u672c\u589e\u52a0\u3001\u82af\u7247\u9762\u79ef\u589e\u5927\u548c\u529f\u8017\u4e0a\u5347\u3002\n![](assets/Presentation/file-20250326102044297.png)\n**\u7f13\u5b58\u672a\u547d\u4e2d\u7387\uff08MPKI\uff0c\u6bcf\u5343\u6761\u6307\u4ee4\u7684\u672a\u547d\u4e2d\u6570\uff09\u968f\u7f13\u5b58\u5927\u5c0f\u548c\u7ec4\u76f8\u8054\u5ea6\u7684\u53d8\u5316**\n\n\n\u968f\u7740\u7f13\u5b58\u5927\u5c0f\u548c\u7ec4\u76f8\u8054\u5ea6\u7684\u589e\u52a0\uff0c\u5e94\u7528\u7a0b\u5e8f\u7684\u6027\u80fd\u4f1a\u8fbe\u5230\u9971\u548c\uff08\u6216\u63d0\u5347\u5f88\u5c0f\uff09\u3002\u8fd9\u610f\u5473\u7740\u589e\u5927\u7f13\u5b58\u5927\u5c0f\u5e76\u975e\u9002\u7528\u4e8e\u6240\u6709\u5e94\u7528\u7a0b\u5e8f\u5de5\u4f5c\u8d1f\u8f7d\u7684\u5b8c\u7f8e\u89e3\u51b3\u65b9\u6848\uff0c\u56e0\u4e3a\u6bcf\u4e2a\u5e94\u7528\u7a0b\u5e8f\u5bf9\u786c\u4ef6\u8d44\u6e90\u7684\u67b6\u6784\u884c\u4e3a\u4e0d\u540c\u3002\n\n\u5728\u4f7f\u7528 IP\u7684 SoC\u8bbe\u8ba1\u4e2d\uff0c\u53e6\u4e00\u79cd\u63d0\u9ad8\u7f13\u5b58\u6027\u80fd\u7684\u7b80\u5355\u65b9\u6cd5\u662f\u589e\u52a0\u7ec4\u76f8\u8054\u5ea6\uff0c\u4f46\u8fd9\u4f1a\u5e26\u6765\u989d\u5916\u7684\u786c\u4ef6\u6210\u672c\u548c\u66f4\u9ad8\u7684\u529f\u8017\u3002\u5177\u6709\u7406\u60f3\u66ff\u6362\u65b9\u6cd5\u7684\u5168\u76f8\u8054\u7f13\u5b58\u53ef\u4ee5\u5927\u5e45\u63d0\u5347\u6027\u80fd\uff0c\u4f46\u5728\u5b9e\u9645\u4e2d\u96be\u4ee5\u5b9e\u73b0\u3002\u867d\u7136\u589e\u52a0\u7f13\u5b58\u7ec4\u76f8\u8054\u5ea6\u53ef\u4ee5\u5e26\u6765\u4e00\u5b9a\u7a0b\u5ea6\u7684\u6027\u80fd\u63d0\u5347\uff0c\u4f46\u5bf9\u4e8e\u5927\u591a\u6570\u5e94\u7528\u7a0b\u5e8f\u6765\u8bf4\uff0c\u63d0\u5347\u7a0b\u5ea6\u5728\u67d0\u4e00\u70b9\u4f1a\u8d8b\u4e8e\u9971\u548c\u3002\n\n\n\u901a\u5e38\uff0cLRU\uff08Least Recently Used\uff0c\u6700\u8fd1\u6700\u5c11\u4f7f\u7528\uff09\u66ff\u6362\u7b56\u7565\u5728\u7f13\u5b58\u8bbe\u8ba1\u4e2d\u5e94\u7528\u5e7f\u6cdb\uff0c\u4e14\u6709\u591a\u79cd\u5b9e\u73b0\u65b9\u5f0f\u3002\u5927\u591a\u6570\u60c5\u51b5\u4e0b\u5e76\u975e\u6240\u6709\u7ec4\u90fd\u9700\u8981\u7279\u5b9a\u7684\u76f8\u8054\u5ea6\uff0c\u4e14\u8def\u7684\u5229\u7528\u5f80\u5f80\u504f\u5411\u4e8e\u4e3b\u8def\n</code></pre></p> <p>Overall, direct-mapped caches are often the most economical choice for use in workstations, where cost-performance is the most important criterion.</p> <p>\u76f4\u63a5\u6620\u5c04\u7684\u4f18\u7f3a\u70b9\uff1a \u7531\u4e8e\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\u53ea\u5141\u8bb8\u4e00\u4e2a\u6570\u636e\u5757\u9a7b\u7559\u5728\u7531\u5730\u5740\u7d22\u5f15\u5b57\u6bb5\u76f4\u63a5\u6307\u5b9a\u7684\u7f13\u5b58\u7ec4\u4e2d\uff0c\u5176\u7f3a\u5931\u7387\uff08\u7f3a\u5931\u6b21\u6570\u4e0e\u603b\u5f15\u7528\u6b21\u6570\u7684\u6bd4\u7387\uff09\u5f80\u5f80\u6bd4\u76f8\u540c\u603b\u5927\u5c0f\u7684\u7ec4\u76f8\u8054\u7f13\u5b58\u66f4\u5dee\u3002\u7136\u800c\uff0c\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\u7684\u8f83\u4f4e\u547d\u4e2d\u8bbf\u95ee\u65f6\u95f4\u51cf\u8f7b\u4e86\u8f83\u9ad8\u7f3a\u5931\u7387\u7684\u5f71\u54cd\u3002</p> <p>\u6b64\u5916\uff0c\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\u66f4\u7b80\u5355\u3001\u66f4\u5bb9\u6613\u8bbe\u8ba1\uff0c\u5e76\u4e14\u6240\u9700\u9762\u79ef\u66f4\u5c0f\u3002\u603b\u4f53\u800c\u8a00\uff0c\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\u5728\u5de5\u4f5c\u7ad9\u4e2d\u901a\u5e38\u662f\u6700\u7ecf\u6d4e\u7684\u9009\u62e9\uff0c\u56e0\u4e3a\u6027\u4ef7\u6bd4\u662f\u6700\u91cd\u8981\u7684\u6807\u51c6\u3002</p> <p>\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\u4e2d\u5927\u91cf\u7684\u51b2\u7a81\u7f3a\u5931\u4ecd\u7136\u662f\u4e00\u4e2a\u4e3b\u8981\u95ee\u9898\u3002\u5f53\u4e24\u4e2a\u5730\u5740\u6620\u5c04\u5230\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\u4e2d\u7684\u540c\u4e00\u4e2a\u7f13\u5b58\u7ec4\u65f6\uff0c\u5c31\u4f1a\u53d1\u751f\u51b2\u7a81\u7f3a\u5931\uff08\u4e5f\u79f0\u4e3a\u51b2\u7a81\u672a\u547d\u4e2d\uff09</p>"},{"location":"note/courses/Computer%20Architecture/Presentation/#2-intoduction","title":"2 Intoduction","text":"<p>Pseudo-Associative(Column Associative ) Cache</p> <p>\u5b83\u901a\u8fc7\u5141\u8bb8\u51b2\u7a81\u5730\u5740\u52a8\u6001\u9009\u62e9\u5907\u7528\u54c8\u5e0c\u51fd\u6570\uff0c\u5c06\u76f4\u63a5\u6620\u5c04\u8bbf\u95ee\u4e2d\u4ea7\u751f\u7684\u51b2\u7a81\u964d\u81f3\u6700\u4f4e\uff0c\u4ece\u800c\u4f7f\u5927\u591a\u6570\u51b2\u7a81\u6570\u636e\u80fd\u591f\u9a7b\u7559\u5728\u7f13\u5b58\u4e2d\u3002\u4e0e\u6b64\u540c\u65f6\uff0c\u5173\u952e\u7684\u547d\u4e2d\u8bbf\u95ee\u8def\u5f84\u4fdd\u6301\u4e0d\u53d8\u3002\u9ad8\u6548\u5b9e\u73b0\u8be5\u65b9\u6848\u7684\u5173\u952e\u662f\u5728\u6bcf\u4e2a\u7f13\u5b58\u7ec4\u4e2d\u6dfb\u52a0\u4e00\u4e2a\u91cd\u54c8\u5e0c\u4f4d\uff0c\u7528\u4e8e\u6307\u793a\u8be5\u7ec4\u662f\u5426\u5b58\u50a8\u4e86\u7531\u5907\u7528\u54c8\u5e0c\u51fd\u6570\u5f15\u7528\u7684\u6570\u636e\u3002\u5f53\u591a\u4e2a\u5730\u5740\u6620\u5c04\u5230\u540c\u4e00\u4f4d\u7f6e\u65f6\uff0c\u4f18\u5148\u66ff\u6362\u8fd9\u4e9b\u91cd\u54c8\u5e0c\u4f4d\u7f6e\u3002</p> <p>\u5217\u5173\u8054\u7f13\u5b58\u7684\u57fa\u672c\u601d\u60f3\u662f\u901a\u8fc7\u52a8\u6001\u9009\u62e9\u4e0d\u540c\u7684\u4f4d\u7f6e\uff08\u7531\u4e0d\u540c\u7684\u54c8\u5e0c\u51fd\u6570\u8bbf\u95ee\uff09\u6765\u89e3\u51b3\u51b2\u7a81\uff0c\u51b2\u7a81\u6570\u636e\u53ef\u4ee5\u9a7b\u7559\u5728\u8fd9\u4e9b\u4f4d\u7f6e\u3002</p> <p>\u53e6\u4e00\u65b9\u9762\uff0c\u5217\u5173\u8054\u7f13\u5b58\u662f\u76f4\u63a5\u6620\u5c04\u7684\uff0c\u5f53\u9047\u5230\u51b2\u7a81\u5730\u5740\u65f6\uff0c\u4f1a\u52a8\u6001\u5e94\u7528\u4e0d\u540c\u7684\u54c8\u5e0c\u51fd\u6570\uff0c\u4ee5\u4fbf\u5c06\u6570\u636e\u653e\u7f6e\u6216\u5b9a\u4f4d\u5230\u4e0d\u540c\u7684\u7ec4\u4e2d\u3002\u4e00\u79cd\u7b80\u5355\u7684\u5907\u7528\u54c8\u5e0c\u51fd\u6570\u9009\u62e9\u662f\u5c06\u6700\u9ad8\u4f4d\u53d6\u53cd\u7684\u4f4d\u9009\u62e9\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u4f4d\u7ffb\u8f6c\u3002</p> <p>\u51b2\u7a81\u4e0d\u662f\u5728\u4e00\u4e2a\u7ec4\u5185\u89e3\u51b3\uff0c\u800c\u662f\u5728\u6574\u4e2a\u7f13\u5b58\u5185\u89e3\u51b3\uff0c\u6574\u4e2a\u7f13\u5b58\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u7ec4\u7ec4\uff0c\u56e0\u6b64\u5f97\u540d\u5217\u5173\u8054\u3002</p> <p></p> <p>Multiple Hashing Functions</p> <p>\u5217\u5173\u8054\u7f13\u5b58\u4f7f\u7528\u4e24\u4e2a\uff08\u6216\u53ef\u80fd\u66f4\u591a\uff09\u4e0d\u540c\u7684\u54c8\u5e0c\u51fd\u6570\\(h_1\\)\u548c\\(h_2\\)\u6765\u8bbf\u95ee\u7f13\u5b58\uff0c\u5176\u4e2d\\(h_1[a]\\)\u8868\u793a\u5c06\u54c8\u5e0c\u51fd\u6570\\(h_1\\)\u5e94\u7528\u4e8e\u5730\u5740\\(a\\)\u6240\u83b7\u5f97\u7684\u7d22\u5f15\u3002\u5982\u679c\\(h_1[a_i]\\)\u7d22\u5f15\u5230\u6709\u6548\u6570\u636e\uff0c\u5219\u53d1\u751f\u9996\u6b21\u547d\u4e2d\uff1b\u5982\u679c\u672a\u547d\u4e2d\uff0c\u5219\u4f7f\u7528\\(h_2[a_i]\\)\u8bbf\u95ee\u7f13\u5b58\u3002\u5982\u679c\u7b2c\u4e8c\u6b21\u547d\u4e2d\uff0c\u5219\u68c0\u7d22\u6570\u636e\u3002\u7136\u540e\u4ea4\u6362\u4e24\u6761\u7f13\u5b58\u884c\u4e2d\u7684\u6570\u636e\uff0c\u4ee5\u4fbf\u4e0b\u6b21\u8bbf\u95ee\u66f4\u6709\u53ef\u80fd\u9996\u6b21\u547d\u4e2d\u3002\u7136\u800c\uff0c\u5982\u679c\u7b2c\u4e8c\u6b21\u8bbf\u95ee\u4e5f\u672a\u547d\u4e2d\uff0c\u5219\u4ece\u4e3b\u5185\u5b58\u4e2d\u68c0\u7d22\u6570\u636e\uff0c\u5c06\u5176\u653e\u7f6e\u5728\u7531\\(h_2[a_i]\\)\u7d22\u5f15\u7684\u7f13\u5b58\u884c\u4e2d\uff0c\u5e76\u4e0e\u7b2c\u4e00\u4e2a\u4f4d\u7f6e\u7684\u6570\u636e\u4ea4\u6362\u3002 \u82e5miss,\u5219\u4ece\u4e3b\u5b58\u8bfb\u6570\u636e\u81f3h2\u5bf9\u5e94\u7684\u7f13\u5b58\uff0c\u5e76\u548ch1\u5bf9\u5e94\u4f4d\u7f6e\u7684\u7f13\u5b58\u4ea4\u6362</p> <p></p> <p>\u4e3e\u4f8b\uff1a\u9996\u5148\u4f7f\u7528\u4f4d\u9009\u62e9\u51fd\u6570(b)\uff0cmiss\u540e\u4f7f\u7528\u4f4d\u53cd\u8f6c\u51fd\u6570\uff08f\uff09</p> <p>\u4f7f\u7528\u4e24\u4e2a\u6216\u66f4\u591a\u54c8\u5e0c\u51fd\u6570\u6a21\u4eff\u4e86\u7ec4\u76f8\u8054\u6027\uff0c\u56e0\u4e3a\u5bf9\u4e8e\u51b2\u7a81\u5730\u5740\uff08\u5373\\(h_1[a_i] = h_1[a_j]\\)\u7684\\(a_i\\)\u548c\\(a_j\\) \uff09\uff0c\u7528\\(h_2\\)\u5bf9\\(a_j\\)\u8fdb\u884c\u91cd\u54c8\u5e0c\u6709\u5f88\u9ad8\u7684\u6982\u7387\u89e3\u51b3\u51b2\u7a81\uff08\u5373\\(h_1[a_i]\u2260h_2[a_j]\\)\uff09\u3002\u4e0d\u8fc7\u8981\u6ce8\u610f\uff0c\u9996\u6b21\u547d\u4e2d\u7684\u547d\u4e2d\u8bbf\u95ee\u65f6\u95f4\u4fdd\u6301\u4e0d\u53d8\u3002\u4e3a\u4e86\u7b80\u5355\u548c\u5feb\u901f\uff0c\u9996\u6b21\u8bbf\u95ee\u91c7\u7528\u4f4d\u9009\u62e9\u65b9\u5f0f\uff08\u5373\\(h_1 = b\\)\uff09\uff0c\u800c\u4f4d\u7ffb\u8f6c\u901a\u5e38\u7528\u4e8e\\(h_2\\)\uff08\u5373\\(h_2 = f\\)\uff09\u3002</p> <p>\u5c06\u4f4d\u7ffb\u8f6c\u7528\u4f5c\u7b2c\u4e8c\u4e2a\u54c8\u5e0c\u51fd\u6570\u4f1a\u5f15\u53d1\u4e00\u4e2a\u6f5c\u5728\u95ee\u9898\u3002\u8003\u8651\u4e24\u4e2a\u5730\u5740\\(a_i\\)\u548c\\(a_x\\)\uff0c\u5b83\u4eec\u4ec5\u5728\u7d22\u5f15\u5b57\u6bb5\u7684\u9ad8\u4f4d\u4f4d\u4e0a\u6709\u6240\u4e0d\u540c\uff08\u5373\\(f[a_{i}]=b[a_{x}]\\)\uff09\u3002\u8fd9\u4e24\u4e2a\u5730\u5740\u662f\u4e0d\u540c\u7684\uff0c\u7136\u800c\u5b83\u4eec\u7684\u6807\u7b7e\u5b57\u6bb5\u5374\u662f\u76f8\u540c\u7684\u3002\u56e0\u6b64\uff0c\u4f7f\u7528\\(f[a_{i}]\\)\u8fdb\u884c\u91cd\u54c8\u5e0c\u8bbf\u95ee\u65f6\uff0c\u4f1a\u547d\u4e2d\u4e00\u4e2a\u672c\u5e94\u4ec5\u7531\\(b[a_{x}]\\)\u8bbf\u95ee\u7684\u6570\u636e\u5757\u3002\u8fd9\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\uff0c\u56e0\u4e3a\u4e00\u4e2a\u6570\u636e\u5757\u5fc5\u987b\u4e0e\u552f\u4e00\u7684\u5730\u5740\u4e00\u4e00\u5bf9\u5e94\u3002\u5bf9\u4e8e\u90a3\u4e9b\u7d22\u5f15\u76f8\u540c\u4ece\u800c\u5f15\u7528\u540c\u4e00\u7f13\u5b58\u7ec4\u7684\u5730\u5740\uff0c\u9700\u8981\u901a\u8fc7\u6bd4\u8f83\u6807\u7b7e\u6765\u786e\u5b9a\u67d0\u4e2a\u5730\u5740\u662f\u5426\u6709\u6743\u8bbf\u95ee\u8be5\u6570\u636e\u5757\u3002 \u8fd9\u5c31\u4e3a\u8be5\u95ee\u9898\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7b80\u5355\u7684\u89e3\u51b3\u65b9\u6848\uff0c\u5373\u628a\u7d22\u5f15\u5b57\u6bb5\u7684\u9ad8\u4f4d\u4f4d\u9644\u52a0\u5230\u6807\u7b7e\u4e0a\uff0c\u5982\u56fe4\u6240\u793a\u3002\u4f7f\u7528\\(f[a_{i}]\\)\u8fdb\u884c\u91cd\u54c8\u5e0c\u5c06\u6b63\u786e\u5730\u5931\u8d25\uff0c\u56e0\u4e3a\u6b64\u65f6\u6570\u636e\u5757\u518d\u6b21\u4e0e\u552f\u4e00\u7684\u5730\u5740\\(a_x\\)\u5173\u8054\u3002\u53ea\u8981\u4f7f\u7528\u4f4d\u7ffb\u8f6c\uff0c\u5c31\u5047\u5b9a\u91c7\u7528\u4e86\u8fd9\u79cd\u65b9\u6848\u3002</p> <p></p> <p>\u54c8\u5e0c - \u91cd\u54c8\u5e0c\u7b97\u6cd5\u88ab\u8868\u793a\u4e3a\u4e0b\u56fe \u4e2d\u7684\u51b3\u7b56\u6811</p> <p> \u4e0b\u8868\u4e2d\u5217\u51fa\u4e86\u5404\u79cd\u7b26\u53f7\u7684 \u542b\u4e49\u548c\u9700\u8981\u7684\u5468\u671f\u6570</p> <p></p> <p>\u4ea4\u6362\u5206\u652f\u6240\u793a\u7684\u4e09\u4e2a\u5468\u671f\uff08b(a) miss f(a) hit\uff09\uff0c\u5206\u522b\u6765\u81ea\u521d\u59cb\u7f13\u5b58\u8bbf\u95ee\u7684\u4e00\u4e2a\u5468\u671f\u3001\u91cd\u54c8\u5e0c\u8bbf\u95ee\u7684\u4e00\u4e2a\u5468\u671f\uff0c\u4ee5\u53ca\u4ea4\u6362\u8fc7\u7a0b\u4e2d\u6d6a\u8d39\u7684\u4e00\u4e2a\u5468\u671f\u3002\u6839\u636e\u8868 1\uff0c\u6570\u636e\u4ea4\u6362\u8fd8\u9700\u8981\u989d\u5916\u4e24\u4e2a\u5468\u671f\u624d\u80fd\u5b8c\u6210\u3002\u4e0d\u8fc7\uff0c\u5982\u679c\u7f13\u5b58\u6709\u4e00\u4e2a\u989d\u5916\u7684\u7f13\u51b2\u533a\uff0c\u90a3\u4e48\u8fd9\u6b21\u6570\u636e\u4ea4\u6362\u5c31\u65e0\u9700\u5904\u7406\u5668\u53c2\u4e0e\uff0c\u5904\u7406\u5668\u5728\u7b49\u5f85\u7f13\u5b58\u518d\u6b21\u53ef\u7528\u7684\u8fc7\u7a0b\u4e2d\u53ef\u4ee5\u53bb\u6267\u884c\u5176\u4ed6\u6709\u7528\u7684\u5de5\u4f5c\u3002\u5982\u679c\u6709\u4e00\u534a\u7684\u60c5\u51b5\u90fd\u662f\u5982\u6b64\uff0c\u90a3\u4e48\u4e00\u6b21\u6570\u636e\u4ea4\u6362\u6240\u6d6a\u8d39\u7684\u65f6\u95f4\u5c31\u76f8\u5f53\u4e8e\u4e00\u4e2a\u5468\u671f\u3002\u6240\u4ee5\u5047\u5b9a\u6240\u6709\u7684\u4ea4\u6362\u64cd\u4f5c\u90fd\u662f\u53ea\u6709\u4e00\u4e2a\u5468\u671f</p> <p>\u54c8\u5e0c - \u91cd\u54c8\u5e0c\u7f13\u5b58\u5b58\u5728\u4e00\u4e2a\u4e25\u91cd\u7684\u7f3a\u9677\uff0c\u8fd9\u5e38\u5e38\u4f7f\u5176\u6027\u80fd\u964d\u81f3\u4e0e\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\u76f8\u540c\u7684\u6c34\u5e73,\u6bcf\u6b21\u9996\u6b21\u672a\u547d\u4e2d\u540e\u90fd\u4f1a\u5c1d\u8bd5\u91cd\u54c8\u5e0c\uff0c\u8fd9\u53ef\u80fd\u4f1a\u66ff\u6362\u91cd\u54c8\u5e0c\u4f4d\u7f6e\u4e2d\u6f5c\u5728\u6709\u7528\u7684\u6570\u636e\uff0c\u5373\u4f7f\u4e3b\u4f4d\u7f6e\u5b58\u5728\u4e00\u4e2a\u672a\u88ab\u4f7f\u7528\u7684\u5757\u3002</p> <p>\u4e0d\u5e78\u7684\u662f\uff0c\u54c8\u5e0c - \u91cd\u54c8\u5e0c\u7f13\u5b58\u5b58\u5728\u4e00\u4e2a\u4e25\u91cd\u7684\u7f3a\u9677\uff0c\u8fd9\u5e38\u5e38\u4f7f\u5176\u6027\u80fd\u964d\u81f3\u4e0e\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\u76f8\u540c\u7684\u6c34\u5e73\uff0c\u8fd9\u57285.3\u8282\u4e2d\u53ef\u4ee5\u770b\u5230\u3002\u5176\u95ee\u9898\u7684\u6839\u6e90\u5728\u4e8e\uff0c\u6bcf\u6b21\u9996\u6b21\u672a\u547d\u4e2d\u540e\u90fd\u4f1a\u5c1d\u8bd5\u91cd\u54c8\u5e0c\uff0c\u8fd9\u53ef\u80fd\u4f1a\u66ff\u6362\u91cd\u54c8\u5e0c\u4f4d\u7f6e\u4e2d\u6f5c\u5728\u6709\u7528\u7684\u6570\u636e\uff0c\u5373\u4f7f\u4e3b\u4f4d\u7f6e\u5b58\u5728\u4e00\u4e2a\u672a\u88ab\u4f7f\u7528\u7684\u5757\u3002\u8003\u8651\u4ee5\u4e0b\u5f15\u7528\u6a21\u5f0f\\(a_i\\) \\(a_j\\) \\(a_x\\) \\(a_y\\) \\(a_z\\) \\(a_y\\) \\(a_z\\) \u2026\u2026\uff0c\u5176\u4e2d\u5730\u5740\\(a_i\\)\u548c\\(a_j\\)\u901a\u8fc7\u4f4d\u9009\u62e9\u6620\u5c04\u5230\u76f8\u540c\u7684\u7f13\u5b58\u4f4d\u7f6e\uff0c\u800c\\(a_x\\)\u662f\u901a\u8fc7\u4f4d\u7ffb\u8f6c\u6620\u5c04\u5230\u76f8\u540c\u4f4d\u7f6e\u7684\u5730\u5740\uff08\u5373\\(b[a_i] = b[a_j]\\)\uff0c\u4e14\\(f[a_i] = b[a_x]\\)\uff09\u3002\u8fd9\u79cd\u60c5\u51b5\u5982\u56fe6\u6240\u793a\u3002\u5728\u524d\u4e24\u6b21\u5f15\u7528\u4e4b\u540e\uff0c\u54c8\u5e0c - \u91cd\u54c8\u5e0c\u7b97\u6cd5\u548c\u5217\u5173\u8054\u7b97\u6cd5\u90fd\u4f1a\u6709\u7531\\(a_j\\)\u5f15\u7528\u7684\u6570\u636e\uff08\u4e3a\u7b80\u6d01\u8d77\u89c1\uff0c\u5c06\u5176\u79f0\u4e3aj\uff09\u4ee5\u53ca\u6570\u636ei \u3002\u5206\u522b\u4f4d\u4e8e\u975e\u91cd\u54c8\u5e0c\u548c\u91cd\u54c8\u5e0c\u4f4d\u7f6e\u3002\u5f53\u9047\u5230\u4e0b\u4e00\u4e2a\u5730\u5740\\(a_x\\)\u65f6\uff0c\u4e24\u79cd\u7b97\u6cd5\u90fd\u4f1a\u5c1d\u8bd5\u8bbf\u95ee\u96c6\u5408\\(b[a_x]\\)\uff0c\u8be5\u96c6\u5408\u5305\u542b\u91cd\u54c8\u5e0c\u540e\u7684\u6570\u636e\\(i\\)\u3002\u4f46\u662f\u5f53\u9996\u6b21\u672a\u547d\u4e2d\u53d1\u751f\u65f6\uff0c\u54c8\u5e0c - \u91cd\u54c8\u5e0c\u7b97\u6cd5\u63a5\u4e0b\u6765\u4f1a\u5c1d\u8bd5\u8bbf\u95ee\\(f[a_x]\\)\uff0c\u8fd9\u5bfc\u81f4\u7b2c\u4e8c\u6b21\u672a\u547d\u4e2d\uff0c\u5e76\u8986\u76d6\u4e86\u6570\u636e\\(j\\)\u3002\u53ea\u8981\\(a_i\\)\u548c\\(a_x\\)\u4ea4\u66ff\u51fa\u73b0\uff0c\u8fd9\u79cd\u6a21\u5f0f\u5c31\u4f1a\u6301\u7eed\u4e0b\u53bb\uff1b\u5176\u4e2d\u4e00\u4e2a\u5f15\u7528\u7684\u6570\u636e\u4f1a\u88ab\u8986\u76d6\uff0c\u56e0\u4e3a\u672a\u4f7f\u7528\u7684\u6570\u636e\u5757\\(i\\)\u88ab\u6765\u56de\u4ea4\u6362\uff0c\u4f46\u4ece\u672a\u88ab\u66ff\u6362\u3002\u6211\u4eec\u5c06\u8fd9\u79cd\u8d1f\u9762\u5f71\u54cd\u79f0\u4e3a\u4e8c\u6b21\u98a0\u7c38\u3002</p> <p></p> <p>\u5982\u4f55\u89e3\u51b3\u4e0a\u8ff0\u7684\u91cd\u54c8\u5e0c\u5bfc\u81f4\u7684\u4e8c\u6b21\u98a0\u7c38\u95ee\u9898\uff1f</p> <p>\u6709\u6548\u5b9e\u73b0\u5217\u5173\u8054\u7684\u5173\u952e\u5728\u4e8e\uff0c\u5982\u679c\u9996\u6b21\u8bbf\u95ee\u5230\u8fbe\u7684\u4f4d\u7f6e\u672c\u8eab\u5305\u542b\u91cd\u54c8\u5e0c\u6570\u636e\u5757\uff0c\u5c31\u7981\u6b62\u8fdb\u884c\u91cd\u54c8\u5e0c\u8bbf\u95ee\u3002</p> <p>\u6bcf\u4e2a\u7f13\u5b58\u7ec4\u90fd\u5305\u542b\u4e00\u4e2a\u989d\u5916\u7684\u4f4d\uff0c\u7528\u4e8e\u6307\u793a\u8be5\u7ec4\u662f\u5426\u4e3a\u91cd\u54c8\u5e0c\u4f4d\u7f6e\uff0c\u5373\u8be5\u7ec4\u4e2d\u7684\u6570\u636e\u662f\u5426\u7531f[a]\u8fdb\u884c\u7d22\u5f15\u3002\u5f53\u5fc5\u987b\u66ff\u6362\u4e00\u4e2a\u7f13\u5b58\u7ec4\u65f6\uff0c\u603b\u662f\u4f18\u5148\u9009\u62e9\u91cd\u54c8\u5e0c\u4f4d\u7f6e\uff08\u5982\u679c\u53ef\u80fd\u7684\u8bdd\u4f1a\u7acb\u5373\u9009\u62e9\uff09\u3002</p> <p>\u56e0\u6b64\uff0c\u5982\u679c\u9996\u6b21\u8bbf\u95ee\u672a\u547d\u4e2d\uff0c\u5c31\u68c0\u67e5\u8be5\u7ec4\u7684\u91cd\u54c8\u5e0c\u4f4d\u7f6e\u4f4d\uff08\u6216\u7b80\u79f0\u91cd\u54c8\u5e0c\u4f4d\uff0c\u5373\u88681\u4e2d\u5217\u51fa\u7684\u201c\\(Rbit = 1?\\)\u201d\uff09\u3002\u5982\u679c\u5b83\u88ab\u8bbe\u7f6e\u4e3a1\uff0c\u5c31\u4e0d\u4f1a\u5c1d\u8bd5\u91cd\u54c8\u5e0c\u8bbf\u95ee\uff0c\u4ece\u5185\u5b58\u4e2d\u83b7\u53d6\u7684\u6570\u636e\u4f1a\u88ab\u653e\u7f6e\u5728\u8be5\u4f4d\u7f6e\u3002\u7136\u540e\u5c06\u91cd\u54c8\u5e0c\u4f4d\u91cd\u7f6e\u4e3a0\uff0c\u4ee5\u8868\u660e\u8be5\u7ec4\u4e2d\u7684\u6570\u636e\u672a\u6765\u5c06\u7531\\(b[a]\\)\u8fdb\u884c\u7d22\u5f15\u3002\u53e6\u4e00\u65b9\u9762\uff0c\u5982\u679c\u91cd\u54c8\u5e0c\u4f4d\u5df2\u7ecf\u662f0\uff0c\u90a3\u4e48\u5728\u9996\u6b21\u672a\u547d\u4e2d\u65f6\uff0c\u91cd\u54c8\u5e0c\u8bbf\u95ee\u5c06\u6309\u71673.1\u8282\u4e2d\u63cf\u8ff0\u7684\u65b9\u5f0f\u7ee7\u7eed\u8fdb\u884c\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u5982\u679c\u53d1\u751f\u7b2c\u4e8c\u6b21\u672a\u547d\u4e2d\uff0c\u90a3\u4e48\u8981\u66ff\u6362\u6570\u636e\u7684\u7ec4\u540c\u6837\u662f\u4e00\u4e2a\u91cd\u54c8\u5e0c\u4f4d\u7f6e\uff0c\u8fd9\u6b63\u662f\u6211\u4eec\u6240\u671f\u671b\u7684\u3002</p> <p>\u5728\u542f\u52a8\u65f6\uff08\u6216\u7f13\u5b58\u5237\u65b0\u540e\uff09\uff0c\u6240\u6709\u7a7a\u7684\u7f13\u5b58\u4f4d\u7f6e\u7684\u91cd\u54c8\u5e0c\u4f4d\u90fd\u5e94\u8bbe\u7f6e\u4e3a 1</p> <p> \u4e0e\u54c8\u5e0c - \u91cd\u54c8\u5e0c\u7f13\u5b58\u4e00\u6837\uff0c\u5982\u679c\u786e\u5b9e\u5c1d\u8bd5\u8fdb\u884c\u91cd\u54c8\u5e0c\uff0c\u5217\u5173\u8054\u7b97\u6cd5\u4f1a\u5c1d\u8bd5\u5229\u7528\u65f6\u95f4\u5c40\u90e8\u6027\uff0c\u5c06\u6700\u8fd1\u8bbf\u95ee\u7684\u6570\u636e\u4ea4\u6362\u5230\u975e\u91cd\u54c8\u5e0c\u4f4d\u7f6e\u3002\u91cd\u54c8\u5e0c\u4f4d\u7684\u4f7f\u7528\u6709\u52a9\u4e8e\u66f4\u9ad8\u6548\u5730\u5229\u7528\u7f13\u5b58\u7a7a\u95f4\uff0c\u56e0\u4e3a\u5b83\u80fd\u7acb\u5373\u8868\u660e\u67d0\u4e2a\u4f4d\u7f6e\u662f\u5426\u4e3a\u91cd\u54c8\u5e0c\u4f4d\u7f6e\uff0c\u5e76\u4e14\u5728\u9700\u8981\u66ff\u6362\u65f6\uff0c\u91cd\u54c8\u5e0c\u4f4d\u7f6e\u4f1a\u4f18\u5148\u4e8e\u975e\u91cd\u54c8\u5e0c\u4f4d\u7f6e\u88ab\u9009\u62e9\u3002</p> <p></p>"},{"location":"note/courses/Computer%20Architecture/Presentation/#3","title":"3 \u6027\u80fd\u5206\u6790","text":"<p>\u6700\u540e\u8fdb\u884c\u6d4b\u8bd5\u4f7f\u7528\u7684\u65b9\u6cd5\u4e3b\u8981\u56f4\u7ed5\u8ddf\u8e2a\u9a71\u52a8\u6a21\u62df\u5c55\u5f00\uff0c\u5177\u4f53\u5982\u4e0b\uff1a  1. \u6a21\u62df\u5668\u5f00\u53d1\uff1a\u7f16\u5199\u4e86\u7528\u4e8e\u76f4\u63a5\u6620\u5c04\u3001\u7ec4\u76f8\u8054\u3001\u727a\u7272\u7f13\u5b58\u3001\u54c8\u5e0c-\u91cd\u54c8\u5e0c\u548c\u5217\u5173\u8054\u7f13\u5b58\u7684\u8ddf\u8e2a\u9a71\u52a8\u6a21\u62df\u5668\u3002\u591a\u7a0b\u5e8f\u6a21\u62df\u4e2d\u5047\u8bbe\u6bcf\u4e2a\u5f15\u7528\u5173\u8054\u8fdb\u7a0b\u6807\u8bc6\u7b26\u4ee5\u533a\u5206\u4e0d\u540c\u8fdb\u7a0b\u6570\u636e\uff0c\u4e14\u6240\u6709\u7f13\u5b58\u5047\u8bbe\u4e3a\u7edf\u4e00\u7684\u6307\u4ee4\u548c\u6570\u636e\u7f13\u5b58\u3002  2. \u8ddf\u8e2a\u6570\u636e\u9009\u53d6\uff1a\u4f7f\u7528\u6765\u81eaSites\u548cAgarwal\u7684ATUM\u5b9e\u9a8c\u7684\u8ddf\u8e2a\u6570\u636e\uff0c\u5305\u542b\u73b0\u5b9e\u5de5\u4f5c\u8d1f\u8f7d\uff0c\u6709\u64cd\u4f5c\u7cfb\u7edf\u548c\u591a\u7a0b\u5e8f\u6d3b\u52a8\u3002\u5305\u62ec\u4ece\u5728VMS\u4e0b\u8fd0\u884c\u7684\u5927\u578b\u7a0b\u5e8f\u5bfc\u51fa\u7684\u4e94\u4e2a\u5355\u5904\u7406\u5668\u8ddf\u8e2a\u6570\u636e\uff08LISPO\u3001DECO.1\u3001SPICO\u3001IVEXO\u3001FORLO\uff09\uff0c\u4ee5\u53ca\u540d\u4e3aMUL6.0\u7684\u591a\u7a0b\u5e8f\u8ddf\u8e2a\u6570\u636e\uff08\u542b\u516d\u4e2a\u8fdb\u7a0b\u6d3b\u52a8\uff09\u3002\u6bcf\u4e2a\u8ddf\u8e2a\u6570\u636e\u957f\u5ea6\u7ea650\u4e07\u6b21\u5f15\u7528\u3002  3. \u6027\u80fd\u6307\u6807\u8ba1\u7b97      - \u672a\u547d\u4e2d\u7387\uff1a\u672a\u547d\u4e2d\u6b21\u6570\u4e0e\u603b\u5f15\u7528\u6b21\u6570\u7684\u6bd4\u7387\u3002     - \u6d88\u9664\u7684\u51b2\u7a81\u672a\u547d\u4e2d\u767e\u5206\u6bd4\uff1a\u901a\u8fc7\u7279\u5b9a\u516c\u5f0f\u8ba1\u7b97\uff0c\u5373\\(\\frac{\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\u672a\u547d\u4e2d\u7387 - \u7279\u5b9a\u7f13\u5b58\u672a\u547d\u4e2d\u7387}{\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\u672a\u547d\u4e2d\u7387 - \u5f3a\u5236\u672a\u547d\u4e2d\u7387}\\times100\\%\\) \uff0c\u5176\u4e2d\u5f3a\u5236\u672a\u547d\u4e2d\u7387\u662f\u8ddf\u8e2a\u4e2d\u552f\u4e00\u5f15\u7528\u6b21\u6570\u4e0e\u603b\u5f15\u7528\u6b21\u6570\u7684\u6bd4\u7387\u3002      - \u5e73\u5747\u5185\u5b58\u8bbf\u95ee\u65f6\u95f4\uff1a\u6839\u636e\u4e0d\u540c\u7f13\u5b58\u7c7b\u578b\uff0c\u57fa\u4e8e\u76f8\u5e94\u516c\u5f0f\u8ba1\u7b97\u3002\u5982\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\u6839\u636e\u547d\u4e2d\u548c\u672a\u547d\u4e2d\u60c5\u51b5\u8ba1\u7b97\uff1b\u54c8\u5e0c-\u91cd\u54c8\u5e0c\u7f13\u5b58\u8003\u8651\u9996\u6b21\u547d\u4e2d\u3001\u91cd\u54c8\u5e0c\u547d\u4e2d\u548c\u672a\u547d\u4e2d\u60c5\u51b5\uff1b\u5217\u5173\u8054\u7f13\u5b58\u8fd8\u9700\u8003\u8651\u7b2c\u4e8c\u6b21\u8bbf\u95ee\u6b21\u6570\u7b49\u53c2\u6570\u8fdb\u884c\u8ba1\u7b97\u3002\u6a21\u62df\u5668\u6d4b\u91cf\u6bcf\u79cd\u7f13\u5b58\u7c7b\u578b\u7684\u76f8\u5173\u53c2\u6570\uff08\u5982\u603b\u5f15\u7528\u6b21\u6570\\(R\\)\u3001\u7b2c\u4e8c\u6b21\u8bbf\u95ee\u603b\u6b21\u6570\\(R_{2}\\)\u3001\u9996\u6b21\u8bbf\u95ee\u603b\u547d\u4e2d\u6b21\u6570\\(H_{1}\\)\u3001\u7b2c\u4e8c\u6b21\u8bbf\u95ee\u603b\u547d\u4e2d\u6b21\u6570\\(H_{2}\\)\uff09\u6765\u5f97\u51fa\u5e73\u5747\u5185\u5b58\u8bbf\u95ee\u65f6\u95f4\u3002 </p> <p>\u6a21\u62df\u7ed3\u679c\u5982\u4e0b\uff1a</p> <p>Figure 12: MS rates versus cache size, averagedover w six traces. Block Si2e is 16 bytSS.</p> <ul> <li>\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\uff1a\u672a\u547d\u4e2d\u7387\u4ece 6.0% \u8fc5\u901f\u964d\u81f3 2.0%\uff0c\u7136\u540e\u8d8b\u4e8e\u7ea6 1.5% \u7684\u5e73\u5747\u5f3a\u5236\u672a\u547d\u4e2d\u7387\u3002</li> <li>\u5176\u4ed6\u7f13\u5b58\u5206\u7ec4\uff1a\u54c8\u5e0c - \u91cd\u54c8\u5e0c\u7f13\u5b58\u548c\u727a\u7272\u7f13\u5b58\u4e3a\u4e00\u7ec4\uff0c\u54c8\u5e0c - \u91cd\u54c8\u5e0c\u7f13\u5b58\u672a\u547d\u4e2d\u7387\u4ece 6.0% \u4e0b\u964d\u5230\u7ea6 1.9%\uff0c\u5728\u8fc7\u6e21\u70b9\u6709\u5f02\u5e38\u53d8\u5316\uff1b\u4e24\u8def\u7ec4\u76f8\u8054\u7f13\u5b58\u548c\u5217\u5173\u8054\u7f13\u5b58\u4e3a\u4e00\u7ec4\uff0c\u5c0f\u7f13\u5b58\u65f6\u672a\u547d\u4e2d\u7387\u6bd4\u76f4\u63a5\u6620\u5c04\u7f13\u5b58\u4f4e\u8fd1 2.0%\uff0c\u8fc7\u6e21\u70b9\u7565\u4f4e\u4e8e 1.0%\uff0c\u5927\u7f13\u5b58\u65f6\u4e0e\u5f3a\u5236\u672a\u547d\u4e2d\u7387\u76f8\u540c\u3002 </li> </ul> <p>Figure 13: Percentages of interference misses removed versus cache size., averaged over the single process traces. Block size is 16 bytes.</p> <p>\u7ec4\u76f8\u8054\u7f13\u5b58\u548c\u5217\u5173\u8054\u7f13\u5b58\u7ed3\u679c\u51e0\u4e4e\u76f8\u540c\uff0c\u4ece\u7ea6 40% \u5f00\u59cb\uff0c\u7f13\u5b58\u5927\u5c0f\u8fbe\u5230 256K \u5757\u65f6\u4e0a\u5347\u5230 100%\uff1b\u968f\u7740\u7f13\u5b58\u5927\u5c0f\u589e\u52a0\uff0c\u727a\u7272\u7f13\u5b58\u76f8\u5bf9\u4e8e\u5217\u5173\u8054\u7f13\u5b58\u6027\u80fd\u4e0b\u964d\uff1b\u6a21\u578b\u7684\u865a\u7ebf\u4e0e\u6a21\u62df\u7ed3\u679c\u63a5\u8fd1\u3002 </p> <p>Figure 14: Average memory access times versus cache size, averaged over six traces\u3002 Block size is 16 bytes</p> <p>\u5217\u5173\u8054\u7f13\u5b58\u5728\u5927\u591a\u6570\u64cd\u4f5c\u6761\u4ef6\u4e0b\u662f\u4e0d\u9519\u7684\u9009\u62e9\uff0c\u4e2d\u5c0f\u7f13\u5b58\u65f6\u5e73\u5747\u5185\u5b58\u8bbf\u95ee\u65f6\u95f4\u51cf\u5c11\u8d85\u8fc7 0.2 \u4e2a\u5468\u671f\uff0c\u4e2d\u5927\u578b\u7f13\u5b58\u65f6\u51cf\u5c11\u7ea6 0.1 \u4e2a\u5468\u671f \u3002 </p> <p> </p> <p></p>"},{"location":"note/courses/OOP/Chapter%2010/","title":"Smart Pointers","text":"<p>\u667a\u80fd\u6307\u9488\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e\u5e38\u89c4\u6307\u9488\uff0c\u91cd\u8981\u7684\u533a\u522b\u662f\u5b83\u8d1f\u8d23\u81ea\u52a8\u91ca\u653e\u6240\u6307\u5411\u7684\u5bf9\u8c61</p> <p>\u65b0\u6807\u51c6\u5e93\u63d0\u4f9b\u7684\u4e24\u79cd\u667a\u80fd\u6307\u9488\u7684\u533a\u522b\u5728\u4e8e\u7ba1\u7406\u5e95\u5c42\u6307\u9488\u7684\u65b9\u5f0f\uff1a - <code>std::shared_ptr</code>\uff1a\u5141\u8bb8\u591a\u4e2a\u6307\u9488\u6307\u5411\u540c\u4e00\u4e2a\u5bf9\u8c61 - <code>std::unique_ptr</code>\uff1a\u72ec\u5360\u6240\u6307\u5411\u7684\u5bf9\u8c61 - <code>std::weak_ptr</code>\uff1a\u4f34\u968f\u7c7b\uff0c\u5f31\u5f15\u7528\uff0c\u6307\u5411<code>std::shared_ptr</code>\u6240\u6307\u5411\u7684\u5bf9\u8c61\uff0c\u4f46\u4e0d\u62e5\u6709\u5b83</p>"},{"location":"note/courses/OOP/Chapter%2010/#1-stdshared_ptr","title":"1. <code>std::shared_ptr</code>","text":"<p>\u7c7b\u4f3c<code>vector</code>\uff0c<code>std::shared_ptr</code>\u662f\u4e00\u4e2a\u6a21\u677f\u7c7b <pre><code>shared_ptr&lt;string&gt; p1;\nshared_ptr&lt;list&lt;int&gt;&gt; p2;\n</code></pre></p> <p>\u9ed8\u8ba4\u521d\u59cb\u5316\u7684\u667a\u80fd\u6307\u9488\u4e2d\u4fdd\u5b58\u7740\u4e00\u4e2a\u7a7a\u6307\u9488</p> <p>\u667a\u80fd\u6307\u9488\u7684\u4f7f\u7528\u65b9\u6cd5\u4e0e\u666e\u901a\u6307\u9488\u7c7b\u4f3c\uff0c\u89e3\u5f15\u7528\u4e00\u4e2a\u667a\u80fd\u6307\u9488\u8fd4\u56de\u5b83\u6240\u6307\u5411\u7684\u5bf9\u8c61\u3002\u5982\u679c\u5728\u4e00\u4e2a\u6761\u4ef6\u5224\u65ad\u4e2d\u4f7f\u7528\u667a\u80fd\u6307\u9488\uff0c\u6548\u679c\u5c31\u662f\u68c0\u6d4b\u5b83\u662f\u5426\u4e3a\u7a7a</p> <pre><code>if(p1 &amp;&amp; p1-&gt;empty()){\n    *p1 = \"hi\";\n    }\n</code></pre> <p><code>shared_ptr</code>\u548c<code>unique_ptr</code>\u90fd\u652f\u6301\u7684\u64cd\u4f5c</p> <ul> <li><code>shared_ptr&lt;T&gt; p``unique_ptr&lt;T&gt; p</code>\uff1a\u7a7a\u667a\u80fd\u6307\u9488\uff0c\u53ef\u4ee5\u6307\u5411\u7c7b\u578b\u4e3aT\u7684\u5bf9\u8c61</li> <li><code>p</code>: \u5c06<code>p</code>\u4f5c\u4e3a\u4e00\u4e2a\u6761\u4ef6\u5224\u65ad\uff0c\u82e5<code>p</code>\u6307\u5411\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5219\u4e3a\u771f</li> <li><code>*p</code>: \u89e3\u5f15\u7528\uff0c\u8fd4\u56de<code>p</code>\u6240\u6307\u5411\u7684\u5bf9\u8c61</li> <li><code>p-&gt;mem</code>: \u7b49\u4ef7\u4e8e<code>(*p).mem</code></li> <li><code>p.get()</code>: \u8fd4\u56de<code>p</code>\u4e2d\u4fdd\u5b58\u7684\u6307\u9488\uff0c\u8981\u5c0f\u5fc3\u4f7f\u7528\uff0c\u82e5\u667a\u80fd\u6307\u9488\u91ca\u653e\u4e86\u5176\u5bf9\u8c61\uff0c\u8fd4\u56de\u7684\u6307\u9488\u6240\u6307\u7684\u5bf9\u8c61\u4e5f\u6d88\u5931\u4e86</li> <li><code>swap(p,q)</code>: \u4ea4\u6362<code>p</code>\u548c<code>q</code>\u4e2d\u7684\u6307\u9488 <code>p.swap(q)</code>\u4e5f\u53ef\u4ee5</li> </ul> <p><code>shared_ptr</code>\u72ec\u6709\u7684\u64cd\u4f5c\uff1a - <code>make_shared&lt;T&gt;(args...)</code>: \u8fd4\u56de\u4e00\u4e2a<code>shard_ptr</code>,\u6307\u5411\u4e00\u4e2a\u52a8\u6001\u5206\u914d\u7684\u7c7b\u578b\u4e3aT\u7684\u5bf9\u8c61\uff0cargs\u662f\u4f20\u9012\u7ed9T\u7684\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570 - <code>shared_ptr&lt;T&gt;p(q)</code>: <code>p</code>\u662f<code>shared_ptr q</code>\u7684\u62f7\u8d1d\uff0c\u6b64\u64cd\u4f5c\u4f1a\u9012\u589e<code>q</code>\u4e2d\u7684\u8ba1\u6570\u5668\uff0c<code>q</code>\u4e2d\u7684\u6307\u9488\u5fc5\u987b\u80fd\u8f6c\u5316\u4e3a<code>T*</code> - <code>p=q</code>: <code>p</code>\u548c<code>q</code>\u90fd\u662f<code>shared_ptr</code>,\u6240\u4fdd\u5b58\u7684\u6307\u9488\u5fc5\u987b\u80fd\u591f\u76f8\u4e92\u8f6c\u6362\uff0c\u6b64\u64cd\u4f5c\u4f1a\u9012\u51cf<code>p</code>\u7684\u5f15\u7528\u6b21\u6570\uff0c\u9012\u589e<code>q</code>\u7684\u5f15\u7528\u6b21\u6570\uff0c\u82e5<code>p</code>\u7684\u5f15\u7528\u6b21\u6570\u53d8\u4e3a0\uff0c<code>p</code>\u6240\u6307\u5411\u7684\u5bf9\u8c61\u4f1a\u88ab\u91ca\u653e - <code>p.unique()</code>: \u8fd4\u56de<code>p</code>\u7684\u5f15\u7528\u8ba1\u6570\u5668\u662f\u5426\u4e3a1 - <code>p.use_count()</code>: \u8fd4\u56de\u4e0e<code>p</code>\u5171\u4eab\u5bf9\u8c61\u7684\u667a\u80fd\u6307\u9488\u6570\u91cf</p>"},{"location":"note/courses/OOP/Lec1%20overview/","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u6982\u8ff0","text":""},{"location":"note/courses/OOP/Lec1%20overview/#_2","title":"\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>\u9762\u5411\u8fc7\u7a0b</p> <p>\u4ee5\u6a21\u5757\u529f\u80fd\u548c\u5904\u7406\u8fc7\u7a0b\u8bbe\u8ba1\u4e3a\u4e3b\uff0c\u81ea\u9876\u5411\u4e0b\uff0c\u9010\u6b65\u6c42\u7cbe\uff0c\u6a21\u5757\u5206\u89e3\uff0c\u5206\u800c\u6cbb\u4e4b</p> <p>\u4e24\u4e2a\u8fc7\u7a0b\uff1a \u6a21\u5757\u5206\u89e3\u548c\u7ec4\u88c5</p> <p>\u7ed3\u6784\u5316\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u7279\u70b9\uff1a</p> <ul> <li>\u6309\u5c42\u6b21\u7ec4\u7ec7\u6a21\u5757</li> <li>\u6bcf\u4e2a\u6a21\u5757\u53ea\u6709\u4e00\u4e2a\u5165\u53e3\u548c\u51fa\u53e3</li> <li>\u7a0b\u5e8f\u4e0e\u6570\u636e\u76f8\u5206\u79bb</li> </ul> <p>\u5728\u9762\u5411\u8fc7\u7a0b\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\uff0c\u7531\u4e8e\u7528\u6765\u5b8c\u6210\u6a21\u5757\u529f\u80fd\u7684\u51fd\u6570\u662f\u9762\u5411\u8fc7\u7a0b\u7684\uff0c\u5373\u5b83\u5173\u6ce8\u5982\u4f55\u6839\u636e\u89c4\u5b9a\u7684\u6761\u4ef6\u5b8c\u6210\u6307\u5b9a\u7684\u4efb\u52a1\u3002\u5728\u591a\u51fd\u6570\u7a0b\u5e8f\u4e2d\uff0c\u8bb8\u591a\u91cd\u8981\u7684\u6570\u636e\u88ab\u653e\u7f6e\u5728\u5168\u5c40\u6570\u636e\u533a\uff0c\u5b83\u4eec\u53ef\u4ee5\u88ab\u6240\u6709\u7684\u51fd\u6570\u8bbf\u95ee\u3002\u8fd9\u6837\u5c31\u5c06\u6570\u636e\u548c\u5904\u7406\u6570\u636e\u7684\u8fc7\u7a0b\uff08\u51fd\u6570\uff09\u5206\u79bb\u4e3a\u4e24\u4e2a\u72ec\u7acb\u7684\u5b9e\u4f53\uff0c\u5982\u56fe\u6240\u793a\u3002</p>"},{"location":"note/courses/OOP/Lec1%20overview/#_3","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1","text":"<p>\u5c06\u6570\u636e\u53ca\u5bf9\u6570\u636e\u64cd\u7eb5\u65b9\u6cd5\u7684\u51fd\u6570\u653e\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u76f8\u4e92\u4f9d\u5b58\uff0c\u4e0d\u53ef\u5206\u79bb\u7684\u6574\u4f53\u2014\u2014\u5bf9\u8c61\uff0c\u4ece\u540c\u7c7b\u5bf9\u8c61\u4e2d\u62bd\u8c61\u51fa\u7c7b\uff0c\u5f62\u6210\u7c7b\u7684\u5c42\u6b21\u7ed3\u6784\u3002</p> <p>\u7a0b\u5e8f = \u5bf9\u8c61+\u6d88\u606f</p>"},{"location":"note/courses/OOP/Lec1%20overview/#_4","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u672f\u8bed","text":"<ul> <li>\u5bf9\u8c61</li> <li>\u7c7b</li> <li>\u5b9e\u4f8b</li> <li>\u5c5e\u6027</li> <li>\u6d88\u606f\uff0c\u5f53\u5bf9\u8c61\u6536\u5230\u6d88\u606f\u65f6\uff0c\u5c31\u8c03\u7528\u6709\u5173\u7684\u65b9\u6cd5\uff0c\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c<ul> <li>\u4e09\u4e2a\u6027\u8d28\uff1a<ul> <li>\u540c\u4e00\u5bf9\u8c61\u53ef\u4ee5\u63a5\u53d7\u4e0d\u540c\u5f62\u5f0f\u7684\u591a\u4e2a\u6d88\u606f\uff0c\u4ea7\u751f\u4e0d\u540c\u7684\u54cd\u5e94</li> <li>\u76f8\u540c\u5f62\u5f0f\u7684\u6d88\u606f\u53ef\u4ee5\u53d1\u9001\u7ed9\u4e0d\u540c\u5bf9\u8c61</li> <li>\u6d88\u606f\u7684\u53d1\u9001\u53ef\u4ee5\u4e0d\u8003\u8651\u5177\u4f53\u7684\u63a5\u6536\u8005\uff0c\u5bf9\u8c61\u53ef\u4ee5\u4e0d\u54cd\u5e94\u6d88\u606f</li> </ul> </li> <li>\u4e24\u7c7b\uff1a<ul> <li>\u516c\u6709\u6d88\u606f</li> <li>\u79c1\u6709\u6d88\u606f</li> </ul> </li> </ul> </li> <li>\u65b9\u6cd5\uff1a \u7c7b\u4e2d\u5b9a\u4e49\u7684\u670d\u52a1</li> </ul>"},{"location":"note/courses/OOP/Lec1%20overview/#_5","title":"\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u57fa\u672c\u7279\u5f81","text":"<p>\u62bd\u8c61\u6027\uff1a\u7c7b\u662f\u5bf9\u5bf9\u8c61\u7684\u62bd\u8c61\u3002     - \u6570\u636e\u62bd\u8c61     - \u8fc7\u7a0b\u62bd\u8c61</p> <p>\u5c01\u88c5\u6027\uff1a\u5c06\u6570\u636e\u548c\u5bf9\u6570\u636e\u7684\u64cd\u4f5c\u5c01\u88c5\u5728\u4e00\u8d77\uff0c\u5f62\u6210\u4e00\u4e2a\u4e0d\u53ef\u5206\u5272\u7684\u6574\u4f53\u3002</p> <p>\u7ee7\u627f\u6027\uff1a\u7c7b\u53ef\u4ee5\u4ece\u5176\u4ed6\u7c7b\u7ee7\u627f\u5c5e\u6027\u548c\u65b9\u6cd5\uff0c\u5f62\u6210\u7c7b\u7684\u5c42\u6b21\u7ed3\u6784\u3002</p> <p>\u591a\u6001\u6027\uff1a \u4e00\u79cd\u63a5\u53e3\uff0c\u591a\u79cd\u5f62\u6001\u3002\u901a\u8fc7\u91cd\u8f7d\uff08\u7f16\u8bd1\uff09\u548c\u865a\u51fd\u6570\uff08\u8fd0\u884c\uff09\u6765\u5b9e\u73b0</p>"},{"location":"note/courses/OOP/Lec4/","title":"Lec4","text":"<ul> <li>stack  local vars</li> <li>heap dynamically </li> <li>code/data</li> </ul> <p>Global vars</p> <p>\u5728\u4efb\u610f\u51fd\u6570\u5916\u5b9a\u4e49\uff0c<code>extern</code>\u58f0\u660e\u8bf4\u660e\u5176\u88ab\u5176\u4ed6\u7f16\u8bd1\u5355\u5143\u5b9a\u4e49\u7684</p> <p>Static</p> <p>\u5982\u679c\u5168\u5c40\u53d8\u91cf\u88ab\u58f0\u660e\u4e3a<code>static</code>\uff0c\u5219\u5176\u4f5c\u7528\u57df\u4ec5\u9650\u4e8e\u5b9a\u4e49\u5b83\u7684\u6587\u4ef6\uff0c\u5176\u4ed6\u6587\u4ef6\u65e0\u6cd5\u8bbf\u95ee</p> <p>Static Local vars</p> <p>\u5b58\u50a8\u6c38\u4e45\u6027</p> <p>\u9650\u5236\u7684\u8bbf\u95ee\u8303\u56f4</p>"},{"location":"note/courses/OOP/Lec4/#defining-references","title":"Defining references","text":"<p><pre><code>type&amp; refname = name ;\n</code></pre> \u5f15\u7528\u662f\u53d8\u91cf\u7684\u522b\u540d\uff0c<code>refname</code>\u548c<code>name</code>\u6307\u5411\u540c\u4e00\u4e2a\u5185\u5b58\u7a7a\u95f4</p> <p>\u5f15\u7528\u5728\u58f0\u660e\u65f6\u5fc5\u987b\u521d\u59cb\u5316\uff0c\u4e14\u4e0d\u80fd\u91cd\u65b0\u7ed1\u5b9a\u5230\u5176\u4ed6\u53d8\u91cf\u3002</p> <p>\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\u8fdb\u884c\u8c03\u7528\u65f6\u53ef\u4ee5\u4e0d\u7528\u521d\u59cb\u5316</p> <p>Type restrictions </p> <p>No pointer to reference,but reference to pointer is ok <pre><code>int&amp;* p; // error\nvoid f(int*&amp; p); // ok\n</code></pre></p>"},{"location":"note/courses/OOP/Lec4/#_1","title":"\u52a8\u6001\u5185\u5b58\u5206\u914d","text":"<p>new: similar to malloc</p> <p>delete: similar to free</p> <p><code>new</code>\u548c<code>delete</code>\u53ef\u4ee5\u662f\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u5f97\u5230\u6b63\u786e\u7684\u8c03\u7528</p> <p>\u5bf9\u4e8e\u7c7b\u5bf9\u8c61\uff0c<code>new</code>\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c<code>delete</code>\u4f1a\u8c03\u7528\u6790\u6784\u51fd\u6570\uff0c\u8fd9\u4e24\u8005\u5fc5\u987b\u6210\u5bf9\u7684\u4f7f\u7528</p> <pre><code>int* p = new int;\n*p = 5;\ndelete p;\n</code></pre>"},{"location":"note/courses/OOP/Lec4/#const","title":"const","text":"<pre><code>int a[] = {53,54,55};\n\nint * const p = a;\n*p = 20;\np = a+1; // error\n</code></pre> <pre><code>const int* p = a;\n*p = 20; // error \np = a+1;\n</code></pre>"},{"location":"note/courses/OOP/Lecture%203%20class/","title":"\u7c7b\u4e0e\u5bf9\u8c61","text":""},{"location":"note/courses/OOP/Lecture%203%20class/#_2","title":"\u7c7b\u7684\u62bd\u8c61\u548c\u5c01\u88c5","text":"<p>ADT: \u662f\u6307\u7531\u7528\u6237\u5b9a\u4e49\uff0c\u7528\u4ee5\u63cf\u8ff0\u5e94\u7528\u95ee\u9898\u7684\u6570\u636e\u6a21\u578b\uff0c\u5e38\u7531\u57fa\u672c\u6570\u636e\u7c7b\u578b\u7ec4\u5408\u800c\u6210\uff0c\u5e76\u5305\u62ec\u4e00\u7ec4\u670d\u52a1\uff08\u63a5\u53e3\uff09</p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_3","title":"\u62bd\u8c61","text":"<ul> <li>\u8fc7\u7a0b\u62bd\u8c61</li> <li>\u6570\u636e\u62bd\u8c61</li> </ul> <p>\u62bd\u8c61\u7684\u7ed3\u679c\uff1a \u6570\u636e\u6210\u5458\u548c\u6210\u5458\u51fd\u6570</p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_4","title":"\u5c01\u88c5","text":"<p>\u62bd\u8c61\u53ea\u662f\u8bbe\u8ba1\u51fa\u4e86ADT\u7684\u63a5\u53e3\u51fd\u6570\uff0c\u5e76\u6ca1\u6709\u5b9e\u73b0\u5176\u51fd\u6570\u529f\u80fd\uff0c\u5bfc\u81f4\u4e86\u63a5\u53e3\u4e0e\u5b9e\u73b0\u7684\u5206\u79bb\uff0c\u5c01\u88c5\u662f\u5bf9\u63a5\u53e3\u7684\u5b9e\u73b0</p> <p>\u5c01\u88c5\u7528\u6765\u5b8c\u6210\u6570\u636e\u62bd\u8c61\u8bbe\u8ba1\u7684\u76ee\u6807\uff1a\u7528\u6237\u53ea\u80fd\u901a\u8fc7\u63a5\u53e3\u8bbf\u95ee\u62bd\u8c61\u6570 \u636e\u7c7b\u578b\u7684\u529f\u80fd\uff0c\u4ed6\u53ea\u987b\u5411\u63a5\u53e3\u51fd\u6570\u4f20\u9012\u6b63\u786e\u7684\u53c2\u6570\uff0c\u5c31\u80fd\u591f\u4f7f\u7528\u8be5 \u63a5\u53e3\u7684\u529f\u80fd\uff0c\u4e0d\u5fc5\u77e5\u9053\u8fd9\u4e9b\u529f\u80fd\u7684\u5b9e\u73b0\u7ec6\u8282\uff0c\u4ee5\u53ca\u5185\u90e8\u6570\u636e\u7684\u72b6\u6001\u3002</p> <p>\u901a\u8fc7\u7c7b class \u6765\u5b9e\u73b0\u5c01\u88c5\uff0c\u7c7b\u662f\u5bf9\u6570\u636e\u548c\u64cd\u4f5c\u7684\u5c01\u88c5\uff0c\u7c7b\u7684\u5bf9\u8c61\u662f\u7c7b\u7684\u5b9e\u4f8b\u5316</p> <pre><code>class ClassName{\n    public:\n    //\u516c\u6709\u6210\u5458 //\u63a5\u53e3\n    private:\n    //\u79c1\u6709\u6210\u5458 //\u4fe1\u606f\u9690\u85cf\n};\n</code></pre>"},{"location":"note/courses/OOP/Lecture%203%20class/#_5","title":"\u7ed3\u6784","text":""},{"location":"note/courses/OOP/Lecture%203%20class/#c","title":"c++\u5bf9\u7ed3\u6784\u7684\u6269\u5c55","text":"<p>\u4e0d\u4ec5\u53ef\u4ee5\u5305\u542b\u6570\u636e\uff0c\u800c\u4e14\u53ef\u4ee5\u5305\u542b\u51fd\u6570\uff0c\u540c\u65f6\u5f15\u5165\u4e86private,public\u548cprotected\u8bbf\u95ee\u63a7\u5236\u7b26</p> <p><pre><code>struct ClassName{\n    public:\n    //\u516c\u6709\u6210\u5458\n    private:\n    //\u79c1\u6709\u6210\u5458\n    protected:\n    //\u4fdd\u62a4\u6210\u5458\uff0c\u4e0e\u7ee7\u627f\u6709\u5173\n}\n</code></pre> \u6210\u5458\u8bbf\u95ee\u63a7\u5236\u7b26 - public: \u53ef\u4ee5\u4ece\u7ed3\u6784\uff08\u7c7b\uff09\u5916\u90e8\u8bbf\u95ee - private: \u53ea\u80fd\u5728\u7ed3\u6784\uff08\u7c7b\uff09\u5185\u90e8\u5373\u81ea\u8eab\u6210\u5458\u51fd\u6570\u8bbf\u95ee - protected: \u53ea\u80fd\u5728\u7ed3\u6784\uff08\u7c7b\uff09\u5185\u90e8\u53ca\u5176\u6d3e\u751f\u7c7b\u4e2d\u8bbf\u95ee</p> <p>\u8fd9\u4e9b\u8bbf\u95ee\u63a7\u5236\u7b26\u53ef\u4ee5\u51fa\u73b0\u5728\u7c7b\u7684\u4efb\u610f\u4f4d\u7f6e\uff0c\u4e14\u53ef\u4ee5\u591a\u6b21\u51fa\u73b0\uff0c\u8bbf\u95ee\u63a7\u5236\u7b26\u7684\u4f5c\u7528\u8303\u56f4\u662f\u4ece\u5b83\u51fa\u73b0\u7684\u4f4d\u7f6e\u5230\u4e0b\u4e00\u4e2a\u8bbf\u95ee\u63a7\u5236\u7b26\u6216\u7c7b\u7684\u7ed3\u675f</p> <p>\u9ed8\u8ba4\u4e3apublic</p> <p>\u7c7b\u56fe\u662fUML\u4e2d\u6700\u91cd\u8981\u4e5f\u662f\u6700\u5e38\u89c1\u7684\u4e00\u79cd\u56fe\u5f62\uff0c\u7528\u4e8e\u63cf\u8ff0\u7c7b\u7684\u6210\u5458\u7ec4\u6210\u548c\u5173\u7cfb\u3002 \u7c7b\u56fe\u7528\u4e00\u4e2a\u77e9\u5f62\u8868\u793a\uff0c\u5176\u4e2d\u5305\u62ec\u7c7b\u540d\u3001\u6570\u636e\u6210\u5458\u548c\u6210\u5458\u51fd\u6570\u4e09\u90e8\u5206\u3002\u4e14\u5728\u7c7b\u56fe \u4e2d - '+'\u8868\u793apublic - '-'\u8868\u793aprivate - '#'\u8868\u793aprotected</p> <p></p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_6","title":"\u7c7b","text":"<p>\u5728c++\u4e2d,class\u5177\u6709\u548cstruct\u76f8\u540c\u7684\u529f\u80fd\uff0cclass\u662f\u5bf9\u6570\u636e\u548c\u64cd\u4f5c\u7684\u5c01\u88c5\uff0cclass\u7684\u5bf9\u8c61\u662fclass\u7684\u5b9e\u4f8b\u5316</p> <pre><code>class ClassName{\n    public:\n    //\u516c\u6709\u6210\u5458\n    private:\n    //\u79c1\u6709\u6210\u5458\n    protected:\n    //\u4fdd\u62a4\u6210\u5458\uff0c\u4e0e\u7ee7\u627f\u6709\u5173\n};//\u5206\u53f7\u5fc5\u4e0d\u53ef\u5c11\n</code></pre> <ul> <li>\u7c7b\u6210\u5458: class \u58f0\u660e\u4e2d\u7684\u6570\u636e\u548c\u51fd\u6570</li> <li>\u8bbf\u95ee\u63a7\u5236\u7b26: public, private, protected</li> <li>\u7c7b\u57df: class \u6216\u8005 struct \u540e\u4e00\u5bf9\u5927\u62ec\u53f7\uff0c\u6240\u5305\u56f4\u7684\u533a\u57df\u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u4f5c\u7528\u57df\uff0c\u79f0\u4e3a\u7c7b\u57df\u3002\u540c\u4e00\u7c7b\u57df\u91cc\u7684\u6210\u5458\u4e0d\u53d7\u8bbf\u95eepublic \u3001private\u548cprotected\u8bbf\u95ee\u6743\u9650\u7684\u9650\u5236\uff0c\u76f8\u4e92\u4e4b\u95f4\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee</li> <li>class \u548c struct \u7684\u533a\u522b: \u6ca1\u6709\u6307\u5b9a\u6210\u5458\u7684\u8bbf\u95ee\u6743\u9650\u65f6\uff0cclass \u9ed8\u8ba4\u662f private, struct \u9ed8\u8ba4\u662f public</li> </ul> <p>\u5728\u7c7b\u5916\uff0c\u901a\u8fc7\u7c7b\u6210\u5458\u8bbf\u95ee\u7b26<code>.</code>\u6765\u8bbf\u95eepublic\u6210\u5458</p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_7","title":"\u6570\u636e\u6210\u5458","text":"<ul> <li>\u6570\u636e\u6210\u5458\u53ef\u4ee5\u662f\u4efb\u4f55\u6570\u636e\u7c7b\u578b</li> <li>\u6570\u636e\u6210\u5458\u53ef\u4ee5\u662f\u6307\u5411\u81ea\u8eab\u7c7b\u7684\u6307\u9488\u6216\u8005\u5f15\u7528\uff0c\u4e0d\u80fd\u662f\u81ea\u8eab\u7c7b\u7684\u5bf9\u8c61</li> <li>\u53ef\u4ee5\u662fconst\u7c7b\u578b,\u4e0d\u80fd\u662fconstexpr\u5e38\u91cf</li> <li>\u53ef\u4ee5\u7528decltype\u63a8\u65ad\u5b9a\u4e49\uff0c\u4f46\u662f\u4e0d\u80fd\u7528auto\u63a8\u65ad</li> <li>\u6570\u636e\u6210\u5458\u4e0d\u80fd\u6307\u5b9a\u4e3a register\u548cextern\u5b58\u50a8\u7c7b\u578b</li> </ul> <pre><code>class A{/*...*/};\nclass B{\n    private:\n        int a;\n        A obja1, *obja2;\n        B *objb, &amp;ogjr;\n        B b1; //\u9519\u8bef\n        auto b=a+1; //\u9519\u8bef\n        decltype(7.9) a; //\u6b63\u786e\n        extern int c; //\u9519\u8bef\n        const int x; //\u6b63\u786e\n        constexpr int y; //\u9519\u8bef\n}\n</code></pre> <p>c++11 \u6807\u6ce8\u89c4\u5b9a\uff0c\u53ef\u4ee5\u4e3a\u6570\u636e\u6210\u5458\u63d0\u4f9b\u4e00\u4e2a\u7c7b\u5185\u521d\u59cb\u503c\uff0c\u7528\u4e8e\u521b\u5efa\u7c7b\u65f6\u521d\u59cb\u5316\u6570\u636e\u6210\u5458</p> <ul> <li>\u7c7b\u7684\u58f0\u660e\u53ea\u662f\u589e\u52a0\u4e86\u4e00\u79cd\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0c\u53ea\u6709\u5728\u7528\u7c7b\u5b9a\u4e49\u5bf9\u8c61\u662f\uff0c\u624d\u4f1a\u4e3a\u6570\u636e\u6210\u5458\u5206\u914d\u7a7a\u95f4\uff0c\u5728\u8fd9\u4e2a\u65f6\u95f4\u70b9\u4e0a\u624d\u4f1a\u7528\u76f8\u5e94\u7684 \u521d\u59cb\u503c\u521d\u59cb\u5316\u6570\u636e\u6210\u5458\u3002</li> </ul>"},{"location":"note/courses/OOP/Lecture%203%20class/#_8","title":"\u6210\u5458\u51fd\u6570","text":"<ul> <li>\u7c7b\u5185\u5b9a\u4e49\u6210\u5458\u51fd\u6570\uff1a\u5728\u58f0\u660e\u7c7b\u65f6\uff0c\u76f4\u63a5\u5728\u7c7b\u7684\u5185\u90e8\u5c31\u7ed9\u51fa\u6210\u5458\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u5b9a\u4e49\u7684\u6210\u5458 \u51fd\u6570\u82e5\u7b26\u5408\u5185\u8054\u51fd\u6570\u7684\u6761\u4ef6\u5c31\u4f1a\u88ab\u5904\u7406\u4e3a\u5185\u8054\u51fd\u6570</li> <li>\u7c7b\u5916\u5b9a\u4e49\u6210\u5458\u51fd\u6570\uff1a\u5728\u58f0\u660e\u7c7b\u65f6\uff0c\u53ea\u58f0\u660e\u4e86\u6210\u5458\u51fd\u6570\u7684\u539f\u578b\uff0c\u5c31\u9700\u8981\u5728\u7c7b\u7684\u5916\u90e8\u5b9a\u4e49\u8be5\u6210\u5458\u51fd\u6570<code>return_type class_name::function_name(args){}</code></li> </ul>"},{"location":"note/courses/OOP/Lecture%203%20class/#_9","title":"\u7c7b\u5916\u6210\u5458\u51fd\u6570","text":"<ul> <li>\u82e5\u91c7\u7528\u7c7b\u5916\u65b9\u5f0f\u5b9a\u4e49\u6210\u5458\u51fd\u6570\uff0c\u5219\u7c7b\u58f0 \u660e\u65f6\u6210\u5458\u51fd\u6570\u539f\u578b\u4e2d\u7684\u5f62\u53c2\u540d\u53ef\u4ee5\u7701\u7565\uff0c \u53ea\u58f0\u660e\u5404\u4e2a\u5f62\u53c2\u7684\u7c7b\u578b\uff1b</li> <li>\u5728\u7c7b\u5916\u5b9a\u4e49\u6210\u5458\u51fd\u6570\u65f6\uff0c\u6210\u5458\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\uff0c\u51fd\u6570\u540d\u79f0\uff0c\u53c2\u6570\u8868\u5fc5\u987b\u57df\u6210\u5458\u51fd\u6570\u539f\u578b\u7684\u58f0\u660e\u5b8c\u5168\u76f8\u540c\uff0c\u800c\u4e14\u5fc5\u987b\u6307\u51fa\u6bcf\u4e2a\u5f62\u53c2\u7684\u540d\u5b57</li> <li>\u5728\u7c7b\u5916\u5b9a\u4e49\u6210\u5458\u51fd\u6570\u65f6\uff0c\u5fc5\u987b\u5728\u6210\u5458\u51fd\u6570\u540d\u524d\u9762\u52a0\u4e0a\u7c7b\u540d\uff0c\u5e76\u4e14\u5728\u7c7b\u540d\u548c\u6210\u5458\u51fd\u6570\u540d\u4e4b\u95f4\u52a0\u4e0a\u4f5c\u7528\u57df\u89e3\u6790\u8fd0\u7b97\u7b26::\uff0c\u4ee5\u8868\u660e\u8be5\u6210\u5458\u51fd\u6570\u662f\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u7684</li> </ul> <p>\u7c7b\u5916\u6210\u5458\u51fd\u6570</p> <pre><code>class D{\n    int d, m, y;\n    public: \n    int init(int ,int ,int);//\u5ffd\u7565\u4e86\u5f62\u53c2\u540d\n    int getDay();\n    inline int getMonth();\n}\nint D::init(int dd, int mm, int yy){\n    d=dd;\n    m=mm;\n    y=yy;\n}\n</code></pre>"},{"location":"note/courses/OOP/Lecture%203%20class/#_10","title":"\u5e38\u91cf\u6210\u5458\u51fd\u6570","text":"<p>\u5728c++\u4e2d\uff0c\u5e38\u91cf\u6210\u5458\u51fd\u6570\u7528\u4e8e\u7981\u6b62\u6210\u5458\u51fd\u6570\u4fee\u6539\u6570\u636e\u6210\u5458\u7684\u503c</p> <pre><code>class ClassName{\n    public:\n        int getData() const; //\u5e38\u91cf\u6210\u5458\u51fd\u6570\n        void setData(int d);\n    private:\n        int data;\n};\n</code></pre> <p><code>getData</code>\u51fd\u6570\u662f\u4e00\u4e2a\u5e38\u91cf\u6210\u5458\u51fd\u6570\uff0c\u4e0d\u80fd\u4fee\u6539\u6570\u636e\u6210\u5458\u7684\u503c,\u5728\u5176\u51fd\u6570\u4f53\u5185\u4e0d\u80fd\u6709\u4efb\u4f55\u4fee\u6539<code>ClassName</code>\u6570\u636e\u6210\u5458\u7684\u8bed\u53e5</p> <ul> <li>\u53ea\u6709\u7c7b\u7684\u6210\u5458\u51fd\u6570\u624d\u80fd\u5b9a\u4e49\u4e3a\u5e38\u91cf\u51fd\u6570\uff0c\u672c\u8d28\u4e0a\u9650\u5b9a<code>this</code>\u6307\u9488\u7684\u7c7b\u578b\u4e3a<code>const ClassName*</code>, \u666e\u901a\u51fd\u6570\u4e0d\u80fd\u5b9a\u4e49\u4e3a\u5e38\u91cf\u51fd\u6570\uff0c\u4f8b\u5982 <pre><code>int f(int a) const; //\u9519\u8bef\n</code></pre></li> <li>\u5e38\u91cf\u53c2\u6570\u548c\u5e38\u91cf\u6210\u5458\u51fd\u6570\u662f\u6709\u533a\u522b\u7684\uff0c\u5e38\u91cf\u53c2\u6570\u9650\u5236\u51fd\u6570\u5bf9\u53c2\u6570\u7684\u4fee\u6539\uff0c\u4f46\u4e0e\u6570\u636e\u6210\u5458\u662f\u5426\u88ab\u4fee\u6539\u65e0\u5173 <pre><code>void Employee::init(const char *Name,const double y){\n    //\u53c2\u6570\u662f\u5e38\u91cf\uff0c\u4f46\u662f\u4e0d\u662f\u5e38\u91cf\u51fd\u6570\n    name  = new char(strlen(Name)+1);\n    strcpy(name,Name);\n    salary = y;\n}\n</code></pre></li> </ul>"},{"location":"note/courses/OOP/Lecture%203%20class/#_11","title":"\u6210\u5458\u51fd\u6570\u91cd\u8f7d\u548c\u9ed8\u8ba4\u53c2\u6570","text":"<p>\u6210\u5458\u51fd\u6570\u91cd\u8f7d\u4e0e\u9ed8\u8ba4\u53c2\u6570\u89c4\u5219\uff1a</p> <ul> <li>\u91cd\u8f7d\u6210\u5458\u51fd\u6570\u5fc5\u987b\u5177\u6709\u4e0d\u540c\u7684\u53c2\u6570\u8868</li> <li>\u5728\u6307\u5b9a\u53c2\u6570\u786e\u7701\u503c\u65f6\uff0c\u5982\u679c\u67d0\u4e2a\u53c2\u6570\u6307\u5b9a\u7684\u786e\u7701\u503c\uff0c\u5219\u5728\u5176\u540e\u9762\u6240\u6709\u53c2\u6570\u90fd\u5fc5\u987b\u6307\u5b9a\u786e\u7701\u503c\uff0c\u5c31\u8981\u6c42\u5b83\u53f3\u8fb9\u7684\u5168\u90e8\u53c2\u6570\u90fd\u5fc5\u987b\u6307\u5b9a\u9ed8\u8ba4\u503c</li> </ul> <p>\u6210\u5458\u51fd\u6570\u91cd\u8f7d\u548c\u9ed8\u8ba4\u53c2\u6570</p> <p><pre><code>class Date{\n    int day, month, year;\n    public:\n        void init(int d, int m = 8, int y = 2000){\n            day = d;\n            month = m;\n            year = y;\n        }\n        void init(int d, int m)\n            {\u3000day = d; month = m; year = 2016; }\n        void init(int d)\n            {day = d; month = 8; year = d; \u3000}\n}\n</code></pre> \u8fd9\u6bb5\u51fd\u6570\u53ef\u80fd\u53d1\u751f\u91cd\u8f7d\u6b67\u4e49\u95ee\u9898\uff0c\u5373\u4e00\u4e2a\u8c03\u7528\u80fd\u591f\u5339\u914d\u591a\u4e2a\u51fd\u6570</p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_12","title":"\u5bf9\u8c61","text":"<p>\u7528\u7c7b\u5b9a\u4e49\u7684\u53d8\u91cf\u5c31\u662f\u5bf9\u8c61\uff0c\u5728\u7528\u7c7b\u5b9a\u4e49\u5bf9\u8c61\u65f6\uff0c\u624d\u4f1a\u4e3a\u6570\u636e\u6210\u5458\u5206\u914d\u5185\u5b58\u7a7a\u95f4\u3002</p> <p>\u5bf9\u8c61\u7684\u5b9a\u4e49 <pre><code>ClassName object_name;\nClassName object_name1, object_name2;\nClassName object_name3(\u53c2\u6570\u8868), object_name4(\u53c2\u6570\u8868);\n</code></pre></p> <p>\u6bcf\u4e2a\u5bf9\u8c61\u7684\u6570\u636e\u6210\u5458\u5177\u6709\u72ec\u7acb\u7684\u5185\u5b58\u7a7a\u95f4\uff0c\u800c\u6210\u5458\u51fd\u6570\u5219\u53ea\u6709 \u4e00\u5206\u5185\u5b58\u526f\u672c\uff0c\u7531\u540c\u7c7b\u5bf9\u8c61\u6240\u6709\u5bf9\u8c61\u5171\u7528\u3002</p> <p>\u5bf9\u8c61\u7684\u5f15\u7528</p> <ul> <li>\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\u6210\u5458\u51fd\u6570\uff1a<code>\u5bf9\u8c61\u540d.\u6570\u636e\u6210\u5458\u540d</code>\uff0c<code>\u5bf9\u8c61\u540d.\u6210\u5458\u51fd\u6570\u540d(\u53c2\u6570\u8868)</code></li> <li>\u901a\u8fc7\u6307\u9488\u8bbf\u95ee\u6210\u5458\u51fd\u6570\uff1a<code>\u5bf9\u8c61\u6307\u9488-&gt;\u6570\u636e\u6210\u5458\u540d</code>\uff0c<code>\u5bf9\u8c61\u6307\u9488-&gt;\u6210\u5458\u51fd\u6570\u540d(\u53c2\u6570\u8868)</code></li> </ul> <p>\u5728\u7c7b\u5916\u53ea\u80fd\u8bbf\u95ee\u5bf9\u8c61\u7684public\u6210\u5458\uff0c\u4e0d\u80fd\u8bbf\u95eeprivate\u6210\u5458</p> <p>\u540c\u4e00\u4e2a\u7684\u4e0d\u540c\u5bf9\u8c61\u4e4b\u95f4\uff0c\u4ee5\u53ca\u540c\u4e00\u4e2a\u7c7b\u7684\u5bf9\u8c61\u7684\u6307\u9488\u4e4b\u95f4\u53ef\u4ee5\u76f8\u4e92\u8d4b\u503c</p> <p>\u5bf9\u8c61\u8d4b\u503c\u7684\u6ce8\u610f\u4e8b\u9879</p> <ul> <li>\u4e24\u4e2a\u5bf9\u8c61\u5fc5\u987b\u7c7b\u578b\u76f8\u540c</li> <li>\u8fdb\u884c\u6570\u636e\u6210\u5458\u7684\u503c\u62f7\u8d1d\uff0c\u8d4b\u503c\u4ee5\u540e\uff0c\u4e24\u4e0d\u76f8\u5e72</li> <li>\u82e5\u5bf9\u8c61\u6709\u6307\u9488\u6570\u636e\u6210\u5458\uff0c\u8d4b\u503c\u53ef\u80fd\u4ea7\u751f\u95ee\u9898</li> </ul>"},{"location":"note/courses/OOP/Lecture%203%20class/#_13","title":"\u6784\u9020\u51fd\u6570\u8bbe\u8ba1","text":"<p>C++\u7f16\u8bd1\u5668\u4f1a\u9700\u8981\u7684\u65f6\u5019\u4e3a\u7b26\u5408\u6761\u4ef6\u7684\u7c7b\u81ea\u52a8\u5728\u7c7b\u4e2d\u6dfb\u52a0\u4ee5\u4e0b6\u4e2a\u6210\u5458\u51fd\u6570</p> <ul> <li>\u9ed8\u8ba4\u6784\u9020\u51fd\u6570</li> <li>\u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> <li>\u8d4b\u503c\u8fd0\u7b97\u7b26</li> <li>\u6790\u6784\u51fd\u6570</li> <li>\u79fb\u52a8\u6784\u9020\u51fd\u6570(c++11)</li> <li>\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26(c++11)</li> </ul> <p><pre><code>class A{\n    int a,b,c;\n    char *p;\n}\nA obj1, obj2;\nA obj3(obj1); //\u62f7\u8d1d\u6784\u9020\u51fd\u6570\nA obj4 = obj1; //\u62f7\u8d1d\u6784\u9020\u51fd\u6570\nA f()\n{\n    A obj5;\n    return obj5; //\u79fb\u52a8\u6784\u9020\u51fd\u6570\n}\nobj2 = f(); //\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\n</code></pre> \u51fd\u6570\u4e0d\u80fd\u89e3\u51b3\u8fd9\u4e09\u79cd\u5bf9\u8c61\u590d\u5236\uff0c\u4f1a\u4ea7\u751f\u60ac\u6302\u6307\u9488</p> <p>Note</p> <p>\u7f16\u8bd1\u5668\u4e3a\u81ea\u52a8\u4e3a\u7c7b\u751f\u6210\u7684\u6210\u5458\u51fd\u6570\u5728\u6ca1\u6709\u6307\u9488\u65f6 \u662f\u53ef\u4fe1\u53ef\u7528\u7684\u3002\u5f53\u6709\u6307\u9488\u6210\u5458\u4e14\u5728\u6790\u6784\u51fd\u6570\u4e2ddelete \u6307\u9488\u4f1a\u4ea7\u751f\u201c\u60ac\u6302\u6307\u9488\u201d\uff0c\u5f15\u8d77\u8fd0\u884c\u7684\u9519\u8bef\u3002\u4e24\u79cd\u89e3\u51b3 \u529e\u6cd5\u53ef\u53c2\u8003\uff1a</p> <p>\u201c5 \u6cd5\u5219\u201d\uff0c\u662f\u6307\u590d\u5236\u6784\u9020\u51fd\u6570\u3001\u79fb\u52a8\u6784\u9020\u51fd\u6570\u3001 \u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u3001\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u548c\u6790\u6784\u51fd \u6570 5 \u4e2a\u64cd\u4f5c\u8981\u4e48\u5168\u90e8\u663e\u5f0f\u8bbe\u8ba1\uff0c\u8981\u4e48\u4e00\u4e2a\u4e5f\u4e0d\u8bbe \u8ba1\u3002</p> <p>\u201c0 \u6cd5\u5219\u201d \uff0c \u662f\u6307\u7528C++ 11 \u4e2d\u7684\u667a\u80fd\u6307\u9488 unique_ptr\u6216shared_ptr \u6765\u4ee3\u66ff\u4f20\u7edf\u6307\u9488\u3002</p> <p>\u5bf9\u8c61\u6784\u9020\u3001\u6790\u6784\u548c\u590d\u5236\u51fd\u6570\u7684\u7981\u6b62 <pre><code>class A{\n    int a,b,c;\n    char *p;\n    public:\n    A() = delete;\n        A(const A&amp; other) = delete;\n        A(const A&amp;&amp; other) = delete;\n        A&amp; operator=(const A&amp; other) = delete;\n        A&amp; operator=(const A&amp;&amp; other) = delete;\n        ~A() = delete;\n};\n</code></pre> \u5982\u679c\u4e0d\u5141\u8bb8\u5bf9\u8c61\u95f4\u7684\u590d \u5236\u3001\u8d4b\u503c\u6216\u79fb\u52a8\u64cd\u4f5c\uff0c\u53ef \u4ee5\u7528delete\u7981\u6b62\u76f8\u5173\u6210\u5458 \u51fd\u6570</p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_14","title":"\u6784\u9020\u51fd\u6570\u548c\u7c7b\u5185\u521d\u59cb\u503c","text":"<ul> <li>\u6784\u9020\u51fd\u6570\uff1a\u4e0e\u7c7b\u540c\u540d\uff0c\u4e3b\u8981\u7528\u4e8e\u521d\u59cb\u5316\u6570\u636e\u6210\u5458</li> <li> <p>\u7c7b\u5185\u521d\u59cb\u503c: \u5728\u7c7b\u7684\u58f0\u660e\u4e2d\u76f4\u63a5\u4e3a\u6570\u636e\u6210\u5458\u63d0\u4f9b\u521d\u59cb\u503c\uff08c++ 11\uff09 <pre><code>class A{\n    X(...); //\u6784\u9020\u51fd\u6570\n    int a = 0; //\u7c7b\u5185\u521d\u59cb\u503c\n}\n</code></pre> \u6784\u9020\u51fd\u6570\u7684\u7279\u70b9\uff1a</p> </li> <li> <p>\u6784\u9020\u51fd\u6570\u7684\u540d\u79f0\u4e0e\u7c7b\u540d\u76f8\u540c\uff0c\u4e14\u6ca1\u6709\u8fd4\u56de\u7c7b\u578b</p> </li> <li>\u6784\u9020\u51fd\u6570\u53ef\u4ee5\u88ab\u91cd\u8f7d</li> <li>\u6784\u9020\u51fd\u6570\u7531\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\uff0c\u4e0d\u5141\u8bb8\u663e\u5f0f\u8c03\u7528</li> <li>\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u88ab\u58f0\u660e\u4e3aconst\u51fd\u6570</li> </ul> <p>\u6267\u884c\u65f6\u95f4</p> <ul> <li>\u7f16\u8bd1\u5668\u5efa\u7acb\u5bf9\u8c61\uff0c\u4e3a\u6570\u636e\u6210\u5458\u5206\u914d\u5185\u5b58\u7a7a\u95f4</li> <li>\u82e5\u6307\u5b9a\u4e86\u6570\u636e\u6210\u5458\u7684\u7c7b\u5185\u521d\u59cb\u503c\uff0c\u5219\u7528\u7c7b\u5185\u521d\u59cb\u503c\u521d\u59cb\u5316\u6570\u636e\u6210\u5458</li> <li>\u6839\u636e\u5b9a\u4e49\u5bf9\u8c61\u65f6\u63d0\u4f9b\u7684\u53c2\u6570\u5339\u914d\u6b63\u786e\u7684\u6784\u9020\u51fd\u6570\uff0c\u6267\u884c\u6784\u9020\u51fd\u6570\u3002</li> </ul> <p>\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528</p> <ul> <li>\u53ea\u80fd\u5728\u5b9a\u4e49\u5bf9\u8c61\u65f6\uff0c\u7531\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528</li> <li><code>\u7c7b\u540d \u5bf9\u8c61\u540d(\u53c2\u6570\u8868)</code>\uff0c\u7cfb\u7edf\u5c06\u6839\u636e\u53c2\u6570\u8868\u8c03\u7528\u67d0\u4e2a\u6784\u9020\u51fd\u6570\uff0c\u82e5\u65e0\u53c2\u6570\u8868\uff0c\u5219\u8c03\u7528\u7f3a\u7701\u6784\u9020\u51fd\u6570</li> <li>\u4e0d\u5141\u8bb8\u5728\u7a0b\u5e8f\u4e2d\u663e\u5f0f\u8c03\u7528\u6784\u9020\u51fd\u6570\uff01\uff01\uff01\uff01</li> </ul> <p>\u6ce8\u610f\u70b9</p> \u6ce8\u610f\u70b9 <ul> <li>\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u6709\u8fd4\u56de\u7c7b\u578b\uff0c<code>void</code>\u4e5f\u4e0d\u884c</li> <li>\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u65f6\u673a\u662f\u5b9a\u4e49\u5bf9\u8c61\u4e4b\u540e\u7684\u7b2c\u4e00\u65f6\u95f4\uff0c\u5373\u6784\u9020\u51fd\u6570\u662f\u5bf9\u8c61\u7684\u7b2c\u4e00\u4e2a\u88ab\u8c03\u7528\u51fd\u6570</li> <li>\u5b9a\u4e49\u5bf9\u8c61\u6570\u7ec4\u6216\u7528new\u521b\u5efa\u52a8\u6001\u5bf9\u8c61\u65f6\uff0c\u4e5f\u8981\u8c03\u7528\u6784\u9020\u51fd\u6570\u3002\u4f46\u5b9a\u4e49\u6570\u7ec4\u5bf9\u8c61\u65f6\uff0c\u5fc5\u987b\u6709\u4e0d\u9700\u8981\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570</li> <li>\u6784\u9020\u51fd\u6570\u901a\u5e38\u5e94\u5b9a\u4e49\u4e3a\u516c\u6709\u6210\u5458\uff0c\u56e0\u4e3a\u5728\u7a0b\u5e8f\u4e2d\u5b9a\u4e49\u5bf9\u8c61\u65f6\uff0c\u8981\u6d89\u53ca\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\uff0c\u5c3d\u7ba1\u662f\u7531\u7f16\u8bd1\u7cfb\u7edf\u8fdb\u884c\u7684\u9690\u5f0f\u8c03\u7528\uff0c\u4f46\u4e5f\u662f\u5728\u7c7b\u5916\u8fdb\u884c\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee</li> </ul> \u9519\u8bef\u4f8b\u5b50 <pre><code>class Desk{\n    Desk(){ weight=high=width=length=0;} //\u65e0\u53c2\u6784\u9020\u51fd\u6570\u4e3aprivate\n    public:\n    void Desk::Desk(int ww,int l,int w,int h) { // \u9519\u8bef\uff0c\u4e0d\u80fd\u6709\u8fd4\u56de\u7c7b\u578b\n    weight=ww; high=l;\n    width=w; length=h;\n    }\nprivate:\n    int weight,length,widthp,high;\n};\nvoid main(){\n    Desk d(2,3,3,5); //\u6784\u9020\u51fd\u6570\u5728\u5b9a\u4e49\u5bf9\u8c61\u65f6\u8c03\u7528\n    d.Desk(1,2,3,4); //\u9519\u8bef\uff0c\u6784\u9020\u51fd\u6570\u4e0d\u80fd\u88ab\u663e\u5f0f\u8c03\u7528\n    Desk a[10]; //\u9519\u8bef,\u987b\u65e0\u53c2\u6784\u9020\u51fd\u6570\uff0c\u4f46\u5b83\u662fprivate\n    Desk *pd;\n    Desk d; //\u9519\u8bef\uff0c\u8c03\u7528Desk::Desk()\uff0c\u4f46\u5b83\u662fprivate\n    pd=new Desk(1,1,1,1); // \u8c03\u7528\u6784\u9020\u51fd\u6570Desk::Desk(int,int,int,int)\n}\n</code></pre>"},{"location":"note/courses/OOP/Lecture%203%20class/#_15","title":"\u9ed8\u8ba4\u6784\u9020\u51fd\u6570","text":"<p>\u521b\u5efa\u7c7b\u5bf9\u8c61\u65f6\u6ca1\u6709\u663e\u5f0f\u63d0\u4f9b\u521d\u59cb\u5316\u503c\u65f6\u8c03\u7528\u7684\u51fd\u6570</p> <p>\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u7c7b\u578b</p> <ul> <li>\u4e0d\u5e26\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570</li> <li>\u4e3a\u6240\u6709\u53c2\u6570\u63d0\u4f9b\u9ed8\u8ba4\u503c\u7684\u6784\u9020\u51fd\u6570</li> </ul> <p>\u5bf9\u8c61\u5b9a\u4e49\u89c4\u5219\u548c\u5e94\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u5178\u578b\u60c5\u51b5</p> <ul> <li>\u5b9a\u4e49\u65e0\u53c2\u5bf9\u8c61\u65f6\uff0c\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570</li> <li>\u5b9a\u4e49\u5bf9\u8c61\u6570\u7ec4\u65f6\uff0c\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570</li> <li>\u5728\u6d3e\u751f\u7c7b\u4e2d\u53ef\u7531\u7cfb\u7edf\u81ea\u52a8\u8c03\u7528\u57fa\u7c7b\u6216\u5b50\u5bf9\u8c61\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5b9e\u65bd\u76f8\u5e94\u5bf9\u8c61\u7684\u521d\u59cb\u5316</li> </ul>"},{"location":"note/courses/OOP/Lecture%203%20class/#_16","title":"\u7cfb\u7edf\u6dfb\u52a0\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570","text":"<p>C++\u89c4\u5b9a\uff0c\u6bcf\u4e2a\u7c7b\u5fc5\u987b\u6709\u6784\u9020\u51fd\u6570\uff0c\u5982\u679c\u4e00\u4e2a\u7c7b\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u6784\u9020\u51fd\u6570\uff0c\u5728\u9700\u8981\u65f6 \u7f16\u8bd1\u5668\u5c06\u4f1a\u4e3a\u81ea\u52a8\u4e3a\u5b83\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002</p> <p>\u5728\u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u521b\u5efa\u5bf9\u8c61\u65f6</p> <ul> <li>\u5982\u679c\u521b\u5efa\u7684\u662f\u5168\u5c40\u5bf9\u8c61\u6216\u9759\u6001\u5bf9\u8c61\uff0c\u5219\u5bf9\u8c61\u6240\u6709\u6570\u636e\u6210\u5458\u90fd\u88ab\u521d\u59cb\u5316\u4e3a0</li> <li>\u5982\u679c\u521b\u5efa\u7684\u662f\u5c40\u90e8\u5bf9\u8c61\uff0c\u5219\u4e0d\u4f1a\u521d\u59cb\u5316\u6570\u636e\u6210\u5458</li> </ul> <p>\u6ce8\u610f\u4e8b\u9879</p> \u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u6ce8\u610f\u4e8b\u9879\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u5f15\u53d1\u7684\u9519\u8bef\u7f16\u8bd1\u5668\u4e0d\u751f\u6210\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u60c5\u51b5 <p>\u5728\u7c7b\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u6784\u9020\u51fd\u6570\u65f6\uff0c\u7cfb\u7edf\u624d\u4f1a\u81ea\u52a8\u6dfb\u52a0\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002\u4e00\u65e6\u6709\u4e86\u4efb\u4f55\u5f62\u5f0f\u7684\u6784\u9020\u51fd\u6570\uff0c\u7cfb\u7edf\u5c31\u4e0d\u4f1a\u518d\u6dfb\u52a0\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u4e86</p> <p>\u5728\u7c7b\u6709\u9700\u8981\u53c2\u6570\u6784\u9020\u6570\u65f6\uff0c\u82e5\u9700\u8981\u521b\u5efa\u65e0 \u53c2\u5bf9\u8c61\uff0c\u5fc5\u987b\u663e\u5f0f\u5b9a\u4e49\u65e0\u53c2\u6784\u9020\u51fd\u6570\u3002\u4f46 \u5728C++11\u4e2d\uff0c\u4e5f\u53ef\u4ee5\u7528\u4e0b\u9762\u7684\u65b9\u5f0f\u8981\u6c42\u7f16 \u8bd1\u5668\u521b\u5efa\u5408\u6210\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002</p> <pre><code>class A{\n    public:\n        A() = default; //\u8981\u6c42\u7f16\u8bd1\u5668\u521b\u5efa\u5408\u6210\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n        A(int a, int b) : a(a), b(b) {} //\u6709\u53c2\u6784\u9020\u51fd\u6570\n};\n</code></pre> <p>\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\u5408\u6210\u7684\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u4f1a\u6267\u884c\u9519\u8bef\u64cd\u4f5c\u3002\u6bd4\u5982\uff0c \u7c7b\u5177\u6709\u6570\u7ec4\u6216\u6307\u9488\u6210\u5458\u65f6\uff0c\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u6267\u884c\u5bf9\u8c61\u521d\u59cb\u5316\u65f6\uff0c \u5f88\u6709\u53ef\u80fd\u4ea7\u751f\u201c\u6307\u9488\u60ac\u6302\u201d\u95ee\u9898\u3002</p> <ul> <li>\u7c7bA\u7684\u4e00\u4e2a\u6570\u636e\u6210\u5458\u662f\u7528\u7c7bB\u521b\u5efa\u7684\uff0c\u4f46\u7c7bB\u6709\u5176\u5b83\u6784\u9020\u51fd\u6570\uff0c     \u5374\u6ca1\u6709\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\u7c7bA\u5fc5\u987b\u5b9a\u4e49\u6784\u9020\u51fd\u6570\uff0c\u5e76\u8d1f     \u8d23\u4e3a\u5bf9\u8c61\u6210\u5458\u63d0\u4f9b\u6784\u9020\u51fd\u6570\u521d\u503c\u3002</li> <li>\u4e3a\u7c7b\u5b9a\u4e49\u4e86\u67d0\u4e2a\u6784\u9020\u51fd\u6570</li> <li>\u6709\u5e38\u91cf\u3001\u5f15\u7528\u6210\u5458\uff0c\u4e14\u672a\u7528\u7c7b\u5185\u5b9e\u59cb\u503c\u521d\u59cb\u5316</li> </ul> <p>\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u7684\u4f7f\u7528</p> \u4e00\u822c\u60c5\u51b5\u7f3a\u7701\u53c2\u6570\u6784\u9020\u51fd\u6570 <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass Point {\n    private:\n        int x, y;\n    public:\n        Point(int a, int b) { setPoint(a, b); } //L1\n        int getx() { return x; }\n        int gety() { return y; }\n        Point() { x = 0; y = 0; } //L2 \u663e\u5f0f\u5b9a\u4e49\u65e0\u53c2\u6784\u9020\u51fd\u6570\n        void setPoint(int a, int b) { x = a; y = b; }\n        };\nPoint p0; //L3\nPoint p1(1, 1); //L4 \u8c03\u7528\u6784\u9020\u51fd\u6570Point(int,int)\nvoid main() {\n    static Point p2; //L5 \u8c03\u7528\u6784\u9020\u51fd\u6570Point()\n    Point p3; //L6 \u8c03\u7528\u6784\u9020\u51fd\u6570Point()\n    Point a[10]; //L7 \u8c03\u7528\u6784\u9020\u51fd\u6570Point()\n    Point *p4; //L8 \u4e0d\u8c03\u7528\u4efb\u4f55\u6784\u9020\u51fd\u6570\n    p4 = new Point; //L9 \u8c03\u7528\u6784\u9020\u51fd\u6570Point()\n    p4-&gt;setPoint(8, 9);\n    cout &lt;&lt; \"p0: \" &lt;&lt; p0.getx() &lt;&lt; \",\" &lt;&lt; p0.gety() &lt;&lt; endl;\n    cout &lt;&lt; \"p1: \" &lt;&lt; p1.getx() &lt;&lt; \",\" &lt;&lt; p1.gety() &lt;&lt; endl; //L10\n    cout &lt;&lt; \"p2: \" &lt;&lt; p2.getx() &lt;&lt; \",\" &lt;&lt; p2.gety() &lt;&lt; endl;\n    cout &lt;&lt; \"p3: \" &lt;&lt; p3.getx() &lt;&lt; \",\" &lt;&lt; p3.gety() &lt;&lt; endl;\n    cout &lt;&lt; \"p4: \" &lt;&lt; p4-&gt;getx() &lt;&lt; \",\" &lt;&lt; p4-&gt;gety() &lt;&lt; endl;\n    cout &lt;&lt; \"a[0]: \" &lt;&lt; a[0].getx() &lt;&lt; \",\" &lt;&lt; a[0].gety() &lt;&lt; endl;\n}\n</code></pre> <p>\u5728\u6570\u636e\u6210\u5458\u7684\u53d6\u503c\u6bd4\u8f83\u56fa\u5b9a\u65f6\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e3a\u6784\u9020\u51fd\u6570\u53c2\u6570\u63d0\u4f9b\u7f3a\u7701\u53c2\u6570\u521d\u59cb\u5316\u5b83\u4eec\u3002</p> <pre><code>class Point {\nprivate:\nint x, y;\npublic:\nPoint(int a=0, int b=0) { setPoint(a, b); } //L1\n//Point() { x = 0; y = 0; } //\u5b9a\u4e49\u65e0\u53c2\u5bf9\u8c61\u65f6\u4f1a\u4e0e\u7f3a\u7701\u53c2\u6570\u6784\u9020\u51fd\u6570\u51b2\u7a81\nvoid setPoint(int a, int b) { x = a; y = b; }\n\u2026\u2026\n};\n</code></pre>"},{"location":"note/courses/OOP/Lecture%203%20class/#_17","title":"\u91cd\u8f7d\u6784\u9020\u51fd\u6570","text":"<p>\u4e0e\u666e\u901a\u51fd\u6570\u7684\u91cd\u8f7d\u4e00\u6837\uff0c\u91cd\u8f7d\u7684\u6784\u9020\u51fd\u6570\u5fc5\u987b\u5177\u6709\u4e0d\u540c\u7684\u51fd\u6570\u539f\u578b</p> <pre><code>class A{\nA(int ){\u2026}\nA(int,int){\u2026.}\nA(double ){\u2026}\n};\nA a(1),b(2,3),c(3.4)\n</code></pre> <p>\u91cd\u8f7d\u6784\u9020\u51fd\u6570\u7684\u4f7f\u7528</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass Tdate {\n    public:\n        Tdate();\n        Tdate(int d);\n        Tdate(int m, int d);\n        Tdate(int m, int d, int y);\n//\u2026\u2026 // \u7701\u7565\u6389\u4e86\u8bbe\u7f6e\u548c\u8bfb\u53d6\u6570\u636e\u6210\u5458\u503c\u7684\u63a5\u53e3\u51fd\u6570\n        void display(){ cout &lt;&lt; month &lt;&lt; \"/\" &lt;&lt; day\n        &lt;&lt; \"/\" &lt;&lt; year &lt;&lt; endl; }\n    private:\n        int year=2008,month=8, day=8; // 11C++\n};\n\nTdate::Tdate() {display();}\n    Tdate::Tdate(int d) {\n    day = d;\n    display();\n}\nTdate::Tdate(int m, int d) {\nmonth = m; day = d;\n    display();\n}\nTdate::Tdate(int m, int d, int y) {\n    month = m; day = d; year = y;\n    display();\n}\nvoid main() {\n    Tdate oneday; //L1\n    Tdate aday(); //L2\uff0c\u53ef\u4ee5\u5417\uff1f\n    Tdate bday1(10); //L3\n    Tdate bday2 = 10; //L4\n    Tdate cday(2, 12); //L5\n    Tdate dday(1, 2, 1998); //L6\n}\n</code></pre> <p>L2\u8bed\u53e5\u4e0d\u4f1a\u8c03\u7528\u6784\u9020\u51fd\u6570\uff0c\u5b83\u58f0\u660e\u4e86\u4e00\u4e2a\u51fd\u6570\uff0c\u8fd4\u56de\u503c\u4e3aTdate\u7c7b\u578b\uff0c\u53c2\u6570\u4e3a\u7a7a</p> <p>L4\u662f\u4e00\u79cd\u62f7\u8d1d\u521d\u59cb\u5316\uff0c\u7f16\u8bd1\u5668\u4f1a\u5c1d\u8bd5\u5c06\u6574\u6570 10 \u8f6c\u6362\u4e3a Tdate \u5bf9\u8c61\u3002\u7531\u4e8e\u5b58\u5728\u4e00\u4e2a\u53ef\u4ee5\u63a5\u53d7\u6574\u6570\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570 <code>Tdate(int d)</code>,\u7f16\u8bd1\u5668\u4f1a\u7528\u5b83\u8fdb\u884c\u9690\u5f0f\u8f6c\u6362</p> <ul> <li>\u9996\u5148\uff0c\u4f1a\u4f7f\u7528 Tdate(10) \u521b\u5efa\u4e00\u4e2a\u4e34\u65f6\u7684 <code>Tdate</code> \u5bf9\u8c61\u3002\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\uff1a<code>day</code> \u88ab\u8bbe\u7f6e\u4e3a 10\u3002<code>month</code> \u548c <code>year</code> \u4fdd\u7559\u5176\u9ed8\u8ba4\u503c (8 \u548c 2008)\u3002</li> <li>\u7136\u540e\u8fd9\u4e2a\u4e34\u65f6\u5bf9\u8c61\u88ab\u7528\u6765\u521d\u59cb\u5316 bday2\uff08\u5728\u73b0\u4ee3 C++ \u4e2d\uff0c\u7f16\u8bd1\u5668\u901a\u5e38\u4f1a\u4f18\u5316\u6389\u8fd9\u4e2a\u62f7\u8d1d\u8fc7\u7a0b\uff0c\u76f4\u63a5\u5728 bday2 \u4e0a\u6784\u9020\uff0c\u4f46\u6982\u5ff5\u4e0a\u662f\u8fd9\u6837\uff09\u3002 </li> </ul>"},{"location":"note/courses/OOP/Lecture%203%20class/#_18","title":"\u6784\u9020\u51fd\u6570\u4e0e\u521d\u59cb\u5316\u5217\u8868","text":"<p>\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u8bed\u6cd5\u7ed3\u6784\uff0c\u7528\u4e8e\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\u521d\u59cb\u5316\u6210\u5458\u53d8\u91cf\u3002\u5b83\u5728\u6784\u9020\u51fd\u6570\u4f53\u6267\u884c\u4e4b\u524d\u88ab\u8c03\u7528\uff0c\u5141\u8bb8\u6211\u4eec\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\u76f4\u63a5\u521d\u59cb\u5316\u6210\u5458\u53d8\u91cf\uff0c\u800c\u4e0d\u662f\u5728\u6784\u9020\u51fd\u6570\u4f53\u5185\u8d4b\u503c\u3002</p> <p><pre><code>class ClassName{\n    public:\n        ClassName(int a, int b){ \n            //\u6784\u9020\u51fd\u6570\u4f53\n        }\n    private:\n        int data1;\n        int data2;\n};\n\nClassName::ClassName(int a, int b): data1(a), data2(b) {//\u521d\u59cb\u5316\u5217\u8868\n    //\u6784\u9020\u51fd\u6570\u4f53\n}\n</code></pre> \u4ecb\u4e8e\u53c2\u6570\u8868\u540e\u9762\u7684<code>:</code>\u4e0e\u51fd\u6570\u4f53\u4e4b\u95f4\u7684\u5185\u5bb9\u5c31\u662f\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\uff0c\u5176\u542b\u4e49\u662f\u5c06\u62ec\u53f7\u4e2d\u7684\u521d\u59cb\u503c\u53c2\u6570\u8d4b\u7ed9\u8be5\u62ec\u53f7\u524d\u9762\u7684\u6210\u5458</p> <p>\u6ce8\u610f\u4e8b\u9879</p> <ul> <li>\u521d\u59cb\u5316\u5217\u8868\u4e2d\u6210\u5458\u521d\u59cb\u5316\u6b21\u5e8f\u4e0e\u4ed6\u4eec\u5728\u7c7b\u4e2d\u7684\u58f0\u660e\u6b21\u5e8f\u76f8\u540c\uff0c\u4e0e\u521d\u59cb\u5316\u5217\u8868\u4e2d\u7684\u6b21\u5e8f\u65e0\u5173     <pre><code>//\u521d\u59cb\u5316\u987a\u5e8f\u5b8c\u5168\u76f8\u540c\nTdate::Tdate(int m,int d,int y)\n    :month(m),day(d),year(y){}\nTdate::Tdate(int m,int d,int y)\n    :year(y),month(m),day(d){}\nTdate::Tdate(int m,int d,int y)\n    :day(d),year(y),month(m){}\n</code></pre></li> <li>\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u7684\u6267\u884c\u65f6\u95f4     \u5982\u679c\u6570\u636e\u6210\u5458\u6709\u7c7b\u5185\u521d\u59cb\u503c\uff0c\u5219\u6267\u884c\u6b21\u5e8f\uff1a\u7c7b\u5185\u521d\u59cb\u503c-&gt;\u521d\u59cb\u5316\u5217\u8868-&gt;\u6784\u9020\u51fd\u6570\u4f53</li> <li>\u5fc5\u987b\u91c7\u7528\u521d\u59cb\u5316\u5217\u8868\uff08\u6216\u7c7b\u5185\u521d\u59cb\u503c\uff09\u8fdb\u884c\u521d\u59cb\u5316\u7684\u6210\u5458<ul> <li>const\u6210\u5458</li> <li>\u5f15\u7528\u6210\u5458</li> <li>\u7c7b\u5bf9\u8c61\u6210\u5458</li> <li>\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u5bf9\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528</li> </ul> </li> </ul> <p><pre><code>class A {\n    int x, y, j;      // \u6210\u5458\u58f0\u660e\u987a\u5e8f\uff1ax, y, j\n    const int i = 4;  // C++11 \u7c7b\u5185\u521d\u59cb\u5316\n    int &amp;k;\npublic:\n    A(int a, int b, int c) : j(b), k(c), x(y) { // \u521d\u59cb\u5316\u5217\u8868\n        y = a; // \u6784\u9020\u51fd\u6570\u4f53\n        cout &lt;&lt; \"x=\" &lt;&lt; x &lt;&lt; \"\\t\" &lt;&lt; \"y=\" &lt;&lt; y &lt;&lt; endl;\n        cout &lt;&lt; \"i=\" &lt;&lt; i &lt;&lt; \"\\t\" &lt;&lt; \"j=\" &lt;&lt; j &lt;&lt; \"\\t\" &lt;&lt; \"k=\" &lt;&lt; k &lt;&lt; endl;\n    }\n};\n</code></pre> \u5f97\u5230\u7684<code>x</code>\u662f\u4e00\u4e2a\u672a\u5b9a\u4e49\u7684\u503c\uff0c\u56e0\u4e3a<code>y</code>\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u6ca1\u6709\u88ab\u521d\u59cb\u5316\u3002 </p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_19","title":"\u59d4\u6258\u6784\u9020\u51fd\u6570","text":"<p>\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u4f7f\u7528\u5b83\u6240\u5728\u7c7b\u7684\u5176\u5b83\u6784\u9020\u51fd\u6570\u6267\u884c\u81ea\u5df1\u7684\u521d\u59cb \u5316\u529f\u80fd\uff0c\u6216\u8005\u8bf4\u4e00\u4e2a\u6784\u9020\u51fd\u6570\u628a\u5b83\u81ea\u5df1\u7684\u4e00\u4e9b\uff08\u6216\u5168\u90e8\uff09\u804c \u8d23\u59d4\u6258\u7ed9\u5176\u5b83\u6784\u9020\u51fd\u6570\uff0c\u5c31\u79f0\u4e3a\u59d4\u6258\u6784\u9020\u51fd\u6570\uff09</p> <p>\u59d4\u6258\u6784\u9020\u51fd\u6570\u53ea\u80fd\u591f\u5728\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8c03\u7528\u5b83\u8981\u59d4\u6258\u7684\u6784\u9020\u51fd \u6570\uff0c\u800c\u4e14\u521d\u59cb\u5316\u5217\u8868\u4e2d\u4e0d\u5141\u8bb8\u518d\u6709\u5176\u5b83\u7684\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\u4e86\uff0c \u4f46\u59d4\u6258\u6784\u9020\u51fd\u6570\u4f53\u4e2d\u53ef\u4ee5\u6709\u7a0b\u5e8f\u4ee3\u7801\u3002</p> <p>\u59d4\u6258\u6784\u9020\u51fd\u6570\u7684\u4f7f\u7528</p> <p><pre><code>class A {\npublic:\nA()\uff1aA\uff081\uff0c2\uff09{}\nA(int,int){}\n};\nA a1;\nA a2(3,4);\nA &amp;a=a1;\n</code></pre> \u672c\u7a0b\u5e8f\u8c03\u7528\u6784\u9020\u51fd\u7684\u6b21\u6570\u4e3a3\u6b21\uff0c<code>A a1</code>\u8c03\u7528\u4e86<code>A()</code>\u6784\u9020\u51fd\u6570\uff0c<code>A()</code>\u6784\u9020\u51fd\u6570\u53c8\u8c03\u7528\u4e86<code>A(int,int)</code>\u6784\u9020\u51fd\u6570\uff0c<code>A a2(3,4)</code>\u76f4\u63a5\u8c03\u7528\u4e86<code>A(int,int)</code>\u6784\u9020\u51fd\u6570</p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_20","title":"\u6790\u6784\u51fd\u6570","text":"<pre><code>class X{\n    ~X(); //\u6790\u6784\u51fd\u6570\n}\n</code></pre>"},{"location":"note/courses/OOP/Lecture%203%20class/#_21","title":"\u6790\u6784\u51fd\u6570\u7279\u70b9","text":"<ul> <li>\u6790\u6784\u51fd\u6570\u7684\u540d\u79f0\u4e0e\u7c7b\u540d\u76f8\u540c\uff0c\u524d\u9762\u52a0\u4e0a<code>~</code>\u7b26\u53f7</li> <li>\u6790\u6784\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c</li> <li>\u6790\u6784\u51fd\u6570\u4e0d\u80fd\u6709\u53c2\u6570</li> <li>\u6790\u6784\u51fd\u6570\u4e0d\u80fd\u88ab\u91cd\u8f7d</li> </ul> <p>\u6790\u6784\u51fd\u6570\u8c03\u7528\u65f6\u673a</p> <ul> <li>\u5bf9\u8c61\u751f\u547d\u671f\u7ed3\u675f\u65f6\u81ea\u52a8\u8c03\u7528</li> </ul> <p>Note</p> <ul> <li>\u6bcf\u4e2a\u7c7b\u90fd\u5e94\u8be5\u6709\u4e00\u4e2a\u6790\u6784\u51fd\u6570\u3002\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\u6790\u6784\u51fd\u6570\uff0cc++\u7f16\u8bd1\u5668\u5c06\u4ea7\u751f\u4e00\u4e2a\u6700\u5c0f\u5316\u7684\u9ed8\u8ba4\u6790\u6784\u51fd\u6570</li> <li>\u82e5\u6709\u591a\u4e2a\u5bf9\u8c61\u540c\u65f6\u7ed3\u675f\u751f\u5b58\u5468\u671f\uff0cc++\u5c06\u6309\u7167\u4e0e\u8c03\u7528\u6784\u9020\u51fd\u6570\u76f8\u53cd\u7684\u987a\u5e8f\u8c03\u7528\u6790\u6784\u51fd\u6570</li> <li>\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u90fd\u53ef\u4ee5\u662finline\u51fd\u6570</li> <li>\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u901a\u5e38\u90fd\u9700\u8981\u5728\u7c7b\u5916\u88ab\u8c03\u7528\uff0cpublic</li> <li>\u5408\u6210\u7684\u6790\u6784\u51fd\u6570\u901a\u5e38\u90fd\u80fd\u591f\u6ee1\u8db3\u5bf9\u8c61\u6790\u6784\u7684\u8981\u6c42\u3002\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5fc5\u987b\u7f16\u5199\u6790\u6784\u51fd\u6570\u624d\u80fd\u591f\u5b8c\u6210\u5bf9\u8c61\u9500\u6bc1\u524d\u7684\u8d44\u6e90\u6e05\u7406\u5de5\u4f5c\u3002\u5e38\u89c1\u60c5\u51b5\u662f\u7528\u5b83\u6765\u91ca\u653e\u7531\u6784\u9020\u51fd\u6570\u5206\u914d\u7684\u81ea\u7531\u5b58\u50a8\u7a7a\u95f4\u3002</li> </ul> <p>Info</p> <p>\u5373\u201c\u8d44\u6e90\u83b7\u53d6\u5373\u521d\u59cb\u5316\u201d\uff0c\u662f\u6307\u5728\u5bf9\u8c61\u7684\u6784\u9020\u51fd\u6570\u4e2d\u83b7\u53d6\u8d44\u6e90\uff0c\u5728\u6790\u6784\u51fd\u6570\u4e2d\u91ca\u653e\u8d44\u6e90\u3002RAII\u6cd5\u5219\u662fC++\u4e2d\u7ba1\u7406\u8d44\u6e90\u7684\u4e00\u4e2a\u91cd\u8981\u539f\u5219\uff0c\u786e\u4fdd\u4e86\u8d44\u6e90\u7684\u6b63\u786e\u91ca\u653e\u548c\u5185\u5b58\u6cc4\u6f0f\u7684\u907f\u514d\u3002</p> <pre><code>class B{\n    private:\n        int *p; char *q;\n    public:\n        inline B(int x){\n            a = new int[x];\n            pc = new char;\n\n        }\n        inline ~B(){\n            delete []a; \n            delete pc;\n        }\n};\n</code></pre> <p>\u50cfB\u8fd9\u6837\u7684\u7c7b\uff0c\u5728 \u6784\u9020\u51fd\u6570\u4e2d\u8fdb\u884c\u4e86\u52a8 \u6001\u5185\u5b58\u7a7a\u95f4\u7684\u5206\u914d\uff0c \u7cfb\u7edf\u5408\u6210\u7684\u9ed8\u8ba4\u6790\u6784 \u51fd\u6570\u5c31\u4e0d\u80fd\u56de\u6536\u6b64\u7a7a \u95f4\uff0c\u5fc5\u987b\u7f16\u5199\u6790\u6784\u51fd \u6570\uff0c\u56de\u6536\u52a8\u6001\u5185\u5b58\u7a7a \u95f4\uff0c\u5426\u5219\u4f1a\u4ea7\u751f\u5185\u5b58 \u6cc4\u6f0f</p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_22","title":"\u5f31\u6307\u9488\u548c\u6790\u6784\u51fd\u6570","text":"<p>\u5171\u4eab\u6307\u9488\u7ba1\u7406\u5bf9\u8c61\u7684\u5806\u5185\u5b58\u65f6\uff0c\u53ef\u80fd\u4ea7\u751f\u5faa\u73af\u5f15\u7528\uff0c\u5bfc\u81f4\u6b7b\u9501\u6216\u4e0d\u80fd\u56de\u6536\u5185\u5b58\u7b49\u95ee\u9898</p> <p>\u5f31\u6307\u9488<code>weak_ptr</code>\u53ef\u4ee5\u534f\u52a9\u5171\u4eab\u6307\u9488\u89e3\u51b3\u95ee\u9898</p> <p>Example</p> <pre><code>#include&lt;iostream&gt;\n#include&lt;memory&gt;\nusing namespace std;\nclass B;//L1 \u524d\u5411\u58f0\u660e\nclass A{\n    public:\n    A(){cout &lt;&lt; \"A constructor\" &lt;&lt;endl;}\n    ~A(){cout &lt;&lt; \"A Deconstructor\" &lt;&lt; endl;}\n    shared_ptr&lt;B&gt; pb; //L2 \u5728A\u4e2d\u5f15\u7528B\n    // weak_ptr&lt;B&gt;pb; // L3 \uff0c\u5f31\u6307\u9488\n};\n\nclass B{\n    B() { cout&lt;&lt;\"B Constructor \u2026\"&lt;&lt;endl; }\n    ~B() { cout&lt;&lt;\"B Destructor \u2026\"&lt;&lt;endl; }\n    shared_ptr&lt;A&gt; pa; // L4\uff0c\u5728B\u4e2d\u5f15\u7528A\n}\uff1b\nint main() {\nshared_ptr&lt;A&gt; spa{ new A() }; // L5\nshared_ptr&lt;B&gt; spb{ new B() }; // L6\nspa-&gt;pb = spb; // L7\uff0c\u5faa\u73af\u5f15\u7528\u4e86A\nspb-&gt;pa = spa; // L8\uff0c\u5faa\u73af\u5f15\u7528\u4e86B\ncout&lt;&lt;\"spa.count = \"&lt;&lt;spa.use_count()&lt;&lt;\"\\tspb.count = \"&lt;&lt;spb.use_count()&lt;&lt;endl;\n}\n</code></pre> <p>\u7531\u4e8epa,pb\u76f8\u4e92\u5f15\u7528\uff0c\u4f7f\u5b83\u4eec\u7684\u5185\u5b58\u5f15\u7528\u8ba1\u6570 \u90fd\u662f2\uff0c\u5728\u5931\u53bb\u5176\u751f\u5b58\u5176\u671f\u65f6\uff0c\u5f15\u6570\u8ba1\u6570\u5668\u51cf 1\uff0c\u4f46\u4ecd\u4e0d\u4e3a0\uff0c\u6240\u4ee5\u5176\u6790\u6784\u51fd\u6570\uff08\u56de\u6536\u5185 \u5b58\uff09\u4e0d\u88ab\u8c03\u6709\uff0c\u5185\u5b58\u672a\u88ab\u56de\u6536\uff0c\u4ea7\u751f\u5185\u5b58\u6cc4 \u6f0f\u3002</p> <p>\u89e3\u51b3\u529e\u6cd5\uff1a\u7528\u8bed\u53e5L3\u53d6\u4ee3\u8bed\u53e5L2</p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_23","title":"\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u79fb\u52a8\u51fd\u6570\u8bbe\u8ba1","text":"<ul> <li>\u7531\u4e8e\u8d4b\u503c\u3001\u62f7\u8d1d\u64cd\u4f5c\u7684\u666e\u904d\u6027\uff0c\u81f4\u4f7f\u6bcf\u4e2a\u7c7b\u90fd\u5e94\u8be5\u5177\u6709\u8fd9\u4e9b\u6210\u5458\u51fd\u6570\uff0c\u5982\u679c\u5728\u8bbe\u8ba1\u7c7b\u65f6\u6ca1\u6709\u663e\u5f0f \u5730\u5b9a\u4e49\u5b83\u4eec\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u81ea\u52a8\u4e3a\u8be5\u7c7b\u6dfb\u52a0\u9ed8\u8ba4\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u548c\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff0c \u5b9a\u4e49\u5404\u51fd\u6570\u7684\u9ed8\u8ba4\u64cd\u4f5c\u3002</li> <li>\u7cfb\u7edf\u751f\u6210\u7684\u9ed8\u8ba4\u51fd\u6570\u5927\u591a\u6570\u60c5\u51b5\u80fd\u591f\u6b63\u786e\u5b8c\u6210\u5bf9\u8c61\u7684\u8d4b\u503c\u3001\u62f7\u8d1d\u548c\u79fb\u52a8\u64cd\u4f5c\u3002\u4f46\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c \u9ed8\u8ba4\u51fd\u6570\u7684\u9ed8\u8ba4\u64cd\u4f5c\u4f1a\u51fa\u95ee\u9898\u3002</li> <li>\u6bd4\u8f83\u5178\u578b\u7684\u60c5\u51b5\u662f\u5f53\u7c7b\u5177\u6709\u6307\u9488\u7c7b\u578b\u6570\u636e\u6210\u5458\u7684\u65f6\u5019\uff0c\u4f9d\u8d56\u9ed8\u8ba4\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u8fdb\u884c\u5bf9\u8c61\u8d4b\u503c\uff0c \u6216\u9ed8\u8ba4\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u8fdb\u884c\u5bf9\u8c61\u590d\u5236\u90fd\u4f1a\u4ea7\u751f\u201c\u6307\u9488\u60ac\u6302\u201d\u95ee\u9898\u3002\u8fd9\u65f6\uff0c\u5c31\u5fc5\u987b\u663e\u5f0f\u5b9a\u4e49\u7c7b\u7684\u8d4b\u503c \u8fd0\u7b97\u7b26\u51fd\u6570\u548c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u4e86\u3002</li> </ul> <p>\u5404\u4e2a\u9ed8\u8ba4\u51fd\u6570\u7684\u5f62\u5f0f\u548c\u65f6\u673a</p> <pre><code>class A{\n    int a,b,c;\n    char *p;\n    public:\n        A(); //\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n        A(const A&amp; other); //\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n        A(A&amp;&amp; other); //\u79fb\u52a8\u6784\u9020\u51fd\u6570\n        A&amp; operator=(const A&amp; other); //\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\n        A&amp; operator=(A&amp;&amp; other); //\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\n        ~A(); //\u6790\u6784\u51fd\u6570\n};\n</code></pre> <p>\u8c03\u7528\u65f6\u673a</p> <pre><code>A a2(a1), a3 = a1, a4{a1}, a5={a1}; //\u62f7\u8d1d\u6784\u9020\u51fd\u6570\nA f(A o){\n    A t;\n    return t; //\u79fb\u52a8\u6784\u9020\u51fd\u6570\n}\n\na2 = a1; //\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\na2 = f(a1); //\u8c03\u7528\u79fb\u52a8\u6784\u9020\u51fd\u6570\u548c\u79fb\u52a8\u590d\u5236\u51fd\u6570\n</code></pre>"},{"location":"note/courses/OOP/Lecture%203%20class/#_24","title":"\u8d4b\u503c\u8fd0\u7b97\u7b26\u548c\u590d\u5236\u6784\u9020\u51fd\u6570\u7684\u8bbe\u8ba1","text":"<p>\u8c03\u7528\u65f6\u673a</p> <ul> <li>\u7528\u4e8e\u5b9e\u73b0\u540c\u7c7b\u5bf9\u8c61\u95f4\u7684\u8d4b\u503c\u590d\u5236\u6216\u590d\u5236\u6784\u9020</li> <li>\u5f53\u628a\u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u8c03\u7528\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570 </li> <li>\u7528\u4e00\u4e2a\u5df2\u5b9a\u4e49\u5bf9\u8c61\u521d\u59cb\u5316\u65b0\u5efa\u5bf9\u8c61\u65f6\uff0c\u8c03\u7528\u8d4b\u503c\u6784\u9020\u51fd\u6570</li> </ul> <p>\u9ed8\u8ba4: \u5982\u679c\u7c7b\u6ca1\u6709\u663e\u793a\u5b9a\u4e49\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u548c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u4e3a\u5b83\u4eec\u751f\u6210\u9ed8\u8ba4\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u548c\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u4ee5\u6309\u4f4d\u590d\u5236\u7684\u65b9\u5f0f\u5b9e\u73b0\u5bf9\u8c61\u975e\u9759\u6001\u6570\u636e\u6210\u5458\u7684\u8d4b\u503c\u548c\u590d\u5236\u64cd\u4f5c</p> <p>\u5bf9\u8c61\u8d4b\u503c\u64cd\u4f5c\u7684\u6267\u884c\u8fc7\u7a0b</p> <ul> <li>\u67e5\u627e\u8be5\u7c7b\u662f\u5426\u63d0\u4f9b\u4e86\u663e\u5f0f\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26/\u590d\u5236\u6784\u9020\u51fd\u6570\uff0c\u5982\u679c\u6709\u53ef\u8bbf\u95ee\u7684\uff0c\u5c31\u662f\u7528\u8fd9\u4e2a\uff0c\u5982\u679c\u63d0\u4f9b\u4e86\u4f46\u662f\u4e0d\u662f\u53ef\u4ee5\u8bbf\u95ee\u7684\uff0c\u5c31\u4ea7\u751f\u7f16\u8bd1\u9519\u8bef</li> <li>\u5982\u679c\u8be5\u7c7b\u6ca1\u6709\u663e\u5f0f\u5b9a\u4e49\uff0c\u5c31\u4e3a\u8be5\u7c7b\u5408\u6210\uff0c\u6267\u884c\u9ed8\u8ba4\u7684\u64cd\u4f5c</li> </ul> <p>\u9700\u8981\u5b9a\u4e49\u7684\u60c5\u51b5\uff1a\u7c7b\u5305\u542b\u6709\u6307\u9488\u6570\u636e\u5bf9\u8c61\u65f6</p> <p>\u6307\u9488\u60ac\u6302</p> <p><pre><code>#include &lt;iostream&gt;\n#include &lt;string&gt;\nusing namespace std;\nclass String{\n    char *str;\n    int n;\npublic:\n    String(char *s, int a){\n        ptr = new char[strlen(s)+1];\n        strcpy(str, s);\n        n = a;\n    }\n    ~String(){\n        delete str;\n    }\n    void print(){\n        cout &lt;&lt; str &lt;&lt; endl;\n    }\n}\nint main(){\n    String p1((char *)\"Hello\", 8);\n    {\n        String p2((char *)\"chong qing\", 10);//L2\n        p2 = p1;\n        cout &lt;&lt; \"p2: \";\n        p2.print();\n    }\n    cout &lt;&lt; \"p1: \";\n    p1.print();\n    String s1((char*)\"string1\",1);\n    {String s2 ={s1};\n    s2.print();}\n}\ns1.print();\n</code></pre> \u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u8d4b\u503c\u8fd0\u7b97\u7b26\uff0c\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u590d\u5236\u6784\u9020\u51fd\u6570\uff1f</p> <ul> <li>\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u7528\u4e8e\u5bf9\u8c61\u95f4\u7684\u8d4b\u503c\u64cd\u4f5c</li> <li>\u590d\u5236\u6784\u9020\u51fd\u6570\u7528\u4e8e\u5bf9\u8c61\u95f4\u7684\u590d\u5236\u64cd\u4f5c</li> <li>\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u548c\u590d\u5236\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u65f6\u673a\u4e0d\u540c<ul> <li>\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u5728\u5bf9\u8c61\u5df2\u7ecf\u5b58\u5728\u65f6\u8c03\u7528</li> <li>\u590d\u5236\u6784\u9020\u51fd\u6570\u5728\u5bf9\u8c61\u521b\u5efa\u65f6\u8c03\u7528</li> </ul> </li> </ul> <p>\u5f53\u6267\u884c<code>p2 = p1</code>\u65f6\uff0c\u7531\u4e8eString \u7c7b\u6ca1\u6709\u63d0\u4f9b\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\uff0cC++\u5c06\u4e3a\u5b83\u751f\u6210\u5408\u6210\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\uff0c\u5e76\u8c03\u7528\u4ed6\u8fdb\u884c\u5bf9\u8c61\u8d4b\u503c</p> <p>\u7f16\u8bd1\u5668\u5408\u6210\u7684\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u7c7b\u4f3c\u4e8e\u4e0b\u9762\u7684\u5f62\u5f0f\uff1a <pre><code>String&amp; String::operator=(const String&amp; other){\n    ptr = other.ptr;\n    n = other.n;\n    return *this;\n}\n</code></pre> 1. L2 \u6267\u884c\u540e\uff0c p1,p2 \u7684 ptr \u6307\u9488\u6307\u5411\u4e86\u540c\u4e00 \u5185\u5b58\u5355\u5143\u3002 P2 \u5bf9\u8c61\u6790\u6784\u65f6\u5c31\u4f1a\u8c03\u7528\u5b83\u7684\u6790 \u6784\u51fd\u6570 delete \u6b64\u5185\u5b58\u533a\u57df\u3002\u56e0\u6b64\u8f93\u51fa p1.ptr \u6240\u6307\u5185\u5bb9\u65f6\u662f\u65e0\u6548\u5b57\u7b26\u3002</p> <ol> <li>\u5f53 p1 \u6790\u6784\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u4f1a\u518d\u6b21 delete \u540c \u4e00\u5185\u5b58\u533a\u57df\uff0c\u4ea7\u751f\u9519\u8bef\u3002\u79f0\u4e3a\u201c\u6307\u9488\u60ac \u6302\u201d</li> </ol> <p></p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_25","title":"\u8d4b\u503c\u8fd0\u7b97\u7b26/\u590d\u5236\u6784\u9020\u7684\u91cd\u8f7d\u65b9\u6cd5","text":"<p>\u8d4b\u503c\u8fd0\u7b97\u7b26\u662f\u4e00\u4e2a\u4e8c\u5143\u8fd0\u7b97\u7b26\uff0c\u5e38\u8fd4\u56de\u672c\u7c7b\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u5176\u5b9a\u4e49\u5f62\u5f0f\uff1a <pre><code>class ClassName{\n    public:\n        ClassName&amp; operator=(const ClassName&amp; other);\n        ClassName (const ClassName&amp; other);\n};\n</code></pre></p> <p>\u53ef\u4ee5\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u82e5\u6709\u591a\u4e2a\u53c2\u6570\uff0c\u5219\u8981\u6c42\u9664\u4e86\u7b2c\u4e00\u4e2a\u53c2\u6570\u5916\u7684\u5176\u4f59\u53c2\u6570\u90fd\u8981\u6709\u9ed8\u8ba4\u503c\u3002\u7b2c\u4e00\u4e2a\u53c2\u6570\u5fc5\u987b\u662f\u81ea\u8eab\u7c7b\u7c7b\u578b\u7684\u5f15\u7528\uff0c\u4e14\u901a\u5e38\u662fconst\u7c7b\u578b</p> <pre><code>class String{\nString&amp; operator=(const String&amp; s); // \u91cd\u8f7d\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\n\u2026\u2026\n};\n\nString&amp; String::operator=(const String&amp; s){\n    if(this != &amp;s){ //\u907f\u514d\u81ea\u8d4b\u503c\n        delete []str; //\u91ca\u653e\u539f\u6709\u5185\u5b58\n        str = new char[strlen(s.str)+1]; //\u5206\u914d\u65b0\u5185\u5b58\n        strcpy(str, s.str); //\u590d\u5236\u5b57\u7b26\u4e32\n    }\n    return *this; //\u8fd4\u56de\u5bf9\u8c61\u672c\u8eab\u7684\u5f15\u7528\n}\n</code></pre> <p>\u81f3\u5c11\u4e0b\u9762\u51e0\u79cd\u60c5\u51b5\u4f1a\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570 <pre><code>class X{};\nX obj1; //\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\nX obj2(obj1); //\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\nX obj3 = obj1; //\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\nf(X o); //\u5bf9\u8c61\u4f5c\u51fd\u6570\u53c2\u6570\uff0c\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\nX f(...){return t;}//\u8c03\u7528\uff08\u79fb\u52a8\u6784\u9020\u51fd\u6570\uff09\nX a[4] = {obj1, obj2}; //a[0],a[1]\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570,a[2],a[3]\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\n</code></pre> \u5bf9\u8c61\u5b9a\u4e49\u57df\u6784\u9020\u51fd\u6570\u5173\u7cfb</p> <ul> <li> <p>\u7c7b\u540d \u5bf9\u8c61\u540d\uff1a\u65e0\u53c2\u6784\u9020\u51fd\u6570</p> </li> <li> <p>\u7c7b\u540d \u5bf9\u8c61\u540d(\u53c2\u6570\u8868)\uff1a\u53c2\u6570\u5339\u914d\u7684\u6784\u9020\u51fd\u6570</p> </li> <li>\u7c7b\u540d \u5bf9\u8c61\u540d = \u7c7b\u540d(\u53c2\u6570\u8868)\uff1a\u53c2\u6570\u5339\u914d\u7684\u6784\u9020\u51fd\u6570</li> <li> <p>\u7c7b\u540d \u5bf9\u8c61\u540d= (\u53c2\u6570\u8868)\uff1a\u53c2\u6570\u5339\u914d\u7684\u6784\u9020\u51fd\u6570</p> </li> <li> <p>\u7c7b\u540d \u5bf9\u8c61\u540d\uff08\u5df2\u5b9a\u4e49\u5bf9\u8c61\uff09\uff1a \u62f7\u8d1d\u6784\u9020\u51fd\u6570</p> </li> <li>\u7c7b\u540d \u5bf9\u8c61\u540d = \u5df2\u5b9a\u4e49\u5bf9\u8c61\uff1a \u62f7\u8d1d\u6784\u9020\u51fd\u6570</li> </ul>"},{"location":"note/courses/OOP/Lecture%203%20class/#_26","title":"\u79fb\u52a8\u51fd\u6570","text":"<p>\u79fb\u52a8\u5373\u8f6c\u79fb\uff0c\u5373\u628a\u4e00\u4e2a\u5728\u5185\u5b58\u533a\u57df\u4e2d\u7684\u5185\u5bb9\u8f6c\u79fb\u7ed9\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002</p> <p>\u4e3b\u8981\u89e3\u51b3\u4e34\u65f6\u5bf9\u8c61\u590d\u5236\u65f6\u7684\u7cfb\u7edf\u5f00\u9500\uff0c\u63d0\u9ad8\u6548\u7387</p> <p>Example</p> <pre><code>class A{......};\nA f(){A t; ....; return t;}\nint main(){\n    A b;\n    b = f(); //L1\n}\n</code></pre> <p>L1 \u7684\u6267\u884c\u8fc7\u7a0b\uff1a</p> <ul> <li>\u8c03\u7528f</li> <li>\u6267\u884c<code>return t</code> \u5c06\u62c6\u5173\u952e\u65e0\u540d\u4e34\u65f6\u5bf9\u8c61\u5e76\u8fd4\u56de\u8c03\u7528\u8bed\u53e5</li> <li>\u5c06\u65e0\u540d\u5bf9\u8c61\u62f7\u8d1d\u7ed9\u5bf9\u8c61 b</li> <li>\u9500\u6bc1\u65e0\u540d\u4e34\u65f6\u5bf9\u8c61</li> </ul> <p>\u800c\u5bf9\u8c61\u79fb\u52a8\u6280\u672f\u76f4\u63a5\u5c06\u65e0\u540d\u5bf9\u8c61\u7684\u5185\u5b58\u5185\u5bb9\u8f6c\u79fb\u7ed9\u4e86b\uff0c\u7701\u53bb\u4e86\u7b2c3\uff0c4\u6b65\u7684\u7cfb\u7edf\u5f00\u9500</p> <p>\u5bf9\u8c61\u79fb\u52a8\u76f8\u5f53\u4e8e\u628a\u67d0\u5bf9\u8c61\u62e5\u6709\u7684\u5185\u5b58\u8d44\u6e90\u201c\u8f6c\u8ba9\u201d\u7ed9\u53e6\u4e00\u5bf9\u8c61\u4f7f\u7528\uff0c \u5176\u5b9e\u8d28\u662f\u628a\u5bf9\u8c61\u7684\u5185\u5b58\u8d44\u6e90\uff08\u5373\u53f3\u503c\uff09\u7ed1\u5b9a\u5230\u8981\u8f6c\u79fb\u7ed9\u7684\u5bf9\u8c61\u3002</p> <p>C++11 \u6807\u51c6\u5e93\u4e2d\u63d0\u4f9b <code>move</code> \u51fd\u6570\u5b9e\u73b0\u5bf9\u8c61\u7684\u53f3\u503c\u7ed1\u5b9a\uff0c\u6b64\u51fd\u6570\u5b9a\u4e49\u5728 <code>utility</code> \u5934\u6587\u4ef6\u4e2d\u3002</p> <pre><code>int x = 0;\nint &amp;lrx = x; //\u6b63\u786e\uff0c\u5de6\u503c\u5f15\u7528\nint &amp;&amp;rrx = x; //\u9519\u8bef\uff0c\u53f3\u503c\u5f15\u7528\nint &amp;&amp;rrx = std::move(x); //\u6b63\u786e\uff0c\u53f3\u503c\u5f15\u7528\n</code></pre> <p>\u5982\u679c\u8981\u662f\u5b9e\u73b0\u5bf9\u8c61\u79fb\u52a8\uff0c\u5c31\u9700\u8981\u4e3a\u7c7b\u5b9a\u4e49\u79fb\u52a8\u8fd0\u7b97\u7b26\u51fd\u6570\u548c\u79fb\u52a8\u62f7\u8d1d\u6784\u9020\u51fd\u6570</p> <pre><code>class A{\n    ...\n    A(A&amp;&amp; o){......}\n    A &amp;operator=(A&amp;&amp; o){....}\n};\n</code></pre> <p>\u9ed8\u8ba4\u79fb\u52a8\u51fd\u6570</p> <p>\u751f\u6210\u6761\u4ef6\uff1a</p> <ul> <li>\u7c7b\u5e76\u6ca1\u6709\u5b9a\u4e49\u8fd9\u4e9b\u51fd\u6570</li> <li>\u6bcf\u4e2a\u975estatic\u6570\u636e\u6210\u5458\u90fd\u53ef\u4ee5\u79fb\u52a8\uff1b\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u662f\u53ef\u79fb\u52a8\u7684\uff0c\u5982\u679c\u6570\u636e \u6210\u5458\u662f\u81ea\u5b9a\u4e49\u7c7b\u7c7b\u578b\uff0c\u53ea\u6709\u5f53\u5b83\u4e5f\u5b9a\u4e49\u4e86\u79fb\u52a8\u51fd\u6570\u65f6\uff0c\u624d\u662f\u53ef\u79fb\u52a8\u7684</li> <li>\u7c7b\u5e76\u6ca1\u6709\u5b9a\u4e49\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u3001\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u3002</li> </ul> <p>Example</p> <pre><code>struct A {\n    int x; // \u5185\u7f6e\u7c7b\u578b\u53ef\u4ee5\u79fb\u52a8\n    std::string s; //string \u5b9a\u4e49\u4e86\u79fb\u52a8\u64cd\u4f5c\n};\nclass B {\n    A a; //A \u7f16\u8bd1\u5668\u4f1a\u4e3a A \u5408\u6210\u79fb\u52a8\u51fd\u6570\n};\nclass C {\n    A a;\n    public:\n    C() {}\n    C(C&amp;o) {} // \u5b9a\u4e49\u4e86\u62f7\u8d1d\u6784\u9020\u6db5\u6570\uff0c\u4e0d\u4f1a\u6709\u5408\u6210\u79fb\u52a8\u51fd\u6570\n};\nB a1, a2 = std::move(a1); //a2 \u4f7f\u7528\u5408\u6210\u79fb\u52a8\u62f7\u8d1d\u6784\u9020\u51fd\u6570\nC c1, c2 = std::move(c1); //c2 \u4f7f\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff0c\u539f\u56e0\u662f C \u6ca1\u6709\u79fb\u52a8\u51fd\u6570\n</code></pre> <ul> <li>\u5bf9\u8c61\u8d44\u6e90\u88ab\u79fb\u52a8\u4e4b\u540e\uff0c\u5b83\u5e94\u8be5\u65f6\u53ef\u6790\u6784\u548c\u6709\u6548\u7684\uff0c\u56e0\u6b64\u6307\u9488\u88ab\u79fb\u52a8\u4e4b\u540e\uff0c\u5e94\u8be5\u5c06\u5b83\u7f6e\u4e3a<code>nullptr</code></li> <li>\u62f7\u8d1d\u5de6\u503c\uff0c\u79fb\u52a8\u53f3\u503c\u3002\u4e00\u4e2a\u7c7b\u540c\u65f6\u8bbe\u7f6e\u4e86\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u3001\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\u3001\u79fb\u52a8\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u79fb\u52a8\u8d4b\u503c\u51fd\u6570\u65f6\uff0c \u7f16\u8bd1\u5668\u5c31\u4f1a\u4f7f\u7528\u4e0e\u666e\u901a\u51fd\u6570\u76f8\u540c\u7684\u53c2\u6570\u5339\u914d\u89c4\u5219\u8fdb\u884c\u51fd\u6570\u8c03\u7528\u3002\u5f53\u9700\u8981\u5de6\u503c\u65f6\uff0c\u6267\u884c\u62f7\u8d1d \u6784\u9020\u51fd\u6570\u6216\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\uff1b\u5f53\u9700\u8981\u53f3\u503c\u65f6\uff0c\u6267\u884c\u79fb\u52a8\u62f7\u8d1d\u6216\u79fb\u52a8\u8d4b\u503c\u51fd\u6570\u3002</li> <li>\u5982\u679c\u4e00\u4e2a\u7c7b\u5b9a\u4e49\u4e86\u62f7\u8d1d\u6784\u9020\u51fd\u6570\u548c\u8d4b\u503c\u8fd0\u7b97\u7b26\u51fd\u6570\uff0c\u4f46\u6ca1\u6709\u79fb\u52a8\u6784\u9020\u51fd\u6570\u548c\u79fb\u52a8\u8d4b\u503c\u8fd0\u7b97 \u7b26\uff0c\u5c31\u4e0d\u80fd\u6267\u884c\u79fb\u52a8\u64cd\u4f5c\uff0c\u5373\u4f7f\u8c03\u7528 move \u51fd\u6570\u4e5f\u53ea\u80fd\u6267\u884c\u5bf9\u8c61\u62f7\u8d1d\u64cd\u4f5c\u3002</li> </ul>"},{"location":"note/courses/OOP/Lecture%203%20class/#_27","title":"\u9759\u6001\u6210\u5458","text":"<p><pre><code>class X{\n    static \u7c7b\u578b \u9759\u6001\u6570\u636e\u6210\u5458\u540d;\n    static \u7c7b\u578b \u9759\u6001\u6210\u5458\u51fd\u6570\u540d(\u53c2\u6570\u8868);\n}\n</code></pre> - <code>\u7c7b\u578b \u7c7b\u540d::\u9759\u6001\u6570\u636e\u6210\u5458\u540d</code> - <code>\u7c7b\u578b \u7c7b\u540d::\u9759\u6001\u6210\u5458\u6210\u5458\u540d=\u521d\u59cb\u503c;</code> - \u9759\u6001\u6210\u5458\u51fd\u6570\u7684\u5b9a\u4e49\uff0c\u9664\u4e86\u5728\u7c7b\u58f0\u660e\u4e2d\u7684\u6210\u5458\u51fd\u6570\u524d\u9762\u52a0\u4e0a <code>static</code> \u5173\u952e\u5b57\u4e4b\u5916\uff0c\u5176\u5b9a\u4e49\u4e0e\u666e\u901a\u51fd\u6570\u6ca1 \u6709\u533a\u522b\u3002 - \u5728\u7c7b\u5916\u5b9a\u4e49\u9759\u6001\u6570\u636e\u6210\u5458\u65f6\uff0c\u4e0d\u80fd\u52a0\u4e0astatic \u5173\u952e\u5b57 - \u5728\u5b9a\u4e49\u9759\u6001\u6570\u636e\u6210\u5458\u65f6\u53ef\u4ee5\u6307\u5b9a\u5b83\u7684\u521d\u59cb\u503c\uff0c\u82e5\u6ca1\u6709\u6307\u5b9a\u521d\u59cb\u503c\uff0c\u5219\u5b83\u7684\u521d\u59cb\u503c\u4e3a0</p> <p>\u9759\u6001\u6210\u5458\u8bbf\u95ee\uff1a - \u901a\u8fc7\u7c7b\u540d\u8bbf\u95ee\uff08\u975e\u9759\u6001\u6210\u5458\u4e0d\u5177\u5907\u8fd9\u79cd\u8bbf\u95ee\u65b9\u5f0f\uff09     - <code>\u7c7b\u540d::\u9759\u6001\u6210\u5458\u540d</code>     - <code>\u7c7b\u540d::\u9759\u6001\u6210\u5458\u51fd\u6570\u540d(\u53c2\u6570\u8868)</code> - \u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\uff08\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u80fd\u901a\u8fc7\u5bf9\u8c61\u8bbf\u95ee\uff09     - <code>\u5bf9\u8c61\u540d.\u9759\u6001\u6210\u5458\u540d</code>     - <code>\u5bf9\u8c61\u540d.\u9759\u6001\u6210\u5458\u51fd\u6570\u540d(\u53c2\u6570\u8868)</code></p> <p>\u540c\u666e\u901a\u6210\u5458\u51fd\u6570\u4e00\u6837\uff0c\u9759\u6001\u6210\u5458\u51fd\u6570\u4e5f\u53ef\u4ee5\u5728\u7c7b\u5185\u6216\u7c7b\u5916\u5b9a\u4e49\uff0c\u8fd8\u53ef\u4ee5\u5b9a\u4e49 \u6210\u5185\u8054\u51fd\u6570\uff1b</p> <p>\u9759\u6001\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u9759\u6001\u6210\u5458\uff08\u5305\u62ec\u9759\u6001\u7684\u6570\u636e\u6210\u5458\u548c\u6210\u5458\u51fd\u6570\uff09\uff0c\u4e0d\u80fd\u8bbf\u95ee \u975e\u9759\u6001\u6210\u5458\u3002</p> <p>\u5728\u7c7b\u5916\u5b9a\u4e49\u9759\u6001\u6210\u5458\u51fd\u6570\u65f6\uff0c\u4e0d\u80fd\u52a0\u4e0a <code>static</code> \u9650\u5b9a\u8bcd\u3002</p> <p>\u9759\u6001\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u5728\u5b9a\u4e49\u7c7b\u7684\u4efb\u4f55\u5bf9\u8c61\u4e4b\u524d\u88ab\u8c03\u7528\uff0c\u975e\u9759\u6001\u6210\u5458\u53ea\u6709\u5728\u5b9a\u4e49 \u5bf9\u8c61\u540e\uff0c\u901a\u8fc7\u5bf9\u8c61\u624d\u80fd\u8bbf\u95ee\u3002 </p>"},{"location":"note/courses/OOP/Lecture%203%20class/#this","title":"<code>this</code> \u6307\u9488","text":"<p><code>this</code> \u662f\u4e00\u4e2a\u6307\u9488\uff0c\u6307\u5411\u5f53\u524d\u5bf9\u8c61\u7684\u5730\u5740\u3002\u5b83\u662f\u4e00\u4e2a\u9690\u5f0f\u53c2\u6570\uff0c\u4f20\u9012\u7ed9\u975e\u9759\u6001\u6210\u5458\u51fd\u6570</p> <p>Example</p> <pre><code>struct Point{\n    int x, y;\n};\nPoint &amp; move(Point *this, int a, int b){\n    this-&gt;x = a;\n    this-&gt;y = b;\n    return *this;\n}\nint getX(Point *this){\n    return this-&gt;x;\n}\nint getY(Point *this){\n    return this-&gt;y;\n}\nvoid main(){\n    Point p;\n    move(&amp;p, 1, 2);\n    cout &lt;&lt; getX(&amp;p) &lt;&lt; \",\" &lt;&lt; getY(&amp;p) &lt;&lt; endl;\n}\n</code></pre> <p><code>this</code>\u6307\u9488\u5f0f\u7c7b\u6210\u5458\u51fd\u6570\u4e2d\u7528\u4e8e\u8868\u793a\u8c03\u7528\u5bf9\u8c61\u81ea\u5f15\u7528\u7684\u9690\u5f0f\u6307\u9488\u53c2\u6570\uff0c\u4ee3\u8868\u8c03\u7528\u6210\u5458\u51fd\u6570\u7684\u5bf9\u8c61\u81ea\u8eab\u7684\u5730\u5740\uff0c\u5e76\u4e14\u5e76\u4e0d\u5141\u8bb8\u4fee\u6539\uff0c\u6240\u4ee5\u88ab\u6307\u5b9a\u4e3a<code>const</code>\u7c7b\u578b</p> <p>\u5e38\u89c1\u5e94\u7528\uff1a</p> <ul> <li>\u4f7f\u7528<code>this</code>\u6307\u9488\u8fd4\u56de\u8c03\u7528\u5bf9\u8c61</li> <li>\u533a\u5206\u4e8c\u4e49\u6027</li> </ul> <p>\u5728\u7c7b<code>X</code>\u7684\u975e<code>const</code>\u6210\u5458\u51fd\u6570\u4e2d\uff0c<code>this</code>\u6307\u9488\u7684\u7c7b\u578b\u662f<code>X*</code>\uff0c\u53ef\u4ee5\u901a\u8fc7\u5b83\u4fee\u6539\u6570\u636e\u6210\u5458\u7684\u503c\uff0c\u800c\u5728\u7c7b\u7684<code>const</code>\u6210\u5458\u51fd\u6570\u4e2d\uff0c<code>this</code>\u6307\u9488\u7684\u7c7b\u578b\u662f<code>const X*</code>,\u4e0d\u80fd\u901a\u8fc7\u5b83\u4fee\u6539\u5bf9\u8c61\u7684\u6570\u636e\u6210\u5458\u503c</p> <p>\u9759\u6001\u6210\u5458\u51fd\u6570\u6ca1\u6709<code>this</code> \u6307\u9488\uff0c\u56e0\u6b64\u5728\u9759\u6001\u6210\u5458\u51fd\u6570\u4e2d\u4e0d\u80fd\u8bbf\u95ee\u975e\u9759\u6001\u6210\u5458</p> <p>\u5728\u7c7b\u6210\u5458\u51fd\u6570\u603b\uff0c\u53ef\u4ee5\u901a\u8fc7<code>this</code>\u6267\u653f\u8fd4\u56de\u5bf9\u8c61\u7684\u5730\u5740\u6216\u8005\u5f15\u7528\uff0c\u8fd9\u4e5f\u662f<code>this</code>\u6307\u9488\u7684\u4e00\u4e2a\u91cd\u8981\u5e94\u7528</p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_28","title":"\u5bf9\u8c61\u5e94\u7528","text":"<p>\u6210\u5458\u8bbf\u95ee\u64cd\u4f5c\u7b26</p> <ul> <li><code>.</code>\uff1a\u5bf9\u8c61\u540d.\u6210\u5458\u540d</li> <li><code>-&gt;</code>\uff1a\u5bf9\u8c61\u6307\u9488\u540d-&gt;\u6210\u5458\u540d</li> <li><code>*</code>: \u89e3\u5f15\u7528</li> <li><code>.*</code>: \u5bf9\u8c61\u540d.*\u6210\u5458\u540d</li> <li><code>-&gt;*</code>: \u5bf9\u8c61\u6307\u9488\u540d-&gt;*\u6210\u5458\u540d</li> </ul>"},{"location":"note/courses/OOP/Lecture%203%20class/#_29","title":"\u5bf9\u8c61\u6570\u7ec4","text":"<pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nclass point{\n    private:\n        int x = 0, y = 0;\n    public:\n        point(){x = 1; y = 1;}\n        point(int a = 0, int b = 0){x = a; y = b;}\n        int getx(){return x;}\n        int gety(){return y;}\n}\n\nint main(){\n    //point p; \u4ea7\u751f\u4e8c\u4e49\u6027\n    point p1(3, 3); // \u5b9a\u4e49\u5355\u4e2a\u5bf9\u8c61\n    point p[3]={ {2,2},{3,3}, {4,4} }; //L4 \uff0c\u5217\u8868\u662f 3 \u6b21\u8c03\u7528\u6784\u9020\u51fd\u6570\u7684\u53c2\u6570\n    point p2[3]; //L5\n    point* pt; //L6\n    for (int i = 0; i&lt;2; i++) {\n        cout&lt;&lt;\"p[\"&lt;&lt;i&lt;&lt;\"].x=\"&lt;&lt;p[i].getx()&lt;&lt; \"\\t\";\n        cout&lt;&lt;\"p[\"&lt;&lt;i&lt;&lt;\"].y=\"&lt;&lt;p[i].gety()&lt;&lt; endl;\n    }\n    pt = &amp;p1; // \u6307\u5411\u5355\u4e2a\u5bf9\u8c61\u7684\u6307\u9488\n    cout&lt;&lt;\"Point pt-&gt;x:\"&lt;&lt;pt-&gt;getx()&lt;&lt;endl; // \u6307\u9488\u5bf9\u8c61\u8bbf\u95ee\u65b9\u6cd5 1\n    pt = p2; // \u6307\u5411\u5bf9\u8c61\u6570\u7ec4\u7684\u6307\u9488\n    cout&lt;&lt;\"Point Array pt-&gt;x :\"&lt;&lt;pt-&gt;getx()&lt;&lt; endl;\n    pt++; // \u6307\u5411\u5bf9\u8c61\u6570\u7ec4\u4e0b\u4e00\u5143\u7d20\n    cout&lt;&lt;\"Point Array pt-&gt;x :\"&lt;&lt;pt-&gt;getx()&lt;&lt; endl;\n    cout&lt;&lt;\"Point (*pt).x :\"&lt;&lt;(*pt).getx()&lt;&lt; endl; // \u6307\u9488\u5bf9\u8c61\u8bbf\u95ee\u65b9\u6cd5 2 \n}\n</code></pre> <p>\u51e0\u70b9\u8bf4\u660e - \u5b9a\u4e49\u5bf9\u8c61\u6570\u7ec4\u65f6\u901a\u5e38\u8981\u8c03\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u3002\u6ca1\u6709\u5b9a\u4e49\u4efb\u4f55\u6784\u9020\u51fd\u6570\u7684\u7c7b\u53ef\u4ee5\u5b9a\u4e49\u5bf9\u8c61\u6570\u7ec4\uff0c\u56e0\u4e3ac++\u4f1a\u4e3a\u8fd9\u79cd\u7c7b\u81ea\u52a8\u5408\u6210\u4e00\u4e2a\u9ed8\u8ba4\u6784\u9020\u51fd\u6570 - \u5982\u679c\u4e00\u4e2a\u7c7b\u540c\u65f6\u5177\u6709\u65e0\u53c2\u6784\u9020\u51fd\u6570\u548c\u5168\u90e8\u53c2\u6570\u90fd\u6709\u7f3a\u7701\u503c\u7684\u6784\u9020\u51fd\u6570\uff0c\u4f46\u5728\u5b9a\u4e49\u65e0\u53c2\u5bf9\u8c61\u6216\u6570\u7ec4\u65f6\uff0c\u5c06\u4ea7\u751f\u4e8c\u4e49\u6027 - \u5982\u679c\u4e00\u4e2a\u7c7b\u53ea\u6709\u9700\u8981\u53c2\u6570\u7684\u6784\u9020\u51fd\u6570\uff08\u4e0d\u5305\u62ec\u5168\u90e8\u53c2\u6570\u90fd\u6709\u9ed8\u8ba4\u503c\u7684\u60c5\u51b5\uff09\uff0c\u53ea\u80fd\u91c7\u7528\u5217\u8868\u65b9\u5f0f\u5b9a\u4e49\u6570\u7ec4</p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_30","title":"\u5411\u51fd\u6570\u4f20\u9012\u5bf9\u8c61","text":"<p>\u7c7b\u7c7b\u578b\u53ef\u4ee5\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\u7c7b\u578b\uff0c\u901a\u8fc7\u5b83\u5411\u51fd\u6570\u4f20\u9012\u5bf9\u8c61\uff0c\u518d\u51fd\u6570\u4e2d\u8bbf\u95ee\u53c2\u6570\u5bf9\u8c61\u65f6\uff0c\u53ea\u80fd\u8bbf\u95ee\u53c2\u6570\u5bf9\u8c61\u7684<code>public</code>\u6210\u5458</p> <p>\u7c7b\u7c7b\u578b\u53c2\u6570\u7684\u4f20\u9012\u65b9\u5f0f</p> <ul> <li>\u503c\u4f20\u9012\uff08\u5bf9\u8c61\u7684\u4e00\u4e2a\u62f7\u8d1d\uff09\uff0c\u4ee5\u6309\u4f4d\u590d\u5236\u7684\u65b9\u5f0f\uff0c\u5c06\u5b9e\u53c2\u5bf9\u8c61\u7684\u6bcf\u4e2a\u6570\u636e\u6210\u5458\u7684\u503c\u6309\u4f4d\u62f7\u8d1d\u5230\u5f62\u53c2\u5bf9\u8c61\u7684\u5404\u4e2a\u6570\u636e\u6210\u5458\u4e2d\u3002\u53c2\u6570\u4f20\u9012\u5b8c\u6210\u4e4b\u540e\uff0c\u5f62\u53c2\u4e0e\u5b9e\u53c2\u5c31\u6ca1\u6709\u5173\u7cfb\u4e86\uff0c\u6240\u4ee5\u6309\u503c\u4f20\u9012\u5bf9\u8c61\u7684\u65b9\u5f0f\u4e0d\u80fd\u4fee\u6539\u5b9e\u53c2\u5bf9\u8c61\u7684\u503c</li> <li>\u5730\u5740\uff08\u6307\u9488\uff09\u4f20\u9012</li> <li>\u5f15\u7528\u4f20\u9012\uff08\u5bf9\u8c61\u7684\u4e00\u4e2a\u522b\u540d\uff09\uff0c\u5f15\u7528\u4f20\u9012\u662f\u5c06\u5b9e\u53c2\u5bf9\u8c61\u7684\u5730\u5740\u4f20\u9012\u7ed9\u5f62\u53c2\u5bf9\u8c61\uff0c\u5f62\u53c2\u5bf9\u8c61\u548c\u5b9e\u53c2\u5bf9\u8c61\u5171\u4eab\u540c\u4e00\u5757\u5185\u5b58\u533a\u57df\uff0c\u6240\u4ee5\u5728\u51fd\u6570\u4e2d\u5bf9\u5f62\u53c2\u5bf9\u8c61\u7684\u4fee\u6539\u4f1a\u5f71\u54cd\u5230\u5b9e\u53c2\u5bf9\u8c61</li> </ul> <p>Example</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass A{\n    int val;\npublic:\n    A(int i){val = i;}\n    int getval(){return val;}\n    void setval(int i){val = i;}\n};\nvoid display(A op){\n    cout &lt;&lt; \"display: \" &lt;&lt; op.getval() &lt;&lt; endl;\n}\nvoid change1(A op){\n    op.setval(100);\n    cout &lt;&lt; \"change1: \" &lt;&lt; op.getval() &lt;&lt; endl;\n}\nvoid change2(A &amp;op){\n    op.setval(200);\n    cout &lt;&lt; \"change2: \" &lt;&lt; op.getval() &lt;&lt; endl;\n}\nvoid change3(A *op){\n    op-&gt;setval(300);\n    cout &lt;&lt; \"change3: \" &lt;&lt; op-&gt;getval() &lt;&lt; endl;\n}\n\nint main(){\n    A a(10);\n    cout &lt;&lt; \"Value of a before: \" &lt;&lt; a.getval() &lt;&lt; endl;\n    display(a); \n    change1(a); \n    cout &lt;&lt; \"Value of a after change1: \"  &lt;&lt; endl;\n    display(a);\n    change2(a);\n    cout &lt;&lt; \"Value of a after change2: \"  &lt;&lt; endl;\n    display(a);\n    change3(&amp;a);\n    cout &lt;&lt; \"Value of a after change3: \" &lt;&lt; endl;\n    display(a);\n}\n</code></pre> <p>\u5bf9\u53c2\u6570\u7684\u8bbf\u95ee\uff1a</p> <ul> <li>\u666e\u901a\u51fd\u6570\uff08\u975e\u7c7b\u6210\u5458\uff09\u63a5\u53d7\u53c2\u6570\u5bf9\u8c61\u4e4b\u540e\uff0c\u5728\u51fd\u6570\u4f53\u5185\u5fc5\u987b\u6309\u7167\u8bbf\u95ee\u6743\u9650\u8bbf\u95ee\u5bf9\u8c61\u6210\u5458\uff0c\u5373\u53ea\u80fd\u8bbf\u95ee\u5bf9\u8c61\u7684\u516c\u6709\u6210\u5458</li> <li>\u7c7b\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u8bbf\u95ee\u672c\u7c7b\u53c2\u6570\u5bf9\u8c61\u7684\u79c1\u6709\u3001\u4fdd\u62a4\u6210\u5458\u3001\u516c\u6709\u6210\u5458</li> </ul> <p>\u51fd\u6570\u8fd4\u56de\u5bf9\u8c61\uff1a\u8fd4\u56de\u5bf9\u8c61\u65f6\u8981\u8c03\u7528\u62f7\u8d1d\u6784\u9020\u51fd\u6570</p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_31","title":"\u7c7b\u5bf9\u8c61\u6210\u5458","text":"<ul> <li>\u7c7b\u7684\u6570\u636e\u6210\u5458\u4e00\u822c\u90fd\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u4f46\u4e5f\u53ef\u4ee5\u662f\u7ed3\u6784\u3001\u8054\u5408\u3001\u679a\u4e3e\u4e4b\u7c7b\u7684\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0c\u8fd8\u53ef\u4ee5\u662f\u5176\u4ed6\u7c7b\u7684\u5bf9\u8c61</li> <li>\u5982\u679c\u7528\u5176\u4ed6\u7c7b\u7684\u5bf9\u8c61\u4f5c\u4e3a\u7c7b\u7684\u6210\u5458\uff0c\u5219\u79f0\u4e4b\u4e3a\u5bf9\u8c61\u6210\u5458</li> </ul> <pre><code>class A{\n    int x;\n    B b; //B\u662f\u7c7bA\u7684\u5bf9\u8c61\u6210\u5458\n};\n</code></pre> <ul> <li>\u62e5\u6709\u5bf9\u8c61\u6210\u5458\u7684\u7c7b\u5fc5\u987b\u5bf9\u5bf9\u8c61\u6210\u5458\u8fdb\u884c\u521d\u59cb\u5316</li> <li>\u5bf9\u8c61\u6210\u5458\u7684\u521d\u59cb\u5316\u65b9\u5f0f\u5305\u62ec\u7c7b\u5185\u521d\u59cb\u5316\u3001\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868</li> <li>\u5f53\u5bf9\u8c61\u6210\u5458\u6240\u5728\u7c7b\u6709\u7c7b\u5185\u521d\u59cb\u503c\u6216\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\u65f6\uff08\u5305\u62ec\u7cfb\u7edf\u751f\u6210\u7684\uff09\uff0c\u53ef\u4ee5\u7701\u7565\u5bf9\u8c61\u6210\u5458\u7684\u521d\u59cb\u5316\u4ee3\u7801\uff0c\u7f16\u8bd1\u5668\u81ea\u52a8\u8c03\u7528</li> <li>\u82e5\u5bf9\u8c61\u6210\u5458\u6ca1\u6709\u7c7b\u5185\u521d\u59cb\u503c\u6216\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u5219\u5fc5\u987b\u5728\u7c7b\u7684\u6784\u9020\u51fd\u6570\u521d\u59cb\u5316\u5217\u8868\u4e2d\u8fdb\u884c\u521d\u59cb\u5316     <pre><code>X::X(\u53c2\u6570\u8868)\uff1a\u6210\u5458\u540d1\uff08\u53c2\u6570\u88681\uff09...{\n    \u6784\u9020\u51fd\u6570\u4f53\n}\n</code></pre></li> </ul> <p>\u5bf9\u8c61\u6210\u5458\u7684\u6784\u9020\u6b21\u5e8f\u4e0e\u5b83\u4eec\u5728\u7c7b\u4e2d\u58f0\u660e\u7684\u987a\u5e8f\u76f8\u540c\uff0c\u4e0e\u521d\u59cb\u5316\u5217\u8868\u4e2d\u7684\u987a\u5e8f\u65e0\u5173</p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_32","title":"\u7c7b\u7684\u4f5c\u7528\u57df\u548c\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f","text":"<p><pre><code>class A{//\u7c7b\u57df\u5f00\u59cb\n    public:\n        A(){cout&lt;&lt;\"A()\"&lt;&lt;endl;}\n        ~A(){cout&lt;&lt;\"~A()\"&lt;&lt;endl;}\n};//\u7c7b\u57df\u7ed3\u675f\n</code></pre> - \u7c7b\u57df\u8303\u56f4\u5185\u7684\u6210\u5458\u4e4b\u95f4\u53ef\u4ee5\u4e92\u76f8\u8bbf\u95ee\uff0c\u4e0d\u53d7\u8bbf\u95ee\u6743\u9650\u7684\u9650\u5236 - \u7c7b\u5916\u7684\u51fd\u6570\u53ea\u80fd\u8bbf\u95ee\u7c7b\u7684\u516c\u6709\u6210\u5458</p>"},{"location":"note/courses/OOP/Lecture%203%20class/#_33","title":"\u5bf9\u8c61\u7684\u751f\u547d\u5468\u671f","text":"<ul> <li>\u9759\u6001\u751f\u5b58\u671f\uff0c\u662f\u6307\u5bf9\u8c61\u5177\u6709\u57df\u7a0b\u5e8f\u8fd0\u884c\u671f\u76f8\u540c\u7684\u751f\u5b58\u671f\uff0c\u8fd9\u7c7b\u5bf9\u8c61\u4e00\u65e6\u88ab\u5efa\u7acb\u4e4b\u540e\uff0c\u5b83\u5c06\u4e00\u76f4\u5b58\u5728\uff0c\u6307\u5bfc\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u624d\u88ab\u9500\u6bc1</li> <li>\u52a8\u6001\u751f\u5b58\u671f\u662f\u6307\u5c40\u90e8\u5bf9\u8c61\u7684\u751f\u5b58\u671f\uff0c\u5c40\u90e8\u5bf9\u8c61\u5177\u6709\u5757\u4f5c\u7528\u57df\uff0c\u5b83\u7684\u751f\u5b58\u671f\u662f\u4ece\u5b83\u7684\u5b9a\u4e49\u4f4d\u7f6e\u5f00\u59cb\uff0c\u9047\u5230\u79bb\u5b83\u6700\u8fd1\u7684\u53f3\u5927\u62ec\u53f7\u65f6\u7ed3\u675f</li> </ul> <p>\u5168\u5c40\u5bf9\u8c61\u548c\u9759\u6001\u5bf9\u8c61\u5177\u6709\u9759\u6001\u751f\u5b58\u671f</p> <ul> <li>\u5c40\u90e8\u5bf9\u8c61\u548c\u9759\u6001\u5bf9\u8c61\u7684\u6784\u9020\u6b21\u5e8f\u4e0e\u5b83\u4eec\u5728\u5757\u4e2d\u7684\u58f0\u660e\u6b21\u5e8f\u76f8\u540c\uff0c\u5373\u5728\u5757\u4e2d\u5148\u58f0 \u660e\u7684\u5c31\u5148\u6784\u9020\uff0c\u5757\u5373\u5bf9\u8c61\u5b9a\u4e49\u6240\u5728\u7684\u4e00\u5bf9 {} \u6240\u6846\u5b9a\u7684\u4ee3\u7801\u533a\u57df\u3002</li> <li>\u6240\u6709\u7684\u5168\u5c40\u5bf9\u8c61\u5728 main \u4e4b\u524d\u6784\u9020\uff0c\u5728 main \u7ed3\u675f\u4e4b\u540e\u9500\u6bc1\u3002</li> <li>\u5bf9\u8c61\u6570\u636e\u6210\u5458\uff08\u5305\u62ec\u5bf9\u8c61\u6210\u5458\uff09\u7684\u6784\u9020\u6b21\u5e8f\u4e0e\u5176\u5728\u7c7b\u4e2d\u7684\u58f0\u660e\u6b21\u5e8f\u76f8\u540c\uff0c\u800c\u4e0e \u5b83\u4eec\u5728\u6784\u9020\u51fd\u6570\u7684\u521d\u59cb\u5316\u5217\u8868\u4e2d\u7684\u6b21\u5e8f\u65e0\u5173\u3002</li> <li>\u5728\u5bf9\u8c61\u751f\u5b58\u671f\u7ed3\u675f\u65f6\uff0c\u5177\u6709\u76f8\u540c\u751f\u5b58\u671f\u7684\u5bf9\u8c61\u5c06\u6309\u4e0e\u6784\u9020\u7684\u76f8\u53cd\u6b21\u5e8f\u9500\u6bc1\u3002</li> <li>\u975e\u9759\u6001\u5bf9\u8c61\u7684\u751f\u5b58\u671f\u548c\u4f5c\u7528\u57df\u662f\u4e00\u6837\u7684\uff0c\u800c\u9759\u6001\u5bf9\u8c61\u7684\u751f\u5b58\u671f\u957f\u4e8e\u4f5c\u7528\u57df</li> </ul>"},{"location":"note/courses/OOP/Lecture%203%20class/#_34","title":"\u53cb\u5143","text":"<p>\u7c7b\u53ef\u4ee5\u6388\u4e88\u6307\u5b9a\u51fd\u6570\u7279\u6743\uff0c\u8ba9\u4ed6\u53ef\u4ee5\u8bbf\u95ee\u8be5\u7c7b\u7684\u6240\u6709\u6210\u5458</p> <pre><code>class ClassName{\n    friend T f(...);//\u58f0\u660e f \u4e3a X \u7c7b\u7684\u53cb\u5143\uff0c f \u7684\u5f62\u53c2\u901a\u5e38\u662f X \u7c7b\u7684\u5bf9\u8c61\n};\n.....\nT f(...){...};//\u53cb\u5143\u51fd\u6570\u4e0d\u662f\u7c7b\u7684\u6210\u5458\u51fd\u6570\n</code></pre>"},{"location":"note/courses/OOP/Lecture%203%20class/#_35","title":"\u53cb\u5143\u7c7b","text":"<p>\u4e00\u4e2a\u7c7b\u53ef\u4ee5\u662f\u53e6\u4e00\u4e2a\u7c7b\u7684\u53cb\u5143\uff0c\u53cb\u5143\u7c7b\u7684\u6240\u6709\u6210\u5458\u51fd\u6570\u90fd\u662f\u53e6\u4e00\u4e2a\u7c7b\u7684\u53cb\u5143\u51fd\u6570\uff0c\u80fd\u591f\u76f4\u63a5\u8bbf\u95ee\u53e6\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u6210\u5458</p> <p>\u53cb\u5143\u7c7b</p> <pre><code>    #include &lt;iostream&gt;\n    using namespace std;\n    class A{\n        private:\n            int x, y;\n        public:\n        A(int a, int b){\n            x = a;\n            y = b;\n        }\n        int getx(){\n            return x;\n        }\n        int gety(){\n            return y;\n        }\n        friend class B; //B\u662fA\u7684\u53cb\u5143\u7c7b\n    }\n    class B{\n        private:\n            int z;\n        public:\n            int add (A a){\n                return a.x + a.y + z;\n            }\n            int multiply(A a){\n                return a.x * a.y * z;}\n            B(int i = 0){z=i;}\n    }\n    int main (){\n        A a(2,3);\n        B b(4);\n        cout &lt;&lt; b.add(a) &lt;&lt; endl;//9\n        cout &lt;&lt; b.mul(a) &lt;&lt; endl;//24\n    }\n</code></pre>"},{"location":"note/courses/OOP/Lecture%203%20class/#_36","title":"\u53cb\u5143\u6210\u5458\u51fd\u6570","text":"<p>\u53ef\u4ee5\u6307\u5b9a\u7c7b\u7684\u67d0\u4e2a\u6210\u5458\u51fd\u6570\u662f\u53e6\u4e00\u4e2a\u7c7b\u7684\u53cb\u5143\uff0c\u4e5f\u5c31\u662f\u53cb\u5143\u6210\u5458\u51fd\u6570\uff0c\u53cb\u5143\u6210\u5458\u51fd\u6570\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\u53e6\u4e00\u4e2a\u7c7b\u7684\u6240\u6709\u6210\u5458\uff0c\u4f46\u662f\u8be5\u7c7b\u4e0d\u662f\u53cb\u5143\u7684\u6210\u5458\u51fd\u6570\u5c31\u53ea\u80fd\u901a\u8fc7\u516c\u6709\u6210\u5458\u51fd\u6570\u8bbf\u95ee\u5176\u4ed6\u7c7b\u7684\u79c1\u6709\u548c\u4fdd\u62a4\u6210\u5458</p> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass B; //L1 \uff1a\u524d\u5411\u5f15\u7528\u58f0\u660e\nclass A{\nprivate:\n int x,y;\npublic:\n A(int i,int j){x=i;y=j;}\n int sum(B b); // \u5728\u6b64\u53ea\u80fd\u58f0\u660e sum() \uff0c\u5176\u5b9a\u4e49\u987b\u5728 class B \u5b9a\u4e49\u4e4b\u540e\n};\nclass B{\nprivate:\n int z;\npublic:\n B(int i=0){z=i;}\n friend int A::sum(B b);\n};\nint A::sum(B b){return x+y+b.z;} //sum() \u7684\u5b9a\u4e49\u53ea\u80fd\u5728 B \u5b9a\u4e49\u4e4b\u540e\nvoid main(){\n A a(2,3);\n B b(4);\n cout&lt;&lt;a.sum(b)&lt;&lt;endl; // \u8f93\u51fa 9\n}\n</code></pre> <p>Warning</p> <ul> <li>\u5728\u7c7b\u57df\u4e2d\u7684\u51fd\u6570\u539f\u578b\u524d\u52a0\u4e0a\u5173\u952e\u5b57 friend \uff0c\u5c31\u5c06\u8be5\u51fd\u6570\u6307\u5b9a\u4e3a\u8be5\u7c7b\u7684\u53cb\u5143\u4e86\u3002\u5173\u952e\u5b57 friend \u7528\u4e8e\u58f0\u660e\u53cb\u5143\uff0c\u5b83\u53ea\u80fd\u51fa\u73b0\u5728\u7c7b\u7684\u58f0\u660e\u4e2d</li> <li>\u53cb\u5143\u51fd\u6570\u5e76\u975e\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u6240\u4ee5\u4e0d\u53d7\u9650\u5b9a\u8bcd\u9650\u5b9a\uff0c\u653e\u5728\u4efb\u4f55\u533a\u57df\u90fd\u662f\u4e00\u6837\u7684</li> <li>\u53cb\u5143\u4e0d\u5177\u9006\u5411\u6027\u548c\u4f20\u9012\u6027</li> </ul>"},{"location":"note/courses/OOP/Lecture%204/","title":"\u7ee7\u627f\u4e0e\u6d3e\u751f","text":""},{"location":"note/courses/OOP/Lecture%204/#_2","title":"\u7c7b\u7684\u7ee7\u627f\u4e0e\u6d3e\u751f\u6982\u5ff5","text":"<p>\u7ee7\u627f\u5c31\u662f\u5728\u4e00\u4e2a\u5df2\u5b58\u5728\u7684\u7c7b\u7684\u57fa\u7840\u4e0a\u521b\u5efa\u4e00\u4e2a\u65b0\u7c7b\uff0c\u5373\u5229\u7528\u5df2\u6709\u7684\u6570\u636e\u7c7b\u578b\u5b9a\u4e49\u51fa\u65b0\u7684\u6570\u636e\u7c7b\u578b</p> <ul> <li>\u88ab\u7ee7\u627f\u7684\u7c7b\u88ab\u79f0\u4e3a\u57fa\u7c7b</li> <li>\u5b9a\u4e49\u51fa\u6765\u7684\u65b0\u7c7b\u79f0\u4e3a\u6d3e\u751f\u7c7b</li> </ul> <p>\u6d3e\u751f\u7c7b\u53c8\u53ef\u4ee5\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u7c7b\u7684\u57fa\u7c7b\uff0c\u6d3e\u751f\u51fa\u5176\u4ed6\u66f4\u201c\u65b0\u201d\u7684\u7c7b </p> <ul> <li>\u5355\u7ee7\u627f\uff1a\u4e00\u4e2a\u6d3e\u751f\u7c7b\u53ea\u80fd\u6709\u4e00\u4e2a\u57fa\u7c7b</li> <li>\u591a\u7ee7\u627f\uff1a\u4e00\u4e2a\u6d3e\u751f\u7c7b\u53ef\u4ee5\u6709\u591a\u4e2a\u57fa\u7c7b</li> </ul>"},{"location":"note/courses/OOP/Lecture%204/#_3","title":"\u57fa\u7c7b\u4e0e\u6d3e\u751f\u7c7b","text":"<p>\u65b0\u7684\u6d3e\u751f\u7c7b\uff0c\u4e0d\u4ec5\u62e5\u6709\u65b0\u5b9a\u4e49\u7684\u6210\u5458\uff0c\u540c\u65f6\u8fd8\u62e5\u6709\u65e7\u7684\u57fa\u7c7b\u7684\u6210\u5458</p> <p>\u6d3e\u751f\u7c7b\u7684\u58f0\u660e: <pre><code>class \u6d3e\u751f\u7c7b\u540d : \u7ee7\u627f\u65b9\u5f0f \u57fa\u7c7b\u540d {\n    // \u6210\u5458\u58f0\u660e\n};\n</code></pre></p> <p>\u591a\u7ee7\u627f\u4e0b\u7684\u6d3e\u751f\u7c7b\u58f0\u660e: <pre><code>class \u6d3e\u751f\u7c7b\u540d : \u7ee7\u627f\u65b9\u5f0f \u57fa\u7c7b1, \u7ee7\u627f\u65b9\u5f0f \u57fa\u7c7b2, ... {\n    private:\n    \u65b0\u589e\u6570\u636e\u6210\u5458\u548c\u6210\u5458\u51fd\u6570\u58f0\u660e\n};\n</code></pre></p> <p>\u7ee7\u627f\u65b9\u5f0f\u6709\u4ee5\u4e0b\u4e09\u79cd\uff1a</p> <ul> <li>public\uff1a\u516c\u6709\u7ee7\u627f</li> <li>protected\uff1a\u4fdd\u62a4\u7ee7\u627f</li> <li>private\uff1a\u79c1\u6709\u7ee7\u627f</li> </ul> <p>\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u5305\u62ec\u4e09\u79cd\uff1a</p> <ul> <li>\u5438\u6536\u57fa\u7c7b\u7684\u6210\u5458\uff1a\u6d3e\u751f\u7c7b\u7ee7\u627f\u4e86\u57fa\u7c7b\u9664\u4e86\u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u4e4b\u5916\u7684\u6240\u6709\u6210\u5458</li> <li>\u65b0\u589e\u6210\u5458\uff1a\u6d3e\u751f\u7c7b\u65b0\u589e\u7684\u6210\u5458</li> <li>\u5bf9\u57fa\u7c7b\u6210\u5458\u8fdb\u884c\u6539\u9020\uff1a<ul> <li>\u5bf9\u57fa\u7c7b\u6210\u5458\u7684\u8bbf\u95ee\u63a7\u5236\u65b9\u5f0f\u8fdb\u884c\u6539\u9020</li> <li>\u5b9a\u4e49\u4e0e\u57fa\u7c7b\u540c\u540d\u7684\u6210\u5458\uff0c\u540c\u540d\u8986\u76d6</li> </ul> </li> </ul> <p>Example</p> <pre><code>class Point\n{                         \nprotected:                        \n    float x,y;      //\u70b9\u7684\u5750\u6807x,y\npublic:                        \n    Point(int a,int b) {x=a; y=b; cout&lt;&lt;\"Point...\"&lt;&lt;endl; }  //\u6784\u9020\u51fd\u6570\n    void showX() {cout &lt;&lt; \"x=\"&lt;&lt;x&lt;&lt;endl;}\n    void showY() {cout &lt;&lt; \"y=\"&lt;&lt;y&lt;&lt;endl;}\n    void Show() {cout&lt;&lt;\"x=\"&lt;&lt;x&lt;&lt;\",y=\"&lt;&lt;y&lt;&lt;endl;}\n    ~Point() {cout&lt;&lt;\"Delete Point\"&lt;&lt;endl;}\n};\nclass Rectangle:public Point\n{        \n    private:                         \n    float H,W;   //\u77e9\u5f62\u7684\u9ad8\u548c\u5bbd\n    public:                    \n    Rectangle(int a,int b,int h,int w):Point(a,b)\n    {H=h;W=w;cout&lt;&lt;\"Rectangle...\"&lt;&lt;endl;}\n    void ShowH() {cout&lt;&lt;\"H=\"&lt;&lt;H&lt;&lt;endl;}\n    void ShowW() {cout&lt;&lt;\"W=\"&lt;&lt;W&lt;&lt;endl;}           \n    void Show() {cout&lt;&lt;\"H=\"&lt;&lt;H&lt;&lt;\",W=\"&lt;&lt;W&lt;&lt;endl;}  \n    ~Rectangle() {cout&lt;&lt;\"Delete Retangle\uff01\"&lt;&lt;endl;}\n};\n</code></pre> <p>\u7ee7\u627f\u65b9\u5f0f\u4e0e\u6d3e\u751f\u7c7b\u7684\u8bbf\u95ee\u6743\u9650</p> <ul> <li>\u5728\u58f0\u660e\u6d3e\u751f\u7c7b\u4e4b\u540e\uff0c\u6d3e\u751f\u7c7b\u5c31\u7ee7\u627f\u4e86\u57fa\u7c7b\u7684\u6570\u636e\u6210\u5458\u548c\u6210\u5458\u51fd\u6570\uff0c\u4f46\u662f\u8fd9\u4e9b\u6210\u5458\u5e76\u4e0d\u90fd\u80fd\u76f4\u63a5\u88ab\u6d3e\u751f\u7c7b\u9501\u8bbf\u95ee\u3002\u5bf9\u4e8e\u4e0d\u540c\u7684\u7ee7\u627f\u65b9\u5f0f\uff0c\u4f1a\u5bfc\u81f4\u57fa\u7c7b\u6210\u5458\u539f\u6765\u7684\u8bbf\u95ee\u5c5e\u6027\u5728\u6d3e\u751f\u7c7b\u4e2d\u53d1\u751f\u53d8\u5316\u3002</li> </ul> <p></p> <p>\u5728c++\u7a0b\u5e8f\u8bbe\u8ba1\u4e2d\uff0c\u8bbf\u95ee\u6765\u81ea\u4e8e\u4e24\u4e2a\u65b9\u9762\uff1a</p> <ul> <li>\u6d3e\u751f\u7c7b\u7684\u65b0\u589e\u6210\u5458\u5bf9\u57fa\u7c7b\u7ee7\u627f\u6765\u7684\u6210\u5458\u7684\u8bbf\u95ee</li> <li>\u6d3e\u751f\u7c7b\u5916\u90e8\uff08\u975e\u7c7b\u6210\u5458\uff09\uff0c\u901a\u8fc7\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4ece\u57fa\u7c7b\u7ee7\u627f\u6765\u7684\u6210\u5458\u7684\u8bbf\u95ee</li> </ul> <p>\u8bbf\u95ee\u6743\u9650</p> <p>=== public inheritance</p> <pre><code>\u6d3e\u751f\u7c7b \u7c7b\u5185\uff1a \u53ef\u4ee5\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u7684public \u548c protected, \u4e0d\u80fd\u8bbf\u95ee private\n\n\u6d3e\u751f\u7c7b\u7c7b\u5916\uff1a \u53ea\u80fd\u901a\u8fc7\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8bbf\u95ee\u7ee7\u627f\u6765\u7684\u57fa\u7c7b\u4e2d\u7684\u516c\u6709\u6210\u5458\n</code></pre> <p>=== private inheritance</p> <pre><code>protected \u548c public \u79f0\u4e3a \u6d3e\u751f\u7c7b\u7684 private \uff0c\u6d3e\u751f\u7c7b\u7684\u5176\u4ed6\u6210\u5458\u53ef\u4ee5\u76f4\u63a5\u8bbf\u95ee\uff0c\u4f46\u662f\u57fa\u7c7b\u7684private \u4ecd\u4e0d\u80fd\u8bbf\u95ee\n\n\u6d3e\u751f\u7c7b\u7c7b\u5185\uff1a \u53ef\u4ee5\u8bbf\u95ee\u57fa\u7c7b\u7684Public\u548cprotected,\u4e0d\u80fd\u8bbf\u95ee\u57fa\u7c7b\u7684private\n\n\u6d3e\u751f\u7c7b\u7c7b\u5916\uff1a \u4e0d\u80fd\u8bbf\u95ee\u57fa\u7c7b\u5bf9\u8c61\n</code></pre> <p>=== protected</p> <pre><code>\u57fa\u7c7b\u7684\u4fdd\u62a4\u6210\u5458\u53ea\u80fd\u88ab\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570\u6216\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\uff0c\u4e0d\u80fd\u88ab\u6d3e\u751f\u7c7b\u4ee5\u5916\u7684\u6210\u5458\u51fd\u6570\u8bbf\u95ee\u3002\n\n\u6d3e\u751f\u7c7b\u7c7b\u5185\uff1a\u53ef\u4ee5\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u7684\u516c\u6709\u6210\u5458\u548c\u4fdd\u62a4\u6210\u5458\uff0c\u800c\u57fa\u7c7b\u7684\u79c1\u6709\u6210\u5458\u5219\u4e0d\u80fd\u88ab\u8bbf\u95ee\u3002\n\n\u6d3e\u751f\u7c7b\u7c7b\u5916\uff1a\u901a\u8fc7\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e0d\u80fd\u8bbf\u95ee\u57fa\u7c7b\u4e2d\u7684\u4efb\u4f55\u6210\u5458\u3002\n</code></pre>"},{"location":"note/courses/OOP/Lecture%204/#_4","title":"\u8c03\u6574\u6d3e\u751f\u7c7b\u4e2d\u8bbf\u95ee\u5c5e\u6027\u7684\u5176\u4ed6\u65b9\u6cd5","text":""},{"location":"note/courses/OOP/Lecture%204/#_5","title":"\u540c\u540d\u6210\u5458","text":"<p>c++\u5141\u8bb8\u6d3e\u751f\u7c7b\u4e2d\u8bf4\u660e\u7684\u6210\u5458\u4e0e\u57fa\u7c7b\u7684\u6210\u5458\u540d\u5b57\u76f8\u540c</p> <p>\u6d3e\u751f\u7c7b\u7684\u540c\u540d\u6210\u5458\u8986\u76d6\u4e86\u57fa\u7c7b\u7684\u540c\u540d\u6210\u5458</p>"},{"location":"note/courses/OOP/Lecture%204/#_6","title":"\u8bbf\u95ee\u58f0\u660e","text":"<p>\u53ef\u4ee5\u4e2a\u522b\u8c03\u6574\u57fa\u7c7b\u7684\u6a21\u578b\u6210\u5458\uff0c\u4f7f\u4e4b\u5728\u6d3e\u751f\u7c7b\u4e2d\u4fdd\u6301\u539f\u6765\u7684\u8bbf\u95ee\u5c5e\u6027</p> <p>\u65b9\u6cd5\uff1a\u5728public\u533a\u6dfb\u52a0<code>\u57fa\u7c7b\u540d\uff1a\uff1a\u6210\u5458\u540d\u5b57\uff1b</code></p> <p>Example</p> <pre><code>class X{\n    int a;\npublic:\n    int a;\nvoid print();\n}\n\nclass Y : private X{\n    int b;\npublic: \n    X::print;\n    x::a;\nvoid show(){\n    cout &lt;&lt; b &lt;&lt; endl;\n}\n}\n</code></pre>"},{"location":"note/courses/OOP/Lecture%204/#_7","title":"\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570","text":"<p>\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570\u65f6\u4e0d\u80fd\u88ab\u7ee7\u627f\u7684\uff0c\u9700\u8981\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49</p> <p>\u7531\u4e8e\u6d3e\u751f\u7c7b\u7ee7\u627f\u4e86\u57fa\u7c7b\u7684\u6210\u5458\uff0c\u5728\u521d\u59cb\u5316\u65f6\uff0c\u4e5f\u8981\u540c\u65f6\u521d\u59cb\u5316\u57fa\u7c7b\u5bf9\u8c61\uff0c\u53ef\u901a\u8fc7\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u5b8c\u6210\u521d\u59cb\u5316</p>"},{"location":"note/courses/OOP/Lecture%204/#_8","title":"\u6784\u9020\u51fd\u6570","text":"<p>\u5728c++ \u4e2d\uff0c \u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u7684\u4e00\u822c\u6027\u58f0\u660e\u8bed\u6cd5\u5982\u4e0b\uff1a <pre><code>&lt;\u6d3e\u751f\u7c7b\u540d&gt;::&lt;\u6d3e\u751f\u7c7b\u540d&gt;\uff08\u57fa\u7c7b\u5f62\u53c2\uff0c\u5185\u5d4c\u5bf9\u8c61\u5f62\u53c2\uff0c\u672c\u7c7b\u5f62\u53c2\uff09\uff1a&lt;\u57fa\u7c7b\u540d&gt;\uff08\u53c2\u6570\u8868\uff09\uff0c&lt;\u5185\u5d4c\u5bf9\u8c611&gt;\uff08\u53c2\u6570\u88681\uff09\uff0c&lt;\u5185\u5d4c\u5bf9\u8c612&gt;\uff08\u53c2\u6570\u88682\uff09\uff0c\u2026\uff0c&lt;\u5185\u5d4c\u5bf9\u8c61n&gt;\uff08\u53c2\u6570\u8868n\uff09\n{\n    \u672c\u7c7b\u6210\u5458\u521d\u59cb\u5316\u8d4b\u503c\u8bed\u53e5\uff1b\n    \u2026\n};\n</code></pre></p> <p>\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e0e\u6d3e\u751f\u7c7b\u540d\u76f8\u540c</p> <ul> <li>\u5192\u53f7\u4e4b\u540e\uff0c\u7d2f\u51fa\u9700\u8981\u4f7f\u7528\u53c2\u6570\u8fdb\u884c\u521d\u59cb\u5316\u7684\u57fa\u7c7b\u540d\u548c\u5185\u5d4c\u6210\u5458\u5bf9\u8c61\u540d\u4ee5\u53ca\u5404\u81ea\u7684\u53c2\u6570\u8868\uff0c\u5404\u9879\u4e4b\u95f4\u7528\u9017\u53f7\u5206\u9694</li> <li>\u5bf9\u4e8e\u57fa\u7c7b\u5bf9\u8c61\uff0c\u5982\u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u53ef\u4ee5\u4e0d\u7ed9\u51fa\u57fa\u7c7b\u540d\u548c\u53c2\u6570\u8868\u3002</li> <li>\u5bf9\u4e8e\u5185\u5d4c\u5bf9\u8c61\u6210\u5458\uff0c\u5982\u4f7f\u7528\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff0c\u4e5f\u65e0\u9700\u5199\u51fa\u5bf9\u8c61\u540d\u548c\u53c2\u6570\u8868</li> </ul> <p>\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u7684\u6267\u884c</p> <pre><code>- \u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u5bf9\u7ee7\u627f\u6210\u5458\u8fdb\u884c\u521d\u59cb\u5316\uff0c\u518d\u8c03\u7528\u5bf9\u65b0\u52a0\u6210\u5458\u90e8\u5206\u7684\u521d\u59cb\u5316\n- \u82e5\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u5e26\u6709\u53c2\u6570\uff1a\u5fc5\u987b\u7531\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u7684\u5f62\u5f0f\u53c2\u6570\u4e2d\u4e3a\u57fa\u7c7b\u51fd\u6570\u63d0\u4f9b\u5b9e\u53c2\n    - \u5b9a\u4e49\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u65f6\u5fc5\u987b\u663e\u5f0f\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u5e76\u7528\u5728\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u7684\u5f62\u53c2\u90e8\u5206\u4e3a\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u63d0\u4f9b\u5b9e\u9645\u53c2\u6570\u3002\n    - \u5373\u4f7f\u6d3e\u751f\u7c7b\u672c\u8eab\u7684\u6784\u9020\u51fd\u6570\u4e0d\u5e26\u53c2\u6570\u4e5f\u5fc5\u987b\u5728\u5192\u53f7\u201c\uff1a\u201d\u4e4b\u540e\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff0c\u4f46\u8fd9\u65f6\u4f20\u9012\u7ed9\u57fa\u7c7b\u6784\u9020\u51fd\u6570\u7684\u5b9e\u9645\u53c2\u6570\u901a\u5e38\u662f\u4e00\u4e9b\u5e38\u91cf\u8868\u8fbe\u5f0f\u3002\n\n- \u82e5\u57fa\u7c7b\u6784\u9020\u4e0d\u5e26\u53c2\u6570\uff1a\u5b9a\u4e49\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u65f6\uff0c\u53ef\u4ee5\u4e0d\u5fc5\u663e\u5f0f\u5730\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002C++\u7f16\u8bd1\u7a0b\u5e8f\u8ba4\u4e3a\u8c03\u7528\u7684\u662f\u57fa\u7c7b\u4e2d\u5f62\u5f0f\u53c2\u6570\u4e3a\u7a7a\u7684\u6784\u9020\u51fd\u6570\n</code></pre>"},{"location":"note/courses/OOP/Lecture%204/#_9","title":"\u6790\u6784\u51fd\u6570","text":"<p>\u5728\u6d3e\u751f\u8fc7\u7a0b\u4e2d\uff0c\u7531\u4e8e\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e5f\u4e0d\u80fd\u88ab\u7ee7\u627f\uff0c\u56e0\u6b64\u5728\u6267\u884c\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u65f6\uff0c\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\u4e5f\u5c06\u88ab\u8c03\u7528\u3002\u6790\u6784\u51fd\u6570\u6ca1\u6709\u7c7b\u578b\uff0c\u4e5f\u65e0\u53c2\u6570\uff0c\u4e0e\u6784\u9020\u51fd\u6570\u76f8\u6bd4\uff0c\u60c5\u51b5\u76f8\u5bf9\u6bd4\u8f83\u7b80\u5355\u3002\u5982\u679c\u672a\u663e\u5f0f\u5b9a\u4e49\u67d0\u4e2a\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u7cfb\u7edf\u4f1a\u81ea\u52a8\u4e3a\u6bcf\u4e00\u4e2a\u7c7b\u90fd\u751f\u6210\u4e00\u4e2a\u9ed8\u8ba4\u7684\u6790\u6784\u51fd\u6570\u3002</p> <p>\u6d3e\u751f\u7c7b\u6790\u6784\u51fd\u6570\u7684\u5b9a\u4e49\u65b9\u6cd5\u4e0e\u6ca1\u6709\u7ee7\u627f\u5173\u7cfb\u7684\u7c7b\u4e2d\u6790\u6784\u51fd\u6570\u7684\u5b9a\u4e49\u65b9\u6cd5\u5b8c\u5168\u76f8\u540c\uff0c\u53ea\u9700\u5728\u6d3e\u751f\u7c7b\u6790\u6784\u51fd\u6570\u4f53\u4e2d\u628a\u6d3e\u751f\u7c7b\u65b0\u589e\u7684\u6210\u5458\uff08\u975e\u6210\u5458\u5bf9\u8c61\uff09\u7684\u6e05\u7406\u5de5\u4f5c\u505a\u597d\uff0c\u7cfb\u7edf\u5c31\u4f1a\u81ea\u5df1\u8c03\u7528\u57fa\u7c7b\u53ca\u6210\u5458\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u6765\u5bf9\u57fa\u7c7b\u53ca\u6210\u5458\u5bf9\u8c61\u8fdb\u884c\u6e05\u7406\u3002</p> <p>\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u8fc7\u7a0b</p> <ul> <li>\u5148\u57fa\u7c7b\uff0c\u518d\u5185\u5d4c\u5bf9\u8c61\uff0c\u540e\u6d3e\u751f\u7c7b\u81ea\u5df1</li> <li>\u5148\u8c03\u7528\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570</li> <li>\u7136\u540e\u6309\u7167\u6570\u636e\u6210\u5458\u7684\u58f0\u660e\u987a\u5e8f\uff0c\u8c03\u7528\u6570\u636e\u6210\u5458\u7684\u6784\u9020\u51fd\u6570</li> <li>\u6700\u540e\u6267\u884c\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u7684\u51fd\u6570\u4f53</li> </ul> <p>\u6d3e\u751f\u7c7b\u6790\u6784\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f</p> <ul> <li>\u5148\u6267\u884c\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u5bf9\u6d3e\u751f\u7c7b\u65b0\u589e\u666e\u901a\u6210\u5458\u8fdb\u884c\u6e05\u7406</li> <li>\u7136\u540e\u6309\u7167\u5185\u5d4c\u5bf9\u8c61\u58f0\u660e\u7684\u76f8\u53cd\u987a\u5e8f\uff0c\u4e00\u6b21\u8c03\u7528\u5185\u5d4c\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\uff0c\u5bf9\u6d3e\u751f\u7c7b\u65b0\u589e\u7684\u5bf9\u8c61\u6210\u5458\u8fdb\u884c\u6e05\u7406</li> <li>\u6700\u540e\u8c03\u7528\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u5bf9\u6240\u6709\u4ece\u57fa\u7c7b\u7ee7\u627f\u6765\u7684\u6210\u5458\u8fdb\u884c\u6e05\u7406</li> </ul>"},{"location":"note/courses/OOP/Lecture%204/#_10","title":"\u591a\u91cd\u7ee7\u627f","text":"<p>\u6240\u8c13\u591a\u91cd\u7ee7\u627f\u662f\u6307\u6d3e\u751f\u7c7b\u5177\u6709\u591a\u4e2a\u57fa\u7c7b\uff0c\u6d3e\u751f\u7c7b\u4e0e\u6bcf\u4e00\u4e2a\u57fa\u7c7b\u4e4b\u95f4\u5173\u7cfb\u53ef\u4ee5\u770b\u4f5c\u662f\u4e00\u4e2a\u5355\u7ee7\u627f</p>"},{"location":"note/courses/OOP/Lecture%204/#_11","title":"\u591a\u91cd\u7ee7\u627f\u7684\u58f0\u660e","text":"<p><pre><code>class \u6d3e\u751f\u7c7b\u540d : \u7ee7\u627f\u65b9\u5f0f \u57fa\u7c7b1, \u7ee7\u627f\u65b9\u5f0f \u57fa\u7c7b2, ... {\n    // \u6210\u5458\u58f0\u660e\n};\n</code></pre> \u4e0d\u540c\u7684\u57fa\u7c7b\u53ef\u4ee5\u4f7f\u7528\u4e0d\u540c\u7684\u7ee7\u627f\u65b9\u5f0f\uff0c\u5982\u679c\u6ca1\u6709\u663e\u5f0f\u5730\u6307\u51fa\u7ee7\u627f\u65b9\u5f0f\uff0c\u7cfb\u7edf\u9ed8\u8ba4\u7ee7\u627f\u65b9\u5f0f\u4e3aprivate.</p> <p>\u5404\u4e2a\u57fa\u7c7b\u4e4b\u95f4\u7528\u9017\u53f7\u9694\u5f00\uff0c\u6d3e\u751f\u7c7b\u7ee7\u627f\u4e86\u591a\u4e2a\u57fa\u7c7b\u7684\u6210\u5458\uff0c\u57fa\u7c7b\u4e2d\u7684\u6210\u5458\u6309\u7167\u7ee7\u627f\u65b9\u5f0f\u6765\u786e\u5b9a\u5176\u518d\u6d3e\u751f\u7c7b\u4e2d\u7684\u8bbf\u95ee\u65b9\u5f0f</p>"},{"location":"note/courses/OOP/Lecture%204/#_12","title":"\u591a\u91cd\u7ee7\u627f\u7684\u6784\u9020\u51fd\u6570\u548c\u6790\u6784\u51fd\u6570","text":"<p>\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u58f0\u660e\uff1a <pre><code>class \u6d3e\u751f\u7c7b\u540d : \u7ee7\u627f\u65b9\u5f0f \u57fa\u7c7b1, \u7ee7\u627f\u65b9\u5f0f \u57fa\u7c7b2, ... {\n    // \u6210\u5458\u58f0\u660e\n    \u6d3e\u751f\u7c7b\u540d(\u57fa\u7c7b1\u5f62\u53c2, \u57fa\u7c7b2\u5f62\u53c2, ...) : \u57fa\u7c7b1(\u53c2\u6570\u88681), \u57fa\u7c7b2(\u53c2\u6570\u88682), \u5185\u5d4c\u5bf9\u8c611\uff08\u53c2\u6570\u8868\uff09\uff0c\u5185\u5d4c\u5bf9\u8c612\uff08\u53c2\u6570\u8868\uff09... {\n        // \u6210\u5458\u521d\u59cb\u5316\n    }\n};\n</code></pre></p>"},{"location":"note/courses/OOP/Lecture%204/#_13","title":"\u591a\u91cd\u7ee7\u627f\u4e2d\u7684\u4e8c\u4e49\u6027","text":"<p>\u5728\u591a\u91cd\u7ee7\u627f\u4e2d\uff0c\u6d3e\u751f\u7c7b\u5bf9\u57fa\u7c7b\u6210\u5458\u8bbf\u95ee\u5728\u4e0b\u5217\u4e24\u79cd\u60c5\u51b5\u4e0b\u53ef\u80fd\u51fa\u73b0\u4e8c\u4e49\u6027\u3002</p> <ul> <li>\u8bbf\u95ee\u4e0d\u540c\u57fa\u7c7b\u7684\u76f8\u540c\u6210\u5458\u65f6\u53ef\u80fd\u51fa\u73b0\u4e8c\u4e49\u6027</li> <li>\u8bbf\u95ee\u5171\u540c\u57fa\u7c7b\u4e2d\u6210\u5458\u65f6\u53ef\u80fd\u51fa\u73b0\u4e8c\u4e49\u6027</li> </ul> <p></p> <p></p> <ul> <li>\u6d3e\u751f\u7c7b\u7684\u4e0d\u540c\u57fa\u7c7b\u6709\u540c\u540d\u6210\u5458<ul> <li>\u5f53\u6d3e\u751f\u7c7b\u7684\u4e0d\u540c\u57fa\u7c7b\u6709\u540c\u540d\u6210\u5458\uff0c\u5219\u6d3e\u751f\u7c7b\u4e2d\u5c06\u4ea7\u751f\u4e8c\u4e49\u6027\u95ee\u9898<ul> <li>\u6d3e\u751f\u7c7b\u7c7b\u5185\uff1a \u8bbf\u95ee\u540c\u540d\u57fa\u7c7b\u6210\u5458\u65f6\u5c06\u4ea7\u751f\u4e8c\u4e49\u6027\u95ee\u9898</li> <li>\u6d3e\u751f\u7c7b\u7c7b\u5916\uff1a \u901a\u8fc7\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8bbf\u95ee\u540c\u540d\u57fa\u7c7b\u6210\u5458\u65f6\u5c06\u4ea7\u751f\u4e8c\u4e49\u6027\u95ee\u9898</li> </ul> </li> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a\u4f7f\u7528\u4f5c\u7528\u57df\u6807\u8bc6\u7b26/\u4f7f\u7528\u540c\u540d\u8986\u76d6\u7684\u539f\u5219<ul> <li>\u4f7f\u7528\u4f5c\u7528\u57df\u6807\u8bc6\u7b26\uff1a<code>\u5bf9\u8c61\u540d.\u57fa\u7c7b\u540d::\u6210\u5458\u540d</code>,<code>\u5bf9\u8c61\u540d.\u57fa\u7c7b\u540d::\u6210\u5458\u540d(\u53c2\u6570\u8868)</code>\uff0c\u5728\u7c7b\u5185\u5219\u4f7f\u7528<code>\u57fa\u7c7b\u540d::\u6210\u5458\u540d</code>\u6216<code>\u57fa\u7c7b\u540d::\u6210\u5458\u540d(\u53c2\u6570\u8868)</code>\u6765\u8bbf\u95ee</li> <li>\u4f7f\u7528\u540c\u540d\u8986\u76d6\u7684\u539f\u5219\uff1a\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u4e00\u4e2a\u540c\u540d\u6210\u5458\uff0c\u8986\u76d6\u57fa\u7c7b\u4e2d\u7684\u540c\u540d\u6210\u5458<ul> <li>\u8fd9\u79cd\u65b9\u5f0f\u4f1a\u5bfc\u81f4\u6d3e\u751f\u7c7b\u4e2d\u65e0\u6cd5\u8bbf\u95ee\u5230\u57fa\u7c7b\u4e2d\u7684\u540c\u540d\u6210\u5458</li> </ul> </li> </ul> </li> </ul> </li> <li>\u5728\u6d3e\u751f\u7c7b\u4e2d\u5f15\u7528\u516c\u5171\u57fa\u7c7b\u4e2d\u6210\u5458\u65f6\u51fa\u73b0\u4e8c\u4e49\u6027<ul> <li>\u5728\u7ee7\u627f\u4e0e\u6d3e\u751f\u7684\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\uff0c\u88ab\u7ee7\u627f\u7684\u591a\u4e2a\u57fa\u7c7b\u5982\u679c\u6709\u4e00\u4e2a\u5171\u540c\u7684\u57fa\u7c7b\uff0c\u5728\u6d3e\u751f\u7c7b\u4e2d\u8bbf\u95ee\u8fd9\u4e2a\u5171\u540c\u57fa\u7c7b\u7684\u6210\u5458\u65f6\u4e5f\u4f1a\u4ea7\u751f\u4e8c\u4e49\u6027\u95ee\u9898\u3002</li> <li>\u89e3\u51b3\u8fd9\u79cd\u4e8c\u4e49\u6027\u7684\u65b9\u6cd5\uff1a<ul> <li>\u4f7f\u7528\u4f5c\u7528\u57df\u6807\u8bc6\u7b26 <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass L1\n{\npublic:\n    int m1;\n    void f1(){cout&lt;&lt;\"layer 1-&gt; m1=\"&lt;&lt;m1&lt;&lt;endl;}\n};\nclass L2_1:public L1\n{\npublic:\n    int m2_1;\n};\n\nclass L2_2:public L1\n{\npublic:\n    int m2_2;\n};\nclass L3:public L2_1,public L2_2\n{\npublic:\n    int m3;\n    void f3(){cout&lt;&lt;\"layer 3-&gt; m3=\"&lt;&lt;m3&lt;&lt;endl;}\n};\nint main()\n{   \n    L3 obj;\n    obj.m3=4;\n    obj.f3();\n    obj.L2_1::m1=5; //\u6b63\u786e\uff01\u4f7f\u7528\u76f4\u63a5\u57fa\u7c7b\n    obj.L2_1::f1();                //\u6b63\u786e\uff01\u4f7f\u7528\u76f4\u63a5\u57fa\u7c7b\n    obj.L2_2::m1=6; //\u6b63\u786e\uff01\u4f7f\u7528\u76f4\u63a5\u57fa\u7c7b\n    obj.L2_2::f1();                //\u6b63\u786e\uff01\u4f7f\u7528\u76f4\u63a5\u57fa\u7c7b\n    // obj.m1=1;        //\u9519\u8bef\uff01\u4ea7\u751f\u4e8c\u4e49\u6027\n    //  obj. f1();      //\u9519\u8bef\uff01\u4ea7\u751f\u4e8c\u4e49\u6027\n}\n</code></pre> <pre><code>L3 obj1;\nobj1.m1;        //\u9519\u8bef\uff01\u5b58\u5728\u4e8c\u4e49\u6027\nobj1.f1();      //\u9519\u8bef\uff01\u5b58\u5728\u4e8c\u4e49\u6027\nobj1.L1::m1;        //\u9519\u8bef\uff01\u5b58\u5728\u4e8c\u4e49\u6027\nobj1.L1::f1();      //\u9519\u8bef\uff01\u5b58\u5728\u4e8c\u4e49\u6027\nobj1.L2_1::m1;      //\u6b63\u786e\uff01\nobj1.L2_1::f1();        //\u6b63\u786e\uff01\nobj1.L2_2::m1;      //\u6b63\u786e\uff01\nobj1.L2_1::f1();\n</code></pre> \u5f53\u901a\u8fc7\u6d3e\u751f\u7c7bL3\u7684\u5bf9\u8c61\u6216\u8005\u5728\u6d3e\u751f\u7c7bL3\u4e2d\u8bbf\u95ee\u95f4\u63a5\u57fa\u7c7bL1\u7684\u6210\u5458\u65f6\u5c31\u4f1a\u4ea7\u751f\u4e8c\u4e49\u6027\u3002</li> </ul> </li> <li> <p>\u4e0a\u8ff0\u4f7f\u7528\u4f5c\u7528\u57df\u6807\u8bc6\u7b26\u867d\u7136\u89e3\u51b3\u4e86\u8bbf\u95ee\u57fa\u7c7bL1\u7684\u6210\u5458m1\u548cf1()\u7684\u4e8c\u4e49\u6027\u95ee\u9898\uff0c\u4f46\u662f\u6d3e\u751f\u7c7bL3\u5bf9\u8c61\u5728\u5185\u5b58\u4e2d\u540c\u65f6\u62e5\u6709\u57fa\u7c7bL1\u7684\u6210\u5458m1\u548cf1()\u7684\u4e24\u4efd\u62f7\u8d1d\uff0c\u540c\u4e00\u6210\u5458\u7684\u591a\u4efd\u62f7\u8d1d\u589e\u52a0\u4e86\u5185\u5b58\u7684\u5f00\u9500\u3002     </p> <ul> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a\u865a\u57fa\u7c7b\u3002\u5c06\u5171\u540c\u57fa\u7c7b\u8bbe\u7f6e\u4e3a\u865a\u57fa\u7c7b\uff0c\u8fd9\u6837\u4ece\u4e0d\u540c\u7684\u9014\u5f84\u7ee7\u627f\u8fc7\u6765\u7684\u540c\u540d\u6210\u5458\u53ea\u6709\u4e00\u4e2a\u526f\u672c\uff0c\u8fd9\u6837\u5c31\u4e0d\u4f1a\u518d\u4f1a\u5f15\u8d77\u4e8c\u4e49\u6027\u95ee\u9898\u3002</li> <li>\u865a\u57fa\u7c7b\u4e00\u822c\u6027\u58f0\u660e\u8bed\u6cd5\uff1a <pre><code>class \u6d3e\u751f\u7c7b\u540d: virtual \u7ee7\u627f\u65b9\u5f0f \u57fa\u7c7b\u540d{};\n</code></pre><ul> <li><code>virtual</code>\u662f\u865a\u57fa\u7c7b\u7684\u5173\u952e\u5b57</li> <li>\u5728\u591a\u91cd\u7ee7\u627f\u65b9\u5f0f\u4e0b\uff0c\u865a\u57fa\u7c7b\u5173\u952e\u5b57\u7684\u4f5c\u7528\u8303\u56f4\u53ea\u662f\u5bf9\u7d27\u8ddf\u5176\u540e\u7684\u57fa\u7c7b\u8d77\u4f5c\u7528</li> <li>\u58f0\u660e\u4e86\u865a\u57fa\u7c7b\u540e\uff0c\u5728\u8fdb\u4e00\u6b65\u6d3e\u751f\u8fc7\u7a0b\u4e2d\uff0c\u865a\u57fa\u7c7b\u7684\u6210\u5458\u548c\u6d3e\u751f\u7c7b\u4e00\u8d77\u7ef4\u62a4\u540c\u4e00\u4e2a\u5185\u5b58\u6570\u636e\u62f7\u8d1d\u3002</li> <li>\u5728\u7b2c\u4e00\u7ea7\u7ee7\u627f\u65f6\uff0c\u5c31\u8981\u5c06\u5171\u540c\u57fa\u7c7b\u8bbe\u8ba1\u4e3a\u865a\u57fa\u7c7b\u3002</li> </ul> </li> </ul> <p><pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass L1\n{\npublic:\n    int m1;\n    void f1(){cout&lt;&lt;\"layer 1-&gt; m1=\"&lt;&lt;m1&lt;&lt;endl;}\n};\nclass L2_1: virtual public L1  //L1\u4e3a\u865a\u57fa\u7c7b\uff0c\u516c\u6709\u6d3e\u751fL2_1\u7c7b\n{\npublic:\n    int m2_1;\n};\nclass L2_2: virtual public L1  //L1\u4e3a\u865a\u57fa\u7c7b\uff0c\u516c\u6709\u6d3e\u751fL2_2\u7c7b\n{\npublic:\n    int m2_2;\n};\nclass L3:public L2_1,public L2_2 //L3\u591a\u91cd\u7ee7\u627f\n{\npublic:\n    int m3;\n    void f3(){cout&lt;&lt;\"layer 3-&gt; m3=\"&lt;&lt;m3&lt;&lt;endl;}\n};\n</code></pre>     - \u865a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\uff1a \u5982\u679c\u865a\u57fa\u7c7b\u5b9a\u4e49\u6709\u975e\u9ed8\u8ba4\u6784\u9020\u51fd\u6570\uff08\u5982\u5e26\u5f62\u53c2\uff09\uff0c\u60c5\u51b5\u5c31\u6709\u6240\u4e0d\u540c\u3002\u6b64\u65f6\uff0c\u5728\u6574\u4e2a\u7ee7\u627f\u7ed3\u6784\u4e2d\uff0c\u76f4\u63a5\u6216\u95f4\u63a5\u7ee7\u627f\u865a\u57fa\u7c7b\u7684\u6240\u6709\u6d3e\u751f\u7c7b\uff0c\u90fd\u5fc5\u987b\u5728\u6784\u9020\u51fd\u6570\u7684\u6210\u5458\u521d\u59cb\u5316\u5217\u8868\u4e2d\u7ed9\u51fa\u5bf9\u865a\u57fa\u7c7b\u7684\u521d\u59cb\u5316\u3002     <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass L1\n{\npublic:\n    int m1;\n    L1(int i){m1=i;cout &lt;&lt; \"Layer 1 -&gt; m1=\"&lt;&lt;m1&lt;&lt;endl;}  //\u7c7bL1\u7684\u6784\u9020\u51fd\u6570\n};\nclass L2_1: virtual public L1    //L1\u4e3a\u865a\u57fa\u7c7b\uff0c\u516c\u6709\u6d3e\u751fL2_1\u7c7b\n{\npublic:\n    int m2_1;\n    L2_1(int i):L1(i){m2_1=i;cout&lt;&lt;\"Layer 2_1 -&gt; m2_1=\"&lt;&lt;m2_1&lt;&lt;endl;}\n    //\u7c7bL2_1\u7684\u6784\u9020\u51fd\u6570\uff0c\u9700\u5bf9\u865a\u57fa\u7c7bL1\u8fdb\u884c\u521d\u59cb\u5316\n};\nclass L2_2:virtual public\n{\npublic:\n    int m2_2;\n    L2_2(int i):L1(i){m2_2=i;cout&lt;&lt;\"Layer 2_2 -&gt; m2_2=\"&lt;&lt;m2_2&lt;&lt;endl;}\n};\nclass L3:public L2_1,public L2_2 {\npublic:\n    int m3;\n    L3(int i):L1(i),L2_1(i),L2_2(i) {m3=i;cout &lt;&lt;\"Layer 3-&gt; m3=\"&lt;&lt;m3&lt;&lt;endl;}\n};\nint main(int argc, char* argv[])\n{\n    L3 obj(1);\n    return 0;\n}\n</code></pre>     \u865a\u57fa\u7c7bL1\u4e2d\u7684\u6784\u9020\u51fd\u6570\u5e26\u6709\u5f62\u53c2\uff0c\u56e0\u6b64\u4ece\u865a\u57fa\u7c7bL1\u4e2d\u76f4\u63a5\u7ee7\u627f\uff08\u7c7bL2_1\u3001\u7c7bL2_2\uff09\u6216\u95f4\u63a5\u7ee7\u627f\uff08\u7c7bL3\uff09\u7684\u6d3e\u751f\u7c7b\uff0c\u5176\u6784\u9020\u51fd\u6570\u7684\u6210\u5458\u5217\u8868\u90fd\u8981\u5217\u51fa\u5bf9\u865a\u57fa\u7c7bL1\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u3002</p> </li> </ul> </li> </ul>"},{"location":"note/courses/OOP/Lecture%204/#_14","title":"\u5b50\u7c7b\u578b\u4e0e\u8d4b\u503c\u517c\u5bb9\u89c4\u5219","text":"<p>\u6240\u8c13\u5b50\u7c7b\u578b\uff0c\u662f\u6307\u5f53\u4e00\u4e2a\u7c7b\u578b\u81f3\u5c11\u5305\u542b\u4e86\u53e6\u4e00\u4e2a\u7c7b\u578b\u7684\u6240\u6709\u884c\u4e3a\uff0c\u5219\u79f0\u8be5\u7c7b\u578b\u662f\u53e6\u4e00\u4e2a\u7c7b\u578b\u7684\u5b50\u7c7b\u578b\u3002</p> <p>\u5728\u516c\u6709\u7ee7\u627f\u4e0b\uff0c\u6d3e\u751f\u7c7b\u662f\u57fa\u7c7b\u7684\u5b50\u7c7b\u578b\u3002\u5b50\u7c7b\u578b\u53cd\u6620\u7c7b\u578b\u4e4b\u95f4\u7684\u4e00\u822c\u548c\u7279\u6b8a\u7684\u5173\u7cfb\uff0c\u5e76\u4e14\u5b50\u7c7b\u578b\u5173\u7cfb\u662f\u4e0d\u53ef\u9006\u7684\u3002</p>"},{"location":"note/courses/OOP/Lecture%204/#_15","title":"\u7c7b\u578b\u9002\u5e94","text":"<p>\u7c7b\u578b\u9002\u5e94\u662f\u6307\u4e24\u79cd\u7c7b\u578b\u4e4b\u95f4\u7684\u5173\u7cfb\u3002\u5982\u679c\u7c7b\u578bB\u662f\u7c7b\u578bA\u7684\u5b50\u7c7b\u578b\uff0c\u5219\u79f0\u7c7b\u578bB\u9002\u5e94\u4e8e\u7c7b\u578bA\uff0c\u4e5f\u5c31\u662f\u8bf4B\u7c7b\u578b\u7684\u5bf9\u8c61\u80fd\u591f\u7528\u4e8eA\u7c7b\u578b\u7684\u5bf9\u8c61\u6240\u80fd\u4f7f\u7528\u7684\u573a\u5408\u3002</p> <p>\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u9002\u5e94\u4e8e\u67d0\u4e2a\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5219\u5b83\u540c\u6837\u4e5f\u9002\u7528\u4e8e\u8be5\u7c7b\u578b\u7684\u5404\u4e2a\u5b50\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u8fd9\u6837\u5c31\u5927\u53ef\u4e0d\u5fc5\u4e3a\u5904\u7406\u8fd9\u4e9b\u5b50\u7c7b\u578b\u7684\u5bf9\u8c61\u53bb\u91cd\u8f7d\u8be5\u51fd\u6570\u3002</p>"},{"location":"note/courses/OOP/Lecture%204/#_16","title":"\u8d4b\u503c\u517c\u5bb9\u89c4\u5219","text":"<p>\u5728\u516c\u6709\u7ee7\u627f\u65b9\u5f0f\u4e0b\uff0c\u5bf9\u4e8e\u67d0\u4e9b\u573a\u5408\uff0c\u4e00\u4e2a\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u4f5c\u4e3a\u57fa\u7c7b\u7684\u5bf9\u8c61\u6765\u4f7f\u7528\u3002\u4e5f\u5c31\u662f\u8bf4\u5728\u9700\u8981\u57fa\u7c7b\u5bf9\u8c61\u7684\u4efb\u4f55\u5730\u65b9\uff0c\u90fd\u53ef\u4ee5\u4f7f\u7528\u516c\u6709\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u6765\u66ff\u4ee3\u3002\u5305\u62ec\u4ee5\u4e0b\u4e09\u79cd\u60c5\u51b5\uff1a</p> <ul> <li>\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u8d4b\u503c\u7ed9\u57fa\u7c7b\u5bf9\u8c61\uff1a<code>Derived d; Base b = d;</code></li> <li>\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u521d\u59cb\u5316\u57fa\u7c7b\u7684\u5f15\u7528\uff1a<code>Derived d; Base &amp;b = d;</code></li> <li>\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u521d\u59cb\u5316\u57fa\u7c7b\u7684\u6307\u9488\uff1a<code>Derived d; Base *b = &amp;d;</code></li> </ul>"},{"location":"note/courses/OOP/Lecture%204/#_17","title":"\u865a\u57fa\u7c7b","text":"<p>\u5b9a\u4e49\u865a\u57fa\u7c7b\u5c31\u662f\u8981\u4fdd\u8bc1\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e2d\u53ea\u6709\u4e00\u4e2a\u865a\u57fa\u7c7b\u5bf9\u8c61\uff0c\u8981\u6c42\u865a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u53ea\u80fd\u88ab\u8c03\u7528\u4e00\u6b21\u3002\u56e0\u6b64\uff0c\u865a\u57fa\u7c7b\u7684\u51fa\u73b0\u6539\u53d8\u4e86\u6784\u9020\u51fd\u6570\u7684\u8c03\u7528\u987a\u5e8f\u3002\u5728\u521d\u59cb\u5316\u4efb\u4f55\u975e\u865a\u57fa\u7c7b\u4e4b\u524d\uff0c\u5c06\u5148\u521d\u59cb\u5316\u865a\u57fa\u7c7b\u3002\u8fd9\u65f6\uff0c\u5728\u6574\u4e2a\u7ee7\u627f\u7ed3\u6784\u4e2d\uff0c\u76f4\u63a5\u6216\u95f4\u63a5\u7ee7\u627f\u865a\u57fa\u7c7b\u7684\u6240\u6709\u6d3e\u751f\u7c7b\uff0c\u90fd\u5fc5\u987b\u5728\u6784\u9020\u51fd\u6570\u7684\u6210\u5458\u521d\u59cb\u5316\u8868\u4e2d\u5217\u51fa\u5bf9\u865a\u57fa\u7c7b\u7684\u521d\u59cb\u5316\u3002\u5982\u679c\u5b58\u5728\u591a\u4e2a\u865a\u57fa\u7c7b\uff0c\u521d\u59cb\u5316\u987a\u5e8f\u7531\u5b83\u4eec\u5728\u7ee7\u627f\u7ed3\u6784\u4e2d\u7684\u4f4d\u7f6e\u51b3\u5b9a\uff0c\u5176\u987a\u5e8f\u662f\u4ece\u4e0a\u5230\u4e0b\u3001\u4ece\u5de6\u5230\u53f3\u3002\u8c03\u7528\u6790\u6784\u51fd\u6570\u4e5f\u9075\u5b88\u76f8\u540c\u7684\u89c4\u5219\uff0c\u4f46\u662f\u987a\u5e8f\u76f8\u53cd\u3002</p> <p>\u865a\u57fa\u7c7b\u7684\u521d\u59cb\u5316\u4e0e\u4e00\u822c\u591a\u7ee7\u627f\u7684\u521d\u59cb\u5316\u5728\u8bed\u6cd5\u4e0a\u662f\u4e00\u6837\u7684\uff0c\u4f46\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u4e0d\u540c\u3002\u865a\u57fa\u7c7b\u53ca\u6d3e\u751f\u7c7b\u6784\u9020\u51fd\u6570\u7684\u6267\u884c\u987a\u5e8f\u5982\u4e0b\uff1a \uff081\uff09\u865a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u5728\u6240\u6709\u975e\u865a\u57fa\u7c7b\u4e4b\u524d\u6267\u884c\uff1b \uff082\uff09\u82e5\u540c\u4e00\u5c42\u6b21\u4e2d\u5305\u542b\u591a\u4e2a\u865a\u57fa\u7c7b\uff0c\u8fd9\u4e9b\u865a\u57fa\u7c7b\u7684\u6784\u9020\u51fd\u6570\u6309\u5b83\u4eec\u58f0\u660e\u7684\u6b21\u5e8f\u8c03\u7528\uff1b \uff083\uff09\u82e5\u865a\u57fa\u7c7b\u7531\u975e\u865a\u57fa\u7c7b\u6d3e\u751f\u800c\u6765\uff0c\u5219\u4ecd\u7136\u5148\u8c03\u7528\u57fa\u7c7b\u6784\u9020\u51fd\u6570\uff0c\u518d\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6784\u9020\u51fd\u6570\u3002</p>"},{"location":"note/courses/OOP/Lecture%204/#_18","title":"\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u7684\u8f6c\u6362","text":"<p>\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u4e4b\u95f4\u4e5f\u80fd\u8fdb\u884c\u7c7b\u4f3c\u7684\u7c7b\u578b\u8f6c\u6362\u3002\u7531\u4e8e\u6d3e\u751f\u7c7b\u5305\u542b\u4ece\u57fa\u7c7b\u7ee7\u627f\u7684\u6210\u5458\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c06\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8d4b\u503c\u7ed9\u57fa\u7c7b\u5bf9\u8c61\uff0c\u53cd\u4e4b\u4e0d\u80fd</p> <ul> <li>\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u8d4b\u503c\u7ed9\u57fa\u7c7b\u7684\u5bf9\u8c61</li> <li>\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53ef\u4ee5\u521d\u59cb\u5316\u57fa\u7c7b\u5bf9\u8c61\u7684\u5f15\u7528     <pre><code>Base b;         //\u5b9a\u4e49\u57fa\u7c7b\u5bf9\u8c61\nDerived d;      //\u5b9a\u4e49\u6d3e\u751f\u7c7b\u5bf9\u8c61\nBase &amp;r1=b;     //\u5b9a\u4e49\u57fa\u7c7b\u5bf9\u8c61\u7684\u5f15\u7528r1\uff0c\u7528\u57fa\u7c7b\u5bf9\u8c61b\u521d\u59cb\u5316\nBase &amp;r2=d;     //\u5b9a\u4e49\u57fa\u7c7b\u5bf9\u8c61\u7684\u5f15\u7528r2\uff0c\u7528\u6d3e\u751f\u7c7b\u5bf9\u8c61d\u521d\u59cb\u5316\n</code></pre>     \u57fa\u7c7b\u5bf9\u8c61\u7684\u5f15\u7528r1\u662fb\u7684\u522b\u540d\uff0cb\u548cr1\u5171\u4eab\u540c\u4e00\u5b58\u50a8\u7a7a\u95f4\u3002\u4f46r2\u5e76\u4e0d\u662fd\u7684\u522b\u540d\uff0c\u5b83\u53ea\u662fd\u4e2d\u57fa\u7c7b\u90e8\u5206\u7684\u522b\u540d\uff0cr2\u4e0ed\u4e2d\u7684\u57fa\u7c7b\u90e8\u5206\u5171\u4eab\u540c\u4e00\u5b58\u50a8\u7a7a\u95f4\u3002</li> <li>\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u5730\u5740\u53ef\u4ee5\u8d4b\u7ed9\u57fa\u7c7b\u6307\u9488\u53d8\u91cf:\u82e5\u5b9a\u4e49\u4e86\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u53d8\u91cf\uff0c\u4e5f\u53ef\u4ee5\u7528\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61\u53d6\u5730\u5740\u7ed9\u5b83\u8d4b\u503c\uff0c\u5373\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u53d8\u91cf\u53ef\u4ee5\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u3002     <pre><code>Base b;         //\u5b9a\u4e49\u57fa\u7c7b\u5bf9\u8c61\nDerived d;      //\u5b9a\u4e49\u6d3e\u751f\u7c7b\u5bf9\u8c61\nBase *p=&amp;d;     //\u5b9a\u4e49\u57fa\u7c7b\u7684\u6307\u9488p\uff0c\u6307\u5411\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61d\n</code></pre>     \u4ee5\u4e0a\u7684\u8868\u73b0\u5f62\u5f0f\u540c\u6837\u53ef\u7528\u5728\u51fd\u6570\u53c2\u6570\u4e2d\u3002\u5982\u679c\u51fd\u6570\u7684\u5f62\u53c2\u662f\u57fa\u7c7b\u7684\u5bf9\u8c61\u3001\u57fa\u7c7b\u5bf9\u8c61\u7684\u5f15\u7528\u6216\u662f\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u53d8\u91cf\uff0c\u90a3\u4e48\u5b9e\u53c2\u53ef\u4ee5\u662f\u4e00\u4e2a\u6d3e\u751f\u7c7b\u7684\u5bf9\u8c61</li> </ul>"},{"location":"note/courses/OOP/Lecture%205/","title":"\u591a\u6001","text":"<p>\u591a\u6001\u7684\u6982\u5ff5\uff1a - \u4e0d\u540c\u5bf9\u8c61\u63a5\u6536\u5230\u7edf\u4e00\u6d88\u606f\u65f6\u4f1a\u4ea7\u751f\u4e0d\u540c\u884c\u4e3a - \u7b80\u5355\u6765\u8bf4\uff0c\u5c31\u662f\u5728\u54e6\u540c\u4e00\u4e2a\u7c7b\u6216\u7ee7\u627f\u4f53\u7cfb\u7ed3\u6784\u7684\u57fa\u7c7b\u4e0e\u6d3e\u751f\u7c7b\u4e2d\uff0c\u7528\u540c\u540d\u51fd\u6570\u6765\u5b9e\u73b0\u4e0d\u540c\u7684\u529f\u80fd</p> <p>\u591a\u6001\u4e0e\u7ee7\u627f\u7684\u5173\u7cfb\uff1a - \u7ee7\u627f\u6240\u5904\u7406\u7684\u662f\u7c7b\u4e0e\u7c7b\u4e4b\u95f4\u7684\u5c42\u6b21\u5173\u7cfb\u95ee\u9898 - \u591a\u6001\u5904\u7406\u7684\u662f\u7c7b\u7684\u5c42\u6b21\u7ed3\u6784\u4e4b\u95f4\u4ee5\u53ca\u540c\u4e00\u4e2a\u7c7b\u5185\u90e8\u540c\u540d\u51fd\u6570\u7684\u5173\u7cfb\u95ee\u9898\u901a\u5e38\u662f\u6307\u7ee7\u627f\u7ed3\u6784\u4e2d\u57fa\u7c7b\u548c\u6d3e\u751f\u7c7b\u4e4b\u95f4\u901a\u8fc7\u540c\u540d\u865a\u51fd\u6570\u5b9e\u73b0\u4e0d\u540c\u51fd\u6570\u529f\u80fd \u7684\u95ee\u9898\u3002</p> <p>\u5355\u63a5\u53e3\uff0c\u591a\u5b9e\u73b0</p> <p>\u7c7b\u578b\uff1a - \u91cd\u8f7d\u591a\u6001\uff1a   - \u51fd\u6570\u91cd\u8f7d\uff1a\u540c\u540d\u51fd\u6570\u53c2\u6570\u4e0d\u540c   - \u8fd0\u7b97\u7b26\u91cd\u8f7d\uff1a\u8fd0\u7b97\u7b26\u7684\u64cd\u4f5c\u6570\u7c7b\u578b\u4e0d\u540c - \u6a21\u677f\u591a\u6001\uff1a\u901a\u8fc7\u4e00\u4e2a\u6a21\u677f\u751f\u6210\u4e0d\u540c\u7684\u51fd\u6570\u548c\u7c7b - \u7ee7\u627f\u591a\u6001\uff1a\uff08\u4e00\u822c\u6307\u8fd9\u4e2a\uff09   - \u865a\u51fd\u6570\uff1a\u57fa\u7c7b\u6307\u9488\u6216\u5f15\u7528\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u865a\u51fd\u6570   - \u63a5\u53e3\uff1a\u901a\u8fc7\u63a5\u53e3\u5b9e\u73b0\u591a\u6001</p> <p>\u591a\u6001\u7684\u5b9e\u73b0\uff1a - \u8981\u6709\u7ee7\u627f - \u6d3e\u751f\u7c7b\u8981\u8986\u76d6\uff08\u91cd\u5b9a\u4e49\uff09\u57fa\u7c7b\u7684\u865a\u51fd\u6570\uff0c\u5373\u6d3e\u751f\u7c7b\u5177\u6709\u548c\u57fa\u7c7b\u51fd\u6570\u6570\u636e\u539f\u578b\u5b8c\u5168\u76f8\u540c\u7684\u865a\u51fd\u6570\u6210\u5458 - \u628a\u57fa\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528\u7ed1\u5b9a\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e0a</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u6ca1\u6709\u7ee7\u627f\uff0c\u6216\u8005\u6ca1\u6709\u6d3e\u751f\u7c7b\u6ca1\u6709\u91cd\u5b9a\u4e49\u57fa\u7c7b\u7684\u865a\u51fd\u6570\uff0c \u6216\u8005\u5177\u5907\u524d\u4e24\u8005\uff0c\u4f46\u76f4\u63a5\u628a\u6d3e\u751f\u7c7b\u5bf9\u8c61\u8d4b\u503c\u7ed9\u57fa\u7c7b\u5bf9\u8c61\uff08\u6ca1\u6709\u901a \u8fc7\u6307\u9488\u6216\u5f15\u7528\uff09\uff0c\u90fd\u4e0d\u80fd\u5b9e\u73b0\u591a\u6001\u3002</p>"},{"location":"note/courses/OOP/Lecture%205/#_2","title":"\u591a\u6001\u7684\u5b9e\u73b0","text":"<pre><code>class Animal { // \u4e0d\u77e5\u9053\u52a8\u7269\u4f1a\u600e\u4e48\u53eb\uff01\n    public: virtual void sound() { cout &lt;&lt; \"unknow!\" &lt;&lt; endl; }\n};\nclass Dog :public Animal { // \u72d7\u513f\u53eb\u58f0\u201c\u6c6a\u6c6a\u6c6a\uff01\u201d\n    public: void sound() { cout &lt;&lt; \"wang,wang,wang!\" &lt;&lt; endl; }\n};\nclass Cat :public Animal { // \u732b\u513f\u53eb\u58f0\u201c\u201d\u55b5\u55b5\u55b5\uff01\n    public: void sound() { cout &lt;&lt; \"miao,miao,miao!\" &lt;&lt; endl; }\n};\nclass Wlof :public Animal { // \u72fc\u568e\u53eb\u58f0\u201c\u201d\uff01\n    public: void sound() { cout &lt;&lt; \"wu,wu,wu!\" &lt;&lt; endl; }\n};\n</code></pre> <p>\u591a\u6001\u662f\u6307\u5f53\u57fa\u7c7b\u7684\u6307\u9488\uff08\u6216\u5f15\u7528\uff09\u7ed1\u5b9a\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e0a\uff0c\u901a\u8fc7\u6b64\u6307\u9488\uff08\u5f15\u7528\uff09\u8c03\u7528\u57fa \u7c7b\u7684\u6210\u5458\u51fd\u6570\u65f6\uff0c\u5b9e\u9645\u4e0a\u8c03\u7528\u5230\u7684\u662f\u8be5\u51fd\u6570\u5728\u6d3e\u751f\u7c7b\u4e2d\u7684\u8986\u76d6\u51fd\u6570\u7248\u672c\u3002</p> <p>\u4f8b\u5982\uff0c\u5bf9\u4e8e\u4e0a\u9762\u7684\u7ee7\u627f\u7ed3\u6784\uff0c\u4e0b\u9762\u7684pa\u5b9e\u73b0\u7684\u5c31\u662f\u591a\u6001\uff1a <pre><code>void main() {\nAnimal *pA;\nDog dog;\nCat cat;\nWlof wlof;\npA = &amp;dog; pA-&gt;sound(); //pA \u8c03\u7528 Dog \u7684 sound \u51fd\u6570\npA = &amp;cat; pA-&gt;sound(); //pA \u8c03\u7528 Cat \u7684 sound \u51fd\u6570\npA = &amp;wlof; pA-&gt;sound(); //pA \u8c03\u7528 Wlof \u7684 sound \u51fd\u6570\n}\n</code></pre></p> <p>\u66f4\u4e00\u822c\u5730\uff0c\u591a\u6001\u66f4\u591a\u5730\u4f53\u73b0\u5728\u7528\u57fa\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u6216\u5f15\u7528\u4f5c\u4e3a\u51fd\u6570\u7684\u53c2\u6570\uff0c\u901a\u8fc7\u5b83 \u8c03\u7528\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e2d\u7684\u8986\u76d6\u51fd\u6570\u7248\u672c\u3002</p> <p>\u4f8b\u5982\uff0c\u9488\u5bf9 Animal \u7ee7\u627f\u4f53\u7cfb\uff0c\u8bbe\u8ba1 animalSound \u51fd\u6570\u7ba1\u7406\u6bcf\u79cd\u52a8\u7269\u7684\u58f0\u97f3\uff0c\u591a\u6001 \u80fd\u591f\u5f88\u597d\u5730\u5b9e\u73b0\u6b64\u9700\u6c42\u3002</p> <pre><code>void animalSound(Animal &amp;animal) {\n    animal.sound(); // \u8c03\u7528 Animal \u7684 sound \u51fd\u6570\n}\n\nAnimal *pA;\nDog dog;\nCat cat;\nWlof wlof;\nanimalSound(dog); // \u8c03\u7528 Dog \u7684 sound \u51fd\u6570\nanimalSound(cat); // \u8c03\u7528 Cat \u7684 sound \u51fd\u6570\nanimalSound(wlof); // \u8c03\u7528 Wlof \u7684 sound \u51fd\u6570\n</code></pre> <p>\u5373\u4ee5\u57fa\u7c7b Animal \u7684\u5f15\u7528\u4e3a\u63a5\u53e3\uff0c\u53ef\u4ee5\u8bbf\u95ee\u5230\u56fe 5-1 \u6240\u793a\u7ee7\u627f\u4f53\u7cfb\u4e2d Animal \u7c7b\u7684\u4efb \u4f55\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684 sound \u51fd\u6570\u3002</p>"},{"location":"note/courses/OOP/Lecture%205/#_3","title":"\u591a\u6001\u4e0e\u8054\u7f16","text":"<p>\u4e00\u4e2a\u7a0b\u5e8f\u5e38\u5e38\u4f1a\u8c03\u7528\u5230\u6765\u81ea\u4e8e\u4e0d\u540c\u6587\u4ef6\u6216 C++ \u5e93\u4e2d\u7684\u8d44\u6e90\uff08\u5982\u51fd\u6570\u3001\u5bf9\u8bdd\u6846\uff09 \u7b49\uff0c\u9700\u8981\u7ecf\u8fc7\u7f16\u8bd1\u3001\u8fde\u63a5\u624d\u80fd\u5f62\u6210\u4e3a\u53ef\u6267\u884c\u6587\u4ef6\uff0c</p> <p>\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u8981\u628a\u8c03\u7528\u51fd\u6570\u540d\u4e0e\u5bf9\u5e94\u51fd\u6570\uff08\u8fd9\u4e9b\u51fd\u6570\u53ef\u80fd\u6765\u6e90\u4e8e\u4e0d\u540c\u7684\u6587\u4ef6\u6216 \u5e93\uff09\u5173\u8054\u5728\u4e00\u8d77\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u5c31\u662f\u7ed1\u5b9a\uff08 binding \uff09\uff0c\u53c8\u79f0\u8054\u7f16\u3002</p> <ul> <li>\u9759\u6001\u8054\u7f16\uff08\u9759\u6001\u7ed1\u5b9a\uff09<ul> <li>\u662f\u6307\u5728\u7f16\u8bd1\u7a0b\u5e8f\u65f6\u5c31\u6839\u636e\u8c03\u7528\u51fd\u6570\u63d0\u4f9b\u7684\u4fe1\u606f\uff0c\u628a     \u5b83\u6240\u5bf9\u5e94\u7684\u5177\u4f53\u51fd\u6570\u786e\u5b9a\u4e0b\u6765\uff0c\u5373\u5728\u7f16\u8bd1\u65f6\u5c31\u628a\u8c03\u7528\u51fd\u6570\u540d\u4e0e\u5177\u4f53\u51fd\u6570\u7ed1\u5b9a\u5728\u4e00\u8d77\u3002</li> </ul> </li> <li>\u52a8\u6001\u8054\u7f16\uff08\u52a8\u6001\u7ed1\u5b9a\uff09<ul> <li>\u662f\u6307\u5728\u7f16\u8bd1\u7a0b\u5e8f\u65f6\u8fd8\u4e0d\u80fd\u786e\u5b9a\u51fd\u6570\u8c03\u7528\u6240\u5bf9\u5e94\u7684\u5177\u4f53\u51fd\u6570\uff0c\u53ea\u6709\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u624d\u80fd\u591f\u786e\u5b9a\u51fd\u6570\u8c03\u7528\u6240\u5bf9\u5e94\u7684\u5177\u4f53\u51fd\u6570\uff0c\u5373\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u624d\u628a\u8c03\u7528\u51fd\u6570\u540d\u4e0e\u5177\u4f53\u51fd\u6570\u7ed1\u5b9a\u5728\u4e00\u8d77\u3002</li> </ul> </li> </ul> <p>\u591a\u6001\u6027\u7684\u5b9e\u73b0\u65b9\u5f0f\uff1a</p> <ul> <li>\u7f16\u8bd1\u65f6\u591a\u6001\u6027\uff1a\u7cfb\u7edf\u5728\u7f16\u8bd1\u65f6\u5c31\u51b3\u5b9a\u5982\u4f55\u5b9e\u73b0\u67d0\u4e00\u52a8\u4f5c , \u5373\u5bf9\u67d0\u4e00\u6d88\u606f\u5982\u4f55\u5904\u7406\u3002\u9759\u6001\u8054\u7f16\u5177\u6709\u6267\u884c\u901f\u5ea6\u5feb\u7684\u4f18\u70b9\u3002<ul> <li>\u51fd\u6570\u91cd\u8f7d</li> <li>\u8fd0\u7b97\u7b26\u91cd\u8f7d</li> </ul> </li> <li>\u8fd0\u884c\u65f6\u591a\u6001\u6027\uff1a\u7cfb\u7edf\u5728\u8fd0\u884c\u65f6\u624d\u51b3\u5b9a\u5982\u4f55\u5b9e\u73b0\u67d0\u4e00\u52a8\u4f5c\uff0c\u5373\u5bf9\u67d0\u4e00\u6d88\u606f\u5982\u4f55\u5904\u7406\u3002\u52a8\u6001\u8054\u7f16\u5177\u6709\u7075\u6d3b\u6027\u548c\u53ef\u6269\u5c55\u6027\u3002<ul> <li>\u865a\u51fd\u6570</li> <li>\u7ee7\u627f</li> </ul> </li> </ul> <p>Question</p> <p></p>"},{"location":"note/courses/OOP/Lecture%205/#_4","title":"\u8fd0\u7b97\u7b26\u91cd\u8f7d","text":"<p>\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9e\u8d28\u4e0a\u5c06\u8fd0\u7b97\u5bf9\u8c61\u8f6c\u5316\u4e3a\u8fd0\u7b97\u51fd\u6570\u7684\u5b9e\u53c2\uff0c\u5e76\u6839\u636e\u5b9e\u53c2\u7684\u7c7b\u578b\u6765\u786e\u5b9a\u91cd\u8f7d\u7684\u8fd0\u7b97\u51fd\u6570</p> <p>\u8fd0\u7b97\u7b26\u91cd\u8f7d\u548c\u7c7b\u578b\u91cd\u8f7d\u662f\u591a\u6001\u7684\u53e6\u5916\u4e24\u79cd\u8868\u73b0\u5f62\u5f0f</p> <p>\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9e\u8d28\u4e0a\u662f\u51fd\u6570\u7684\u91cd\u8f7d</p> <p>\u4e00\u822c\u683c\u5f0f\u5982\u4e0b\uff1a <pre><code>\u51fd\u6570\u7c7b\u578b operator \u8fd0\u7b97\u7b26\u540d(\u5f62\u53c2\u5217\u8868) {\n    // \u51fd\u6570\u4f53\n}\nComplex operator +(Complex &amp;c1, Complex &amp;c2);\n</code></pre></p>"},{"location":"note/courses/OOP/Lecture%205/#_5","title":"\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u89c4\u5219","text":"<ul> <li>\u4e0d\u5141\u8bb8\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\u65b0\u7684\u8fd0\u7b97\u7b26</li> <li>\u5e76\u4e0d\u662f\u6240\u6709\u7684\u8fd0\u7b97\u7b26\u90fd\u53ef\u4ee5\u8fdb\u884c\u91cd\u8f7d</li> <li>\u64cd\u4f5c\u7b26\u6240\u5141\u8bb8\u7684\u64cd\u4f5c\u6570\u7684\u4e2a\u6570\u3001\u4f18\u5148\u7ea7\u3001\u7ed3\u5408\u6027\u7b49\u90fd\u4e0d\u80fd\u6539\u53d8</li> <li>\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u51fd\u6570\u4e0d\u80fd\u6709\u9ed8\u8ba4\u53c2\u6570</li> <li>\u91cd\u8f7d\u7684\u64cd\u4f5c\u7b26\u5fc5\u987b\u6709\u4e00\u4e2a\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u578b\u4f5c\u4e3a\u64cd\u4f5c\u6570\u3002\u4e0d\u80fd\u5bf9\u5185\u7f6e\u7c7b\u578b\u91cd\u8f7d</li> <li>\u7528\u6237\u5b9a\u4e49\u7684\u7c7b\u578b\u90fd\u81ea\u52a8\u62e5\u6709 \u201c=\u201d\u3001\u201c&amp;\u201d\u3001\u201c\uff0c\u201d\u8fd0\u7b97\u7b26\uff0c\u9664\u975e\u6709\u7279\u6b8a\u9700\u8981\uff0c\u4e00\u822c\u4e0d\u5fc5\u91cd\u8f7d\u8fd93\u4e2a\u8fd0\u7b97\u7b26\u3002</li> </ul> <p>\u4e0d\u80fd\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26</p> <ul> <li><code>.</code>\uff08\u6210\u5458\u8bbf\u95ee\u8fd0\u7b97\u7b26\uff09</li> <li><code>.*</code>\uff08\u6210\u5458\u6307\u9488\u8bbf\u95ee\u8fd0\u7b97\u7b26\uff09</li> <li><code>::</code>\uff08\u57df\u89e3\u6790\u8fd0\u7b97\u7b26\uff09</li> <li><code>?:</code>\uff08\u6761\u4ef6\u8fd0\u7b97\u7b26\uff09</li> <li><code>sizeof</code>\uff08\u5927\u5c0f\u8fd0\u7b97\u7b26\uff09</li> </ul>"},{"location":"note/courses/OOP/Lecture%205/#_6","title":"\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\u5f62\u5f0f","text":"<ul> <li>\u91cd\u8f7d\u4e3a\u7c7b\u7684\u6210\u5458\u51fd\u6570</li> <li>\u91cd\u8f7d\u4e3a\u7c7b\u7684\u53cb\u5458\u51fd\u6570</li> </ul> <p>\u5982\u679c\u5c06\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4f5c\u4e3a\u6210\u5458\u51fd\u6570\uff0c\u7531\u4e8e\u5b83\u53ef\u4ee5\u901a\u8fc7this\u6307\u9488\u81ea\u7531\u8bbf\u95ee\u672c\u7c7b\u7684\u6570\u636e\u6210\u5458\uff0c\u56e0\u6b64\u53ef\u4ee5\u5c11\u5199\u4e00\u4e2a\u51fd\u6570\u7684\u53c2\u6570\u3002\u4f46\u5fc5\u987b\u8981\u6c42\u8fd0\u7b97\u8868\u8fbe\u5f0f\u7b2c\u4e00\u4e2a\u53c2\u6570(\u5373\u8fd0\u7b97\u7b26\u5de6\u4fa7\u7684\u64cd\u4f5c\u6570)\u662f\u4e00\u4e2a\u7c7b\u5bf9\u8c61\uff0c\u56e0\u4e3a\u5fc5\u987b\u901a\u8fc7\u7c7b\u7684\u5bf9\u8c61\u53bb\u8c03\u7528\u8be5\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u800c\u4e14\u91cd\u8f7d\u51fd\u6570\u7684\u8fd4\u56de\u503c\u4e0e\u8be5\u5bf9\u8c61\u7c7b\u578b\u76f8\u540c\u3002</p> <p>c++\u89c4\u5b9a\uff0c\u5f53\u91cd\u8f7d\u4ee5\u4e0b\u7684\u8fd0\u7b97\u7b26\u65f6\uff0c\u5fc5\u987b\u91cd\u8f7d\u4e3a\u67d0\u4e2a\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff1a</p> <ul> <li><code>=</code></li> <li><code>[]</code></li> <li><code>-&gt;</code></li> <li><code>()</code></li> </ul> <p>\u5f53\u91cd\u8f7d\u4e3a\u4ee5\u4e0b\u7684\u8fd0\u7b97\u7b26\u65f6\uff0c\u5fc5\u987b\u662f\u666e\u901a\u51fd\u6570\u6216\u53cb\u5143\u51fd\u6570\uff1a</p> <ul> <li><code>&gt;&gt;</code></li> <li><code>&lt;&lt;</code></li> </ul> <p>\u4e00\u822c\u5c06\u53cc\u76ee\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e3a\u53cb\u5143\u51fd\u6570\uff0c\u5355\u76ee\u8fd0\u7b97\u7b26\u91cd\u8f7d\u4e3a\u6210\u5458\u51fd\u6570\u3002</p>"},{"location":"note/courses/OOP/Lecture%205/#_7","title":"\u91cd\u8f7d\u53cc\u76ee\u8fd0\u7b97\u7b26","text":"<p>\u5728String\u7c7b\u4e2d\u58f0\u660e\u4e00\u4e2a\u53cb\u5143\u51fd\u6570\uff1a  <pre><code>friend bool operator &gt;(String &amp;string1, String &amp;string2);\n</code></pre>  \u5728\u7c7b\u5916\u5b9a\u4e49\u201c&gt;\u201d\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d\u51fd\u6570\uff1a  ```cpp  bool operator &gt;(String &amp;string1, String &amp;string2) { if(strcmp(string1.p, string2.p)&gt;0)      return true;  else return false; } <pre><code>### \u5355\u76ee\u8fd0\u7b97\u7b26\n\n```cpp\n#include&lt;iostream&gt;\n\nusing namespace std;\n\nclass Time{\npublic:\n    Time() {minute = 0; second = 0;}\n    Time(int m, int s):minute(m),second(s){}\n    Time operator ++();//\u524d\u7f6e\u8fd0\u7b97\u7b26\n    Time operator ++(int);//\u540e\u7f6e\u8fd0\u7b97\u7b26\n    void show();\n\nprivate:\n    int minute;\n    int second;\n};\n\nTime Time::operator++(){\n    if(++second &gt;= 60){\n        second -= 60;\n        ++minute;\n    }\n    return *this;\n}\n\nTime Time::operator++(int){\n    Time time(this-&gt;minute,this-&gt;second);\n    second++;\n    if(second &gt;=60)\n    {\n        second -= 60;\n        minute++;\n    }\n    return time;\n}\n</code></pre></p> <p>\u91cd\u8f7d\u540e\u7f6e\u81ea\u589e\u8fd0\u7b97\u7b26\u65f6\uff0c\u591a\u4e86\u4e00\u4e2aint\u578b\u7684\u53c2\u6570\uff0c\u589e\u52a0\u8fd9\u4e2a\u53c2\u6570\u53ea\u662f\u4e3a\u4e86\u4e0e\u524d\u7f6e\u81ea\u589e\u8fd0\u7b97\u7b26\u91cd\u8f7d\u51fd\u6570\u6709\u6240\u533a\u522b\uff0c\u6b64\u5916\u6ca1\u6709\u4efb\u4f55\u4f5c\u7528\uff0c\u5728\u5b9a\u4e49\u51fd\u6570\u65f6\u4e5f\u4e0d\u5fc5\u4f7f\u7528\u6b64\u53c2\u6570\uff0c\u56e0\u6b64\u53ef\u7701\u5199\u53c2\u6570\u540d\uff0c\u53ea\u9700\u8981\u5728\u62ec\u53f7\u4e2d\u5199\u53c2\u6570\u7c7b\u578bint\u5373\u53ef\u3002\u7f16\u8bd1\u7cfb\u7edf\u5728\u9047\u5230\u91cd\u8f7d\u540e\u7f6e\u81ea\u589e\u8fd0\u7b97\u7b26\u65f6\uff0c\u4f1a\u81ea\u52a8\u8c03\u7528\u6b64\u51fd\u6570\u3002</p>"},{"location":"note/courses/OOP/Lecture%205/#_8","title":"\u91cd\u8f7d\u6d41\u63d2\u5165\u8fd0\u7b97\u7b26\u548c\u6d41\u63d0\u53d6\u8fd0\u7b97\u7b26","text":"<p>\u7528\u6237\u81ea\u5df1\u5b9a\u4e49\u7684\u7c7b\u578b\u7684\u6570\u636e\uff0c\u662f\u4e0d\u80fd\u76f4\u63a5\u7528\u201c&lt;&lt;\u201d\u548c\u201c&gt;&gt;\u201d\u6765\u8f93\u51fa\u548c\u8f93\u5165\u7684\u3002\u5982\u679c\u60f3\u7528\u5b83\u4eec\u8f93\u51fa\u548c\u8f93\u5165\u81ea\u5df1\u5b9a\u4e49\u7684\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5fc5\u987b\u5728\u81ea\u5df1\u5b9a\u4e49\u7684\u7c7b\u4e2d\u5bf9\u8fd9\u4e24\u4e2a\u8fd0\u7b97\u7b26\u8fdb\u884c\u91cd\u8f7d\u3002</p> <p>\u5f62\u5f0f\u5982\u4e0b\uff1a <pre><code>ostream &amp;operator &lt;&lt;(ostream &amp;os, const ClassName &amp;obj) {\n    // \u8f93\u51fa\u5bf9\u8c61\u7684\u6210\u5458\n    return os;\n}\nistream &amp;operator &gt;&gt;(istream &amp;is, ClassName &amp;obj) {\n    // \u8f93\u5165\u5bf9\u8c61\u7684\u6210\u5458\n    return is;\n}\n</code></pre></p>"},{"location":"note/courses/OOP/Lecture%205/#_9","title":"\u4e0b\u6807\u8fd0\u7b97\u7b26\u7684\u91cd\u8f7d","text":"<p>\u5728c++\u4e2d\uff0c\u5728\u91cd\u8f7d\u4e0b\u8868\u8fd0\u7b97\u7b26\u65f6\uff0c\u8ba4\u4e3a\u5b83\u662f\u4e00\u4e2a\u53cc\u76ee\u8fd0\u7b97\u7b26</p> <p>\u5bf9\u4e8e\u4e0b\u6807\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9a\u4e49\u53ea\u80fd\u4f7f\u7528\u6210\u5458\u51fd\u6570 <pre><code>\u8fd4\u56de\u7c7b\u578b \u7c7b\u540d::operator [](\u53c2\u6570\u5217\u8868) {\n    // \u51fd\u6570\u4f53\n}\n</code></pre></p>"},{"location":"note/courses/OOP/Lecture%205/#_10","title":"\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26()\u7684\u91cd\u8f7d","text":"<p>\u4e5f\u8ba4\u4e3a\u662f\u4e00\u4e2a\u53cc\u76ee\u8fd0\u7b97\u7b26</p> <p>\u5bf9\u4e8e\u51fd\u6570\u8c03\u7528\u8fd0\u7b97\u7b26\u91cd\u8f7d\u5b9a\u4e49\u53ea\u80fd\u4f7f\u7528\u6210\u5458\u51fd\u6570</p> <pre><code>\u8fd4\u56de\u7c7b\u578b \u7c7b\u540d::operator ()(\u53c2\u6570\u5217\u8868) {\n    // \u51fd\u6570\u4f53\n}\n</code></pre>"},{"location":"note/courses/OOP/Lecture%205/#_11","title":"\u4e0d\u540c\u7c7b\u578b\u6570\u636e\u95f4\u7684\u8f6c\u6362","text":"<ul> <li>\u6807\u51c6\u7c7b\u578b\u6570\u636e\u95f4\u7684\u8f6c\u6362<ul> <li>\u9690\u5f0f\u8f6c\u6362\uff1a\u7f16\u8bd1\u5668\u81ea\u52a8\u5b8c\u6210\u7684\u7c7b\u578b\u8f6c\u6362</li> <li>\u663e\u5f0f\u8f6c\u6362\uff1a\u7a0b\u5e8f\u5458\u624b\u52a8\u5b8c\u6210\u7684\u7c7b\u578b\u8f6c\u6362<code>\u7c7b\u578b\u540d(\u8868\u8fbe\u5f0f)</code></li> </ul> </li> <li>\u4f7f\u7528\u8f6c\u6362\u6784\u9020\u51fd\u6570\u5b9e\u73b0\u7c7b\u578b\u8f6c\u5316<ul> <li><code>Complex(double r){real = r; imag = 0;}</code></li> </ul> </li> <li>\u4f7f\u7528\u8f6c\u6362\u8fd0\u7b97\u7b26\u5b9e\u73b0\u7c7b\u578b\u8f6c\u5316<ul> <li><code>operator Complex() { return Complex(real, imag); }</code></li> </ul> </li> </ul> <p>\u8f6c\u6362\u8fd0\u7b97\u7b26\u51fd\u6570\u7528\u4e8e\u5c06\u4e00\u4e2a\u7c7b\u5bf9\u8c61\u8f6c\u6362\u6210\u5185\u7f6e\u6570\u636e\u7c7b\u578b\u6216\u5176\u4ed6\u7c7b\u5bf9\u8c61\u3002\u8f6c\u6362\u8fd0\u7b97\u7b26\u51fd\u6570\u4e0e\u5b83\u8981\u8f6c\u6362\u6210\u7684\u6570\u636e\u7c7b\u578b\u5177\u6709\u76f8\u540c\u7684\u540d\u5b57\u3002</p> <p>\u4e0e\u5176\u4ed6\u91cd\u8f7d\u8fd0\u7b97\u7b26\u7684\u4e0d\u540c\uff1a</p> <ul> <li>\u8f6c\u6362\u8fd0\u7b97\u7b26\u51fd\u6570\u6ca1\u6709\u8fd4\u56de\u503c\u7c7b\u578b</li> <li>\u8f6c\u6362\u8fd0\u7b97\u7b26\u51fd\u6570\u6ca1\u6709\u53c2\u6570\u5217\u8868</li> </ul>"},{"location":"note/courses/OOP/Lecture%205/#_12","title":"\u865a\u51fd\u6570","text":"<p>\u9759\u6001\u8054\u7f16</p> <p><pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass Shape  //\u5f62\u72b6\u7c7b\n{\npublic:\n    Shape(){}\n    ~Shape(){}\n    float getArea()const {return 0;}\n};\nclass Circle:public Shape\n{\npublic:\n    Circle(float Radius):radius(Radius){}\n    Circle(){}\n    float getArea()const{return 3.14*radius*radius;}\n    float getRadius() const {return radius;}\n    void setRadius(float Radius) { radius = Radius; }\nprivate:\n    float radius;\n};\nclass Rectangle:public Shape\n{\npublic:\n    Rectangle(float Length,float Width):length(Length),width(Width){ };\n    ~Rectangle(){}\n    float getArea()const {return length*width;}\n    float getLength()const { return length; }\n    float getWidth()const { return width; }\n    void setLength(float Length) { length = Length; }\n    void setWidth(float Width) { width = Width; }\nprivate:\n    float length;\n    float width;\n};\nclass Square: public Rectangle //\u6b63\u65b9\u5f62\u7c7b   { \npublic:\n    Square(float Side): Rectangle(Side,Side) {}\n    ~Square() {}\n    void setLength(float Length) { Rectangle::setLength(Length);Rectangle::setWidth(Length); }\n    void setWidth(float Width) { Rectangle::setLength(Width);Rectangle::setWidth(Width); }\n    void setSide(float Side) //\u8bbe\u7f6e\u8fb9\u957f\u3002\n    {  \n    setLength(Side);  setWidth(Side);  \n    }\n    float getSide() const //\u83b7\u53d6\u8fb9\u957f\u3002\n    { return getWidth();}\n    float getArea()const {return Rectangle::getArea();}\n};\nint main()     {\nShape *sp;\nCircle c1(5);\ncout&lt;&lt;\"\u5706\u7684\u9762\u79ef\u662f\"&lt;&lt;c1.getArea()&lt;&lt;endl;\nsp=&amp;c1;\ncout &lt;&lt;\"\u901a\u8fc7Shape\u6307\u9488\u8bbf\u95ee\uff0c\u5706\u7684\u9762\u79ef\u662f\" &lt;&lt;                    sp-&gt;getArea()&lt;&lt;endl;\nRectangle r1(4,6);\ncout&lt;&lt;\"\u957f\u65b9\u5f62\u7684\u9762\u79ef\u662f\"&lt;&lt;r1.getArea()&lt;&lt;endl;\nsp=&amp;r1;\ncout&lt;&lt;\"\u901a\u8fc7Shape\u6307\u9488\u8bbf\u95ee\uff0c\u957f\u65b9\u5f62\u7684\u9762\u79ef\u662f\"&lt;&lt;             sp-&gt;getArea()&lt;&lt;endl;\nSquare s1(5);\ncout&lt;&lt;\"\u6b63\u65b9\u5f62\u7684\u9762\u79ef\u662f\"&lt;&lt;s1.getArea()&lt;&lt;endl;\nsp=&amp;s1;\ncout&lt;&lt;\"\u901a\u8fc7Shape\u6307\u9488\u8bbf\u95ee\uff0c\u6b63\u65b9\u5f62\u7684\u9762\u79ef\u662f\"&lt;&lt;sp-&gt;getArea()&lt;&lt;endl;\nreturn 0;     }\n</code></pre> \u8fd0\u884c\u7ed3\u679c\uff1a \u5706\u7684\u9762\u79ef\u662f78.5 \u901a\u8fc7Shape\u6307\u9488\u8bbf\u95ee\uff0c\u5706\u7684\u9762\u79ef\u662f0 \u957f\u65b9\u5f62\u7684\u9762\u79ef\u662f24 \u901a\u8fc7Shape\u6307\u9488\u8bbf\u95ee\uff0c\u957f\u65b9\u5f62\u7684\u9762\u79ef\u662f0 \u6b63\u65b9\u5f62\u7684\u9762\u79ef\u662f25 \u901a\u8fc7Shape\u6307\u9488\u8bbf\u95ee\uff0c\u6b63\u65b9\u5f62\u7684\u9762\u79ef\u662f0 Press any key to continue</p> <p>\u5e94\u8be5\u5982\u679c\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u8bbf\u95ee\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u5e94\u8be5\u662f\u8c03\u7528\u6d3e\u751f\u7c7b\u7684\u6210\u5458\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u57fa\u7c7b\u7684\u6210\u5458\u51fd\u6570?</p> <p>\u901a\u8fc7\u5728\u57fa\u7c7b\u4e2d\u5c06\u540c\u540d\u7684\u6210\u5458\u51fd\u6570\u8bbe\u4e3a\u865a\u51fd\u6570\uff0c\u5f53\u7528\u57fa\u7c7b\u7684\u6307\u5f15\u6216\u5f15\u7528\u6307\u5411\u6d3e\u751f\u7c7b\u65f6\uff0c\u5b9e\u9645\u8fd0\u884c\u65f6\u8c03\u7528\u7684\u662f\u5b9e\u9645\u6307\u5411\u6216\u5f15\u7528\u7684\u5bf9\u8c61\u7684\u76f8\u5e94\u51fd\u6570\u800c\u4e0d\u662f\u57fa\u7c7b\u7684\u540c\u540d\u51fd\u6570\u3002</p> <p>\u865a\u51fd\u6570\uff1a - \u6982\u5ff5\uff1a\u88ab<code>virtual</code>\u4fee\u9970\u7684\u6210\u5458\u51fd\u6570\u79f0\u4e3a\u865a\u51fd\u6570\u3002\u865a\u51fd\u6570\u662f\u57fa\u7c7b\u4e2d\u58f0\u660e\u7684\u6210\u5458\u51fd\u6570\uff0c\u6d3e\u751f\u7c7b\u53ef\u4ee5\u91cd\u5199\uff08\u8986\u76d6\uff09\u5b83\u3002 - \u683c\u5f0f: <code>virtual \u51fd\u6570\u7c7b\u578b \u51fd\u6570\u540d(\u5f62\u53c2\u5217\u8868);</code> - \u865a\u51fd\u6570\u662f\u91cd\u8f7d\u7684\u53e6\u4e00\u79cd\u8868\u73b0\u5f62\u5f0f\uff08\u52a8\u6001\u91cd\u8f7d\uff09 - \u5b9e\u73b0\u673a\u5236\uff1a\u901a\u8fc7\u51fd\u6570\u6307\u9488\uff0c\u5728\u8fd0\u884c\u65f6\u5efa\u7acb\u51fd\u6570\u8c03\u7528\u548c\u51fd\u6570\u4f53\u4e4b\u95f4\u7684\u8054\u7cfb\uff0c\u7136\u540e\u6267\u884c\u76f8\u5e94\u7684\u64cd\u4f5c</p> <p></p>"},{"location":"note/courses/OOP/Lecture%205/#_13","title":"\u865a\u51fd\u6570\u7684\u5b9a\u4e49","text":"<p>\u865a\u51fd\u6570\u7684\u5b9a\u4e49\u662f\u5728\u57fa\u7c7b\u4e2d\u8fdb\u884c\u7684\uff0c\u5b83\u662f\u5728\u67d0\u57fa\u7c7b\u4e2d\u58f0\u660e\u4e3avirtual\u5e76\u5728\u4e00\u4e2a\u6216\u8005\u591a\u4e2a\u6d3e\u751f\u7c7b\u4e2d\u88ab\u91cd\u65b0\u5b9a\u4e49\u7684\u6210\u5458\u51fd\u6570</p> <p>\u865a\u51fd\u6570\u662f\u4e00\u4e2a\u6210\u5458\u51fd\u6570\uff0c\u5728\u57fa\u7c7b\u7684\u7c7b\u5b9a\u4e49\u4e2d\u5b9a\u4e49\u865a\u51fd\u6570\u7684\u4e00\u822c\u5f62\u5f0f\uff1a <pre><code>class Base {\npublic:\n    virtual void func(); // \u57fa\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\n};\n</code></pre></p> <p>\u5f53\u57fa\u7c7b\u4e2d\u7684\u67d0\u4e2a\u6210\u5458\u51fd\u6570\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u540e\uff0c\u5b83\u5c31\u53ef\u4ee5\u5728\u57fa\u7c7b\u7684\u6d3e\u751f\u7c7b\u4e2d\u5bf9\u865a\u51fd\u6570\u91cd\u65b0\u5b9a\u4e49\u3002</p> <p>\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u7684\u51fd\u6570\u5e94\u4e0e\u865a\u51fd\u6570\u5177\u6709\u76f8\u540c\u7684\u5f62\u53c2\u4e2a\u6570\u548c\u7c7b\u578b\u3002</p> <p>\u5982\u679c\u5728\u6d3e\u751f\u7c7b\u4e2d\u6ca1\u6709\u5bf9\u865a\u51fd\u6570\u91cd\u65b0\u5b9a\u4e49\uff0c\u5219\u5b83\u7ee7\u627f\u5176\u57fa\u7c7b\u7684\u865a\u51fd\u6570</p> <p>\u5f53\u7a0b\u5e8f\u53d1\u73b0\u865a\u51fd\u6570\u540d\u524d\u7684\u5173\u952e\u5b57virtual\u540e\uff0c\u4f1a\u81ea\u52a8\u5c06\u5176\u4f5c\u4e3a\u52a8\u6001\u8054\u7f16\u5904\u7406\uff0c\u5373\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u52a8\u6001\u5730\u9009\u62e9\u5408\u9002\u7684\u6210\u5458\u51fd\u6570</p> <p>\u6ce8\u610f</p> <ul> <li>\u53ea\u6709\u6210\u5458\u51fd\u6570\u624d\u80fd\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570\uff0c\u666e\u901a\u51fd\u6570\u548c\u53cb\u5143\u51fd\u6570\u90fd\u4e0d\u53ef\u4ee5</li> <li>\u865a\u51fd\u6570\u7684\u58f0\u660e\u53ea\u80fd\u51fa\u73b0\u5728\u7c7b\u58f0\u660e\u4e2d\u7684\u51fd\u6570\u539f\u578b\u58f0\u660e\u6216\u5b9a\u4e49\u4e2d\uff0c\u5728\u7c7b\u5916\u5b9a\u4e49\u65f6\u4e0d\u80fd\u51fa\u73b0<code>virtual</code>\u5173\u952e\u5b57</li> <li>\u901a\u8fc7\u5b9a\u4e49\u865a\u51fd\u6570\u6765\u4f7f\u7528C++\u8bed\u8a00\u63d0\u4f9b\u7684\u591a\u6001\u6027\u673a\u5236\u65f6\uff0c\u6d3e\u751f\u7c7b\u5e94\u8be5\u662f\u4ece\u57fa\u7c7b\u516c\u6709\u6d3e\u751f\u7684</li> <li>\u7c7b\u7684\u9759\u6001\u6210\u5458\u51fd\u6570\u4e0d\u53ef\u4ee5\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570</li> <li>\u7c7b\u7684\u6784\u9020\u51fd\u6570\u4e0d\u53ef\u4ee5\u662f\u865a\u51fd\u6570</li> <li>\u6790\u6784\u51fd\u6570\u53ef\u4ee5\u4e14\u901a\u5e38\u58f0\u660e\u4e3a\u865a\u51fd\u6570</li> <li>\u5185\u8054\u51fd\u6570\u4e0d\u80fd\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570</li> <li>\u57fa\u7c7b\u7684\u865a\u51fd\u6570\u65e0\u8bba\u88ab\u516c\u6709\u7ee7\u627f\u591a\u5c11\u6b21\uff0c\u5728\u591a\u7ea7\u6d3e\u751f\u7c7b\u4e2d\u4ecd\u7136\u4e3a\u865a\u51fd\u6570</li> </ul>"},{"location":"note/courses/OOP/Lecture%205/#_14","title":"\u865a\u51fd\u6570\u548c\u91cd\u8f7d\u51fd\u6570\u7684\u5173\u7cfb","text":"<p>\u4e00\u822c\u7684\u51fd\u6570\u91cd\u8f7d\u65f6\uff0c\u53ea\u8981\u51fd\u6570\u540d\u76f8\u540c\uff0c\u51fd\u6570\u7684\u53c2\u6570\u4e2a\u6570\u3001\u53c2\u6570\u7c7b\u578b\u6216\u987a\u5e8f\u5fc5\u987b\u4e0d\u540c\uff0c\u51fd\u6570\u7684\u8fd4\u56de\u7c7b\u578b\u4e5f\u53ef\u4ee5\u4e0d\u540c\u3002\u4f46\u662f\uff0c\u5f53\u91cd\u8f7d\u4e00\u4e2a\u865a\u51fd\u6570\u65f6\uff0c\u4e5f\u5c31\u662f\u8bf4\u5728\u6d3e\u751f\u7c7b\u4e2d\u91cd\u65b0\u5b9a\u4e49\u6b64\u865a\u51fd\u6570\u65f6\uff0c\u8981\u6c42\u51fd\u6570\u540d\u3001\u8fd4\u56de\u7c7b\u578b\u3001\u53c2\u6570\u4e2a\u6570\u3001\u53c2\u6570\u7c7b\u578b\u4ee5\u53ca\u53c2\u6570\u7684\u987a\u5e8f\u90fd\u5fc5\u987b\u4e0e\u57fa\u7c7b\u4e2d\u7684\u865a\u51fd\u6570\u539f\u578b\u5b8c\u5168\u76f8\u540c\u3002\u5982\u679c\u4ec5\u4ec5\u662f\u8fd4\u56de\u7c7b\u578b\u4e0d\u540c\uff0c\u5176\u4f59\u5747\u76f8\u540c\uff0c\u7cfb\u7edf\u4f1a\u7ed9\u51fa\u9519\u8bef\u4fe1\u606f\uff1b\u82e5\u4ec5\u4ec5\u662f\u51fd\u6570\u540d\u76f8\u540c\uff0c\u800c\u53c2\u6570\u7684\u4e2a\u6570\u3001\u7c7b\u578b\u6216\u987a\u5e8f\u4e0d\u540c\uff0c\u5219\u7cfb\u7edf\u5c06\u5b83\u4f5c\u4e3a\u666e\u901a\u7684\u51fd\u6570\u91cd\u8f7d\uff0c\u8fd9\u65f6\u5c06\u4e22\u5931\u865a\u51fd\u6570\u7684\u7279\u6027\u3002</p>"},{"location":"note/courses/OOP/Lecture%205/#_15","title":"\u865a\u51fd\u6570\u7684\u4f5c\u7528","text":"<p>\u865a\u51fd\u6570\u7684\u4f5c\u7528\u662f\u5b9e\u73b0\u52a8\u6001\u8054\u7f16\uff0c\u5728\u8fd0\u884c\u65f6\u6839\u636e\u5b9e\u9645\u5bf9\u8c61\u7684\u7c7b\u578b\u6765\u51b3\u5b9a\u8c03\u7528\u54ea\u4e2a\u51fd\u6570\u3002</p> <p>\u5b9e\u73b0\u52a8\u6001\u5173\u8054\u9700\u8981\u6ee1\u8db3\u4e09\u4e2a\u6761\u4ef6:</p> <ul> <li>\u5fc5\u987b\u628a\u8bb8\u54df\u554a\u52a8\u6001\u5173\u8054\u7684\u884c\u4e3a\u5b9a\u4e49\u4e3a\u7c7b\u7684\u516c\u5171\u5c5e\u6027\u7684\u865a\u51fd\u6570</li> <li>\u7c7b\u4e4b\u95f4\u5b58\u5728\u5b50\u7c7b\u578b\u5173\u7cfb</li> <li>\u5fc5\u987b\u5148\u4f7f\u7528\u57fa\u7c7b\u6307\u9488\u6307\u5411\u5b50\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u7136\u540e\u76f4\u63a5\u6216\u8005\u6e10\u6e10\u4f7f\u7528\u57fa\u7c7b\u6307\u9488\u8c03\u7528\u865a\u51fd\u6570</li> </ul> <p>\u5b9e\u73b0\u52a8\u6001\u5173\u8054\uff0c\u53ea\u80fd\u901a\u8fc7\u6307\u5411\u57fa\u7c7b\u7684\u6307\u9488\u6216\u8005\u57fa\u7c7b\u5bf9\u8c61\u7684\u5f15\u7528\u6765\u8c03\u7528\u865a\u51fd\u6570\uff0c\u5176\u683c\u5f0f \u5982\u4e0b <pre><code>Base *p = new Derived(); // \u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\np-&gt;virtualFunction(); // \u8c03\u7528\u865a\u51fd\u6570\n</code></pre> <pre><code>Derived derived;\nBase &amp;ref = derived; // \u57fa\u7c7b\u5f15\u7528\u7ed1\u5b9a\u5230\u6d3e\u751f\u7c7b\u5bf9\u8c61\nref.virtualFunction(); // \u8c03\u7528\u865a\u51fd\u6570\n</code></pre></p> <p>\u4e00\u4e2a\u57fa\u7c7b\u6307\u9488\uff0c\u53ef\u4ee5\u8c03\u7528\u540c\u4e00\u7c7b\u65cf\u4e2d\u4e0d\u540c\u7c7b\u7684\u865a\u51fd\u6570\uff0c\u8fd9\u5c31\u662f\u591a\u6001\u6027\uff0c\u5bf9\u540c\u4e00\u6d88\u606f\uff0c\u4e0d\u540c\u5bf9\u8c61\u6709\u4e0d\u540c\u7684\u54cd\u5e94\u65b9\u5f0f\u3002</p> <p>\u57fa\u7c7b\u7684\u6307\u9488\u662f\u7528\u6765\u6307\u5411\u57fa\u7c7b\u5bf9\u8c61\u7684\uff0c\u5982\u679c\u7528\u5b83\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5219\u8fdb\u884c\u6307\u9488\u7c7b\u578b\u8f6c\u6362\uff0c\u5c06\u6d3e\u751f\u7c7b\u5bf9\u8c61\u7684\u6307\u9488\u5148\u8f6c\u6362\u4e3a\u57fa\u7c7b\u7684\u6307\u9488\uff0c\u6240\u4ee5\u57fa\u7c7b\u7684\u6307\u9488\u6307\u5411\u7684\u662f\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e2d\u7684\u57fa\u7c7b\u90e8\u5206\u3002</p> <p>\u5982\u679c\u4e0d\u8bbe\u7f6e\u865a\u51fd\u6570\uff0c\u662f\u65e0\u6cd5\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u53bb\u8c03\u7528\u6d3e\u751f\u7c7b\u5bf9\u8c61\u4e2d\u7684\u6210\u5458\u51fd\u6570\u3002</p> <p>\u865a\u51fd\u6570\u7a81\u7834\u4e86\u8fd9\u4e00\u9650\u5236\uff0c\u5728\u6d3e\u751f\u7c7b\u7684\u57fa\u7c7b\u90e8\u5206\uff0c\u6d3e\u751f\u7c7b\u7684\u51fd\u6570\u53d6\u4ee3\u4e86\u57fa\u7c7b\u539f\u6765\u7684\u51fd\u6570\uff0c\u56e0\u6b64\u5728\u4f7f\u7528\u57fa\u7c7b\u6307\u9488\u6307\u5411\u6d3e\u751f\u7c7b\u5bf9\u8c61\u540e\uff0c\u8c03\u7528\u57fa\u7c7b\u51fd\u6570\u65f6\u5c31\u8c03\u7528\u4e86\u6d3e\u751f\u7c7b\u7684\u540c\u540d\u51fd\u6570\u3002</p> <p>\u5f53\u628a\u57fa\u7c7b\u7684\u67d0\u4e2a\u6210\u5458\u51fd\u6570\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u540e\uff0c\u5141\u8bb8\u5728\u5176\u6d3e\u751f\u7c7b\u4e2d\u5bf9\u8be5\u51fd\u6570\u7684\u5b9a\u4e49\u8fdb\u884c\u8986\u76d6\uff0c\u8d4b\u4e88\u5b83\u65b0\u7684\u529f\u80fd\uff0c\u5e76\u4e14\u5728\u901a\u8fc7\u6307\u5411\u57fa\u7c7b\u7684\u6307\u9488\u6307\u5411\u540c\u4e00\u7c7b\u65cf\u4e2d\u4e0d\u540c\u7c7b\u7684\u5bf9\u8c61\u65f6\u8c03\u7528\u6240\u6307\u5411\u7c7b\u7684\u540c\u540d\u51fd\u6570\u3002</p> <p>\u7eaf\u865a\u51fd\u6570\uff1a - \u5728\u5b9a\u4e49\u865a\u51fd\u6570\u65f6\uff0c\u5e76\u4e0d\u5b9a\u4e49\u5176\u51fd\u6570\u4f53 - \u5305\u542b\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u79f0\u4e3a\u62bd\u8c61\u7c7b</p> <p>\u4f7f\u7528\u865a\u51fd\u6570\u7684\u6ce8\u610f\u70b9</p> <ul> <li>\u53ea\u80fd\u7528<code>virtual</code>\u5173\u952e\u5b57\u58f0\u660e\u865a\u51fd\u6570\uff0c\u4e0d\u80fd\u5728\u7c7b\u5916\u5b9a\u4e49\u65f6\u4f7f\u7528</li> <li>\u4e00\u4e2a\u6210\u5458\u51fd\u6570\u88ab\u58f0\u660e\u4e3a\u865a\u51fd\u6570\u540e\uff0c\u5728\u540c\u4e00\u7c7b\u65cf\u4e2d\u7684\u7c7b\u5c31\u4e0d\u80fd\u5728\u5b9a\u4e49\u4e00\u4e2a\u975e<code>virtual</code>\u7684\u4f46\u4e0e\u8be5\u865a\u51fd\u6570\u5177\u6709\u76f8\u540c\u7684\u53c2\u6570\u548c\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b\u7684\u540c\u540d\u51fd\u6570</li> </ul>"},{"location":"note/courses/OOP/Lecture%205/#_16","title":"\u5bf9\u8c61\u7684\u5b58\u50a8","text":"<p>\u5f53\u5b9a\u4e49\u4e00\u4e2a\u5bf9\u8c61\u65f6\uff0c\u5b83\u7684\u6570\u636e\u6210\u5458\u6309\u987a\u5e8f\u5b58\u50a8\u5728\u5185\u5b58\u4e2d\u3002\u5f53\u6709\u6d3e\u751f\u7c7b\u5bf9\u8c61\u65f6\uff0c\u65b0\u589e\u7684\u6570\u636e\u6210\u5458\u52a0\u5728\u57fa\u7c7b\u7684\u6570\u636e\u6210\u5458\u4e4b\u540e\u3002</p> <p>\u4e3a\u4e86\u7ba1\u7406\u865a\u51fd\u6570\u7684\u8c03\u7528\uff0c\u9700\u8981\u5728\u5bf9\u8c61\u4e2d\u589e\u52a0\u4e00\u4e2a\u6570\u636e\u9879\uff0c\u7528\u6765\u8bf4\u660e\u5728\u8c03\u7528\u865a\u51fd\u6570\u65f6\u5177\u4f53\u8c03\u7528\u7684\u662f\u54ea\u4e2a\u51fd\u6570\u3002\u901a\u5e38\u8fd9\u4e00\u6570\u636e\u9879\u662fvtbl\uff08virtual table\uff0c\u865a\u51fd\u6570\u8868\uff09\u7684\u5730\u5740\uff0c\u79f0\u4e3avptr\uff08virtual pointer\uff0c\u865a\u51fd\u6570\u6307\u9488\uff09\u3002</p> <p></p> <p>\u865a\u51fd\u6570\u7684\u4f7f\u7528\u53ea\u662f\u589e\u52a0\u4e86\u4e24\u6b21\u8bbf\u5b58\uff0c\u5e76\u4e0d\u4f1a\u8fc7\u591a\u5f71\u54cd\u7a0b\u5e8f\u7684\u6267\u884c\u901f\u5ea6\uff1b\u5728\u5b58\u50a8\u4e0a\u6bcf\u4e2a\u7c7b\u591a\u4e86\u4e00\u4e2avtbl\u8868\uff0c\u5e76\u6ca1\u6709\u8fc7\u591a\u589e\u52a0\u5185\u5b58\u3002</p>"},{"location":"note/courses/OOP/Lecture%205/#_17","title":"\u865a\u6790\u6784\u51fd\u6570","text":"<p>\u5982\u679c\u7528new\u8fd0\u7b97\u7b26\u5efa\u7acb\u4e86\u6d3e\u751f\u7c7b\u7684\u4e34\u65f6\u5bf9\u8c61\uff0c\u5bf9\u6307\u5411\u57fa\u7c7b\u7684\u6307\u9488\u6307\u5411\u8fd9\u4e2a\u4e34\u65f6\u5bf9\u8c61\uff0c\u5f53\u7528delete\u8fd0\u7b97\u7b26\u64a4\u9500\u5bf9\u8c61\u65f6\uff0c\u7cfb\u7edf\u6267\u884c\u7684\u662f\u57fa\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u800c\u4e0d\u662f\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\uff0c\u4e0d\u80fd\u5f7b\u5e95\u5b8c\u6210\u201c\u6e05\u7406\u73b0\u573a\u201d\u7684\u5de5\u4f5c</p> <p>\u5c06\u57fa\u7c7b\u53ca\u6d3e\u751f\u7c7b\u7684\u6790\u6784\u51fd\u6570\u8bbe\u4e3a\u865a\u51fd\u6570\uff0c\u8fd9\u65f6\u65e0\u8bba\u57fa\u7c7b\u6307\u9488\u6307\u7684\u662f\u540c\u4e00\u7c7b\u65cf\u4e2d\u7684\u54ea\u4e00\u4e2a\u7c7b\u5bf9\u8c61\uff0c\u7cfb\u7edf\u4f1a\u91c7\u7528\u52a8\u6001\u5173\u8054\uff0c\u8c03\u7528\u76f8\u5e94\u7684\u6790\u6784\u51fd\u6570\uff0c\u5bf9\u8be5\u5bf9\u8c61\u8fdb\u884c\u6e05\u7406\u5de5\u4f5c</p> <pre><code>virtual ~\u7c7b\u540d();\n</code></pre> <p>\u6709\u53ef\u80fd\u901a\u8fc7\u57fa\u7c7b\u6307\u9488\u5220\u9664\u6d3e\u751f\u7c7b\u65f6\uff0c\u8981\u4f7f\u7528\u865a\u6790\u6784\u51fd\u6570</p> <p>\u5728\u5bf9\u6307\u5411\u52a8\u6001\u5206\u914d\u5bf9\u8c61(\u7531new\u64cd\u4f5c\u4ea7\u751f)\u7684\u6307\u9488\u8fdb\u884cdelete\u64cd\u4f5c\u65f6\uff0c\u9690\u542b\u7740\u5bf9\u6790\u6784\u51fd\u6570\u7684\u8c03\u7528\uff0c\u800c\u8be5\u6307\u9488\u7684\u58f0\u660e\u7c7b\u578b\u53ef\u80fd\u662f\u5bf9\u8c61\u7c7b\u578b\u7684\u57fa\u7c7b</p>"},{"location":"note/courses/OOP/Lecture%205/#_18","title":"\u7eaf\u865a\u51fd\u6570\u548c\u62bd\u8c61\u7c7b","text":"<p>\u7eaf\u865a\u51fd\u6570\u7684\u4e00\u822c\u5f62\u5f0f\uff1a <pre><code>virtual \u8fd4\u56de\u503c\u7c7b\u578b \u51fd\u6570\u540d(\u5f62\u53c2\u5217\u8868) = 0;\n</code></pre> \u5c06\u4e00\u4e2a\u865a\u51fd\u6570\u58f0\u660e\u4e3a\u7eaf\u865a\u51fd\u6570\uff0c\u9700\u8981\u5728\u865a\u51fd\u6570\u539f\u578b\u7684\u8bed\u53e5\u7ed3\u675f\u7b26\u201c\uff1b\u201d\u4e4b\u524d\u52a0\u4e0a=0\uff0c\u6ca1\u6709\u4ee3\u7801\u3002</p> <p>\u5305\u542b\u7eaf\u865a\u51fd\u6570\u7684\u7c7b\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\uff0c\u4e0d\u80fd\u5b9a\u4e49\u62bd\u8c61\u7c7b\u7684\u5bf9\u8c61</p> <p>\u5982\u679c\u4e00\u4e2a\u7c7b\u4e2d\u81f3\u5c11\u6709\u4e00\u4e2a\u7eaf\u865a\u51fd\u6570\uff0c\u8fd9\u4e2a\u7c7b\u5c31\u662f\u4e3a\u62bd\u8c61\u7c7b\uff0c\u901a\u5e38\u4e5f\u79f0\u4e3a\u62bd\u8c61\u57fa\u7c7b\u3002\u5b83\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u4e3a\u4e00\u4e2a\u7c7b\u65cf\u63d0\u4f9b\u7edf\u4e00\u7684\u516c\u5171\u63a5\u53e3\uff0c\u4f7f\u5b83\u4eec\u66f4\u6709\u6548\u5730\u53d1\u6325\u591a\u6001\u6027\u7684\u7279\u6027</p> <p>\u62bd\u8c61\u7c7b\u7684\u7279\u70b9</p> <ul> <li>\u62bd\u8c61\u7c7b\u4e0d\u80fd\u5b9a\u4e49\u5bf9\u8c61</li> <li>\u62bd\u8c61\u7c7b\u4e0d\u80fd\u7528\u4f5c\u53c2\u6570\u7c7b\u578b\uff0c\u51fd\u6570\u8fd4\u56de\u503c\u6216\u8005\u663e\u5f0f\u8f6c\u6362\u7684\u7c7b\u578b</li> <li>\u4e0d\u80fd\u5b9a\u4e49\u5bf9\u8c61\uff0c\u4f46\u662f\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u62bd\u8c61\u7c7b\u7684\u6307\u9488\u6216\u5f15\u7528</li> <li>\u62bd\u8c61\u7c7b\u6d3e\u751f\u51fa\u65b0\u7684\u7c7b\u4e4b\u540e\uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u7ed9\u51fa\u6240\u6709\u7eaf\u865a\u51fd\u6570\u7684\u51fd\u6570\u5b9e\u73b0\uff0c\u8fd9\u4e2a\u6d3e\u751f\u7c7b\u5c31\u53ef\u4ee5\u58f0\u660e\u81ea\u5df1\u7684\u5bf9\u8c61\uff0c\u56e0\u800c\u4e0d\u518d\u662f\u62bd\u8c61\u7c7b\uff1b\u53cd\u4e4b\uff0c\u5982\u679c\u6d3e\u751f\u7c7b\u6ca1\u6709\u7ed9\u51fa\u5168\u90e8\u7eaf\u865a\u51fd\u6570\u7684\u5b9e\u73b0\uff0c\u8fd9\u65f6\u7684\u6d3e\u751f\u7c7b\u4ecd\u7136\u662f\u4e00\u4e2a\u62bd\u8c61\u7c7b\u3002</li> </ul>"},{"location":"note/courses/OOP/Lecture%205/#_19","title":"\u77e5\u8bc6\u6269\u5c55","text":"<p>\u8fd0\u884c\u65f6\u7c7b\u578b\u8bc6\u522b</p> <p>\u8fd0\u884c\u65f6\u7c7b\u578b\u8bc6\u522b\uff08RTTI\uff09\u662fC++\u7684\u4e00\u79cd\u673a\u5236\uff0c\u7528\u4e8e\u5728\u7a0b\u5e8f\u8fd0\u884c\u65f6\u786e\u5b9a\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u3002\u5b83\u5141\u8bb8\u7a0b\u5e8f\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u5bf9\u8c61\u7684\u7c7b\u578b\uff0c\u5e76\u8fdb\u884c\u76f8\u5e94\u7684\u5904\u7406\u3002 RTTI\u4e3b\u8981\u901a\u8fc7\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\u5b9e\u73b0\uff1a - <code>typeid</code>\u8fd0\u7b97\u7b26\uff1a\u7528\u4e8e\u83b7\u53d6\u5bf9\u8c61\u7684\u7c7b\u578b\u4fe1\u606f\u3002 - <code>dynamic_cast</code>\u8fd0\u7b97\u7b26\uff1a\u7528\u4e8e\u5728\u7c7b\u5c42\u6b21\u7ed3\u6784\u4e2d\u5b89\u5168\u5730\u8f6c\u6362\u6307\u9488\u6216\u5f15\u7528\u3002</p> <p><code>dynamic_cats</code>\u5b89\u5168\u5411\u4e0b\u8f6c\u578b\uff0c\u5c06\u57fa\u7c7b\u6307\u9488/\u5f15\u7528\u8f6c\u6362\u4e3a\u6d3e\u751f\u7c7b\u6307\u9488/\u5f15\u7528\uff0c\u5982\u679c\u8f6c\u6362\u5931\u8d25\uff0c\u5219\u8fd4\u56de<code>nullptr</code>\u3002</p> <p>\u8bed\u6cd5\uff1a <code>dynamic_cast&lt;\u76ee\u6807\u7c7b\u578b&gt;(\u8868\u8fbe\u5f0f)</code></p> <ul> <li><code>dynamic_cast</code>\u548c<code>static_cast</code>\u7684\u533a\u522b\uff1a</li> <li><code>dynamic_cast</code>\uff1a\u5728\u8fd0\u884c\u65f6\u68c0\u67e5\u7c7b\u578b\u5b89\u5168\uff0c\u9002\u7528\u4e8e\u591a\u6001\u7c7b\u578b\u8f6c\u6362\u3002</li> <li><code>static_cast</code>\uff1a\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7c7b\u578b\u8f6c\u6362\uff0c\u4e0d\u8fdb\u884c\u8fd0\u884c\u65f6\u68c0\u67e5\uff0c\u53ef\u80fd\u5bfc\u81f4\u672a\u5b9a\u4e49\u884c\u4e3a\u3002</li> </ul> <p>\u8f6c\u6362\u662f\u6709\u6761\u4ef6\u7684\uff1a - \u5982\u679c\u6307\u9488\uff08\u6216\u5f15\u7528\uff09\u6240\u6307\u5bf9\u8c61\u7684\u5b9e\u9645\u7c7b\u578b\u4e0e\u8f6c\u6362\u7684\u76ee\u7684\u7c7b\u578b\u517c\u5bb9\uff0c\u5219\u8f6c\u6362\u6210\u529f\u8fdb\u884c - \u5426\u5219\u5982\u6267\u884c\u7684\u662f\u6307\u9488\u7c7b\u578b\u7684\u8f6c\u6362\uff0c\u5219\u5f97\u5230\u7a7a\u6307\u9488\uff1b\u5982\u6267\u884c\u7684\u662f\u5f15\u7528\u7c7b\u578b\u7684\u8f6c\u6362\uff0c\u5219\u629b\u51fa\u5f02\u5e38\u3002</p> <p>\u4f7f\u7528<code>typeid</code>\u83b7\u53d6\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f</p> <ul> <li>\u8bed\u6cd5\uff1a <code>typeid(\u8868\u8fbe\u5f0f).name()</code>/<code>typeid(\u7c7b\u578b\u8bf4\u660e\u7b26)</code></li> </ul> <p>\u8fd4\u56de\u4e00\u4e2a\u5bf9\u5e94\u4e8e\u8be5\u7c7b\u578b\u7684type_info\u7c7b\u578b\u7684\u5e38\u5f15\u7528\uff0c\u4ee5\u63cf\u8ff0\u5bf9\u8c61\u7684\u786e\u5207\u7c7b\u578b</p> <p>\u8868\u8fbe\u5f0f\u6709\u591a\u6001\u7c7b\u578b\u65f6\uff0c\u4f1a\u88ab\u6c42\u503c\uff0c\u5e76\u5f97\u5230\u52a8\u6001\u7c7b\u578b\u4fe1\u606f\uff1b \u5426\u5219\uff0c\u8868\u8fbe\u5f0f\u4e0d\u88ab\u6c42\u503c\uff0c\u53ea\u80fd\u5f97\u5230\u9759\u6001\u7684\u7c7b\u578b\u4fe1\u606f\u3002</p> <p>\u7c7b\u578b\u4fe1\u606f\u7531<code>type_info</code>\u5bf9\u8c61\u8868\u793a\uff0c\u4e3a\u6240\u6709\u7684\u5185\u7f6e\u7c7b\u578b\u548c\u591a\u6001\u7c7b\u578b\u7684\u5bf9\u8c61\u4fdd\u5b58\u8fd0\u884c\u65f6\u7c7b\u578b\u4fe1\u606f\uff0c\u5176\u5b9a\u4e49\u5728\u5934\u6587\u4ef6 &lt; typeinfo &gt;\u4e2d</p> <p><code>type_info</code>\u63d0\u4f9b\u4ee5\u4e0b\u64cd\u4f5c\uff1a</p> <ul> <li><code>t1==t2</code>\uff1a\u5224\u65ad\u4e24\u4e2a\u7c7b\u578b\u662f\u5426\u76f8\u540c\u3002</li> <li><code>t1!=t2</code>\uff1a\u5224\u65ad\u4e24\u4e2a\u7c7b\u578b\u662f\u5426\u4e0d\u540c\u3002</li> <li><code>t1.before(t2)</code>\uff1a\u5224\u65ad<code>t1</code>\u662f\u5426\u5728<code>t2</code>\u4e4b\u524d\u3002</li> <li><code>t.name()</code>\uff1a\u8fd4\u56de\u7c7b\u578b\u7684\u540d\u79f0\u3002</li> </ul> <p>\u4f7f\u7528<code>typeid</code>\u8fd0\u7b97\u7b26\uff1a <pre><code>#include &lt;iostream&gt;\n#include &lt;typeinfo&gt;\nusing namespace std;\nclass Base {\npublic:\n    virtual ~Base() {}\n};\nclass Derived : public Base {\npublic:\n    void display() { cout &lt;&lt; \"Derived class\" &lt;&lt; endl; }\n};\n\nint main() {\n    Base* b = new Derived();\n    cout &lt;&lt; \"Type of b: \" &lt;&lt; typeid(*b).name() &lt;&lt; endl; // \u8f93\u51faDerived\u7c7b\u7684\u7c7b\u578b\u4fe1\u606f\n    delete b;\n    return 0;\n}\n</code></pre> \u4f7f\u7528<code>dynamic_cast</code>\u8fd0\u7b97\u7b26\uff1a <pre><code>#include &lt;iostream&gt;\nusing namespace std;\nclass Base {\npublic:\n    virtual ~Base() {}\n};\nclass Derived : public Base {\npublic:\n    void display() { cout &lt;&lt; \"Derived class\" &lt;&lt; endl; }\n};\nint main() {\n    Base* b = new Derived();\n    Derived* d = dynamic_cast&lt;Derived*&gt;(b); // \u5b89\u5168\u5730\u8f6c\u6362\n    if (d) {\n        d-&gt;display(); // \u8c03\u7528Derived\u7c7b\u7684\u65b9\u6cd5\n    } else {\n        cout &lt;&lt; \"Conversion failed\" &lt;&lt; endl;\n    }\n    delete b;\n    return 0;\n}\n</code></pre></p>"},{"location":"note/courses/OOP/Lecture%206/","title":"\u6a21\u677f","text":""},{"location":"note/courses/OOP/Lecture%206/#_2","title":"\u6a21\u677f\u7684\u6982\u5ff5","text":"<p>\u5728C++\u4e2d\uff0c\u6a21\u677f\u662f\u5b9e\u73b0\u4ee3\u7801\u91cd\u7528\u673a\u5236\u7684\u4e00\u79cd\u5de5\u5177\uff0c\u5b83\u53ef\u4ee5\u5b9e\u73b0\u7c7b\u578b\u53c2\u6570\u5316\uff0c\u5373\u628a\u7c7b\u578b\u5b9a\u4e49\u4e3a\u53c2\u6570</p> <p>\u6a21\u677f\u53ef\u4ee5\u5206\u4e3a\u4e24\u79cd\uff1a\u51fd\u6570\u6a21\u677f\u548c\u7c7b\u6a21\u677f\u3002</p> <p>\u51fd\u6570\u6a21\u677f</p> <pre><code>template &lt;typename T&gt;\nT add(T a, T b) {\n    return a + b;\n}\n</code></pre> <p></p> <p>\u5728\u8fdb\u884c\u76f8\u540c\u65b9\u5f0f\u7684\u5904\u7406\u65f6\uff0c\u53ea\u6709\u5f53\u53c2\u52a0\u8fd0\u884c\u7684\u6570\u636e\u7c7b\u578b\u4e0d\u540c\u65f6\uff0c\u624d\u53ef\u4ee5\u5b9a\u4e49\u6a21\u677f</p>"},{"location":"note/courses/OOP/Lecture%206/#_3","title":"\u51fd\u6570\u6a21\u677f\u4e0e\u6a21\u677f\u51fd\u6570","text":"<p>\u6240\u8c13\u51fd\u6570\u6a21\u677f\uff0c\u5b9e\u9645\u4e0a\u662f\u5efa\u7acb\u4e00\u4e2a\u901a\u7528\u51fd\u6570\uff0c\u5176\u51fd\u6570\u7c7b\u578b\u548c\u5f62\u53c2\u7c7b\u578b\u4e0d\u5177\u4f53\u6307\u5b9a\uff0c\u7528\u4e00\u4e2a\u865a\u62df\u7684\u7c7b\u578b\uff08\u5982\uff1aT\uff09\u6765\u4ee3\u66ff\uff0c\u8fd9\u4e2a\u901a\u7528\u51fd\u6570\u5c31\u79f0\u4e3a\u51fd\u6570\u6a21\u677f\u3002</p> <p>\u5728\u5b9a\u4e49\u4e86\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\u540e\uff0c\u5f53\u7f16\u8bd1\u7cfb\u7edf\u53d1\u73b0\u6709\u4e00\u4e2a\u5bf9\u5e94\u7684\u51fd\u6570\u8c03\u7528\u65f6\uff0c\u5c06\u6839\u636e\u5b9e\u53c2\u4e2d\u7684\u7c7b\u578b\u6765\u786e\u8ba4\u662f\u5426\u5339\u914d\u51fd\u6570\u6a21\u677f\u4e2d\u5bf9\u5e94\u7684\u5f62\u53c2\uff0c\u7136\u540e\u751f\u6210\u4e00\u4e2a\u91cd\u8f7d\u51fd\u6570\uff0c\u8be5\u51fd\u6570\u7684\u5b9a\u4e49\u4e0e\u51fd\u6570\u6a21\u677f\u7684\u51fd\u6570\u5b9a\u4e49\u4f53\u76f8\u540c\uff0c\u79f0\u4e4b\u4e3a\u6a21\u677f\u51fd\u6570\u3002</p> <p>\u5b9a\u4e49\u51fd\u6570\u6a21\u677f\u7684\u4e00\u822c\u5f62\u5f0f\uff1a <pre><code>template &lt;class \u7c7b\u578b\u53c2\u65701\uff0c class \u7c7b\u578b\u53c2\u65702\uff0c...&gt;\n\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b \u51fd\u6570\u540d(\u5f62\u53c2\u5217\u8868) {\n    // \u51fd\u6570\u4f53\n}\n</code></pre> - <code>template</code> \u5173\u952e\u5b57\u8868\u793a\u8fd9\u662f\u4e00\u4e2a\u6a21\u677f - <code>class</code>\u540e\u9762\u8ddf\u7740\u7684\u662f\u7c7b\u578b\u53c2\u6570\u7684\u540d\u79f0\uff0c\u53ef\u4ee5\u662f\u57fa\u672c\u6570\u636e\u7c7b\u578b\uff0c\u4e5f\u53ef\u4ee5\u662f\u7c7b</p> <p>\u51fd\u6570\u6a21\u677f\u6839\u636e\u4f20\u5165\u53c2\u6570\u7684\u7c7b\u578b\u4e0d\u540c\uff0c\u4f1a\u751f\u6210\u4e0d\u540c\u7684\u6a21\u677f\u51fd\u6570</p> <p>Warning</p> <ul> <li>\u5728<code>template</code>\u8bed\u53e5\u548c\u51fd\u6570\u6a21\u677f\u5b9a\u4e49\u8bed\u53e5\u4e4b\u95f4\u4e0d\u5141\u8bb8\u6709\u5176\u4ed6\u7684\u8bed\u53e5</li> <li>\u6a21\u677f\u51fd\u6570\u4e2d\u7684\u52a8\u4f5c\u5fc5\u987b\u76f8\u540c\u3002\u4f8b\u5982\uff0c\u4e0b\u9762\u7684\u51fd\u6570\u53ea\u80fd\u7528\u51fd\u6570\u91cd\u8f7d\uff0c\u800c\u4e0d\u80fd\u7528\u6a21\u677f\u51fd\u6570\u6765\u5b9e\u73b0\uff1a <pre><code>void print(int a) {\n    cout &lt;&lt; a &lt;&lt; endl;\n}\nvoid print(double a) {\n    cout &lt;&lt; a &lt;&lt; \"no\" &lt;&lt; endl;\n}\n</code></pre></li> <li>\u51fd\u6570\u53ef\u4ee5\u5e26\u6709\u6a21\u677f\u53c2\u6570\u8868\u4e2d\u672a\u7ed9\u51fa\u7684\u3001\u5df2\u5b58\u5728\u7684\u6570\u636e\u7c7b\u578b\u7684\u53c2\u6570\u3002\u5e76\u975e\u51fd\u6570\u7684\u6240\u6709\u53c2\u6570\u90fd\u5fc5\u987b\u662f\u6a21\u677f\u53c2\u6570\u7c7b\u578b <pre><code>template &lt;class T&gt;\nT func(T arg1, int arg2) {\n//...\n}\n</code></pre></li> <li>\u867d\u7136\u51fd\u6570\u6a21\u677f\u4e2d\u7684\u6a21\u677f\u5f62\u53c2T\u53ef\u4ee5\u5b9e\u4f8b\u5316\u4e3a\u5404\u79cd\u7c7b\u578b\uff0c\u4f46\u662f\u5b9e\u4f8b\u5316T\u7684\u5404\u4e2a\u6a21\u677f\u5b9e\u53c2\u4e4b\u95f4\u5fc5\u987b\u4fdd\u6301\u5b8c\u5168\u4e00\u81f4\u7684\u7c7b\u578b\u3002\u6a21\u677f\u7c7b\u578b\u5e76\u4e0d\u5177\u6709\u9690\u5f0f\u7684\u7c7b\u578b\u8f6c\u5316\u3002 <pre><code>void func(int i,char c)\n{\n  max(i, i);   //\u6b63\u786e ,\u8c03\u7528max(int,int)\n  max(c, c);  //\u6b63\u786e ,\u8c03\u7528max(char,char)\n  max(i, c);   //\u9519\u8bef ,\u7c7b\u578b\u4e0d\u5339\u914d\n  max(c, i);   //\u9519\u8bef ,\u7c7b\u578b\u4e0d\u5339\u914d\n}\n</code></pre><ul> <li>\u89e3\u51b3\u65b9\u6cd5\uff1a<ul> <li>\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362</li> <li>\u663e\u5f0f\u7ed9\u51fa\u6a21\u677f\u5b9e\u53c2 <pre><code>max&lt;int&gt;(i, c); //\u5f3a\u5236\u7c7b\u578b\u8f6c\u6362,\u4f7f\u7528int\u7c7b\u578b\u6765\u5b9e\u4f8b\u5316\u51fd\u6570\u6a21\u677f\n</code></pre></li> <li>\u5c06\u51fd\u6570\u6a21\u677f\u4e2d\u7684\u7c7b\u578b\u5b9a\u4e49\u4e3a\u591a\u4e2a\u7c7b\u578b\u53c2\u6570</li> <li>\u663e\u5f0f\u5177\u4f53\u5316\u6a21\u677f\u51fd\u6570\uff1a\u58f0\u660e\u4e00\u4e2a\u975e\u6a21\u677f\u51fd\u6570\u7684\u539f\u578b\uff0c\u5b9a\u4e49\u4e00\u4e2a\u5b8c\u6574\u7684\u975e\u6a21\u677f\u51fd\u6570\u91cd\u8f7d\u6a21\u677f\u51fd\u6570</li> </ul> </li> </ul> </li> </ul> <p>\u5728c++\u4e2d\u51fd\u6570\u6a21\u677f\u4e0e\u540c\u540d\u7684\u975e\u6a21\u677f\u51fd\u6570\u91cd\u8f7d\u65f6\uff0c\u8c03\u7528\u987a\u5e8f\uff1a</p> <ul> <li>\u5bfb\u627e\u4e00\u4e2a\u53c2\u6570\u5b8c\u5168\u5339\u914d\u7684\u51fd\u6570\uff0c\u5982\u679c\u627e\u5230\u5c31\u8c03\u7528\u5b83</li> <li>\u5bfb\u627e\u4e00\u4e2a\u51fd\u6570\u6a21\u677f\uff0c\u5c06\u5176\u5b9e\u4f8b\u5316\uff0c\u4ea7\u751f\u4e00\u4e2a\u5339\u914d\u7684\u6a21\u677f\u51fd\u6570\u3002\u82e5\u627e\u5230\u4e86\uff0c\u5c31\u8c03\u7528\u5b83</li> <li>\u5982\u679c\u524d\u4e24\u6b65\u90fd\u5931\u8d25,\u518d\u8bd5\u4e00\u8bd5\u4f4e\u4e00\u7ea7\u7684\u5bf9\u51fd\u6570\u7684\u91cd\u8f7d\u65b9\u6cd5\u3002\u4f8b\u5982\u901a\u8fc7\u7c7b\u578b\u8f6c\u6362\u53ef\u4ea7\u751f\u53c2\u6570\u5339\u914d\u7b49</li> <li>\u5982\u679c\u524d\u9762\u90fd\u5931\u8d25\u4e86\uff0c\u7f16\u8bd1\u5668\u5c31\u4f1a\u62a5\u9519\u3002\u5982\u679c\u5728\u7b2c\u4e00\u6b65\u6709\u591a\u4e8e\u4e00\u4e2a\u7684\u9009\u62e9\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8c03\u7528\u662f\u610f\u4e49\u4e0d\u660e\u786e\u7684\uff0c\u9519\u8bef</li> </ul>"},{"location":"note/courses/OOP/Lecture%206/#_4","title":"\u7c7b\u6a21\u677f\u548c\u6a21\u677f\u7c7b","text":"<p>\u7c7b\u662f\u5bf9\u4e00\u7ec4\u5bf9\u8c61\u7684\u516c\u5171\u6027\u8d28\u7684\u62bd\u8c61\uff0c\u800c\u7c7b\u6a21\u677f\u5219\u662f\u5bf9\u4e00\u7ec4\u7c7b\u7684\u516c\u5171\u6027\u8d28\u7684\u62bd\u8c61\u3002\u7c7b\u6a21\u677f\u662f\u4e00\u7cfb\u5217\u76f8\u5173\u7c7b\u7684\u6a21\u677f\uff0c\u8fd9\u4e9b\u76f8\u5173\u7c7b\u7684\u6210\u5458\u7ec4\u6210\u76f8\u540c\uff0c\u6210\u5458\u51fd\u6570\u7684\u6e90\u4ee3\u7801\u5f62\u5f0f\u4e5f\u76f8\u540c\uff0c\u4e0d\u540c\u7684\u53ea\u662f\u6240\u9488\u5bf9\u7684\u7c7b\u578b\u3002\u7c7b\u6a21\u677f\u4e3a\u7c7b\u58f0\u660e\u4e86\u4e00\u79cd\u6a21\u5f0f\uff0c\u4f7f\u5f97\u7c7b\u4e2d\u7684\u67d0\u4e9b\u6570\u636e\u6210\u5458\u3001\u6210\u5458\u51fd\u6570\u7684\u53c2\u6570\u548c\u6210\u5458\u51fd\u6570\u7684\u8fd4\u56de\u503c\u80fd\u53d6\u4efb\u610f\u7c7b\u578b</p> <p>\u7c7b\u6a21\u677f\u7684\u5b9a\u4e49\u5f62\u5f0f\u5982\u4e0b\uff1a <pre><code>template &lt;class \u7c7b\u578b\u53c2\u65701\uff0c class \u7c7b\u578b\u53c2\u65702\uff0c...&gt;\nclass \u7c7b\u540d {\n    // \u6210\u5458\u53d8\u91cf\n    \u7c7b\u578b\u53c2\u65701 \u53d8\u91cf1;\n    \u7c7b\u578b\u53c2\u65702 \u53d8\u91cf2;\n    // \u6210\u5458\u51fd\u6570\n    \u8fd4\u56de\u503c\u7c7b\u578b \u51fd\u6570\u540d(\u5f62\u53c2\u5217\u8868) {\n        // \u51fd\u6570\u4f53\n    }\n};\n</code></pre></p> <p>\u7c7b\u6a21\u677f\u53ea\u662f\u4ee3\u8868\u4e00\u79cd\u7c7b\u578b\u7684\u7c7b\uff0c\u7f16\u8bd1\u7a0b\u5e8f\u4e0d\u4f1a\u4e3a\u7c7b\u6a21\u677f\u521b\u5efa\u7a0b\u5e8f\u4ee3\u7801\uff0c\u4f46\u662f\u901a\u8fc7\u5bf9\u7c7b\u6a21\u677f\u7684\u5b9e\u4f8b\u5316\u751f\u6210\u4e00\u4e2a\u5177\u4f53\u7684\u7c7b\u548c\u8be5\u7c7b\u7684\u5bf9\u8c61</p> <p>\u5b9e\u4f8b\u5316\u7684\u4e00\u822c\u5f62\u5f0f\uff1a <pre><code>\u7c7b\u540d&lt;\u7c7b\u578b\u53c2\u65701\uff0c\u7c7b\u578b\u53c2\u65702\uff0c...&gt; \u5bf9\u8c61\u540d;\nCompare &lt;int&gt; cmp(4,7);\n</code></pre> \u5728\u7c7b\u6a21\u677f\u540e\u7684\u5c16\u62ec\u53f7\u4e2d\u6307\u5b9a\u5b9e\u9645\u7684\u7c7b\u578b\u4e3aint\uff0c\u7f16\u8bd1\u7cfb\u7edf\u5c31\u7528int\u6765\u53d6\u4ee3\u7c7b\u6a21\u677f\u4e2d\u7684\u7c7b\u578b\u53c2\u6570\uff0c\u751f\u6210\u4e00\u4e2a\u5177\u4f53\u7684\u7c7bCompare\uff0c\u5e76\u521b\u5efa\u4e00\u4e2a\u5bf9\u8c61cmp <p>\u8fd8\u53ef\u4ee5\u5728\u7c7b\u5b9a\u4e49\u4f53\u5916\u5b9a\u4e49\u6210\u5458\u51fd\u6570,\u4e00\u822c\u683c\u5f0f\u4e3a\uff1a <pre><code>template &lt;class \u7c7b\u578b\u53c2\u65701\uff0c class \u7c7b\u578b\u53c2\u65702\uff0c...&gt;\n\u7c7b\u540d&lt;\u7c7b\u578b\u53c2\u65701\uff0c\u7c7b\u578b\u53c2\u65702\uff0c...&gt;::\u6210\u5458\u51fd\u6570\u8fd4\u56de\u503c\u7c7b\u578b \u51fd\u6570\u540d(\u5f62\u53c2\u5217\u8868) {\n    // \u51fd\u6570\u4f53\n}\n</code></pre></p> <p>\u6a21\u677f\u53c2\u6570\u53ef\u4ee5\u662f\u4e00\u4e2a\uff0c\u4e5f\u53ef\u4ee5\u662f\u591a\u4e2a\uff0c\u53ef\u4ee5\u662f\u7c7b\u578b\u53c2\u6570\uff0c\u4e5f\u53ef\u4ee5\u662f\u975e\u7c7b\u578b\u53c2\u6570\u3002\u53c2\u6570\u7c7b\u578b\u7531\u5173\u952e\u5b57class\u6216typename\u53ca\u5176\u540e\u9762\u7684\u6807\u8bc6\u7b26\u6784\u6210\u3002\u975e\u7c7b\u578b\u53c2\u6570\u7531\u4e00\u4e2a\u666e\u901a\u53c2\u6570\u6784\u6210\uff0c\u4ee3\u8868\u6a21\u677f\u5b9a\u4e49\u4e2d\u7684\u4e00\u4e2a\u5e38\u91cf\u3002</p>"},{"location":"note/courses/OOP/Lecture%206/#_5","title":"\u7c7b\u6a21\u677f\u7684\u6d3e\u751f","text":"<p>\u4e24\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>\u4ece\u7c7b\u6a21\u677f\u6d3e\u751f\u7c7b\u6a21\u677f <pre><code>template &lt;class T&gt;\nclass Base {\n    // \u57fa\u7c7b\u6210\u5458\n};\ntemplate &lt;class T&gt;\nclass Derived : public Base&lt;T&gt; {\n    // \u6d3e\u751f\u7c7b\u6210\u5458\n};\n</code></pre></li> <li>\u4ece\u7c7b\u6a21\u677f\u6d3e\u751f\u975e\u6a21\u677f\u7c7b <pre><code>template &lt;class T&gt;\nclass Base{\n    // \u57fa\u7c7b\u6210\u5458\n};\ntemplate &lt;class T&gt;\nclass Derived : public Base &lt;int&gt;{\n    // \u6d3e\u751f\u7c7b\u6210\u5458\n};\n</code></pre></li> </ul>"},{"location":"note/courses/OOP/Lecture%206/#_6","title":"\u7c7b\u6a21\u677f\u663e\u5f0f\u5177\u4f53\u5316","text":"<p>\u7c7b\u6a21\u677f\u663e\u5f0f\u5177\u4f53\u5316\u4e0e\u6a21\u677f\u51fd\u6570\u663e\u5f0f\u5177\u4f53\u5316\u7c7b\u4f3c\uff0c\u4e5f\u662f\u7279\u5b9a\u7c7b\u578b\u7528\u4e8e\u66ff\u6362\u6a21\u677f\u4e2d\u7c7b\u578b\u53c2\u6570\u7684\u5b9a\u4e49\u3002\u901a\u8fc7\u663e\u5f0f\u5177\u4f53\u5316\u7c7b\u6a21\u677f\uff0c\u53ef\u4ee5\u4f18\u5316\u7c7b\u6a21\u677f\u57fa\u4e8e\u67d0\u79cd\u7279\u6b8a\u6570\u636e\u7c7b\u578b\u7684\u5b9e\u73b0\uff0c\u53ef\u4ee5\u514b\u670d\u67d0\u79cd\u7279\u5b9a\u6570\u636e\u7c7b\u578b\u5728\u5b9e\u4f8b\u5316\u7c7b\u6a21\u677f\u6240\u51fa\u73b0\u7684\u4e0d\u8db3\u3002</p> <p>\u6a21\u677f\u6709\u4e24\u79cd\u7279\u5316\uff1a\u5168\u7279\u5316\u548c\u504f\u7279\u5316\u3002 - \u5168\u7279\u5316\uff1a\u4e3a\u6a21\u677f\u7684\u6240\u6709\u7c7b\u578b\u53c2\u6570\u63d0\u4f9b\u5177\u4f53\u7684\u7c7b\u578b - \u504f\u7279\u5316\uff1a\u4e3a\u6a21\u677f\u7684\u90e8\u5206\u7c7b\u578b\u53c2\u6570\u63d0\u4f9b\u5177\u4f53\u7684\u7c7b\u578b</p> <p>\u6a21\u677f\u51fd\u6570\u53ea\u80fd\u5168\u7279\u5316\uff0c\u800c\u7c7b\u6a21\u677f\u53ef\u4ee5\u5168\u7279\u5316\u548c\u504f\u7279\u5316\u3002</p> <p>\u7c7b\u6a21\u677f\u5168\u7279\u5316</p> <pre><code>template &lt;class T1, class T2&gt;\nclass MyClass {\n    //...\n};\n\n// \u5168\u7279\u5316\ntemplate &lt;&gt;\nclass MyClass&lt;int, int&gt; {\n\n};\n\ntemplate &lt;class T&gt;\nclass MyClass&lt;T, int&gt; {\n    // \u504f\u7279\u5316\n};\n</code></pre> <ul> <li>\u6d45\u62f7\u8d1d\uff1a \u6307\u5411\u540c\u4e00\u7247\u5185\u5b58\u7a7a\u95f4</li> <li>\u6df1\u62f7\u8d1d\uff1a \u6307\u5411\u4e0d\u540c\u7684\u5185\u5b58\u7a7a\u95f4</li> </ul>"},{"location":"note/courses/OOP/Lecture%206/#c","title":"c++\u6807\u51c6\u6a21\u677f\u5e93","text":"<p>\u6cdb\u578b\u7a0b\u5e8f\u8bbe\u8ba1</p> <p>\u6cdb\u578b\u662f\u6307\u5c06\u7c7b\u578b\u53c2\u6570\u5316\u4ee5\u8fbe\u5230\u4ee3\u7801\u590d\u7528</p> <p>\u6cdb\u578b\u7a0b\u5e8f\u8bbe\u8ba1\u662f\u6307\u5728\u7f16\u5199\u7a0b\u5e8f\u65f6\uff0c\u4f7f\u7528\u7c7b\u578b\u53c2\u6570\u5316\u7684\u65b9\u5f0f\u6765\u7f16\u5199\u4ee3\u7801\uff0c\u4f7f\u5f97\u540c\u4e00\u6bb5\u4ee3\u7801\u53ef\u4ee5\u5904\u7406\u591a\u79cd\u6570\u636e\u7c7b\u578b\u3002C++\u6807\u51c6\u6a21\u677f\u5e93\uff08STL\uff09\u5c31\u662f\u4e00\u4e2a\u5178\u578b\u7684\u6cdb\u578b\u7a0b\u5e8f\u8bbe\u8ba1\u7684\u4f8b\u5b50\u3002</p> <p>\u4ec0\u4e48\u662f\u7c7b\u5e93\uff1f</p> <p>\u7c7b\u5e93\u662f\u7c7b\u7684\u96c6\u5408\uff0c\u5e76\u4e14\u7ed9\u51fa\u4e86\u591a\u79cd\u7c7b\u4e4b\u95f4\u7684\u5173\u7cfb\u63cf\u8ff0</p> <p>\u4e00\u7ec4\u7c7b\uff0c\u901a\u8fc7\u5efa\u7acb\u5f7c\u6b64\u95f4\u7684\u7ee7\u627f\u5173\u7cfb\u5f62\u6210\u7c7b\u5e93\uff0c\u4ee5\u7c7b\u7684\u5f62\u5f0f\u63d0\u4f9b\u7ed9\u7528\u6237\u91cd\u7528</p>"},{"location":"note/courses/OOP/Lecture%206/#stl","title":"STL","text":"<p>C++\u6807\u51c6\u6a21\u677f\u5e93\uff08STL\uff09 C++\u6807\u51c6\u6a21\u677f\u5e93\uff08STL\uff09\u662fC++\u7684\u4e00\u4e2a\u91cd\u8981\u7ec4\u6210\u90e8\u5206\uff0c\u5b83\u63d0\u4f9b\u4e86\u4e00\u7ec4\u901a\u7528\u7684\u7c7b\u548c\u51fd\u6570\u6a21\u677f\uff0c\u7528\u4e8e\u5904\u7406\u6570\u636e\u7ed3\u6784\u548c\u7b97\u6cd5\u3002STL\u5305\u542b\u4ee5\u4e0b\u51e0\u4e2a\u4e3b\u8981\u7ec4\u4ef6\uff1a - \u5bb9\u5668\uff1a\u7528\u4e8e\u5b58\u50a8\u6570\u636e\u7684\u7c7b\u6a21\u677f\uff0c\u5982<code>vector</code>\u3001<code>list</code>\u3001<code>deque</code>\u3001<code>set</code>\u3001<code>map</code>\u7b49\u3002 - \u7b97\u6cd5\uff1a\u7528\u4e8e\u5904\u7406\u5bb9\u5668\u4e2d\u7684\u6570\u636e\u7684\u51fd\u6570\u6a21\u677f\uff0c\u5982<code>sort</code>\u3001<code>find</code>\u3001<code>copy</code>\u7b49\u3002 - \u8fed\u4ee3\u5668\uff1a\u7528\u4e8e\u8bbf\u95ee\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u5bf9\u8c61\uff0c\u5982<code>iterator</code>\u3001<code>const_iterator</code>\u7b49\u3002 - \u51fd\u6570\u5bf9\u8c61\uff1a\u7528\u4e8e\u5b9a\u4e49\u81ea\u5b9a\u4e49\u7684\u64cd\u4f5c\uff0c\u5982\u6bd4\u8f83\u51fd\u6570\u3001\u7b97\u672f\u8fd0\u7b97\u7b49\u3002</p> <p>\u6574\u4e2aSTL\u662f\u4ee5\u4e00\u79cd\u7c7b\u578b\u53c2\u6570\u5316\uff08type parameterized\uff09\u7684\u65b9\u5f0f\u57fa\u4e8e\u6a21\u677f\uff08template\uff09\u5b9e\u73b0\u7684\u3002</p>"},{"location":"note/courses/OOP/Lecture%206/#container","title":"container\uff08\u5bb9\u5668\uff09","text":"<p>\u7528\u6765\u5bb9\u7eb3\u3001\u5305\u542b\u4e00\u7ec4\u5143\u7d20\u6216\u8005\u5143\u7d20\u96c6\u5408\u7684\u5bf9\u8c61\u7684</p> <ul> <li>vector\uff1a\u52a8\u6001\u6570\u7ec4</li> <li>list\uff1a\u53cc\u5411\u94fe\u8868</li> <li>queue\uff1a\u961f\u5217</li> <li>stack\uff1a\u6808</li> <li>set\uff1a\u96c6\u5408</li> <li>map\uff1a\u6620\u5c04</li> <li>unordered_set\uff1a\u65e0\u5e8f\u96c6\u5408</li> </ul>"},{"location":"note/courses/OOP/Lecture%206/#algorithm","title":"algorithm\uff08\u7b97\u6cd5\uff09","text":"<p>STL\u63d0\u4f9b\u4e86\u8bb8\u591a\u7b97\u6cd5\u6765\u5904\u7406\u5bb9\u5668\u4e2d\u7684\u6570\u636e\uff0c\u8fd9\u4e9b\u7b97\u6cd5\u90fd\u662f\u6a21\u677f\u51fd\u6570\uff0c\u53ef\u4ee5\u4f5c\u7528\u4e8e\u4efb\u4f55\u7c7b\u578b\u7684\u5bb9\u5668\u3002\u5e38\u7528\u7684\u7b97\u6cd5\u5305\u62ec\uff1a</p> <ul> <li><code>sort</code>\uff1a\u5bf9\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u8fdb\u884c\u6392\u5e8f</li> <li><code>find</code>\uff1a\u67e5\u627e\u5bb9\u5668\u4e2d\u7684\u5143\u7d20</li> <li><code>copy</code>\uff1a\u590d\u5236\u5bb9\u5668\u4e2d\u7684\u5143\u7d20</li> <li><code>accumulate</code>\uff1a\u8ba1\u7b97\u5bb9\u5668\u4e2d\u5143\u7d20\u7684\u7d2f\u79ef\u548c</li> <li><code>for_each</code>\uff1a\u5bf9\u5bb9\u5668\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u6267\u884c\u6307\u5b9a\u64cd\u4f5c</li> <li><code>replace</code>\uff1a\u66ff\u6362\u5bb9\u5668\u4e2d\u7684\u5143\u7d20</li> <li><code>merge</code>\uff1a\u5408\u5e76\u4e24\u4e2a\u5df2\u6392\u5e8f\u7684\u5bb9\u5668</li> <li><code>count</code>\uff1a\u7edf\u8ba1\u5bb9\u5668\u4e2d\u6ee1\u8db3\u7279\u5b9a\u6761\u4ef6\u7684\u5143\u7d20\u4e2a\u6570</li> <li><code>reverse</code>\uff1a\u53cd\u8f6c\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\u987a\u5e8f</li> </ul>"},{"location":"note/courses/OOP/Lecture%206/#iterator","title":"iterator\uff08\u8fed\u4ee3\u5668\uff09","text":"<p>\u8fed\u4ee3\u5668\u662f\u4e00\u79cd\u7ed9\u7c7b\u4f3c\u4e8e\u6307\u9488\u7684\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4f7f\u7528\u8fed\u4ee3\u5668\u6765\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u5143\u7d20</p> <p>\u8fed\u4ee3\u5668\u63d0\u4f9b\u4e86\u4e00\u79cd\u7edf\u4e00\u7684\u65b9\u5f0f\u6765\u8bbf\u95ee\u5bb9\u5668\u4e2d\u7684\u5143\u7d20\uff0c\u65e0\u8bba\u5bb9\u5668\u7684\u5177\u4f53\u7c7b\u578b\u5982\u4f55\u3002STL\u63d0\u4f9b\u4e86\u591a\u79cd\u7c7b\u578b\u7684\u8fed\u4ee3\u5668\uff0c\u5305\u62ec\uff1a</p> <ul> <li>\u8f93\u5165\u8fed\u4ee3\u5668\uff1a\u53ea\u80fd\u8bfb\u53d6\u5143\u7d20</li> <li>\u8f93\u51fa\u8fed\u4ee3\u5668\uff1a\u53ea\u80fd\u5199\u5165\u5143\u7d20</li> <li>\u524d\u5411\u8fed\u4ee3\u5668\uff1a\u53ef\u4ee5\u8bfb\u53d6\u548c\u5199\u5165\u5143\u7d20\uff0c\u4f46\u53ea\u80fd\u5411\u524d\u79fb\u52a8</li> <li>\u53cc\u5411\u8fed\u4ee3\u5668\uff1a\u53ef\u4ee5\u8bfb\u53d6\u548c\u5199\u5165\u5143\u7d20\uff0c\u53ef\u4ee5\u5411\u524d\u548c\u5411\u540e\u79fb\u52a8</li> <li>\u968f\u673a\u8bbf\u95ee\u8fed\u4ee3\u5668\uff1a\u53ef\u4ee5\u8bfb\u53d6\u548c\u5199\u5165\u5143\u7d20\uff0c\u53ef\u4ee5\u5411\u524d\u548c\u5411\u540e\u79fb\u52a8\uff0c\u5e76\u4e14\u652f\u6301\u968f\u673a\u8bbf\u95ee</li> </ul>"},{"location":"note/courses/OOP/Lecture%206/#vector","title":"vector\u8fed\u4ee3\u5668","text":"<p>\u58f0\u660e</p> <pre><code>vector&lt;int&gt; vec = {1, 2, 3, 4, 5};\nvector&lt;int&gt; vec2 = (5,'x'); // \u521b\u5efa\u4e00\u4e2a\u5305\u542b5\u4e2a\u5143\u7d20\u7684vector\uff0c\u5143\u7d20\u503c\u4e3a'x'\n</code></pre>"},{"location":"note/courses/OOP/Lecture%208%20Stream/","title":"\u6587\u4ef6\u64cd\u4f5c\u548c\u8f93\u5165\u8f93\u51fa\u6d41","text":""},{"location":"note/courses/OOP/Lecture%208%20Stream/#c","title":"C++\u7684\u8f93\u5165\u8f93\u51fa","text":"<p>C++\u7684\u8f93\u5165\u8f93\u51fa\u6d41\u662f\u6307\u7531\u82e5\u5e72\u5b57\u8282\u7ec4\u6210\u7684\u5b57\u8282\u5e8f\u5217\uff0c\u6309\u987a\u5e8f\u4ece\u4e00\u4e2a\u5bf9\u8c61\u4f20\u9001\u5230\u53e6\u4e00\u4e2a\u5bf9\u8c61\u3002\u8f93\u5165\u65f6\uff0c\u7a0b\u5e8f\u4ece\u8f93\u5165\u6d41\u4e2d\u62bd\u53d6\u5b57\u8282\uff1b\u8f93\u51fa\u65f6\uff0c\u7a0b\u5e8f\u5c06\u5b57\u8282\u63d2\u5165\u5230\u8f93\u51fa\u6d41\u4e2d</p> <p>\u5bf9\u4e8e\u9762\u5411\u6587\u672c\u7684\u7a0b\u5e8f\uff0c\u6bcf\u4e2a\u5b57\u8282\u4ee3\u8868\u4e00\u4e2a\u5b57\u7b26\u3002</p> <p>\u8bfb\u64cd\u4f5c\u5728\u6d41\u6570\u636e\u62bd\u8c61\u4e2d\u88ab\u79f0\u4e3a\uff08\u4ece\u6d41\u4e2d\uff09\u63d0\u53d6\uff0c\u5199\u64cd\u4f5c\u88ab\u79f0\u4e3a\uff08\u5411\u6d41\u4e2d\uff09\u63d2\u5165\u3002</p> <p>I/O\u6d41\u7c7b\u5e93\u63d0\u4f9b\u5bf9\u8c61\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u4e92\u670d\u52a1 - \u8f93\u51fa\u6d41\uff1a\u8868\u793a\u6570\u636e\u4ece\u5185\u5b58\u4f20\u9001\u5230\u5916\u90e8\u8bbe\u5907 - \u8f93\u5165\u6d41\uff1a\u8868\u793a\u6570\u636e\u4ece\u5916\u90e8\u8bbe\u5907\u4f20\u9001\u5230\u5185\u5b58\u7f13\u51b2\u533a\u53d8\u91cf\u4e2d - \u6d41\u7c7b\u5e93\u9884\u5b9a\u4e49\u4e86\u591a\u79cd\u6d41\u5bf9\u8c61\uff0c\u8fde\u63a5\u5230\u4e0d\u540c\u7684\u8bbe\u5907 - \u7a0b\u5e8f\u5458\u53ef\u4ee5\u5b9a\u4e49\u6240\u9700\u7684\u6d41\u5bf9\u8c61 - \u6d41\u7c7b\u5bf9\u8c61\u53ef\u4ee5\u5efa\u7acb\u548c\u5220\u9664\uff0c\u53ef\u4ee5\u4ece\u6d41\u4e2d\u83b7\u53d6\u6570\u636e\u548c\u5411\u6d41\u6dfb\u52a0\u6570\u636e</p> <p>\u5e38\u7528\u7684\u6d41\u7c7b\u7ee7\u627f\u5173\u7cfb\uff1a <pre><code>ios\n\u251c\u2500\u2500 istream -----------|\n\u2502   \u251c\u2500\u2500 ifstream       |____iostream----fstream\n\u2502   \u2514\u2500\u2500 istringstream  |\n\u251c\u2500\u2500 ostream------------|\n\u2502   \u251c\u2500\u2500 ofstream\n\u2502   \u2514\u2500\u2500 ostringstream\n</code></pre></p> <p></p> <p><code>cin</code>\u5bf9\u8c61\u7ba1\u7406\u6807\u51c6\u8f93\u5165\u6d41\uff0c\u9ed8\u8ba4\u4e0e\u6807\u51c6\u8f93\u5165\u8bbe\u5907\uff08\u901a\u5e38\u4e3a\u952e\u76d8\uff09\u76f8\u8fde\uff1b<code>cout</code>\u5bf9\u8c61\u7ba1\u7406\u6807\u51c6\u8f93\u51fa\u6d41\uff0c\u9ed8\u8ba4\u4e0e\u6807\u51c6\u8f93\u51fa\u8bbe\u5907\uff08\u901a\u5e38\u4e3a\u663e\u793a\u5668\uff09\u76f8\u8fde\u3002\u9664\u6b64\u4e4b\u5916\uff0c\u8fd8\u6709<code>cerr</code>\u3001<code>clog</code>\u3001<code>wcin</code>\u3001<code>wcout</code>\u3001<code>wcerr</code>\u548c<code>wclog</code>\u3002</p> <p>\u63d2\u5165\u8fd0\u7b97\u7b26<code>&lt;&lt;</code>\u548c\u63d0\u53d6\u8fd0\u7b97\u7b26<code>&gt;&gt;</code>\u662fC++\u6d41\u7c7b\u7684\u6210\u5458\u51fd\u6570\u3002\u5b83\u4eec\u5206\u522b\u7528\u4e8e\u5411\u8f93\u51fa\u6d41\u63d2\u5165\u6570\u636e\u548c\u4ece\u8f93\u5165\u6d41\u63d0\u53d6\u6570\u636e\u3002\u63d2\u5165\u8fd0\u7b97\u7b26\u7684\u5de6\u64cd\u4f5c\u6570\u662f\u8f93\u51fa\u6d41\u5bf9\u8c61\uff0c\u53f3\u64cd\u4f5c\u6570\u662f\u8981\u63d2\u5165\u7684\u6570\u636e\uff1b\u63d0\u53d6\u8fd0\u7b97\u7b26\u7684\u5de6\u64cd\u4f5c\u6570\u662f\u8f93\u5165\u6d41\u5bf9\u8c61\uff0c\u53f3\u64cd\u4f5c\u6570\u662f\u8981\u63d0\u53d6\u7684\u6570\u636e\u3002</p> <p><code>iostream</code>\u7c7b\u5e93\u4e2d\u4e0d\u540c\u7684\u7c7b\u7684\u58f0\u660e\u88ab\u653e\u5728\u4e0d\u540c\u7684\u5934\u6587\u4ef6\u4e2d\u3002<code>iostream</code>\u7c7b\u5e93\u7684\u5934\u6587\u4ef6\u6709\uff1a - <code>iostream</code>\uff1a\u5b9a\u4e49\u4e86<code>istream</code>\u3001<code>ostream</code>\u548c<code>iostream</code>\u7c7b\uff0c\u5305\u542b\u4e86\u5bf9\u8f93\u5165\u8f93\u51fa\u6d41\u7684\u57fa\u672c\u64cd\u4f5c - <code>fstream</code>\uff1a\u5b9a\u4e49\u4e86<code>ifstream</code>\u3001<code>ofstream</code>\u548c<code>fstream</code>\u7c7b\uff0c\u5305\u542b\u4e86\u5bf9\u6587\u4ef6\u6d41\u7684\u57fa\u672c\u64cd\u4f5c - <code>strstream</code>\uff1a\u5b9a\u4e49\u4e86<code>istringstream</code>\u3001<code>ostringstream</code>\u548c<code>stringstream</code>\u7c7b\uff0c\u5305\u542b\u4e86\u5bf9\u5b57\u7b26\u4e32\u6d41\u7684\u57fa\u672c\u64cd\u4f5c - <code>stdiostream</code>: \u7528\u4e8e\u6df7\u5408\u4f7f\u7528C\u548cC++\u7684\u8f93\u5165\u8f93\u51fa\u6d41 - <code>iomanip</code>\uff1a\u5b9a\u4e49\u4e86\u683c\u5f0f\u5316\u8f93\u5165\u8f93\u51fa\u6d41\u7684\u7c7b\u548c\u51fd\u6570</p>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#_2","title":"\u8f93\u5165\u8f93\u51fa\u6d41\u5206\u7c7b","text":"<ul> <li>\u6807\u51c6\u6d41\uff1a\u5bf9\u7cfb\u7edf\u6307\u5b9a\u7684\u6807\u51c6\u8bbe\u5907\u7684I/O\u64cd\u4f5c</li> <li>\u6587\u4ef6\u6d41\uff1a\u4ee5\u5916\u5b58\u4e2d\u7684\u6587\u4ef6\u4e3a\u5bf9\u8c61\u8fdb\u884c\u8f93\u5165\u548c\u8f93\u51fa\uff1b        \u4ee5\u6587\u4ef6\u4e3a\u5bf9\u8c61\u7684\u8f93\u5165\u8f93\u51fa\uff0c\u5305\u62ec\u4ece\u78c1\u76d8\u6587\u4ef6\u8f93\u5165\u6570\u636e\uff0c         \u6216\u5c06\u6570\u636e\u8f93\u51fa\u5230\u78c1\u76d8\u6587\u4ef6\uff1b</li> <li>\u5b57\u7b26\u4e32\u6d41\uff1a\u5bf9\u5185\u5b58\u4e2d\u6307\u5b9a\u7a7a\u95f4\u8fdb\u884c\u8f93\u5165\u548c\u8f93\u51fa\uff1b         \u901a\u5e38\u6307\u5b9a\u4e00\u4e2a\u5b57\u7b26\u6570\u7ec4\u4f5c\u4e3a\u5b58\u50a8\u7a7a\u95f4\uff1b</li> </ul>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#_3","title":"\u6807\u51c6\u8f93\u5165\u6d41","text":""},{"location":"note/courses/OOP/Lecture%208%20Stream/#cin","title":"\u4f7f\u7528<code>cin</code>\u8fdb\u884c\u8f93\u5165","text":"<p>C++\u63d0\u4f9b\u4e86\u5b9e\u7528\u7684\u8f93\u5165\u529f\u80fd\uff0c\u901a\u8fc7\u952e\u76d8\u4ea7\u751f\u8f93\u5165\u7684\u5185\u5bb9\uff0c\u4ece\u800c\u5f62\u6210\u5b57\u8282\u6d41\u3002<code>cin</code>\u5bf9\u8c61\u53ef\u4ee5\u5c06\u8f93\u5165\u5b57\u8282\u6d41\u4e2d\u7684\u4fe1\u606f\u5b58\u50a8\u5230\u76f8\u5e94\u7684\u5185\u5b58\u5355\u5143\u3002\u901a\u5e38\uff0c\u53ef\u4ee5\u8fd9\u6837\u4f7f\u7528<code>cin</code>: <pre><code>cin &gt;&gt; variable;\n</code></pre> \u5176\u4e2d \uff0c<code>&gt;&gt;</code>\u662f\u6d41\u8bfb\u53d6\u8fd0\u7b97\u7b26\uff0c\u5b83\u91cd\u8f7d\u53f3\u79fb\u4f4d\u8fd0\u7b97\u7b26<code>&gt;&gt;</code>\uff0c\u7528\u4e8e\u4ece\u8f93\u5165\u6d41\u4e2d\u63d0\u53d6\u6570\u636e\u3002<code>variable</code>\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u8868\u793a\u8981\u5b58\u50a8\u8f93\u5165\u6570\u636e\u7684\u5185\u5b58\u5355\u5143\u3002<code>cin</code>\u5bf9\u8c61\u4f1a\u5c06\u8f93\u5165\u7684\u5b57\u8282\u6d41\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u5b58\u50a8\u5230\u53d8\u91cf\u4e2d\u3002</p> <p>\u5de6\u8fb9\u7684<code>cin</code>\u662f\u4e00\u4e2a\u8f93\u5165\u6d41\u5bf9\u8c61\uff0c\u53f3\u8fb9\u7684<code>variable</code>\u662f\u4e00\u4e2a\u53d8\u91cf\uff0c\u8868\u793a\u8981\u5b58\u50a8\u8f93\u5165\u6570\u636e\u7684\u5185\u5b58\u5355\u5143\u3002<code>&gt;&gt;</code>\u662f\u6d41\u8bfb\u53d6\u8fd0\u7b97\u7b26\uff0c\u5b83\u91cd\u8f7d\u4e86\u53f3\u79fb\u4f4d\u8fd0\u7b97\u7b26\uff0c\u7528\u4e8e\u4ece\u8f93\u5165\u6d41\u4e2d\u63d0\u53d6\u6570\u636e\u3002<code>cin</code>\u5bf9\u8c61\u4f1a\u5c06\u8f93\u5165\u7684\u5b57\u8282\u6d41\u8f6c\u6362\u4e3a\u76f8\u5e94\u7684\u6570\u636e\u7c7b\u578b\uff0c\u5e76\u5b58\u50a8\u5230\u53d8\u91cf\u4e2d\u3002</p> <p>\u6d41\u63d0\u53d6\u7b26\u4ece\u6d41\u4e2d\u63d0\u53d6\u6570\u636e\u65f6\u901a\u5e38\u8df3\u8fc7\u8f93\u5165\u6d41\u4e2d\u7684\u7a7a\u683c\u3001tab\u952e\u3001\u6362\u884c\u7b26\u7b49\u7a7a\u767d\u5b57\u7b26\u3002</p> <p>\u8f93\u5165\u8fd0\u7b97\u7b26<code>&gt;&gt;</code>\u4e5f\u652f\u6301\u7ea7\u8054\u8f93\u5165\u3002\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u8fd0\u7b97\u7b26<code>&gt;&gt;</code>\u8df3\u8fc7\u7a7a\u683c\uff0c\u8bfb\u5165\u540e\u9762\u4e0e\u53d8\u91cf\u7c7b\u578b\u76f8\u5e94\u7684\u503c\u3002\u56e0\u6b64\u7ed9\u4e00\u7ec4\u53d8\u91cf\u8f93\u5165\u503c\u65f6\uff0c\u7528\u7a7a\u683c\u6216\u6362\u884c\u5c06\u8f93\u5165\u7684\u6570\u503c\u95f4\u9694\u5f00\u3002 <pre><code>int a, b, c;\ncin &gt;&gt; a &gt;&gt; b &gt;&gt; c;\n</code></pre></p> <p>\u5f53\u8f93\u5165\u5b57\u7b26\u4e32(<code>char*</code> \u7c7b\u578b)\u65f6\uff0c\u8f93\u5165\u8fd0\u7b97\u7b26<code>&gt;&gt;</code>\u4f1a\u8df3\u8fc7\u7a7a\u683c\uff0c\u8bfb\u5165\u540e\u9762\u7684\u975e\u7a7a\u683c\u7b26\uff0c\u76f4\u5230\u9047\u5230\u53e6\u5916\u4e00\u4e2a\u7a7a\u683c\u7ed3\u675f\uff0c\u5e76\u5728\u5b57\u7b26\u4e32\u672b\u5c3e\u81ea\u52a8\u653e\u7f6e\u5b57\u7b26<code>\u2018\\0\u2019</code>\u4f5c\u4e3a\u7ed3\u675f\u6807\u5fd7\uff0c\u4f8b\u5982 <pre><code>char str[20];\ncin &gt;&gt; str;\n</code></pre> \u5f53\u8f93\u5165\"Hello World\"\u65f6\uff0c<code>str</code>\u4e2d\u53ea\u5b58\u50a8\"Hell\"\u3002\u5982\u679c\u8981\u8f93\u5165\u5e26\u7a7a\u683c\u7684\u5b57\u7b26\u4e32\uff0c\u53ef\u4ee5\u4f7f\u7528<code>getline()</code>\u51fd\u6570\u3002</p> <p>\u6570\u636e\u8f93\u5165\u65f6\uff0c\u4e0d\u4ec5\u68c0\u67e5\u6570\u636e\u95f4\u7684\u7a7a\u683c\uff0c\u8fd8\u505a\u7c7b\u578b\u68c0\u67e5\uff0c\u81ea\u52a8\u5339\u914d\u6570\u636e\u7c7b\u578b\u3002 <pre><code>int i;\nfloat f;\ncin &gt;&gt; i &gt;&gt; f;\n</code></pre> \u5982\u679c\u8f93\u5165<code>12.34 34.56</code>\uff0c\u5219<code>i</code>\u7684\u503c\u4e3a<code>12</code>\uff0c<code>f</code>\u7684\u503c\u4e3a<code>34.56</code>\u3002\u5982\u679c\u8f93\u5165<code>12.34 34.56abc</code>\uff0c\u5219\u4f1a\u62a5\u9519\uff0c\u63d0\u793a\u7c7b\u578b\u4e0d\u5339\u914d\u3002</p> <p></p> <p>\u5e38\u7528istream\u6210\u5458\u51fd\u6570 - <code>int istream::get()</code>:      \u5982\u679c\u8f93\u5165\u6d41\u4e2d\u5305\u62ec\u9644\u52a0\u7684\u6570\u636e\uff0c\u51fd\u6570\u53d6\u5f97\u5e76\u8fd4\u56de\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff0c\u5426\u5219\u8fd4\u56deEOF - <code>istream istream::get(char&amp; c)</code>:     \u5982\u679c\u8f93\u5165\u6d41\u5305\u62ec\u9644\u52a0\u7684\u6570\u636e\uff0c\u51fd\u6570\u53d6\u5f97\u5e76\u5c06\u4e0b\u4e00\u4e2a\u5b57\u7b26\u5206\u914d\u7ed9c\uff1b\u5426\u5219\u5c31\u662f\u6ca1\u6709\u5b9a\u4e49\u5bf9c\u7684\u4f5c\u7528\u3002\u8fd4\u56de\u4e00\u4e2a\u5bf9this\uff08\u8c03\u7528\u5bf9\u8c61\uff09\u7684\u5f15\u7528\u3002 - <code>istream istream::get(char s[], int n, char delim = '\\n')</code>:     \u4ece\u8f93\u5165\u6d41\u83b7\u53d6\u5b57\u7b26\u5e76\u5c06\u5b83\u4eec\u5206\u914d\u7ed9s\u76f4\u5230\u4e0b\u9762\u7684\u4e00\u4e2a\u6761\u4ef6\u53d1\u751f\uff1a\u53d6\u5f97n-1\u4e2a\u5b57\u7b26\uff0c\u6ca1\u6709\u8f93\u5165\u5b57\u7b26\u4e86\uff0c\u6216\u8005\u4e0b\u4e00\u4e2a\u63a5\u6536\u7684\u5b57\u7b26\u7684\u503c\u4e3adelim\u3002 - <code>istream istream::getline(char s[], int n, char delim = '\\n')</code>:     \u4ece\u8f93\u5165\u6d41\u83b7\u53d6\u5b57\u7b26\u5e76\u5c06\u5b83\u4eec\u5206\u914d\u7ed9s\u76f4\u5230\u4e0b\u9762\u7684\u4e00\u4e2a\u6761\u4ef6\u53d1\u751f\uff1a\u53d6\u5f97n-1\u4e2a\u5b57\u7b26\uff0c\u6ca1\u6709\u8f93\u5165\u5b57\u7b26\u4e86\uff0c\u6216\u8005\u4e0b\u4e00\u4e2a\u63a5\u6536\u7684\u5b57\u7b26\u7684\u503c\u4e3adelim\u3002 - <code>int istream::peek()</code>:     \u8fd4\u56de\u4e0b\u4e00\u4e2a\u5b57\u7b26\uff0c\u4f46\u4e0d\u4ece\u8f93\u5165\u6d41\u4e2d\u5220\u9664\u5b83\u3002\u8fd4\u56deEOF\u8868\u793a\u6ca1\u6709\u66f4\u591a\u7684\u5b57\u7b26\u3002 - <code>istream&amp; istream::unget(char c)</code>:     \u5c06\u5b57\u7b26c\u653e\u56de\u8f93\u5165\u6d41\u4e2d,\u5b83\u5c06\u662f\u4e0b\u4e00\u4e2a\u8981\u63a5\u6536\u7684\u5b57\u7b26\u3002\u8fd4\u56de\u4e00\u4e2a\u5bf9this\uff08\u8c03\u7528\u5bf9\u8c61\uff09\u7684\u5f15\u7528\u3002 - <code>bool istream::eof()</code>:     \u5982\u679c\u8f93\u5165\u6d41\u5230\u8fbe\u6587\u4ef6\u7684\u672b\u5c3e\uff0c\u8fd4\u56detrue\uff0c\u5426\u5219\u8fd4\u56defalse\u3002</p> <p>\u5176\u4ed6istream \u7c7b\u65b9\u6cd5</p> <p>=== <code>get()</code> \u65b9\u6cd5 istream\u7c7b\u4e2d\u7684get()\u65b9\u6cd5\u63d0\u4f9b\u4e0d\u8df3\u8fc7\u7a7a\u683c\u7684\u5355\u5b57\u7b26\u8f93\u5165\u529f\u80fd \u4f7f\u7528\u65b9\u6cd5\uff1a <pre><code>char ch;\ncin.get(ch);\n</code></pre> \u4e09\u79cd\u91cd\u8f7d\u5f62\u5f0f - \u65e0\u53c2\u6570 - \u4e24\u4e2a\u53c2\u6570:<code>istream::get(char * s, int n)</code>,\u7b2c\u4e00\u4e2a\u53c2\u6570\u7528\u4e8e\u653e\u7f6e\u5b57\u7b26\u4e32\u7684\u5185\u5b58\u5355\u5143\u7684\u5730\u5740\uff0c\u7b2c\u4e8c\u4e2a\u53c2\u6570\u4e3a\u8bfb\u53d6\u7684\u6700\u5927\u5b57\u7b26\u6570\uff08\u6700\u540e\u4e00\u4f4d\u5b58\u653e<code>\\0</code>,\u6700\u591a\u8bfbn-1\u4f4d\uff09     <pre><code>char str[20];\ncin.get(str, 20);\n</code></pre> - \u4e09\u4e2a\u53c2\u6570:<code>istream::get(char * s, int n, char delim)</code>,\u7b2c\u4e09\u4e2a\u53c2\u6570\u4e3a\u5206\u9694\u7b26\uff0c\u8bfb\u53d6\u5230\u5206\u9694\u7b26\u65f6\u505c\u6b62,\u53ea\u6709\u4e24\u4e2a\u53c2\u6570\u7684<code>get</code>\u51fd\u6570\u5c06\u6362\u884c\u7b26\u7528\u4f5c\u5206\u754c\u7b26 === <code>getline()</code> \u65b9\u6cd5 \u8bfb\u53d6\u6574\u884c\u8f93\u5165 <code>\u8f93\u5165\u6d41\u5bf9\u8c61.getline(\u5b57\u7b26\u6570\u7ec4, \u5b57\u7b26\u4e2a\u6570)</code>\uff0c\u4f46\u662f\u53ea\u80fd\u8bfb\u5b57\u7b26\u6570-1\u4e2a\u5b57\u7b26</p> <p>getline()\u91cd\u8f7d\u65b9\u6cd5\u540c\u6837\u4e5f\u6709\u4e09\u4e2a\u53c2\u6570\u7684\u65b9\u6cd5,\u4e09\u4e2a\u53c2\u6570\u7684\u4f5c\u7528\u548c\u4e0a\u9762get()\u65b9\u6cd5\u7c7b\u4f3c\uff0c\u5176\u539f\u578b\u5982\u4e0b <pre><code>istream&amp; getline(char * s, int n, char delim = '\\n');\n</code></pre></p> <p>=== <code>read()</code> \u65b9\u6cd5 \u8bfb\u53d6\u6307\u5b9a\u5b57\u8282\u6570\u7684\u5b57\u7b26 <pre><code>char str[50];\ncin.read(str, 20);\n</code></pre> <code>read()</code>\u65b9\u6cd5\u4e0d\u4f1a\u5728\u8f93\u5165\u540e\u52a0\u4e0a\u7a7a\u503c\u5b57\u7b26\uff0c\u56e0\u6b64\u4e0d\u80fd\u5c06\u8f93\u5165\u8f6c\u6362\u4e3a\u5b57\u7b26\u4e32\uff0c\u8be5\u65b9\u6cd5\u7684\u8fd4\u56de\u7c7b\u578b\u4e3a<code>istream&amp;</code>\uff0c\u53ef\u4ee5\u8fdb\u884c\u7ea7\u8054\u8f93\u5165 <pre><code>cin.read(str, 20).read(str2, 30);\n</code></pre></p>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#_4","title":"\u6807\u51c6\u8f93\u51fa\u6d41","text":""},{"location":"note/courses/OOP/Lecture%208%20Stream/#cout","title":"\u4f7f\u7528<code>cout</code>\u8fdb\u884c\u8f93\u51fa","text":"<p><code>cout</code>\u662f\u8f93\u51fa\u6d41\u7c7b<code>ostream</code>\u7684\u5bf9\u8c61\uff0c\u8f93\u51fa\u7ed3\u679c\u6d41\u5411\u6807\u51c6\u7684\u8f93\u51fa\u8bbe\u5907\u663e\u793a\u5668\u3002\u5728C++\u4e2d\uff0c\u6d41\u8f93\u51fa\u4f7f\u7528\u63d2\u5165\u8fd0\u7b97\u7b26<code>&lt;&lt;</code>(\u91cd\u8f7d\u5de6\u79fb\u4f4d\u8fd0\u7b97\u7b26)\u5b8c\u6210\u8f93\u51fa\uff0c\u4f7f\u4e4b\u80fd\u591f\u8bc6\u522bC++\u4e2d\u6240\u6709\u7684\u57fa\u672c\u7c7b\u578b\u3002\u63d2\u5165\u8fd0\u7b97\u7b26<code>&lt;&lt;</code>\u5de6\u8fb9\u7684\u64cd\u4f5c\u6570\u662f<code>ostream</code>\u7c7b\u7684\u4e00\u4e2a\u5bf9\u8c61(\u5982<code>cout</code>)\uff0c\u53f3\u8fb9\u53ef\u4ee5\u662fC++\u7684\u5408\u6cd5\u8868\u8fbe\u5f0f\u3002</p> <p><code>ostream</code> \u7c7b\u7684\u5bf9\u8c61(console output)\u901a\u5e38\u8fde\u5411\u663e\u793a\u5668\uff0c\u53ef\u4ee5\u91cd\u5b9a\u5411\u5230\u6587\u4ef6\u6216\u5176\u4ed6\u8bbe\u5907\u3002<code>cout</code>\u5bf9\u8c61\u7684\u8f93\u51fa\u683c\u5f0f\u662f\u6587\u672c\u683c\u5f0f\uff0c\u8f93\u51fa\u65f6\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b57\u7b26\u6d41\u3002 <pre><code>ostream &amp; operator&lt;&lt;(\u7c7b\u578b\u8bc6\u522b\u7b26);\n</code></pre> <code>cout</code>\u6d41\u5728\u5185\u5b58\u4e2d\u5bf9\u5e94\u5f00\u8f9f\u4e86\u4e00\u4e2a\u7f13\u51b2\u533a</p> <p>C++\u7528\u6307\u5411\u5b57\u7b26\u4e32\u5b58\u50a8\u4f4d\u7f6e\u7684\u6307\u9488\u6765\u8868\u793a\u5b57\u7b26\u4e32\u3002\u6307\u9488\u7684\u5f62\u5f0f\u53ef\u4ee5\u662f<code>char</code>\u6570\u7ec4\u540d\u3001\u663e\u5f0f\u7684<code>char</code>\u6307\u9488\u6216\u7528\u5f15\u53f7\u62ec\u8d77\u7684\u5b57\u7b26\u4e32\u3002C++\u8fd8\u5141\u8bb8\u8f93\u51fa\u9879\u4e3a\u663e\u5f0f\u5bf9\u8c61\u7684\u5730\u5740\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5730\u5740\u4ee5\u5341\u516d\u8fdb\u5236\u7684\u5f62\u5f0f\u663e\u793a\u3002\u4f46\u5bf9\u4e8e\u5176\u4ed6\u7c7b\u578b\u7684\u6307\u9488\uff0cC++\u53ef\u4ee5\u4f7f\u7528<code>void *</code>\u6765\u5f3a\u5236\u8f6c\u6362\u8f93\u51fa\u3002</p> <p>\u5176\u4ed6<code>ostream</code>\u7c7b\u65b9\u6cd5\uff1a - <code>put()</code>: \u65e0\u683c\u5f0f\uff0c\u63d2\u5165\u4e00\u4e2a\u5b57\u8282 - <code>write()</code>: \u65e0\u683c\u5f0f\uff0c\u63d2\u5165n\u4e2a\u5b57\u8282 - <code>flush()</code>: \u5237\u65b0\u8f93\u51fa\u6d41 - <code>seekp()</code>: \u79fb\u52a8\u8f93\u51fa\u6d41\u6307\u9488 - <code>tellp()</code>: \u8fd4\u56de\u8f93\u51fa\u6d41\u6307\u9488\u4f4d\u7f6e</p> <p><code>ostream&amp; ostream::put(char c)</code>:\u5c06\u5b57\u7b26c\u63d2\u5165\u5230\u8f93\u51fa\u6d41\u4e2d\uff0c\u8fd4\u56de\u4e00\u4e2a\u5bf9*this\uff08\u8c03\u7528\u5bf9\u8c61\uff09\u7684\u5f15\u7528\u3002</p> <p><code>ostream&amp; ostream::write(const char* s, int n)</code>:\u5c06n\u4e2a\u5b57\u7b26\u63d2\u5165\u5230\u8f93\u51fa\u6d41\u4e2d\uff0c\u7a7a\u5b57\u7b26\u4e5f\u662f\u6709\u6548\u7684\uff0c\u8fd4\u56de\u4e00\u4e2a\u5bf9*this\uff08\u8c03\u7528\u5bf9\u8c61\uff09\u7684\u5f15\u7528\u3002<code>s</code>\u662f\u4e00\u4e2a\u6307\u5411\u5b57\u7b26\u6570\u7ec4\u7684\u6307\u9488\uff0c\u8868\u793a\u8981\u63d2\u5165\u7684\u5b57\u7b26\u5e8f\u5217\u3002</p> <p><code>ostream&amp; ostream::flush()</code>:\u5237\u65b0\u8f93\u51fa\u6d41\uff0c\u5f3a\u5236\u4efb\u4f55\u6ca1\u6709\u5b8c\u6210\u7684\u64cd\u4f5c\u7b26\u63d2\u5165\u5b8c\u6210\uff0c\u8fd4\u56de\u4e00\u4e2a\u5bf9*this\uff08\u8c03\u7528\u5bf9\u8c61\uff09\u7684\u5f15\u7528\u3002</p> <p>\u5176\u4ed6ostream \u7c7b\u65b9\u6cd5</p> <p>=== <code>put()</code> \u65b9\u6cd5 <code>put()</code>\u65b9\u6cd5\u7528\u4e8e\u8f93\u51fa\u4e00\u4e2a\u5b57\u7b26\uff0c\u8fd4\u56de\u503c\u4e3aostream\u5bf9\u8c61\u7684\u5f15\u7528 <pre><code>char ch = 'A';\ncout.put(ch);\n</code></pre> === <code>write()</code> \u65b9\u6cd5 <code>write()</code>\u65b9\u6cd5\u7528\u4e8e\u8f93\u51fa\u6307\u5b9a\u5b57\u8282\u6570\u7684\u5b57\u7b26\uff0c\u8fd4\u56de\u503c\u4e3aostream\u5bf9\u8c61\u7684\u5f15\u7528 <pre><code>char str[20] = \"Hello World\";\ncout.write(str, 5); // \u8f93\u51fa Hello\n</code></pre></p>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#ostream","title":"\u5176\u4ed6ostream \u7c7b\u65b9\u6cd5","text":""},{"location":"note/courses/OOP/Lecture%208%20Stream/#put","title":"<code>put()</code> \u65b9\u6cd5","text":"<p><code>ostream &amp; put(char c)</code></p> <p>\u53ef\u4ee5\u4f7f\u7528\u7c7b\u65b9\u6cd5\u6765\u8c03\u7528\uff1a <pre><code>cout.put('A');\n</code></pre> \u7531\u4e8e\u8be5\u51fd\u6570\u8fd4\u56deostream\u5bf9\u8c61\u7684\u5f15\u7528\uff0c\u56e0\u6b64\u53ef\u4ee5\u8fdb\u884c\u7ea7\u8054\u8f93\u51fa <pre><code>cout.put('A').put('B').put('C');\n</code></pre></p> <p>\u6210\u5458\u51fd\u6570<code>put</code>\u4e0d\u4ec5\u53ef\u4ee5\u7528<code>cout</code>\u5bf9\u8c61\u8c03\u7528,\u4e5f\u53ef\u4ee5\u7528<code>ostream</code>\u7c7b\u7684\u5bf9\u8c61\u8c03\u7528</p>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#write","title":"<code>write()</code> \u65b9\u6cd5","text":"<p><code>ostream &amp; write(const char * s, streamsize n)</code></p> <p><code>write()</code>\u65b9\u6cd5\u4e0d\u4f1a\u5728\u9047\u5230\u7a7a\u5b57\u7b26\u65f6\u81ea\u52a8\u505c\u6b62\uff0c\u800c\u4f1a\u6309\u7167\u6307\u5b9a\u6570\u91cf\u8f93\u51fa\u5b57\u7b26\uff0c\u5373\u4f7f\u8d85\u51fa\u4e86\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\u4e5f\u4e0d\u4f1a\u62a5\u9519</p>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#_5","title":"\u683c\u5f0f\u5316\u63a7\u5236","text":"<p>\u63d2\u5165\u548c\u63d0\u53d6\u8fd0\u7b97\u7b26\u4e0e\u9884\u5148\u5b9a\u4e49\u7684\u64cd\u4f5c\u7b26\u4e00\u8d77\u5de5\u4f5c\uff0c\u7528\u6765\u63a7\u5236\u8f93\u5165\u548c\u8f93\u51fa\u683c\u5f0f\u3002</p> <ul> <li>\u8f93\u51fa\u5bbd\u5ea6\uff1a\u4e3a\u4e86\u8c03\u6574\u8f93\u51fa\u7684\u5bbd\u5ea6\uff0c\u53ef\u4ee5\u4f7f\u7528<code>setw()</code>\u51fd\u6570\u3002\u8be5\u51fd\u6570\u5b9a\u4e49\u5728<code>iomanip</code>\u5934\u6587\u4ef6\u4e2d\uff0c\u8fd4\u56de\u4e00\u4e2a\u6d41\u64cd\u7eb5\u7b26\u5bf9\u8c61\u3002\u5b83\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u8f93\u51fa\u7684\u5bbd\u5ea6\u3002<code>setw()</code>\u51fd\u6570\u7684\u8fd4\u56de\u503c\u662f\u4e00\u4e2a\u6d41\u64cd\u7eb5\u7b26\u5bf9\u8c61\uff0c\u53ef\u4ee5\u4e0e\u63d2\u5165\u8fd0\u7b97\u7b26<code>&lt;&lt;</code>\u7ed3\u5408\u4f7f\u7528\u3002</li> <li>\u5bf9\u9f50\u65b9\u5f0f\uff1a\u8f93\u51fa\u6d41\u9ed8\u8ba4\u7684\u5bf9\u9f50\u65b9\u5f0f\u662f\u53f3\u5bf9\u9f50\u3002\u53ef\u4ee5\u4f7f\u7528<code>setiosflags()</code>\u51fd\u6570\u8bbe\u7f6e\u5bf9\u9f50\u65b9\u5f0f\u3002\u8be5\u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5bf9\u9f50\u65b9\u5f0f\u3002\u53ef\u4ee5\u4f7f\u7528<code>ios::left</code>\u3001<code>ios::right</code>\u548c<code>ios::internal</code>\u6765\u8bbe\u7f6e\u5de6\u5bf9\u9f50\u3001\u53f3\u5bf9\u9f50\u548c\u5185\u90e8\u5bf9\u9f50\u3002\u53ef\u4ee5\u4f7f\u7528<code>resetiosflags()</code>\u51fd\u6570\u91cd\u7f6e\u5bf9\u9f50\u65b9\u5f0f\u3002</li> <li>\u7cbe\u5ea6\uff1a\u4f7f\u7528<code>setprecision()</code>\u51fd\u6570\u8bbe\u7f6e\u8f93\u51fa\u7684\u7cbe\u5ea6\u3002\u8be5\u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u5c0f\u6570\u70b9\u540e\u4fdd\u7559\u7684\u4f4d\u6570\u3002\u53ef\u4ee5\u4f7f\u7528<code>fixed</code>\u548c<code>scientific</code>\u6765\u8bbe\u7f6e\u5b9a\u70b9\u683c\u5f0f\u548c\u79d1\u5b66\u8ba1\u6570\u6cd5\u683c\u5f0f\u3002</li> <li>\u8fdb\u5236\uff1a\u53ef\u4ee5\u4f7f\u7528<code>hex</code>\u3001<code>dec</code>\u548c<code>oct</code>\u6765\u8bbe\u7f6e\u8f93\u51fa\u7684\u8fdb\u5236\u683c\u5f0f\u3002\u53ef\u4ee5\u4f7f\u7528<code>setbase()</code>\u51fd\u6570\u8bbe\u7f6e\u8fdb\u5236\u683c\u5f0f\u3002\u8be5\u51fd\u6570\u7684\u53c2\u6570\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u8868\u793a\u8fdb\u5236\u683c\u5f0f\u3002\u53ef\u4ee5\u4f7f\u7528<code>resetiosflags()</code>\u51fd\u6570\u91cd\u7f6e\u8fdb\u5236\u683c\u5f0f\u3002</li> </ul> <p>\u683c\u5f0f\u5316\u6807\u5fd7\u662f\u7c7b\u5b9a\u4e49\u7684\u679a\u4e3e\u96c6\u5408\uff0c\u6307\u5b9a\u8f93\u5165\u8f93\u51fa\u683c\u5f0f\u5316\u548c\u64cd\u4f5c\u7684\u4e0d\u540c\u9009\u62e9\uff1a <pre><code>enum {skipwsleft, right, internal, dec, oct, hex, showbase,  showpoint,  uppercase,  showpos,  scientific,  fixed,  unitbuf,    stdio}\n</code></pre></p> <p>\u5f15\u7528\u683c\u5f0f\u5316\u6807\u5fd7\uff1a <code>iso::\u683c\u5f0f\u5316\u6807\u5fd7</code></p>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#_6","title":"\u6570\u636e\u6d41\u7684\u683c\u5f0f\u63a7\u5236","text":"<p>ios\u63a7\u5236\u683c\u5f0f\u7684\u51fd\u6570\uff1a - <code>long flags(long lFlags)</code>: \u7528\u53c2\u6570lFlags\u66f4\u65b0\u6807\u5fd7\u5b57\uff0c\u8fd4\u56de\u6807\u5fd7\u5b57 - <code>long flags() const</code>: \u8fd4\u56de\u5f53\u524d\u7684\u683c\u5f0f\u5316\u6807\u5fd7 - <code>long setf(long lFlags)</code>: \u7528\u53c2\u6570lFlags\u8bbe\u7f6e\u683c\u5f0f\u5316\u6807\u5fd7\uff0c\u8fd4\u56de\u5f53\u524d\u7684\u683c\u5f0f\u5316\u6807\u5fd7 - <code>long unsetf(long lFlags)</code>: \u5c06\u53c2\u6570IMask\u6307\u5b9a\u7684\u6807\u5fd7\u4f4d\u6e05\u96f6 - <code>int width(int nw)</code>: \u8bbe\u7f6e\u4e0b\u4e00\u4e2a\u8f93\u51fa\u9879\u7684\u5bbd\u5ea6\u4e3anw - <code>char fill(char cFill)</code>: \u8bbe\u7f6e\u7a7a\u767d\u4f4d\u7f6e\u4ee5\u5b57\u7b26\u53c2\u6570cFill\u586b\u5145 - <code>int precision(int n)</code>: \u8bbe\u7f6e\u6d6e\u70b9\u6570\u7684\u7cbe\u5ea6\u4e3an</p> <p>\u683c\u5f0f\u5316\u8f93\u51fa</p> \u8bbe\u7f6e\u8f93\u51fa\u5bbd\u5ea6 <p><pre><code>#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    string c = \"hworld\";\n    cout.fill('*');\n    cout.width(10);\n    cout.setf(ios::left);\n    cout &lt;&lt; c &lt;&lt; endl;\n    cout.width(15);\n    cout.setf(ios::right,ios::left);\n    cout &lt;&lt; c &lt;&lt; endl;\n    return 0;\n}\n</code></pre> <pre><code>hworld****\n*********hworld\n</code></pre></p> \u8bbe\u7f6e\u8f93\u51fa\u7cbe\u5ea6 <p><pre><code>#include &lt;iostream&gt;\nusing namespace std;\nint main()\n{ \n    double x = 22.0/7 ;\n    int i ;\n    cout &lt;&lt; \"output in fixed :\\n\" ;\n    cout.setf( ios::fixed | ios::showpos ) ;    // \u5b9a\u70b9\u8f93\u51fa\uff0c\u663e\u793a +\n    for( i=1; i&lt;=5; i++ )\n    { cout.precision( i ) ;  cout &lt;&lt; x &lt;&lt; endl ; }\n    cout &lt;&lt; \"output in scientific :\\n\" ;\n// \u6e05\u9664\u539f\u6709\u8bbe\u7f6e\uff0c\u79d1\u5b66\u793a\u6570\u6cd5\u8f93\u51fa\n    cout.setf(ios::scientific, ios::fixed|ios::showpos ) ;  \n    for( i=1; i&lt;=5; i++ )\n    { cout.precision(i) ;   cout &lt;&lt; x*1e5 &lt;&lt; endl ; }\n}\n</code></pre> <pre><code>output in fixed :\n+3.1\n+3.14\n+3.143\n+3.1429\n+3.14286\noutput in scientific :\n3e+05\n3.1e+05\n3.14e+05\n3.143e+05\n3.1429e+05\n</code></pre></p> <p>\u63a7\u5236\u7b26\u662f<code>istream</code>\u548c<code>ostream</code>\u7c7b\u5b9a\u4e49\u4e86\u4e00\u6279\u51fd\u6570\uff0c\u4f5c\u4e3a\u91cd\u8f7d\u63d2\u5165\u8fd0\u7b97\u7b26<code>&lt;&lt;</code>\u548c\u63d0\u53d6\u8fd0\u7b97\u7b26<code>&gt;&gt;</code>\u7684\u53f3\u64cd\u4f5c\u6570\uff0c\u63a7\u5236I/O\u683c\u5f0f\uff1b <code>iostream</code>\u7c7b\u7684\u5e38\u7528\u63a7\u5236\u7b26\u51fd\u6570\u6709\uff1a - <code>endl</code>: \u8f93\u51fa\u4e00\u4e2a\u65b0\u884c\u7b26\uff0c\u5e76\u6e05\u7a7a\u6d41 - <code>ends</code>: \u8f93\u51fa\u4e00\u4e2a\u7a7a\u5b57\u7b26\uff0c\u5e76\u6e05\u7a7a\u6d41 - <code>flush</code>: \u6e05\u7a7a\u6d41\u7f13\u51b2\u533a - <code>dec</code>: \u8bbe\u7f6e\u5341\u8fdb\u5236\u8f93\u5165/\u8f93\u51fa\u683c\u5f0f - <code>oct</code>: \u8bbe\u7f6e\u516b\u8fdb\u5236\u8f93\u5165/\u8f93\u51fa\u683c\u5f0f - <code>hex</code>: \u8bbe\u7f6e\u5341\u516d\u8fdb\u5236\u8f93\u5165/\u8f93\u51fa\u683c\u5f0f - <code>ws</code>: \u63d0\u53d6\u7a7a\u767d\u5b57\u7b26</p> <p>\u4e0d\u540c\u57fa\u6570\u8f93\u51fa</p> <pre><code>#include&lt;iostream&gt;\nusing namespace std;\nint main(){\n    int a,b,c;\n    cout &lt;&lt; \"please input a decimal\";\n    cin &gt;&gt; dec &gt;&gt; a;\n    cout &lt;&lt; \"please input a hexadeimal\";\n    cin &gt;&gt; hex &gt;&gt; b;\n    cout &lt;&lt; \"please input a octal\";\n    cin &gt;&gt; oct &gt;&gt; c;\n    cout &lt;&lt; \" output in deciaml\" &lt;&lt; endl;\n    cout &lt;&lt; a &lt;&lt; b &lt;&lt; c &lt;&lt; endl;\n    cout &lt;&lt; \" output in hexadeimal\" &lt;&lt; endl;\n    cout &lt;&lt; hex &lt;&lt; a  &lt;&lt; b  &lt;&lt; c &lt;&lt; endl;\n    cout &lt;&lt; \" output in octal\" &lt;&lt; endl;\n    cout &lt;&lt; oct &lt;&lt; a  &lt;&lt; b  &lt;&lt; c &lt;&lt; endl;\n}\n</code></pre> <p><code>iomanip</code>\u7684\u63a7\u5236\u7b26\uff1a </p> <p>iomanip \u63a7\u5236\u7b26</p> <pre><code>#include &lt;iostream&gt;\n#include &lt;iomanip&gt;\nusing namespace std ;\nvoid main()\n{ \n        const int k = 618 ;\n        cout &lt;&lt; setw(10) &lt;&lt; setfill('#') &lt;&lt; setiosflags(ios::right) &lt;&lt; k &lt;&lt;endl ;\n        cout &lt;&lt; setw(10) &lt;&lt; setbase(8) &lt;&lt; setfill('*')\n            &lt;&lt; resetiosflags(ios::right) &lt;&lt; setiosflags(ios::left) &lt;&lt; k &lt;&lt; endl ;\n} \n</code></pre> <ul> <li><code>cout.width(n)</code>\u8bbe\u7f6e\u4e0b\u4e00\u4e2a\u8f93\u51fa\u9879\u7684\u5bbd\u5ea6</li> <li><code>cout.fill(c)</code>\u8bbe\u7f6e\u7a7a\u767d\u4f4d\u7f6e\u4ee5\u5b57\u7b26c\u586b\u5145</li> <li><code>cout.setf(ios::left)</code>\u8bbe\u7f6e\u5de6\u5bf9\u9f50</li> <li><code>setiosflags(ios::right)</code>\u8bbe\u7f6e\u53f3\u5bf9\u9f50</li> <li><code>resetiosflags(ios::right)</code>\u53d6\u6d88\u53f3\u5bf9\u9f50</li> <li><code>setprecision(n)</code>\u8bbe\u7f6e\u6d6e\u70b9\u6570\u7684\u7cbe\u5ea6\u4e3an</li> </ul> <p>\u683c\u5f0f\u5316\u8f93\u51fa</p> <p><pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nint main() {\n    int a = 21;\n    cout.setf(ios::showbase);           // \u663e\u793a\u57fa\u6570\u7b26\u53f7(0x\u62160)\n    cout &lt;&lt; \"dec:\" &lt;&lt; a &lt;&lt; endl;        // \u9ed8\u8ba4\u4ee5\u5341\u8fdb\u5236\u5f62\u5f0f\u8f93\u51faa\n\n    cout.unsetf(ios::dec);              // \u7ec8\u6b62\u5341\u8fdb\u5236\u7684\u683c\u5f0f\u8bbe\u7f6e\n    cout.setf(ios::hex);                // \u8bbe\u7f6e\u4ee5\u5341\u516d\u8fdb\u5236\u8f93\u51fa\u7684\u72b6\u6001\n    cout &lt;&lt; \"hex:\" &lt;&lt; a &lt;&lt; endl;        // \u4ee5\u5341\u516d\u8fdb\u5236\u5f62\u5f0f\u8f93\u51faa\n\n    cout.unsetf(ios::hex);              // \u7ec8\u6b62\u5341\u516d\u8fdb\u5236\u7684\u683c\u5f0f\u8bbe\u7f6e\n    cout.setf(ios::oct);                // \u8bbe\u7f6e\u4ee5\u516b\u8fdb\u5236\u8f93\u51fa\u7684\u72b6\u6001\n    cout &lt;&lt; \"oct:\" &lt;&lt; a &lt;&lt; endl;        // \u4ee5\u516b\u8fdb\u5236\u5f62\u5f0f\u8f93\u51faa\n\n    cout.unsetf(ios::oct);              // \u7ec8\u6b62\u516b\u8fdb\u5236\u7684\u683c\u5f0f\u8bbe\u7f6e\n\n    char *pt = \"China\";                 // pt\u6307\u5411\u5b57\u7b26\u4e32\"China\"\n    cout.width(10);                     // \u6307\u5b9a\u57df\u5bbd\u4e3a10\n    cout &lt;&lt; pt &lt;&lt; endl;                 // \u8f93\u51fa\u5b57\u7b26\u4e32\n\n    cout.width(10);                     // \u6307\u5b9a\u57df\u5bbd\u4e3a10\n    cout.fill('*');                     // \u6307\u5b9a\u7a7a\u767d\u5904\u4ee5'*'\u586b\u5145\n    cout &lt;&lt; pt &lt;&lt; endl;                 // \u8f93\u51fa\u5b57\u7b26\u4e32\n\n    double pi = 22.0 / 7.0;             // \u8f93\u51fapi\u503c\n    cout.setf(ios::scientific);         // \u6307\u5b9a\u7528\u79d1\u5b66\u8bb0\u6570\u6cd5\u8f93\u51fa\n    cout &lt;&lt; \"pi=\";                      // \u8f93\u51fa\"pi=\"\n    cout.width(14);                     // \u6307\u5b9a\u57df\u5bbd\u4e3a14\n    cout &lt;&lt; pi &lt;&lt; endl;                 // \u8f93\u51fapi\u503c\n\n    cout.unsetf(ios::scientific);       // \u7ec8\u6b62\u79d1\u5b66\u8bb0\u6570\u6cd5\u72b6\u6001\n    cout.setf(ios::fixed);              // \u6307\u5b9a\u7528\u5b9a\u70b9\u5f62\u5f0f\u8f93\u51fa\n    cout.width(12);                     // \u6307\u5b9a\u57df\u5bbd\u4e3a12\n    cout.setf(ios::showpos);            // \u6b63\u6570\u8f93\u51fa\u201c+\u201d\u53f7\n    cout.setf(ios::internal);           // \u6570\u7b26\u51fa\u73b0\u5728\u5de6\u4fa7\n    cout.precision(6);                  // \u4fdd\u75596\u4f4d\u5c0f\u6570\n    cout &lt;&lt; pi &lt;&lt; endl;                 // \u8f93\u51fapi\uff0c\u6ce8\u610f\u6570\u7b26\u201c+\u201d\u7684\u4f4d\u7f6e\n\n    return 0;\n}\n</code></pre> <pre><code>dec:21\nhex:0x15\noct:025\n    China\n*****China\npi=**3.142857e+00\n+***3.142857\n</code></pre></p>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#_7","title":"\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u6d41","text":"<ul> <li><code>cerr</code>\uff1a\u6807\u51c6\u9519\u8bef\u8f93\u51fa\u6d41\uff0c\u9ed8\u8ba4\u4e0e\u6807\u51c6\u8f93\u51fa\u8bbe\u5907\uff08\u901a\u5e38\u4e3a\u663e\u793a\u5668\uff09\u76f8\u8fde\u3002<code>cerr</code>\u5bf9\u8c61\u662f\u4e00\u4e2a\u8f93\u51fa\u6d41\u5bf9\u8c61\uff0c\u7528\u4e8e\u8f93\u51fa\u9519\u8bef\u4fe1\u606f\u3002<code>cerr</code>\u5bf9\u8c61\u7684\u8f93\u51fa\u683c\u5f0f\u662f\u6587\u672c\u683c\u5f0f\uff0c\u8f93\u51fa\u65f6\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b57\u7b26\u6d41\u3002<ul> <li><code>cerr</code>\u4e0d\u80fd\u88ab\u91cd\u5b9a\u5411\uff0c\u4e0d\u80fd\u88ab\u7f13\u51b2</li> </ul> </li> <li><code>clog</code>\uff1a\u6807\u51c6\u65e5\u5fd7\u8f93\u51fa\u6d41\uff0c\u9ed8\u8ba4\u4e0e\u6807\u51c6\u8f93\u51fa\u8bbe\u5907\uff08\u901a\u5e38\u4e3a\u663e\u793a\u5668\uff09\u76f8\u8fde\u3002<code>clog</code>\u5bf9\u8c61\u662f\u4e00\u4e2a\u8f93\u51fa\u6d41\u5bf9\u8c61\uff0c\u7528\u4e8e\u8f93\u51fa\u65e5\u5fd7\u4fe1\u606f\u3002<code>clog</code>\u5bf9\u8c61\u7684\u8f93\u51fa\u683c\u5f0f\u662f\u6587\u672c\u683c\u5f0f\uff0c\u8f93\u51fa\u65f6\u81ea\u52a8\u8f6c\u6362\u4e3a\u5b57\u7b26\u6d41\u3002<ul> <li><code>clog</code>\u4e0e<code>cerr</code>\u6bd4\uff0c\u53ef\u4ee5\u88ab\u7f13\u51b2\uff0c\u7f13\u51b2\u533a\u6ee1\u65f6\u8f93\u51fa</li> </ul> </li> </ul> <p>\u6240\u6709\u6d41\u90fd\u628a\u6d41\u7684\u72b6\u6001\u5b58\u50a8\u5728\u72b6\u6001\u5b57\u4e2d,\u4e0d\u540c\u6807\u5fd7\u4f4d\u4e2d\u5b58\u50a8\u4e0d\u540c\u7684\u9519\u8bef\u72b6\u6001\u4f4d; \u5305\u542b\u5728\u7c7bios\u7684enum\u6210\u5458\u4e2d </p> <p></p> <p></p> <p>\u6d41<code>cerr</code>\u548c<code>clog</code>\u628a\u663e\u793a\u8f93\u51fa\u5230\u9ed8\u8ba4\u9519\u8bef\u65e5\u5fd7\u4e0a\uff0c\u8be5\u65e5\u5fd7\u901a\u5e38\u662f\u63a7\u5236\u53f0\u663e\u793a\u5668\u3002\u5bf9\u6d41<code>cerr</code>\u7684\u6bcf\u4e2a\u63d2\u5165\u8bf7\u6c42\u5e94\u8be5\u7acb\u5373\u9001\u51fa\u663e\u793a</p> <p>\u5982\u679c\u51fa\u4e8e\u6548\u7387\u7684\u7f18\u6545\uff0c\u5219\u6709\u5fc5\u8981\u7f13\u51b2\u9519\u8bef\u548c\u7cfb\u7edf\u72b6\u6001\u6d88\u606f\uff0c\u8fd9\u6837\u5c31\u5e94\u8be5\u4f7f\u7528\u5e26\u7f13\u51b2\u7684\u9519\u8bef\u6d41<code>clog</code>\u3002</p>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#_8","title":"\u6587\u4ef6\u7684\u8f93\u5165\u8f93\u51fa","text":"<p>C++\u5728\u8fdb\u884c\u6587\u4ef6\u64cd\u4f5c\u65f6\uff0c\u5fc5\u987b\u9996\u5148\u5efa\u7acb\u4e00\u4e2a\u6587\u4ef6\u6d41\uff0c\u628a\u8fd9\u4e2a\u6d41\u4e0e\u5b9e\u9645\u7684\u6587\u4ef6\u76f8\u5173\u8054\uff0c\u7136\u540e\u5c31\u53ef\u4ee5\u6309\u7167\u8981\u6c42\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u3002C++\u7684\u6587\u4ef6\u6d41\u5b9e\u9645\u4e0a\u5c31\u662f\u4ee5\u5916\u5b58\u6587\u4ef6\u4e3a\u8f93\u5165\u8f93\u51fa\u5bf9\u8c61\u7684\u6570\u636e\u6d41\u3002\u8f93\u5165\u6587\u4ef6\u6d41\u662f\u6307\u4ece\u5916\u5b58\u6587\u4ef6\u6d41\u5411\u5185\u5b58\u7684\u8fc7\u7a0b\uff0c\u8f93\u51fa\u6587\u4ef6\u6d41\u662f\u6307\u4ece\u5185\u5b58\u6d41\u5411\u5916\u5b58\u7684\u8fc7\u7a0b</p> <p>c++\u5c06\u6587\u4ef6\u6d41\u5206\u4e3a3\u7c7b\uff1a - <code>ifstream</code>\uff1a\u8f93\u5165\u6587\u4ef6\u6d41\u7c7b\uff0c\u7ee7\u627f\u81ea<code>istream</code>\u7c7b - <code>ofstream</code>\uff1a\u8f93\u51fa\u6587\u4ef6\u6d41\u7c7b\uff0c\u7ee7\u627f\u81ea<code>ostream</code>\u7c7b - <code>fstream</code>\uff1a\u8f93\u5165\u8f93\u51fa\u6587\u4ef6\u6d41\u7c7b\uff0c\u7ee7\u627f\u81ea<code>iostream</code>\u7c7b</p> <p>C++\u7684\u6587\u4ef6I/O\u6a21\u5f0f\u5206\u4e3a\u4e24\u79cd\uff0c\u4e00\u79cd\u4e3a\u683c\u5f0f\u5316\u6587\u5b57\u6a21\u5f0f\uff0c\u53e6\u4e00\u79cd\u4e3a\u4e8c\u8fdb\u5236\u6a21\u5f0f\uff0c\u9ed8\u8ba4\u7684\u6587\u4ef6I/O\u6a21\u5f0f\u4e3a\u6587\u5b57\u6a21\u5f0f</p> <p>\u683c\u5f0f\u5316\u6587\u5b57\u6a21\u5f0f\u9002\u5408\u50a8\u5b58\u5b57\u7b26\u6216\u5b57\u7b26\u4e32\uff0c \u5728\u50a8\u5b58\u6570\u5b57\u65f6\u4f7f\u7528\u4e8c\u8fdb\u5236\u6a21\u5f0f\u662f\u6bd4\u8f83\u5408\u9002\u7684\u3002</p> <p>\u6587\u4ef6\u7684\u6700\u5c0f\u5355\u4f4d\u4e3a\u5b57\u7b26\uff0c\u7531\u5b57\u7b26\u7ec4\u6210\u4e00\u4e2a\u5b57\u6bb5\uff0c\u597d\u51e0\u4e2a\u5b57\u6bb5\u7ec4\u6210\u4e00\u4e2a\u8bb0\u5f55\uff0c\u800c\u4e00\u4e2a\u6587\u4ef6\u5219\u7531\u597d\u51e0\u7b14\u8bb0\u5f55\u7ec4\u6210</p> <p>\u5c06\u6570\u636e\u8f93\u5165\u8f93\u51fa\u5230\u6587\u4ef6\u4e2d\uff0c\u9664\u4e86\u53ef\u4ee5\u4f7f\u7528<code>write()</code>\u548c<code>read()</code>\u51fd\u6570\u5916\uff0c\u8fd8\u53ef\u4ee5\u4f7f\u7528<code>&lt;&lt;</code>\u548c<code>&gt;&gt;</code>\u8fd0\u7b97\u7b26\u3002</p> <p></p>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#_9","title":"\u6587\u4ef6\u7684\u6253\u5f00\u548c\u5173\u95ed","text":""},{"location":"note/courses/OOP/Lecture%208%20Stream/#_10","title":"\u6587\u4ef6\u7684\u6253\u5f00","text":"<pre><code>fstream file;//\u5b9a\u4e49\u4e00\u4e2a\u6587\u4ef6\u6d41\u5bf9\u8c61\n</code></pre> <p>\u6587\u4ef6\u5728\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\u524d\uff0c\u5e94\u5148\u6253\u5f00\uff0c\u5176\u76ee\u7684\u662f\u4e3a\u6587\u4ef6\u6d41\u5bf9\u8c61\u548c\u7279\u5b9a\u7684\u5916\u5b58\u6587\u4ef6\u5efa\u7acb\u5173\u8054\uff0c\u5e76\u6307\u5b9a\u6587\u4ef6\u7684\u64cd\u4f5c\u65b9\u5f0f</p> <ul> <li>\u4f7f\u7528<code>open()</code>\u51fd\u6570\u6253\u5f00\u6587\u4ef6:<code>file.open(\"filename\", mode);</code> <ul> <li>\u6bcf\u4e2a\u88ab\u6253\u5f00\u7684\u6587\u4ef6\u90fd\u6709\u4e00\u4e2a\u6587\u4ef6\u6307\u9488\uff0c\u8be5\u6307\u9488\u7684\u521d\u59cb\u4f4d\u7f6e\u7531\u6253\u5f00\u65b9\u5f0f\u6307\u5b9a\u3002\u6587\u4ef6\u6bcf\u6b21\u8bfb\u5199\u90fd\u4ece\u6587\u4ef6\u6307\u9488\u7684\u5f53\u524d\u4f4d\u7f6e\u5f00\u59cb\u3002\u5f53\u8bfb\u51fa\u6216\u5199\u5165\u4e00\u4e2a\u5b57\u7b26\uff0c\u6307\u9488\u81ea\u52a8\u540e\u79fb\u4e00\u4e2a\u5b57\u8282\u3002\u5f53\u6587\u4ef6\u6307\u9488\u6307\u5411\u6587\u4ef6\u5c3e\u65f6\uff0c\u5c06\u9047\u5230\u6587\u4ef6\u7ed3\u675f\u7b26EOF\uff08\u6587\u4ef6\u7ed3\u675f\u7b26\u5360\u4e00\u4e2a\u5b57\u8282\uff0c\u5176\u503c\u4e3a-1\uff09\u3002\u6b64\u65f6\uff0c\u6d41\u5bf9\u8c61\u7684\u6210\u5458\u51fd\u6570eof()\u7684\u503c\u4e3a\u975e0\u503c\uff08\u4e00\u822c\u4e3a1\uff09\uff0c\u8868\u793a\u6587\u4ef6\u7ed3\u675f<ul> <li>\u6587\u4ef6\u6307\u9488\u7531\u4e24\u79cd\uff0c\u4e00\u4e2a\u662f\u5199\u5165\u6307\u9488\uff0c\u4e00\u4e2a\u662f\u8bfb\u53d6\u6307\u9488\u3002\u5f53\u6587\u4ef6\u88ab\u6253\u5f00\u65f6\uff0c\u8fd9\u4e24\u4e2a\u6307\u9488\u90fd\u88ab\u8bbe\u5b9a\u6307\u5411\u6587\u4ef6\u7684\u8d77\u59cb\u5904</li> <li>\u5728<code>ios</code>\u7c7b\uff0c\u5b9a\u4e49\u4e86\u4e09\u4e2a\u7279\u5b9a\u7684\u6587\u4ef6\u6307\u9488\u3002\u901a\u8fc7\u6307\u5b9a\u51fd\u6570\u4e0e\u7279\u5b9a\u6307\u9488\u7684\u914d\u5408\u4f7f\u7528\u662f\uff0c\u53ef\u4f9b\u5728\u6587\u4ef6\u7684\u4e0d\u540c\u4f4d\u7f6e\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c<ul> <li><code>ios::beg</code>\uff1a\u6587\u4ef6\u5f00\u5934</li> <li><code>ios::cur</code>\uff1a\u5f53\u524d\u6587\u4ef6\u6307\u9488\u4f4d\u7f6e</li> <li><code>ios::end</code>\uff1a\u6587\u4ef6\u672b\u5c3e</li> </ul> </li> </ul> </li> <li>\u7528<code>ios::in</code>\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u53ea\u80fd\u8bfb\u6587\u4ef6\uff0c\u4e0d\u80fd\u5199\u6587\u4ef6\u3002\u5982\u679c\u6587\u4ef6\u4e0d\u5b58\u5728\uff0c\u5219\u6253\u5f00\u5931\u8d25\u3002\u5982\u679c\u4f7f\u7528<code>ifstream</code>\u7c7b\u6253\u5f00\u6587\u4ef6\uff0c\u5c06\u9690\u542b\u4e3a\u8f93\u5165\u6d41\uff0c\u9ed8\u8ba4\u4e3a\"ios:in\",\u5219\u4e0d\u5fc5\u663e\u5f0f\u5730\u58f0\u660e\u6253\u5f00\u65b9\u5f0f</li> <li>\u7528<code>ios::out</code>\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6,\u8868\u793a\u8ba1\u7b97\u673a\u5411\u8be5\u6587\u4ef6\u8f93\u51fa\u6570\u636e\u3002\u5982\u679c\u7528\u7c7b<code>ofstream</code>\u4ea7\u751f\u7684\u6d41\uff0c\u5c06\u9690\u542b\u4e3a\u8f93\u51fa\u6d41\uff0c\u9ed8\u8ba4<code>ios::out|ios::trunc</code>,\u53ef\u4ee5\u4e0d\u5fc5\u663e\u5f0f\u5730\u58f0\u660e\u6253\u5f00\u65b9\u5f0f\u3002\u4ee5\u8fd9\u79cd\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u8fdb\u884c\u8f93\u51fa\u65f6\uff0c\u5982\u679c\u6ca1\u6709\u8fd9\u6837\u7684\u6587\u4ef6\uff0c\u5c06\u521b\u5efa\u4e00\u4e2a\u65b0\u6587\u4ef6\uff1b\u5982\u679c\u6709\u8fd9\u6837\u7684\u6587\u4ef6\uff0c\u5219\u6253\u5f00\u6587\u4ef6\u5e76\u6e05\u7a7a\u6587\u4ef6\uff0c\u8f93\u51fa\u5c06\u8fdb\u5165\u4e00\u4e2a\u7a7a\u6587\u4ef6\u4e2d\u3002</li> <li><code>fstream</code>\u7c7b\u4e0d\u63d0\u4f9b\u9ed8\u8ba4\u7684\u6a21\u5f0f\u503c\uff0c\u6240\u4ee5\u7528<code>fstream</code>\u7c7b\u6253\u5f00\u6587\u4ef6\u65f6\uff0c\u5fc5\u987b\u663e\u5f0f\u5730\u58f0\u660e\u6253\u5f00\u65b9\u5f0f</li> <li>\u5982\u679c\u5e0c\u671b\u4e0d\u5220\u9664\u6587\u4ef6\u539f\u6765\u7684\u6570\u636e\uff0c\u5411\u6587\u4ef6\u672b\u5c3e\uff0c\u6dfb\u52a0\u65b0\u6570\u636e\uff0c\u5219\u53ef\u4ee5\u7528<code>ios::app</code>\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6(\u6587\u4ef6\u5fc5\u987b\u5b58\u5728\uff0c\u800c\u4e14\u53ea\u80fd\u7528\u4e8e\u8f93\u51fa)</li> <li><code>ios::ate</code>\uff1a\u6253\u5f00\u4e00\u4e2a\u5df2\u5b58\u5728\u7684\u6587\u4ef6\uff0c\u6587\u4ef6\u6307\u9488\u81ea\u52a8\u4f4d\u4e8e\u539f\u6709\u6587\u4ef6\u7684\u5c3e\u90e8</li> <li>\u5728\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u6253\u5f00\u7684\u6587\u4ef6\u5747\u4ee5\u6587\u672c\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\u3002\u5728\u7528\u6587\u672c\u6587\u4ef6\u5411\u8ba1\u7b97\u673a\u8f93\u5165\u65f6\uff0c\u628a\u56de\u8f66\u548c\u6362\u884c\u4e24\u4e2a\u5b57\u7b26\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6362\u884c\u7b26\uff0c\u800c\u5728\u8f93\u51fa\u65f6\u628a\u6362\u884c\u7b26\u8f6c\u6362\u4e3a\u56de\u8f66\u548c\u6362\u884c\u4e24\u4e2a\u5b57\u7b26\u3002\u82e5\u9700\u8981\u4ee5\u4e8c\u8fdb\u5236\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u5219\u9700\u8981\u5c06\u6253\u5f00\u65b9\u5f0f\u8bbe\u7f6e\u4e3a<code>ios::binary</code>\u3002\u7528\u4e8c\u8fdb\u5236\u65b9\u5f0f\u65f6\uff0c\u5728\u5185\u5b58\u4e2d\u7684\u6570\u636e\u5f62\u5f0f\u4e0e\u8f93\u51fa\u5230\u5916\u90e8\u6587\u4ef6\u4e2d\u7684\u6570\u636e\u5f62\u5f0f\u5b8c\u5168\u4e00\u81f4\u3002</li> <li>\u6253\u5f00\u65b9\u5f0f\u53ef\u4ee5\u7528\u4f4d\u8fd0\u7b97\u7b26<code>|</code>\u8fde\u63a5\u8d77\u6765\uff0c\u4f8b\u5982<code>ios::in | ios::out | ios::app</code>\uff0c\u8868\u793a\u4ee5\u8bfb\u5199\u65b9\u5f0f\u6253\u5f00\u6587\u4ef6\uff0c\u5e76\u5728\u6587\u4ef6\u672b\u5c3e\u6dfb\u52a0\u65b0\u6570\u636e</li> </ul> </li> <li>\u4f7f\u7528\u6784\u9020\u51fd\u6570\u6253\u5f00\u6587\u4ef6\uff0c\u4e0e<code>open()</code>\u51fd\u6570\u7c7b\u4f3c     <pre><code>ifstream file(\"filename\", ios::in);\nofstream file(\"filename\", ios::out);\nfstream file(\"filename\", ios::in | ios::out);\n</code></pre><ul> <li><code>ifstream</code>\u7c7b\u7684\u6784\u9020\u51fd\u6570\u9690\u542b\u4e3a\u8f93\u5165\u6d41\uff0c\u9ed8\u8ba4<code>ios::in</code></li> <li><code>ofstream</code>\u7c7b\u7684\u6784\u9020\u51fd\u6570\u9690\u542b\u4e3a\u8f93\u51fa\u6d41\uff0c\u9ed8\u8ba4<code>ios::out|ios::trunc</code></li> <li>\u53ea\u6709\u5728\u6210\u529f\u6253\u5f00\u6587\u4ef6\u4e4b\u540e\uff0c\u624d\u80fd\u5bf9\u6587\u4ef6\u8fdb\u884c\u8bfb\u5199\u64cd\u4f5c\uff0c\u5982\u679c\u7531\u4e8e\u67d0\u4e9b\u539f\u56e0\u6253\u4e0d\u5f00\u6587\u4ef6\uff0c\u5219\u6d41\u53d8\u91cf\u7684\u503c\u4e3a0\u3002\u4e3a\u4e86\u786e\u4fdd\u6210\u529f\u6253\u5f00\u6587\u4ef6\uff1a     <pre><code>if (!file) {\n    cout &lt;&lt; \"open file error!\" &lt;&lt; endl;\n    exit(1);\n}\n</code></pre></li> </ul> </li> </ul>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#_11","title":"\u6587\u4ef6\u7684\u5173\u95ed","text":"<p>\u5f53\u5bf9\u4e00\u4e2a\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c\u5b8c\u6210\u540e\uff0c\u4e3a\u4e86\u4fdd\u8bc1\u6570\u636e\u5b89\u5168\uff0c\u5207\u65ad\u6587\u4ef6\u4e0e\u6d41\u7684\u8054\u7cfb\uff0c\u5e94\u53ca\u65f6\u5173\u95ed\u6587\u4ef6\u3002 <pre><code>file.close();\n</code></pre> \u5173\u95ed\u8fd9\u6837\u7684\u8fde\u63a5\u5e76\u4e0d\u4f1a\u5220\u9664\u6d41\uff0c\u800c\u53ea\u662f\u65ad\u5f00\u6d41\u4e0e\u6587\u4ef6\u7684\u8fde\u63a5\u3002\u800c\u6d41\u5bf9\u8c61\u8fd8\u4ecd\u7136\u5b58\u5728\uff0c\u5e76\u53ef\u4ee5\u91cd\u65b0\u8fde\u63a5\u5230\u540c\u4e00\u4e2a\u6587\u4ef6\u6216\u53e6\u4e00\u4e2a\u6587\u4ef6\u3002</p>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#_12","title":"\u6587\u672c\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c","text":"<ul> <li>\u7528\u6d41\u8f93\u5165\u8fd0\u7b97\u7b26<code>&gt;&gt;</code>\u548c\u8f93\u51fa\u8fd0\u7b97\u7b26<code>&lt;&lt;</code>\u8f93\u5165\u8f93\u51fa\u6807\u51c6\u7c7b\u578b\u7684\u6570\u636e\uff0c\u5728\u5bf9\u6587\u4ef6\u7684\u64cd\u4f5c\u4e2d\uff0c\u53ef\u4ee5\u901a\u8fc7\u5bf9\u6587\u4ef6\u6d41\u5bf9\u8c61\u4f7f\u7528<code>&gt;&gt;</code>\u548c<code>&lt;&lt;</code>\u8fd0\u7b97\u7b26\u6765\u5b9e\u73b0\u5bf9\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c</li> <li>\u7531\u4e8e<code>ifstream</code>\u3001<code>ofstream</code>\u548c<code>fstream</code>\u7c7b\u7ee7\u627f\u4e86<code>istream</code>\u3001<code>ostream</code>\u548c<code>iostream</code>\u7c7b\u7684<code>put</code>\u3001<code>get</code>\u548c<code>getline</code>\u6210\u5458\u51fd\u6570\uff0c\u56e0\u6b64\u53ef\u4ee5\u4f7f\u7528put\u3001<code>get</code>\u548c<code>getline</code>\u6210\u5458\u51fd\u6570\u8fdb\u884c\u5b57\u7b26\u7684\u8f93\u5165\u8f93\u51fa\u3002</li> </ul>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#_13","title":"\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u8bfb\u5199\u64cd\u4f5c","text":"<p>\u4e8c\u8fdb\u5236\u6587\u4ef6\u4e0d\u540c\u6587\u672c\u6587\u4ef6\u4ee5ASCII\u7801\u7684\u5f62\u5f0f\u5b58\u50a8\u6570\u636e\uff0c\u4e8c\u8fdb\u5236\u6587\u4ef6\u4ee5\u4e8c\u8fdb\u5236\u7684\u5f62\u5f0f\u5b58\u50a8\u6570\u636e\u3002\u5bf9\u4e8e\u5b57\u7b26\u6765\u8bf4\uff0c\u4e8c\u8fdb\u5236\u8868\u793a\u4e0e\u6587\u672c\u8868\u793a\u662f\u4e00\u6837\u7684\uff0c\u5373\u5b57\u7b26\u7684ASCII\u7801\u7684\u4e8c\u8fdb\u5236\u8868\u793a\u3002\u4f46\u5bf9\u4e8e\u6570\u5b57\u6765\u8bf4\uff0c\u7531\u4e8e\u4e0d\u9700\u8981\u8f6c\u6362\uff0c\u7528\u4e8c\u8fdb\u5236\u683c\u5f0f\u4fdd\u5b58\u6570\u5b57\u901f\u5ea6\u66f4\u5feb\uff0c\u5360\u7528\u7a7a\u95f4\u66f4\u5c0f\uff0c\u5e76\u53ef\u4ee5\u5927\u5757\u5730\u5b58\u50a8\u6570\u636e</p> <p>\u5bf9\u4e8c\u8fdb\u5236\u6587\u4ef6\u7684\u8bfb\u5199\uff0c\u4e3b\u8981\u7528<code>istream</code>\u7c7b\u7684<code>read()</code>\u65b9\u6cd5\u548c<code>ostream</code>\u7c7b\u7684<code>write()</code>\u65b9\u6cd5\u3002</p>"},{"location":"note/courses/OOP/Lecture%208%20Stream/#_14","title":"\u4f7f\u7528\u6587\u4ef6\u6307\u9488\u6210\u5458\u51fd\u6570\u5b9e\u73b0\u968f\u673a\u5b58\u53d6","text":"<p>\u968f\u673a\u5b58\u53d6\u6307\u5728\u8bbf\u95ee\u6587\u4ef6\u4e2d\u7684\u5143\u7d20\u65f6\uff0c\u4e0d\u5fc5\u8003\u8651\u5404\u4e2a\u5143\u7d20\u7684\u6392\u5217\u6b21\u5e8f\u6216\u4f4d\u7f6e\uff0c\u6839\u636e\u9700\u8981\u76f4\u63a5\u8bbf\u95ee\u6587\u4ef6\u4e2d\u4efb\u4e00\u4e2a\u5143\u7d20\u3002\u4e3a\u4e86\u8fdb\u884c\u968f\u673a\u5b58\u53d6\uff0c\u5fc5\u987b\u5148\u786e\u5b9a\u6587\u4ef6\u6307\u9488\u7684\u4f4d\u7f6e\u3002</p> <p>\u6587\u4ef6\u6d41\u63d0\u4f9b\u4e86\u5e38\u7528\u7684\u6587\u4ef6\u6307\u9488\u6210\u5458\u51fd\u6570\uff1a </p> <p>\u53c2\u6570\u4e2d\u7684\u4f4d\u7f6e\u548c\u4f4d\u79fb\u91cf\u5747\u4e3a\u957f\u6574\u578b\uff0c\u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\u3002\u53c2\u7167\u4f4d\u7f6e\u53ef\u4ee5\u662f\uff1a - <code>ios::beg</code>\uff1a\u6587\u4ef6\u5f00\u5934 - <code>ios::cur</code>\uff1a\u5f53\u524d\u6587\u4ef6\u6307\u9488\u4f4d\u7f6e - <code>ios::end</code>\uff1a\u6587\u4ef6\u672b\u5c3e</p> <p>\u968f\u673a\u5b58\u53d6\u6587\u4ef6</p> fin\u662f\u4e00\u4e2aifstream\u5bf9\u8c61\u6709\u4e00\u4e2a\u6574\u578b\u6570\u7ec4\uff0c\u542b10\u4e2a\u5143\u7d20\uff0c\u4ece\u952e\u76d8\u8f93\u516510\u4e2a\u6574\u6570\u7ed9\u6570\u7ec4\uff0c\u5c06\u6b64\u6570\u7ec4\u9001\u5230\u78c1\u76d8\u6587\u4ef6\u4e2d\u5b58\u653e\u8bbe\u7f6e\u4f4d\u7f6e\u6307\u9488 <pre><code>fin.seekg(10);  //\u628a\u8f93\u5165\u4f4d\u7f6e\u6307\u9488\u79fb\u52a8\u5230\u79bb\u6587\u4ef6\u593410\u4e2a\u5b57\u8282\u5904\nfin.seekg(10,ios::beg);  //\u628a\u8f93\u5165\u4f4d\u7f6e\u6307\u9488\u79fb\u52a8\u5230\u79bb\u6587\u4ef6\u593410\u4e2a\u5b57\u8282\u5904\nfin.seekg(5,ios::cur);  //\u628a\u8f93\u5165\u4f4d\u7f6e\u6307\u9488\u79fb\u52a8\u5230\u5f53\u524d\u4f4d\u7f6e\u540e5\u4e2a\u5b57\u8282\u5904\nfin.seekg(-20,ios::end);  //\u628a\u8f93\u5165\u4f4d\u7f6e\u6307\u9488\u5411\u524d\u79fb\u52a8\u5230\u79bb\u6587\u4ef6\u5c3e20\u4e2a\u5b57\u8282\u5904\n</code></pre> <pre><code>#include &lt;fstream&gt;\nusing namespace std;\nint main( )\n{\n    int a[10];\n    ofstream outfile(\u2033f1.dat\u2033,ios::out);//\u5b9a\u4e49\u6587\u4ef6\u6d41\u5bf9\u8c61\uff0c\u6253\u5f00\u78c1\u76d8\u6587\u4ef6\u2033f1.dat\u2033\n    if(!outfile)                        //\u5982\u679c\u6253\u5f00\u5931\u8d25\uff0coutfile\u8fd4\u56de0\u503c\n        {cerr&lt;&lt;\u2033open error!\u2033&lt;&lt;endl;\n        exit(1);\n        }\n    cout&lt;&lt;\"enter 10 integer numbers:\"&lt;&lt;endl;\n    for(int i=0;i&lt;10;i++)\n        {cin&gt;&gt;a[i];\n        outfile&lt;&lt;a[i]&lt;&lt;\u2033 \u2033;}            //\u5411\u78c1\u76d8\u6587\u4ef6\u2033f1.dat\u2033\u8f93\u51fa\u6570\u636e\n    outfile.close();                   //\u5173\u95ed\u78c1\u76d8\u6587\u4ef6\u2033f1.dat\u2033\n    return 0;\n} \n</code></pre> <pre><code>#include &lt;iostream&gt;\n#include &lt;fstream&gt;\nusing namespace std;\nvoid main() { \nchar ch;\nifstream tfile(\"payroll\",ios::binary|ios::nocreate);\nif(tfile)\n{ tfile.seekg(8);\n    while(tfile.good()) \n    { tfile.get(ch);\n    if (!ch) break; cout&lt;&lt;ch; }\n}\nelse \n{ cout&lt;&lt;\"ERROR: Cannot open file 'payroll'.\"&lt;&lt;endl; }\ntfile.close();\n}\n</code></pre>"},{"location":"note/courses/OOP/Lecture%209%20Exception/","title":"\u5f02\u5e38\u5904\u7406","text":""},{"location":"note/courses/OOP/Lecture%209%20Exception/#1","title":"1 \u5f02\u5e38\u3001\u5f02\u5e38\u5904\u7406\u7684\u6982\u5ff5","text":"<p>\u5f02\u5e38\u5c31\u662f\u5728\u7a0b\u5e8f\u8fd0\u884c\u8fc7\u7a0b\u4e2d\u53d1\u751f\u7684\u4e0d\u6b63\u5e38\u7684\u4e8b\u4ef6\u800c\u5bfc\u81f4\u504f\u79bb\u6b63\u5e38\u6d41\u7a0b\u7684\u73b0\u8c61</p> <p>\u5f02\u5e38\u5904\u7406\u5c31\u662f\u5728\u8fd0\u884c\u65f6\u523b\u5bf9\u5f02\u5e38\u8fdb\u884c\u68c0\u6d4b\u3001\u6355\u83b7\u3001\u63d0\u793a\u3001\u4f20\u9012\u7b49\u8fc7\u7a0b</p> <p>\u8fd9\u91cc\u7684\u5f02\u5e38\u6307\u7684\u662f\u8f6f\u4ef6\u5f02\u5e38</p> <p>c++\u8bed\u8a00\u5f02\u5e38\u5904\u7406\u673a\u5236\u7684\u57fa\u672c\u601d\u60f3\u662f\u5c06\u5f02\u5e38\u7684\u68c0\u6d4b\u4e0e\u5904\u7406\u5206\u79bb</p> <ul> <li>\u8fc7\u7a0b1\uff1a\u5f53\u5728\u4e00\u4e2a\u51fd\u6570\u4f53\u4e2d\u68c0\u6d4b\u5230\u5f02\u5e38\u6761\u4ef6\u5b58\u5728\uff0c\u4f46\u5374\u65e0\u6cd5\u786e\u5b9a\u76f8\u5e94\u7684\u5904\u7406\u65b9\u6cd5\u65f6\uff0c\u8be5\u51fd\u6570\u5c06\u5f15\u53d1\u4e00\u4e2a\u5f02\u5e38\uff0c\u7531\u51fd\u6570\u7684\u76f4\u63a5\u6216\u95f4\u63a5\u8c03\u7528\u8005\u6355\u83b7\u8fd9\u4e2a\u5f02\u5e38\u5e76\u5904\u7406\u8fd9\u4e2a\u9519\u8bef\u3002</li> <li>\u8fc7\u7a0b2\uff1a\u5982\u679c\u7a0b\u5e8f\u59cb\u7ec8\u6ca1\u6709\u5904\u7406\u8fd9\u4e2a\u5f02\u5e38\uff0c\u6700\u7ec8\u5b83\u4f1a\u88ab\u4f20\u5230C++\u8fd0\u884c\u7cfb\u7edf\u90a3\u91cc\uff0c\u8fd0\u884c\u7cfb\u7edf\u6355\u83b7\u5f02\u5e38\u540e\uff0c\u901a\u5e38\u53ea\u662f\u7b80\u5355\u5730\u7ec8\u6b62\u8fd9\u4e2a\u7a0b\u5e8f\u3002</li> </ul>"},{"location":"note/courses/OOP/Lecture%209%20Exception/#11","title":"1.1 \u5f02\u5e38\u5904\u7406\u7684\u57fa\u672c\u601d\u60f3","text":""},{"location":"note/courses/OOP/Lecture%209%20Exception/#2","title":"2 \u5f02\u5e38\u5904\u7406\u7684\u5b9e\u73b0","text":"<ul> <li>\u629b\u63b7\u5f02\u5e38\u7684\u7a0b\u5e8f\u6bb5\uff1a<code>throw \u8868\u8fbe\u5f0f</code></li> <li> <p>\u6355\u83b7\u5e76\u5904\u7406\u5f02\u5e38\u7684\u7a0b\u5e8f\u6bb5 <pre><code>try {\n    // \u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u7684\u4ee3\u7801\n} catch (\u5f02\u5e38\u7c7b\u578b \u5f02\u5e38\u5bf9\u8c61) {\n    // \u5904\u7406\u5f02\u5e38\u7684\u4ee3\u7801\n} catch (\u5f02\u5e38\u7c7b\u578b) {\n    // \u5904\u7406\u5f02\u5e38\u7684\u4ee3\u7801\n} catch (...) {\n    // \u5904\u7406\u6240\u6709\u5f02\u5e38\u7684\u4ee3\u7801\n}\n</code></pre></p> </li> <li> <p>\u82e5\u6709\u5f02\u5e38\u5219\u901a\u8fc7<code>throw</code>\u8bed\u53e5\u629b\u51fa\u5f02\u5e38</p> </li> <li><code>try</code>\u8bed\u53e5\u5757\u4e2d\u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u7684\u4ee3\u7801</li> <li><code>catch</code>\u8bed\u53e5\u5757\u4e2d\u5904\u7406\u5f02\u5e38\u7684\u4ee3\u7801</li> <li><code>catch</code>\u5b50\u53e5\u6309\u5176\u5728<code>try</code>\u8bed\u53e5\u5757\u4e2d\u51fa\u73b0\u7684\u987a\u5e8f\u88ab\u68c0\u67e5\uff0c\u7c7b\u578b\u5339\u914d\u7684<code>catch</code>\u5b50\u53e5\u5c06\u6355\u83b7\u5e76\u5904\u7406\u5f02\u5e38</li> <li>\u5982\u679c\u627e\u4e0d\u5230\u5339\u914d\u7684\u5904\u7406\u4ee3\u7801\uff0c\u5219\u81ea\u52a8\u8c03\u7528\u6807\u6ce8\u5e93\u51fd\u6570<code>terminate()</code>\u7ec8\u6b62\u7a0b\u5e8f,\u5176\u529f\u80fd\u662f\u8c03\u7528<code>abort()</code>\u51fd\u6570\u7ec8\u6b62\u7a0b\u5e8f</li> </ul>"},{"location":"note/courses/OOP/Lecture%209%20Exception/#21","title":"2.1 \u5f02\u5e38\u5904\u7406\u7684\u57fa\u672c\u8bed\u6cd5","text":"<p><code>throw</code>\u8bed\u53e5\u7684\u57fa\u672c\u8bed\u6cd5 <pre><code>throw \u5f02\u5e38\u5bf9\u8c61;\n</code></pre> <code>throw</code>\u8bed\u53e5\u7684\u4f5c\u7528\u662f\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61\uff0c\u5f02\u5e38\u5bf9\u8c61\u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u5305\u62ec\u5185\u7f6e\u7c7b\u578b\u3001\u7c7b\u7c7b\u578b\u3001\u6307\u9488\u7c7b\u578b\u7b49\u3002 <code>throw</code>\u4e00\u822c\u662f\u7531<code>throw</code>\u8fd0\u7b97\u7b26\u548c\u4e00\u4e2a\u6570\u636e\u7ec4\u6210</p> <p><code>try-catch</code>\u8bed\u53e5\u7684\u57fa\u672c\u8bed\u6cd5 <pre><code>try {\n    // \u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u7684\u4ee3\u7801\n} catch (\u5f02\u5e38\u7c7b\u578b \u5f02\u5e38\u5bf9\u8c61) {\n    // \u5904\u7406\u5f02\u5e38\u7684\u4ee3\u7801\n} catch (\u5f02\u5e38\u7c7b\u578b) {\n    // \u5904\u7406\u5f02\u5e38\u7684\u4ee3\u7801\n} catch (...) {\n    // \u5904\u7406\u6240\u6709\u5f02\u5e38\u7684\u4ee3\u7801\n}\n</code></pre> <code>try</code>\u8bed\u53e5\u5757\u4e2d\u5305\u542b\u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u7684\u4ee3\u7801\uff0c\u5982\u679c\u53d1\u751f\u5f02\u5e38\uff0c\u5219\u4f1a\u8df3\u8f6c\u5230\u5bf9\u5e94\u7684<code>catch</code>\u8bed\u53e5\u5757\u4e2d\u8fdb\u884c\u5904\u7406\u3002</p> <p>\u5f02\u5e38\u5904\u7406\u7684\u6267\u884c\u8fc7\u7a0b</p> <ul> <li>\u63a7\u5236\u901a\u8fc7\u6b63\u5e38\u7684\u987a\u5e8f\u6267\u884c\u5012<code>try</code>\u8bed\u53e5\uff0c\u7136\u540e\u6267\u884c<code>try</code>\u8bed\u53e5\u5757\u4e2d\u7684\u4ee3\u7801</li> <li>\u5982\u679c<code>try</code>\u8bed\u53e5\u5757\u4e2d\u7684\u4ee3\u7801\u6ca1\u6709\u53d1\u751f\u5f02\u5e38\uff0c\u5219\u8df3\u8fc7\u6240\u6709\u7684<code>catch</code>\u8bed\u53e5\u5757\uff0c\u7ee7\u7eed\u6267\u884c<code>try</code>\u8bed\u53e5\u5757\u540e\u9762\u7684\u4ee3\u7801</li> <li>\u5982\u679c\u5728\u4fdd\u62a4\u6bb5\u6267\u884c\u671f\u95f4\u6216\u5728\u4fdd\u62a4\u6bb5\u8c03\u7528\u7684\u4efb\u4f55\u51fd\u6570\u4e2d(\u76f4\u63a5\u6216\u95f4\u63a5\u7684\u8c03\u7528)\u6709\u5f02\u5e38\u88ab\u629b\u63b7\uff0c\u5219\u4ece<code>throw</code>\u521b\u5efa\u7684\u5bf9\u8c61\u4e2d\u521b\u5efa\u4e00\u4e2a\u5f02\u5e38\u5bf9\u8c61\uff08\u9690\u542b\u8c03\u7528\u4e00\u4e2a\u62f7\u8d1d\u6784\u9020\u51fd\u6570\uff09,\u7a0b\u5e8f\u8f6c\u5230<code>catch</code>\u5904\u7406\u6bb5     \u8fd9\u4e00\u70b9\u4e0a\uff0c\u7f16\u8bd1\u5668\u80fd\u591f\u5904\u7406\u629b\u63b7\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5728\u66f4\u9ad8\u6267\u884c\u4e0a\u4e0b\u6587\u4e2d\u5bfb\u627e\u4e00\u4e2a<code>catch</code>\u8bed\u53e5(\u6216\u4e00\u4e2a\u80fd\u5904\u7406\u4efb\u4f55\u7c7b\u578b\u5f02\u5e38\u7684<code>catch</code>\u5904\u7406\u7a0b\u5e8f)\u3002<code>catch</code>\u5904\u7406\u7a0b\u5e8f\u6309\u5176\u5728<code>try</code>\u5757\u540e\u51fa\u73b0\u7684\u987a\u5e8f\u88ab\u68c0\u67e5\u3002\u5982\u679c\u6ca1\u6709\u627e\u5230\u5408\u9002\u7684\u5904\u7406\u7a0b\u5e8f\uff0c\u5219\u7ee7\u7eed\u68c0\u67e5\u4e0b\u4e00\u4e2a\u52a8\u6001\u5c01\u95ed\u7684try\u5757\u3002\u6b64\u5904\u7406\u7ee7\u7eed\u4e0b\u53bb\uff0c\u76f4\u5230\u6700\u5916\u5c42\u7684\u5c01\u95ed<code>try</code>\u5757\u88ab\u68c0\u67e5\u5b8c\u3002</li> <li>\u5982\u679c\u5339\u914d\u7684<code>catch</code>\u5904\u7406\u5668\u672a\u627e\u5230\uff0c\u5219<code>terminate()</code>\u5c06\u88ab\u81ea\u52a8\u8c03\u7528</li> <li>\u5982\u679c\u627e\u5230\u4e86\u4e00\u4e2a\u5339\u914d\u7684<code>catch</code>\u5904\u7406\u5668\uff0c\u4e14\u5b83\u901a\u8fc7\u503c\u8fdb\u884c\u6355\u83b7\uff0c\u5219\u5176\u5f62\u53c2\u901a\u8fc7\u62f7\u8d1d\u5f02\u5e38\u5bf9\u8c61\u8fdb\u884c\u521d\u59cb\u5316\u3002\u5982\u679c\u5b83\u901a\u8fc7\u5f15\u7528\u8fdb\u884c\u6355\u83b7\uff0c\u5219\u53c2\u91cf\u88ab\u521d\u59cb\u5316\u4e3a\u6307\u5411\u5f02\u5e38\u5bf9\u8c61\uff0c\u5728\u5f62\u53c2\u88ab\u521d\u59cb\u5316\u4e4b\u540e\uff0c\u201c\u5faa\u73af\u5c55\u5f00\u6808\u201d\u7684\u8fc7\u7a0b\u5f00\u59cb\uff0c\u8fd9\u5305\u62ec\u5bf9\u90a3\u4e9b\u5728\u4e0e<code>catch</code>\u5904\u7406\u5668\u76f8\u5bf9\u4e8e\u7684try\u5757\u5f00\u59cb\u548c\u5f02\u5e38\u4e22\u5f03\u5730\u70b9\u4e4b\u95f4\u521b\u5efa\u4f46\u5c1a\u672a\u6790\u6784\u7684\u6240\u6709\u81ea\u52a8\u5bf9\u8c61\u7684\u6790\u6784</li> </ul> <p><code>throw</code>\u5757\u7684\u91cd\u8981\u6027\uff1a\u5f02\u5e38\u51fa\u73b0\u65f6\u53d1\u51fa\u4e00\u4e2a\u5bf9\u8c61\uff0c\u7f16\u8bd1\u5668\u521d\u59cb\u5316\u4e00\u4e2a<code>throw</code>\u64cd\u4f5c\u6570\u7684\u9759\u6001\u7c7b\u578b\u7684\u4e34\u65f6\u5bf9\u8c61</p> <p>\u5728c++\u5f02\u5e38\u5904\u7406\u5757\u4e2d\uff0c\u6bd4\u8f83\u7279\u6b8a\u7684\u662f<code>catch(...)</code>\uff0c\u5b83\u53ef\u4ee5\u6355\u83b7\u6240\u6709\u7c7b\u578b\u7684\u5f02\u5e38 <pre><code>try {\n    // \u53ef\u80fd\u53d1\u751f\u5f02\u5e38\u7684\u4ee3\u7801\n} catch (...) {\n    // \u5904\u7406\u6240\u6709\u5f02\u5e38\u7684\u4ee3\u7801\n}\n</code></pre> \u56e0\u6b64\uff0c<code>catch(...)</code>\u8bed\u53e5\u5757\u5fc5\u987b\u653e\u5728\u6240\u6709\u5176\u4ed6<code>catch</code>\u8bed\u53e5\u5757\u7684\u6700\u540e\u9762\uff0c\u56e0\u4e3a\u5b83\u4f1a\u6355\u83b7\u6240\u6709\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5305\u62ec\u5176\u4ed6<code>catch</code>\u8bed\u53e5\u5757\u4e2d\u6355\u83b7\u7684\u5f02\u5e38</p> <p>Example</p> \u5904\u7406\u96640\u5f02\u5e38\u5f02\u5e38\u5904\u7406\u4ee3\u7801\u7684\u641c\u7d22 <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\ndouble fun(double a, double b) {\n    if (b == 0) {\n        throw b;//\u9664\u6570\u4e3a0\uff0c\u629b\u51fa\u5f02\u5e38\n    }\n    return a / b;\n}\n\nint main(){\n    double res;\n    try//\u5b9a\u4e49\u5f02\u5e38\n    {\n        res = fun(4,5);\n        cout &lt;&lt; \"4/5 = \" &lt;&lt; res &lt;&lt; endl;\n        res = fun(4,0);//\u51fa\u73b0\u5f02\u5e38\uff0c\u51fd\u6570\u5185\u90e8\u4f1a\u629b\u51fa\u5f02\u5e38\n    }\n    catch(double num){\n        cout &lt;&lt; num &lt;&lt; endl;\n        cerr &lt;&lt; \"\u9664\u6570\u4e0d\u80fd\u4e3a0\" &lt;&lt; endl;\n        exit(1);\n    }\n    return 0;\n}\n</code></pre> <pre><code>#include &lt;iostream&gt;\nusing namespace std;\n\nvoid f3(){\n    double a = 0;\n    try{\n        throw a;//\u629b\u51fadouble\u7c7b\u578b\u5f02\u5e38\u4fe1\u606f\n    }\n    catch(double){\n        cout&lt;&lt;\"ok3\"&lt;&lt;endl;\n    }\n    cout&lt;&lt;\"end3\"&lt;&lt;endl;\n}\nvoid f2(){\n    try{\n        f3();\n    }\n    catch(int){\n        cout&lt;&lt;\"ok2\"&lt;&lt;endl;\n    }\n    cout&lt;&lt;\"end2\"&lt;&lt;endl;\n}\nvoid f1(){\n    try{\n        f2();\n    }\n    catch(char){\n        cout&lt;&lt;\"ok1\"&lt;&lt;endl;\n    }\n    cout&lt;&lt;\"end1\"&lt;&lt;endl;\n}\n\nint main(){\n    try{\n        f1();\n    }\n    catch(double){\n        cout&lt;&lt;\"ok\"&lt;&lt;endl;\n    }\n    cout&lt;&lt;\"end\"&lt;&lt;endl;\n    return 0;\n}\n</code></pre> <p>\u5f02\u5e38\u5904\u7406\u6d41\u7a0b\uff1a - \u628a\u53ef\u80fd\u51fa\u73b0\u5f02\u5e38\u7684\u3001\u9700\u8981\u68c0\u67e5\u7684\u8bed\u53e5\u6216\u7a0b\u5e8f\u6bb5\u653e\u5728try\u540e\u9762\u7684\u82b1\u62ec\u53f7\u4e2d - \u7a0b\u5e8f\u5f00\u59cb\u4e4b\u540e\uff0c\u6309\u6b63\u5e38\u7684\u987a\u5e8f\u6267\u884c\u5230try\u8bed\u53e5\uff0c\u5f00\u59cb\u6267\u884ctry\u8bed\u53e5\u5757\u4e2d\u7684\u4ee3\u7801 - \u5982\u679ctry\u8bed\u53e5\u5757\u4e2d\u7684\u4ee3\u7801\u6ca1\u6709\u53d1\u751f\u5f02\u5e38\uff0c\u5219\u8df3\u8fc7\u6240\u6709\u7684catch\u8bed\u53e5\u5757\uff0c\u7ee7\u7eed\u6267\u884ctry\u8bed\u53e5\u5757\u540e\u9762\u7684\u4ee3\u7801 - \u5982\u679c\u5728\u6267\u884ctry\u8bed\u53e5\u5757\u5185\u7684\u8bed\u53e5\uff08\u5305\u62ec\u5176\u6240\u8c03\u7528\u7684\u51fd\u6570\uff09\u8fc7\u7a0b\u4e2d\u53d1\u751f\u5f02\u5e38\uff0c\u5219throw\u8fd0\u7b97\u7b26\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u4fe1\u606f\u3002<code>throw</code>\u8fd0\u7b97\u7b26\u629b\u51fa\u4e00\u4e2a\u5f02\u5e38\u4fe1\u606f\u4e4b\u540e\uff0c\u6d41\u7a0b\u7acb\u5373\u79bb\u5f00\u672c\u51fd\u6570\uff0c\u8f6c\u5230\u5176\u4e0a\u4e00\u7ea7\u7684\u51fd\u6570\u3002 - \u8fd9\u4e2a\u5f02\u5e38\u4fe1\u606f\u63d0\u4f9b\u7ed9try-catch\u7ed3\u6784\uff0c\u7cfb\u7edf\u4f1a\u5bfb\u627e\u4e0e\u4e4b\u5339\u914d\u7684catch\u5b50\u53e5 - \u5728\u8fdb\u884c\u5f02\u5e38\u5904\u7406\u540e\uff0c\u7a0b\u5e8f\u5e76\u4e0d\u4f1a\u81ea\u52a8\u7ec8\u6b62\uff0c\u7ee7\u7eed\u6267\u884ccatch\u5b50\u53e5\u540e\u9762\u7684\u8bed\u53e5</p>"},{"location":"note/courses/OOP/Lecture%209%20Exception/#22","title":"2.2 \u5f02\u5e38\u63a5\u53e3\u58f0\u660e","text":"<p>C++\u8bed\u8a00\u63d0\u4f9b\u4e86\u5f02\u5e38\u63a5\u53e3\u58f0\u660e\u8bed\u6cd5\uff0c\u5f02\u5e38\u63a5\u53e3\u58f0\u660e\u4e5f\u79f0\u4e3a\u5f02\u5e38\u63a5\u53e3\u58f0\u660e\uff0c\u5229\u7528\u5b83\u53ef\u4ee5\u6e05\u6670\u5730\u544a\u8bc9\u4f7f\u7528\u8005\u5f02\u5e38\u629b\u51fa\u7684\u7c7b\u578b\uff0c\u5f02\u5e38\u63a5\u53e3\u58f0\u660e\u518d\u6b21\u4f7f\u7528\u5173\u952e\u5b57throw\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a <pre><code>\u8fd4\u56de\u503c\u7c7b\u578b \u51fd\u6570\u540d(\u53c2\u6570\u5217\u8868) throw(\u5f02\u5e38\u7c7b\u578b1, \u5f02\u5e38\u7c7b\u578b2, ...);\n</code></pre></p> <p>Example</p> <p><pre><code>double triangle(double, double, double) throw(double);\n</code></pre> \u53ea\u80fd\u629b\u51fa<code>duoble</code>\u7c7b\u578b\u7684\u5f02\u5e38 <pre><code>double triangle(double, double, double) throw(int, double);\n</code></pre> \u53ef\u4ee5\u629b\u51fa<code>int</code>\u548c<code>double</code>\u7c7b\u578b\u7684\u5f02\u5e38\u4fe1\u606f\u3002\u5f02\u5e38\u6307\u5b9a\u662f\u51fd\u6570\u58f0\u660e\u4e00\u90e8\u5206\uff0c\u5fc5\u987b\u540c\u65f6\u5728\u51fd\u6570\u58f0\u660e\u548c\u51fd\u6570\u5b9a\u4e49\u7684\u9996\u884c\u4e2d\uff0c\u5426\u5219\u5728\u8fdb\u884c\u51fd\u6570\u7684\u53e6\u4e00\u6b21\u58f0\u660e\u65f6\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519</p> <p>\u5982\u679c\u5728\u58f0\u660e\u51fd\u6570\u65f6\u672a\u5217\u51fa\u53ef\u80fd\u629b\u51fa\u7684\u5f02\u5e38\u7c7b\u578b\uff0c\u5219\u8be5\u51fd\u6570\u53ef\u4ee5\u629b\u51fa\u4efb\u4f55\u7c7b\u578b\u7684\u5f02\u5e38\u4fe1\u606f</p> <p>\u5982\u679c\u60f3\u58f0\u660e\u4e00\u4e2a\u51fd\u6570\u4e0d\u629b\u51fa\u4efb\u4f55\u5f02\u5e38\uff0c\u5219\u53ef\u4ee5\u4f7f\u7528<code>throw()</code>\uff0c\u8bed\u6cd5\u5982\u4e0b\uff1a <pre><code>\u8fd4\u56de\u503c\u7c7b\u578b \u51fd\u6570\u540d(\u53c2\u6570\u5217\u8868) throw();\n</code></pre></p>"},{"location":"note/courses/OOP/Lecture%209%20Exception/#3","title":"3 \u6784\u9020\u51fd\u6570\u3001\u6790\u6784\u51fd\u6570\u7684\u5f02\u5e38\u5904\u7406","text":"<p>C++\u5f02\u5e38\u5904\u7406\u7684\u771f\u6b63\u80fd\u529b\u4e0d\u4ec5\u5728\u4e8e\u80fd\u5904\u7406\u5404\u79cd\u4e0d\u540c\u7c7b\u578b\u5f02\u5e38\uff0c\u8fd8\u5728\u4e8e\u5b83\u5177\u6709\u5728\u5f02\u5e38\u629b\u63b7\u524d\u4e3a\u6784\u9020\u7684\u6240\u6709\u5c40\u90e8\u5bf9\u8c61\u81ea\u52a8\u8c03\u7528\u6790\u6784\u51fd\u6570\u7684\u80fd\u529b</p> <p>\u5728\u7a0b\u5e8f\u4e2d\uff0c\u627e\u5230\u4e00\u4e2a\u5339\u914d\u7684catch\u5f02\u5e38\u5904\u7406\u540e\uff0c\u5982\u679ccatch\u8bed\u53e5\u7684\u5f02\u5e38\u7c7b\u578b\u58f0\u660e\u662f\u4e00\u4e2a\u503c\u53c2\u6570\uff0c\u5219\u5176\u521d\u59cb\u5316\u65b9\u5f0f\u662f\u590d\u5236\u88ab\u629b\u63b7\u7684\u5f02\u5e38\u5bf9\u8c61\uff1b\u5982\u679ccatch\u8bed\u53e5\u7684\u5f02\u5e38\u7c7b\u578b\u58f0\u660e\u662f \u4e00\u4e2a\u5f15\u7528\uff0c\u5219\u5176\u521d\u59cb\u5316\u65b9\u5f0f\u662f\u4f7f\u8be5\u5f15\u7528\u6307\u5411\u5f02\u5e38\u5bf9\u8c61</p> <p>\u5f53catch\u8bed\u53e5\u7684\u5f02\u5e38\u7c7b\u578b\u58f0\u660e\u53c2\u6570\u88ab\u521d\u59cb\u5316\u540e\uff0c\u6808\u7684\u5c55\u5f00\u8fc7\u7a0b\u4fbf\u5f00\u59cb\u4e86\u3002\u8fd9\u5305\u62ec\u4ece\u5bf9\u5e94\u7684try\u5757\u5f00\u59cb\u5230\u5f02\u5e38\u88ab\u629b\u63b7\u5904\u4e4b\u95f4\u5bf9\u6784\u9020\uff08\u4e14\u5c1a\u672a\u6790\u6784\uff09\u7684\u6240\u6709\u81ea\u52a8\u5bf9\u8c61\u8fdb\u884c\u6790\u6784\u3002\u6790\u6784\u7684\u987a\u5e8f\u4e0e\u6784\u9020\u7684\u987a\u5e8f\u76f8\u53cd\u3002\u7136\u540e\u7a0b\u5e8f\u4ece\u6700\u540e\u4e00\u4e2acatch\u5904\u7406\u4e4b\u540e\u5f00\u59cb\u6062\u590d\u6267\u884c\u3002</p> <p>\u6784\u9020\u51fd\u6570\u7684\u5f02\u5e38\u5904\u7406</p> <ul> <li>\u5982\u679c\u5bf9\u8c61\u6709\u6210\u5458\u51fd\u6570\uff0c\u4e14\u5982\u679c\u5728\u5916\u5c42\u5bf9\u8c61\u6784\u9020\u5b8c\u6210\u4e4b\u524d\u6709\u5f02\u5e38\u629b\u51fa\uff0c\u5219\u5728\u53d1\u751f\u5f02\u5e38\u4e4b\u524d\uff0c\u6267\u884c\u6784\u9020\u51fd\u6570\u7684\u6210\u5458\u5bf9\u8c61\u7684\u6790\u6784</li> <li>\u5982\u679c\u5f02\u5e38\u53d1\u751f\u65f6\uff0c\u5bf9\u8c61\u6570\u7ec4\u88ab\u90e8\u5206\u6784\u9020\uff0c\u5219\u53ea\u8c03\u7528\u5df2\u6784\u9020\u7684\u6570\u7ec4\u5143\u7d20\u7684\u6790\u6784\u51fd\u6570</li> <li>\u5f02\u5e38\u53ef\u80fd\u8df3\u8fc7\u901a\u5e38\u91ca\u653e\u8d44\u6e90\u7684\u4ee3\u7801\uff0c\u4ece\u800c\u5bfc\u81f4\u8d44\u6e90\u6cc4\u6f0f\u3002\u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u8bf7\u6c42\u8d44\u6e90\u65f6\u521d\u59cb\u5316\u4e00\u4e2a\u5c40\u90e8\u5bf9\u8c61\uff0c\u53d1\u751f\u5f02\u5e38\u65f6\uff0c\u8be5\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u4f1a\u81ea\u52a8\u91ca\u653e\u8d44\u6e90</li> <li>\u8981\u6355\u6349\u6790\u6784\u51fd\u6570\u4e2d\u7684\u5f02\u5e38\uff0c\u53ef\u4ee5\u5c06\u8c03\u7528\u6790\u6784\u51fd\u6570\u7684\u51fd\u6570\u653e\u5165try\u5757\u4e2d\uff0c\u5e76\u63d0\u4f9b\u76f8\u5e94\u7c7b\u578b\u7684catch\u5904\u7406\u7a0b\u5e8f\u5757\u3002\u629b\u51fa\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u5b57\u554a\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u6267\u884c\u5b8c\u6bd5\u540e\u6267\u884c</li> </ul> <p>\u5f02\u5e38\u5904\u7406</p> exampel1exampel2 <p><pre><code>#include &lt;iostream&gt;\n#include &lt;memory&gt;\n#include &lt;string&gt;\nusing namespace std;\n\nclass DemoClass{\n    public:\n        DemoClass(const string objname):name(objname){\n            cout &lt;&lt; \"DemoClass constructor\" &lt;&lt; endl;\n        }\n        ~DemoClass(){\n            cout &lt;&lt; \"DemoClass destructor\" &lt;&lt; endl;\n        }\n        string who() const{\n            return name;\n        }\n    private:\n        string name;\n}\n\nvoid f(){\n    //\u5b9a\u4e49\u4e00\u4e2aauto_ptr\u5bf9\u8c61\uff0c\u6307\u5411\u4e00\u4e2a\u52a8\u6001\u521b\u5efa\u7684DemoClass\u5bf9\u8c61\n    auto_ptr&lt;DemoClass&gt; p(new DemoClass(\"DemoClass\"));\n    cout &lt;&lt; \"name of DemoClass constructed is \" &lt;&lt; p-&gt;who() &lt;&lt; endl;\n\n    //\u521b\u5efa\u53e6\u4e00\u4e2a\u5bf9\u8c61\uff0c\u5c06p\u8d4b\u503c\u7ed9\u8be5\u5bf9\u8c61\n    auto_ptr&lt;DemoClass&gt; p2(p);\n    cout &lt;&lt; \"name of DemoClass constructed 2 is \" &lt;&lt; p2-&gt;who() &lt;&lt; endl;\n    //\u629b\u51fa\u5f02\u5e38\n    throw 8;\n}\n\nint main(){\n    try{\n        f();\n    }\n    catch(int){\n        cout &lt;&lt; \"catch int exception\" &lt;&lt; endl;\n    }\n    cout &lt;&lt; \"end\" &lt;&lt; endl;\n    return 0;\n}\n</code></pre> \u7ed3\u679c\uff1a <pre><code>DemoClass constructor\nname of DemoClass constructed is DemoClass\nname of DemoClass constructed 2 is DemoClass\nDemoClass destructor\ncatch int exception\nend\n</code></pre> \u7528new\u64cd\u4f5c\u62c6\u529f\u80fd\u952e\u7684DemoClass\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570\u88ab\u8c03\u7528\uff0c\u6790\u6784\u51fd\u6570\u5728\u5f02\u5e38\u629b\u51fa\u4e4b\u524d\u88ab\u8c03\u7528</p> <pre><code>#include &lt;iostream.h&gt;\nvoid MyFunc(void);\nclass Expt\n{\npublic:\n    Expt(){   };\n    ~Expt(){   };\n    const char* ShowReason() const\n    {    return \"Expt\u7c7b\u5f02\u5e38\u3002\";      }\n};\nclass Demo\n{\npublic:\n    Demo() {     cout&lt;&lt;\"\u6784\u9020Demo\u3002\"&lt;&lt;endl;     }\n    ~Demo(){     cout&lt;&lt;\"\u6790\u6784Demo\u3002\"&lt;&lt;endl;     }\n};\nvoid MyFunc()\n{     \n    Demo D;\n    cout&lt;&lt;\u201c\u5728MyFunc()\u4e2d\u629b\u63b7Expt\u7c7b\u5f02\u5e38\u3002\u201c&lt;&lt;endl;\n    throw Expt();\n}\n\nvoid main()\n{\ncout&lt;&lt;\"\u5728main()\u51fd\u6570\u4e2d\u3002\"&lt;&lt;endl;\ntry {\n      cout&lt;&lt;\"\u5728try\u5757\u4e2d\uff0c\u8c03\u7528MyFunc()\u3002\"&lt;&lt;endl; \n      MyFunc();        \n }\ncatch(Expt E)   \n{\n      cout&lt;&lt;\"\u5728catch\u5f02\u5e38\u5904\u7406\u7a0b\u5e8f\u4e2d\u3002\"&lt;&lt;endl;\n      cout&lt;&lt;\"\u6355\u83b7\u5230Expt\u7c7b\u578b\u5f02\u5e38\uff1a\";\n      cout&lt;&lt;E.ShowReason()&lt;&lt;endl;        \n}\ncatch(char* str) {\n cout&lt;&lt;\"\u6355\u83b7\u5230\u5176\u5b83\u7684\u5f02\u5e38\uff1a\"&lt;&lt;str&lt;&lt;endl;    }\n cout&lt;&lt;\"\u56de\u5230main()\u51fd\u6570\u3002\u4ece\u8fd9\u91cc\u6062\u590d\u6267\u884c\u3002\"&lt;&lt;endl;\n}\n</code></pre> <p>\u4ee5<code>catch(Expt E)</code>\u4e3a\u4f8b\uff0c\u8fd9\u4e2acatch \u5904\u7406\u5668\u4e4b\u540e\u90fd\u6709\u5f02\u5e38\u53c2\u91cf\uff0c\u5176\u5b9e\u4e5f\u53ef\u4ee5\u4e0d\u8bf4\u660e\u8fd9\u4e9b\u53c2\u91cf\uff0c\u4f46\u662f\u5728\u8bbf\u95ee\u5f02\u5e38\u5bf9\u8c61\u65f6\u5c31\u8981\u8bf4\u660e\u53c2\u91cf\uff0c\u5426\u5219\u65e0\u6cd5\u8bbf\u95ee\u5f02\u5e38\u5bf9\u8c61 <pre><code>catch(Expt){\n    //\u5728\u8fd9\u91cc\u65e0\u6cd5\u8bbf\u95ee\u5f02\u5e38\u5bf9\u8c61\n}\n\n\u4e0d\u5e26\u64cd\u4f5c\u6570\u7684throw\u8868\u8fbe\u5f0f\u53ef\u5c06\u5f53\u524d\u6b63\u88ab\u5904\u7406\u7684\u5f02\u5e38\u518d\u6b21\u629b\u63b7\uff0c\u8fd9\u6837\u7684\u8868\u8fbe\u5f0f\u53ea\u80fd\u51fa\u73b0\u5728\u4e00\u4e2acatch\u5904\u7406\u7a0b\u5e8f\u4e2d\u6216catch\u5904\u7406\u7a0b\u5e8f\u5185\u90e8\u8c03\u7528\u7684\u51fd\u6570\u4e2d\u3002\u518d\u6b21\u629b\u63b7\u7684\u5f02\u5e38\u5bf9\u8c61\u662f\u6e90\u5f02\u5e38\u5bf9\u8c61(\u4e0d\u662f\u62f7\u8d1d)\n```cpp\ntry{\n    throwCSomeException();\n}\ncatch(...){\n    //\u5904\u7406\u5f02\u5e38\n    throw; //\u518d\u6b21\u629b\u63b7\u5f02\u5e38\n}\n</code></pre></p> <p>try\u548ccatch\u5757\u4e2d\u5fc5\u987b\u6709\u7528\u82b1\u62ec\u53f7\u62ec\u8d77\u6765\u7684\u590d\u5408\u8bed\u53e5\uff0c\u5373\u4f7f\u82b1\u62ec\u53f7\u5185\u53ea\u6709\u4e00\u4e2a\u8bed\u53e5\uff0c\u4e5f\u4e0d\u80fd\u7701\u7565\u82b1\u62ec\u53f7</p> <p><code>catch</code>\u540e\u9762\u7684\u5706\u62ec\u53f7\u4e2d\u56fd\uff0c\u4e00\u822c\u81f4\u8c22\u5f02\u5e38\u4fe1\u606f\u7684\u7c7b\u578b\u540d\uff0c\u5982\uff1a <pre><code>catch(int) //\u6355\u83b7int\u7c7b\u578b\u7684\u5f02\u5e38\ncatch(double) //\u6355\u83b7double\u7c7b\u578b\u7684\u5f02\u5e38\ncatch(char*) //\u6355\u83b7char*\u7c7b\u578b\u7684\u5f02\u5e38\ncatch(string) //\u6355\u83b7string\u7c7b\u578b\u7684\u5f02\u5e38\n</code></pre> <code>catch</code>\u53ea\u68c0\u67e5\u6240\u6355\u83b7\u5f02\u5e38\u4fe1\u606f\u7684\u7c7b\u578b\uff0c\u800c\u4e0d\u68c0\u67e5\u5b83\u4eec\u7684\u503c\u3002</p> <p><pre><code>catch(double a) //\u6355\u83b7double\u7c7b\u578b\u7684\u5f02\u5e38\uff0c\u5e76\u5c06\u5f02\u5e38\u4fe1\u606f\u8d4b\u503c\u7ed9d\n</code></pre> \u5982\u679cthrow\u629b\u51fa\u7684\u5f02\u5e38\u4fe1\u606f\u662fdouble\u578b\u7684\u53d8\u91cfa\uff0c\u5219catch\u5728\u6355\u83b7\u5f02\u5e38\u4fe1\u606fa\u7684\u540c\u65f6\uff0c\u8fd8\u4f7fd\u83b7\u5f97a\u7684\u503c\uff0c\u6216\u8005\u8bf4d\u5f97\u5230a\u7684\u4e00\u4e2a\u62f7\u8d1d</p> <p>\u5982\u679c\u5728catch\u5b50\u53e5\u4e2d\u6ca1\u6709\u6307\u5b9a\u5f02\u5e38\u4fe1\u606f\u7684\u7c7b\u578b\uff0c\u800c\u7528\u4e86\u5220\u8282\u53f7\u201c\u2026\u201d\uff0c\u5219\u8868\u793a\u5b83\u53ef\u4ee5\u6355\u6349\u4efb\u4f55\u7c7b\u578b\u7684\u5f02\u5e38\u4fe1\u606f</p> <p>\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5728throw\u8bed\u53e5\u4e2d\u53ef\u4ee5\u4e0d\u5305\u62ec\u8868\u8fbe\u5f0f\uff0c\u5982 throw; \u8868\u793a\u201c\u6211\u4e0d\u5904\u7406\u8fd9\u4e2a\u5f02\u5e38\uff0c\u8bf7\u4e0a\u7ea7\u5904\u7406\u201d\u3002</p> <p>C++\u7684\u5f02\u5e38\u5904\u7406\u673a\u5236\u4f1a\u5728throw\u629b\u51fa\u5f02\u5e38\u4fe1\u606f\u88abcatch\u6355\u83b7\u65f6\uff0c\u5bf9\u6709\u5173\u7684\u5c40\u90e8\u5bf9\u8c61\u8fdb\u884c\u6790\u6784(\u8c03\u7528\u7c7b\u5bf9\u8c61\u7684\u6790\u6784\u51fd\u6570)\uff0c \u6790\u6784\u5bf9\u8c61\u7684\u987a\u5e8f\u4e0e\u6784\u9020\u7684\u987a\u5e8f\u76f8\u53cd\uff0c\u7136\u540e\u6267\u884c\u4e0e\u5f02\u5e38\u4fe1\u606f\u5339\u914d\u7684catch\u5757\u4e2d\u7684\u8bed\u53e5</p>"},{"location":"note/courses/OOP/Lecture%209%20Exception/#_2","title":"\u5f02\u5e38\u5339\u914d","text":"<p>\u4ece\u57fa\u7c7b\u53ef\u4ee5\u6d3e\u751f\u5404\u79cd\u5f02\u5e38\u7c7b\uff0c\u5f53\u4e00\u4e2a\u5f02\u5e38\u629b\u51fa\u65f6\uff0c\u5f02\u5e38\u5904\u7406\u5668\u4f1a\u6839\u636e\u5f02\u5e38\u5904\u7406\u987a\u5e8f\u627e\u5230\u201c\u6700\u8fd1\u201d\u7684\u5f02\u5e38\u7c7b\u578b\u8fdb\u884c\u5904\u7406\u3002\u5982\u679ccatch\u6355\u83b7\u4e86\u4e00\u4e2a\u6307\u5411\u57fa\u7c7b\u7c7b\u578b\u5f02\u5e38\u5bf9\u8c61\u7684\u6307\u9488\u6216\u5f15\u7528\uff0c\u90a3\u4e48\u5b83\u4e5f\u53ef\u4ee5\u6355\u83b7\u8be5\u57fa\u7c7b\u6240\u6d3e\u751f\u7684\u5f02\u5e38\u5bf9\u8c61\u7684\u6307\u9488\u6216\u5f15\u7528\u3002\u76f8\u5173\u9519\u8bef\u7684\u591a\u6001\u5904\u7406\u662f\u5141\u8bb8\u7684\u3002</p>"},{"location":"note/courses/OOP/Lecture%209%20Exception/#_3","title":"\u6807\u51c6\u5f02\u5e38\u4e0e\u5c42\u6b21\u7ed3\u6784","text":"<p>c++\u6807\u51c6\u63d0\u4f9b\u4e86\u6807\u51c6\u5e93\u5f02\u5e38\u53ca\u5c42\u6b21\u7ed3\u6784\u3002\u6807\u51c6\u5f02\u5e38\u4ee5\u57fa\u7c7b<code>exception</code>\u4e3a\u6839\u7c7b\uff0c\u6240\u6709\u7684\u5f02\u5e38\u7c7b\u90fd\u7ee7\u627f\u81ea\u5b83,\u5728\u5934\u6587\u4ef6<code>&lt;exception&gt;</code>\u4e2d\u5b9a\u4e49</p> <ul> <li>\u7531\u57fa\u7c7b<code>exception</code>\u6d3e\u751f\u7684\u5f02\u5e38\u7c7b<ul> <li><code>bad_alloc</code>\uff1a\u5185\u5b58\u5206\u914d\u5931\u8d25</li> <li><code>bad_cast</code>\uff1a\u7c7b\u578b\u8f6c\u6362\u5931\u8d25</li> <li><code>bad_exception</code>\uff1a\u5f02\u5e38\u5904\u7406\u5931\u8d25</li> <li><code>bad_typeid</code>\uff1a\u7c7b\u578b\u4e0d\u5339\u914d</li> <li><code>logic_error</code>\uff1a\u903b\u8f91\u9519\u8bef</li> <li><code>runtime_error</code>\uff1a\u8fd0\u884c\u65f6\u9519\u8bef</li> <li><code>ios::failure</code>\uff1a\u8f93\u5165\u8f93\u51fa\u9519\u8bef</li> </ul> </li> </ul> <p>\u5f02\u5e38\u5904\u7406\u4e0d\u80fd\u7528\u4e8e\u5904\u7406\u5f02\u6b65\u60c5\u51b5\uff0c\u6bd4\u5982\u78c1\u76d8I/O\u5b8c\u6210\u3001\u7f51\u7edc\u6d88\u606f\u5230\u8fbe\u3001\u9f20\u6807\u5355\u51fb\u7b49</p> <p></p> <p>\u5404\u79cd\u5f02\u5e38\u4e0e\u5bf9\u5e94\u7684\u5934\u6587\u4ef6\uff1a</p> \u5f02\u5e38\u7c7b\u578b \u5934\u6587\u4ef6 <code>bad_alloc</code> <code>&lt;new&gt;</code> <code>bad_cast</code> <code>&lt;typeinfo&gt;</code> <code>bad_exception</code> <code>&lt;exception&gt;</code> <code>bad_typeid</code> <code>&lt;typeinfo&gt;</code> <code>ios::failure</code> <code>&lt;ios&gt;</code> <code>logic_error</code> <code>&lt;stdexcept&gt;</code> <code>runtime_error</code> <code>&lt;stdexcept&gt;</code> <code>out_of_range</code> <code>&lt;stdexcept&gt;</code> <code>underflow_error</code> <code>&lt;stdexcept&gt;</code> <code>overflow_error</code> <code>&lt;stdexcept&gt;</code> <code>length_error</code> <code>&lt;stdexcept&gt;</code> <code>domain_error</code> <code>&lt;stdexcept&gt;</code> <code>invalid_argument</code> <code>&lt;stdexcept&gt;</code> <code>range_error</code> <code>&lt;stdexcept&gt;</code> <code>overflow_error</code> <code>&lt;stdexcept&gt;</code> <code>out_of_range</code> <code>&lt;stdexcept&gt;</code> <code>system_error</code> <code>&lt;system_error&gt;</code> <code>future_error</code> <code>&lt;future&gt;</code> <p>exception\u7c7b\u4f4d\u4e8e\u5934\u6587\u4ef6<code>&lt;exception&gt;</code>\u4e2d\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u865a\u51fd\u6570<code>what()</code>\uff0c\u8fd4\u56de\u4e00\u4e2a\u6307\u5411\u63cf\u8ff0\u5f02\u5e38\u7684\u5b57\u7b26\u4e32\u7684\u6307\u9488\uff0c\u88ab\u58f0\u660e\u4e3a</p> <pre><code>    class exception {\n        public:\n            exception() throw();//\u6784\u9020\u51fd\u6570\n            exception(const exception&amp;) throw();//\u62f7\u8d1d\u6784\u9020\u51fd\u6570\n            virtual ~exception() throw();//\u865a\u6790\u6784\u51fd\u6570\n            exception&amp; operator=(const exception&amp;) throw();//\u8d4b\u503c\u8fd0\u7b97\u7b26\u91cd\u8f7d\n            virtual const char* what() const throw();\n    };\n</code></pre> <p>\u8fd9\u91cc\u9700\u8981\u8bf4\u660e\u7684\u662f what() \u51fd\u6570\u3002what() \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u80fd\u8bc6\u522b\u5f02\u5e38\u7684\u5b57\u7b26\u4e32\uff0c\u6b63\u5982\u5b83\u7684\u540d\u5b57\u201cwhat\u201d\u4e00\u6837\uff0c\u53ef\u4ee5\u7c97\u7565\u5730\u544a\u8bc9\u4f60\u8fd9\u662f\u4ec0\u4e48\u5f02\u5e38\u3002\u4e0d\u8fc7C++\u6807\u51c6\u5e76\u6ca1\u6709\u89c4\u5b9a\u8fd9\u4e2a\u5b57\u7b26\u4e32\u7684\u683c\u5f0f\uff0c\u5404\u4e2a\u7f16\u8bd1\u5668\u7684\u5b9e\u73b0\u4e5f\u4e0d\u540c\uff0c\u6240\u4ee5 what() \u7684\u8fd4\u56de\u503c\u4ec5\u4f9b\u53c2\u8003</p> <p>exception\u7c7b\u7684\u76f4\u63a5\u6d3e\u751f\u7c7b\u6709</p> <ul> <li><code>bad_alloc</code>\uff1a\u5185\u5b58\u5206\u914d\u5931\u8d25</li> <li><code>bad_cast</code>\uff1a\u4f7f\u7528 dynamic_cast\u8f6c\u6362\u5931\u8d25</li> <li><code>bad_exception</code>\uff1a\u5f02\u5e38\u5904\u7406\u5931\u8d25</li> <li><code>bad_typeid</code>\uff1a\u4f7f\u7528 typeid\u00a0\u64cd\u4f5c\u4e00\u4e2a NULL\u00a0\u6307\u9488\uff0c\u800c\u4e14\u8be5\u6307\u9488\u662f\u5e26\u6709\u865a\u51fd\u6570\u7684\u7c7b\uff0c\u8fd9\u65f6\u629b\u51fa bad_typeid \u5f02\u5e38\u3002</li> <li><code>ios::failure</code>\uff1a\u8f93\u5165\u8f93\u51fa\u9519\u8bef</li> <li><code>logic_error</code>\uff1a\u903b\u8f91\u9519\u8bef</li> <li><code>runtime_error</code>\uff1a\u8fd0\u884c\u65f6\u9519\u8bef</li> <li><code>out_of_range</code>\uff1a\u4e0b\u6807\u8d8a\u754c</li> <li><code>underflow_error</code>\uff1a\u4e0b\u6ea2\u9519\u8bef</li> <li><code>overflow_error</code>\uff1a\u4e0a\u6ea2\u9519\u8bef</li> <li><code>length_error</code>\uff1a\u957f\u5ea6\u9519\u8bef</li> <li><code>domain_error</code>\uff1a\u53c2\u6570\u7684\u503c\u57df\u9519\u8bef\uff0c</li> <li><code>invalid_argument</code>\uff1a\u53c2\u6570\u65e0\u6548</li> </ul>"},{"location":"note/courses/OOP/Lecture%209%20Exception/#_4","title":"\u5f02\u5e38\u8bf4\u660e","text":"<p>\u4f5c\u7528\uff1a\u5728\u51fd\u6570\u539f\u578b\u4e2d\u5bf9\u51fd\u6570\u662f\u5426\u4f1a\u629b\u51fa\u5f02\u5e38\u4ee5\u53ca\u629b\u51fa\u4ec0\u4e48\u7c7b\u578b\u7684\u5f02\u5e38\u8fdb\u884c\u8bf4\u660e <pre><code>\u8fd4\u56de\u503c\u7c7b\u578b \u51fd\u6570\u540d(\u53c2\u6570\u5217\u8868) throw(\u5f02\u5e38\u7c7b\u578b1, \u5f02\u5e38\u7c7b\u578b2, ...);\n</code></pre> - \u5f02\u5e38\u7c7b\u578b\u5217\u8868\u4e3a\u7a7a\uff0c\u8868\u793a\u8be5\u51fd\u6570\u4e0d\u629b\u51fa\u4efb\u4f55\u5f02\u5e38 - \u4e0d\u5e26\u5f02\u5e38\u8bf4\u660e\u7684\u51fd\u6570\u53ef\u4ee5\u629b\u51fa\u4efb\u610f\u7c7b\u578b\u7684\u5f02\u5e38 - const\u6210\u5458\u51fd\u6570\u7684\u5f02\u5e38\u8bf4\u660e\u653e\u5728\u4fdd\u7559\u5b57const\u4e4b\u540e - \u57fa\u7c7b\u865a\u51fd\u6570\u7684\u5f02\u5e38\u5217\u8868\u662f\u6d3e\u751f\u7c7b\u4e2d\u5bf9\u5e94\u865a\u51fd\u6570\u7684\u5f02\u5e38\u5217\u8868\u7684\u8d85\u96c6</p>"},{"location":"note/courses/OOP/project/","title":"Project","text":"<p>\u597d\u7684\uff0c\u8fd9\u662f\u4e00\u4e2a\u5173\u4e8e\u5bf9\u8c61\u5e8f\u5217\u5316\u7684C++\u9879\u76ee\u5206\u6790\u3002</p>"},{"location":"note/courses/OOP/project/#1","title":"1 \ud83d\udcdd \u9879\u76ee\u5206\u6790\uff1a\u5bf9\u8c61\u5e8f\u5217\u5316","text":"<p>\u8fd9\u4e2a\u9879\u76ee\u8981\u6c42\u4f60\u521b\u5efa\u4e00\u4e2aC++\u5e93\uff0c\u7528\u4e8e\u5b9e\u73b0\u5bf9\u8c61\u5e8f\u5217\u5316\uff0c\u8fd9\u662f\u4e00\u4e2a\u4fdd\u5b58\u548c\u4f20\u8f93\u5bf9\u8c61\u72b6\u6001\u7684\u5173\u952e\u8fc7\u7a0b\u3002\u9879\u76ee\u660e\u786e\u8981\u6c42\u5b9e\u73b0\u4e24\u79cd\u7c7b\u578b\u7684\u5e8f\u5217\u5316\uff1a\u4e8c\u8fdb\u5236\u5e8f\u5217\u5316\u548cXML\u5e8f\u5217\u5316\u3002</p>"},{"location":"note/courses/OOP/project/#11","title":"1.1 \u2699\ufe0f \u6838\u5fc3\u9700\u6c42\uff1a","text":"<ol> <li> <p>\u4e8c\u8fdb\u5236\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u6a21\u5757\uff1a</p> <ul> <li>\u76ee\u6807\uff1a \u5c06\u5bf9\u8c61\u7684\u72b6\u6001\u8f6c\u6362\u4e3a\u7d27\u51d1\u7684\u4e8c\u8fdb\u5236\u683c\u5f0f\uff0c\u4ee5\u4fbf\u5b58\u50a8\u6216\u4f20\u8f93\uff0c\u5e76\u4e14\u80fd\u591f\u4ece\u8fd9\u4e9b\u4e8c\u8fdb\u5236\u6570\u636e\u4e2d\u91cd\u5efa\u5bf9\u8c61\u3002</li> <li> <p>\u63a5\u53e3\u793a\u4f8b\uff1a</p> <p>C++</p> <pre><code>// \u5c06\u5bf9\u8c61 n0 \u5e8f\u5217\u5316\u5230\u4e8c\u8fdb\u5236\u6587\u4ef6 \"n.data\"\nserialize(n0, \"n.data\");\n// \u4ece \"n.data\" \u91cd\u5efa\u5bf9\u8c61 n1\ndeserialize(n1, \"n.data\");\n// \u6b64\u523b n0 == n1 \u5e94\u8be5\u4e3a true\n</code></pre> </li> <li> <p>\u5173\u952e\u8003\u91cf\uff1a</p> <ul> <li>\u901f\u5ea6\u548c\u5927\u5c0f\u7684\u6548\u7387\u81f3\u5173\u91cd\u8981\u3002</li> <li>\u5982\u679c\u6587\u4ef6\u9700\u8981\u5728\u4e0d\u540c\u673a\u5668\u67b6\u6784\u4e4b\u95f4\u5171\u4eab\uff0c\u5219\u9700\u8981\u8003\u8651\u5b57\u8282\u5e8f\uff08endianness\uff09\u95ee\u9898\uff08\u867d\u7136\u672a\u660e\u786e\u8bf4\u660e\uff0c\u4f46\u8fd9\u662f\u4e00\u4e2a\u597d\u7684\u5b9e\u8df5\uff09\u3002</li> <li>\u5904\u7406\u6587\u4ef6I/O\u548c\u6570\u636e\u91cd\u5efa\u8fc7\u7a0b\u4e2d\u7684\u9519\u8bef\u3002 2. XML\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u6a21\u5757 (\u4f7f\u7528 <code>tinyxml2</code>)\uff1a</li> </ul> </li> <li> <p>\u76ee\u6807\uff1a \u5c06\u5bf9\u8c61\u7684\u72b6\u6001\u8f6c\u6362\u4e3a\u4eba\u7c7b\u53ef\u8bfb\u7684XML\u683c\u5f0f\uff0c\u5e76\u80fd\u4eceXML\u6570\u636e\u4e2d\u91cd\u5efa\u5bf9\u8c61\u3002\u8be5\u6a21\u5757\u662f\u5bf9<code>tinyxml2</code>\u5e93\u7684\u5c01\u88c5\u3002</p> </li> <li> <p>\u63a5\u53e3\u793a\u4f8b\uff1a</p> <p>C++</p> <pre><code>// \u5c06\u5bf9\u8c61 pair0 \u5e8f\u5217\u5316\u5230 \"pair.xml\"\uff0c\u5e76\u6307\u5b9aXML\u7ed3\u6784\u540d \"std_pair\"\nserialize_xml(pair0, \"std_pair\", \"pair.xml\");\n// \u4ece \"pair.xml\" \u91cd\u5efa\u5bf9\u8c61 pair1\ndeserialize_xml(pair1, \"std_pair\", \"pair.xml\");\n// \u6b64\u523b pair0 == pair1 \u5e94\u8be5\u4e3a true\n</code></pre> </li> <li> <p>XML\u7ed3\u6784\u793a\u4f8b (\u9488\u5bf9 <code>std::pair&lt;int, double&gt;</code>)\uff1a</p> <p>XML</p> <pre><code>&lt;serialization&gt;\n  &lt;std_pair&gt;\n      &lt;first val=\"2\"/&gt;\n      &lt;second val=\"3.1000000000000001\"/&gt;\n  &lt;/std_pair&gt;\n&lt;/serialization&gt;\n</code></pre> </li> <li> <p>\u5173\u952e\u8003\u91cf\uff1a</p> <ul> <li>\u6b63\u786e\u4f7f\u7528<code>tinyxml2</code> API\u6765\u521b\u5efa\u3001\u5bfc\u822a\u548c\u89e3\u6790XML\u6587\u6863\u3002</li> <li>\u5c06C++\u7c7b\u578b\u6620\u5c04\u5230\u5408\u9002\u7684XML\u8868\u793a\uff08\u5143\u7d20\u3001\u5c5e\u6027\uff09\u3002</li> <li>\u5904\u7406\u6765\u81ea<code>tinyxml2</code>\u7684\u6f5c\u5728\u89e3\u6790\u9519\u8bef\u3002 3. \u547d\u540d\u7a7a\u95f4\u5c01\u88c5\uff1a</li> </ul> </li> <li> <p>\u6bcf\u4e2a\u6a21\u5757\uff08\u4e8c\u8fdb\u5236\u548cXML\uff09\u90fd\u5fc5\u987b\u4f4d\u4e8e\u5176\u5404\u81ea\u7684C++\u547d\u540d\u7a7a\u95f4\u4e2d\uff0c\u4ee5\u907f\u514d\u547d\u540d\u51b2\u7a81\u5e76\u7ec4\u7ec7\u4ee3\u7801\u3002\u4f8b\u5982\uff1a<code>BinarySerialization::serialize(...)</code> \u548c <code>XMLSerialization::serialize_xml(...)</code>\u3002 4. \u652f\u6301\u7684\u6570\u636e\u7c7b\u578b (\u4e24\u4e2a\u6a21\u5757\u5747\u9700\u652f\u6301)\uff1a</p> </li> <li> <p>\u7b97\u672f\u7c7b\u578b\uff1a \u7531<code>std::is_arithmetic</code>\u5b9a\u4e49 (\u4f8b\u5982\uff1a<code>int</code>, <code>float</code>, <code>double</code>, <code>char</code>, <code>bool</code>)\u3002</p> </li> <li><code>std::string</code>\uff1aC++\u6807\u51c6\u5b57\u7b26\u4e32\u3002</li> <li> <p>STL\u5bb9\u5668\uff1a</p> <ul> <li><code>std::pair</code></li> <li><code>std::vector</code></li> <li><code>std::list</code></li> <li><code>std::set</code></li> <li><code>std::map</code> 5. \u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b (UDTs)\uff1a</li> </ul> </li> <li> <p>\u76ee\u6807\uff1a \u63d0\u4f9b\u4e00\u79cd\u4fbf\u6377\u7684\u673a\u5236\uff08\u4f8b\u5982\uff0c\u5b8f\u3001\u6a21\u677f\uff09\uff0c\u4ee5\u4fbf\u8f7b\u677e\u5730\u4e3a\u81ea\u5b9a\u4e49\u7684<code>struct</code>\u6216<code>class</code>\u7c7b\u578b\u542f\u7528\u5e8f\u5217\u5316\u3002</p> </li> <li> <p>UDT\u793a\u4f8b\uff1a</p> <p>C++</p> <pre><code>struct UserDefinedType {\n  int idx;\n  std::string name;\n  std::vector&lt;double&gt; data;\n};\n</code></pre> </li> <li> <p>\u673a\u5236\u601d\u8def\uff1a</p> <ul> <li>\u5b8f\uff1a \u53ef\u4ee5\u7528\u6765\u5b9a\u4e49\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u51fd\u6570\u6216\u6ce8\u518c\u6210\u5458\u3002</li> <li>\u6a21\u677f\u7279\u5316/\u91cd\u8f7d\uff1a \u901a\u8fc7\u7279\u5316\u6a21\u677f\u51fd\u6570\u6216\u63d0\u4f9b\u91cd\u8f7d\u6765\u5b9a\u4e49\u5982\u4f55\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316UDT\u3002\u901a\u5e38\u6d89\u53ca\u4e3aUDT\u5b9a\u4e49\u4e00\u4e2a<code>serialize</code>\u6210\u5458\u51fd\u6570\u6216\u4e00\u4e2a\u975e\u6210\u5458\u53cb\u5143\u51fd\u6570\u3002</li> <li>\u7c7b\u53cd\u5c04\u6280\u672f (\u5728C++\u4e2d\u53d7\u9650)\uff1a \u53ef\u80fd\u6d89\u53ca\u4f7f\u7528\u5b8f\u6765\u679a\u4e3e\u6210\u5458\u3002</li> </ul> </li> </ul> </li> </ol>"},{"location":"note/courses/OOP/project/#12-bonus","title":"1.2 \ud83c\udf1f \u9644\u52a0\u6311\u6218 (Bonus)\uff1a","text":"<ol> <li> <p>XML\u4e8c\u8fdb\u5236\u6a21\u5f0f\u7684Base64\u7f16\u7801\uff1a</p> <ul> <li>\u76ee\u6807\uff1a \u5728XML\u5e8f\u5217\u5316\u6a21\u5757\u4e2d\u5b9e\u73b0\u4e00\u4e2a\u9009\u9879\uff0c\u5c06\u4e8c\u8fdb\u5236\u6570\u636e\uff08\u6216\u8005\u53ef\u80fd\u662f\u5bf9\u8c61\u6574\u4e2a\u4e8c\u8fdb\u5236\u5e8f\u5217\u5316\u540e\u7684\u8f93\u51fa\uff09\u7f16\u7801\u4e3aBase64\u5b57\u7b26\u4e32\uff0c\u5e76\u5c06\u5176\u5d4c\u5165XML\u5143\u7d20\u4e2d\u3002\u8fd9\u5141\u8bb8\u5728\u57fa\u4e8e\u6587\u672c\u7684\u683c\u5f0f\u4e2d\u5b58\u50a8\u7c7b\u4e8c\u8fdb\u5236\u6570\u636e\u3002</li> <li> <p>\u5173\u952e\u8003\u91cf\uff1a</p> <ul> <li>\u96c6\u6210Base64\u7f16\u7801/\u89e3\u7801\u5e93\u6216\u5b9e\u73b0\u8be5\u7b97\u6cd5\u3002</li> <li>\u51b3\u5b9a\u5982\u4f55\u89e6\u53d1\u6b64\u6a21\u5f0f\uff08\u4f8b\u5982\uff0c\u901a\u8fc7\u6807\u5fd7\u3001\u4e0d\u540c\u7684\u51fd\u6570\uff09\u3002 2. \u667a\u80fd\u6307\u9488\u5e8f\u5217\u5316 (\u4f8b\u5982 <code>std::unique_ptr</code>)\uff1a</li> </ul> </li> <li> <p>\u76ee\u6807\uff1a \u652f\u6301\u667a\u80fd\u6307\u9488\u7684\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316\u3002</p> </li> <li><code>std::unique_ptr</code>\u7684\u5173\u952e\u8003\u91cf\uff1a<ul> <li>\u6240\u6709\u6743\uff1a <code>std::unique_ptr</code>\u610f\u5473\u7740\u552f\u4e00\u6240\u6709\u6743\u3002\u5e8f\u5217\u5316\u65f6\uff0c\u5e8f\u5217\u5316\u5176\u6307\u5411\u7684\u5bf9\u8c61\u3002</li> <li>\u53cd\u5e8f\u5217\u5316\uff1a \u9700\u8981\u5728\u5806\u4e0a\u521b\u5efa\u65b0\u5bf9\u8c61\uff0c\u5e76\u4e14<code>std::unique_ptr</code>\u5e94\u83b7\u5f97\u5176\u6240\u6709\u6743\u3002</li> <li>\u7a7a\u6307\u9488\uff1a \u9700\u8981\u5904\u7406<code>unique_ptr</code>\u4e3a\u7a7a\u7684\u60c5\u51b5\u3002</li> <li>\u591a\u6001\u6027 (\u5982\u679c\u9002\u7528)\uff1a \u5982\u679c<code>unique_ptr</code>\u6307\u5411\u57fa\u7c7b\uff0c\u4f46\u53ef\u80fd\u6301\u6709\u6d3e\u751f\u7c7b\u5bf9\u8c61\uff0c\u5219\u9700\u8981\u4e00\u79cd\u673a\u5236\u6765\u5b58\u50a8\u548c\u91cd\u5efa\u6b63\u786e\u7684\u6d3e\u751f\u7c7b\u578b\uff08\u4f8b\u5982\uff0c\u901a\u8fc7\u5b58\u50a8\u7c7b\u578b\u6807\u8bc6\u7b26\uff09\u3002\u8fd9\u662f\u4e00\u4e2a\u66f4\u9ad8\u7ea7\u7684\u65b9\u9762\u3002</li> </ul> </li> </ul> </li> </ol>"},{"location":"note/courses/OOP/project/#13","title":"1.3 \ud83d\udee0\ufe0f \u5b9e\u73b0\u7b56\u7565\u4e0e\u6311\u6218\uff1a","text":"<ul> <li>\u6a21\u677f (Templates)\uff1a \u5927\u91cf\u4f7f\u7528C++\u6a21\u677f\u6765\u4e3a\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u7f16\u5199\u901a\u7528\u7684\u5e8f\u5217\u5316/\u53cd\u5e8f\u5217\u5316\u903b\u8f91\uff0c\u907f\u514d\u4ee3\u7801\u91cd\u590d\u3002SFINAE (<code>std::enable_if</code>) \u6216 <code>if constexpr</code> (C++17) \u53ef\u7528\u4e8e\u4e3a\u4e0d\u540c\u7c7b\u578b\u7c7b\u522b\uff08\u7b97\u672f\u3001\u5b57\u7b26\u4e32\u3001\u5bb9\u5668\u3001UDT\uff09\u5b9a\u5236\u884c\u4e3a\u3002</li> <li>\u7c7b\u578b\u8403\u53d6 (Type Traits)\uff1a \u4f7f\u7528\u50cf<code>std::is_arithmetic</code>\u3001<code>std::is_same</code>\u8fd9\u6837\u7684\u7c7b\u578b\u8403\u53d6\u4ee5\u53ca\u81ea\u5b9a\u4e49\u8403\u53d6\u6765\u6307\u5bfc\u6a21\u677f\u5143\u7f16\u7a0b\u3002</li> <li>\u9012\u5f52\u5e8f\u5217\u5316\uff1a \u5bf9\u4e8e\u5bb9\u5668\u548cUDT\uff0c\u5e8f\u5217\u5316\u903b\u8f91\u5f88\u53ef\u80fd\u662f\u9012\u5f52\u7684\u3002\u4f8b\u5982\uff0c\u8981\u5e8f\u5217\u5316\u4e00\u4e2a<code>std::vector</code>\uff0c\u9700\u8981\u904d\u5386\u5176\u5143\u7d20\u5e76\u5e8f\u5217\u5316\u6bcf\u4e00\u4e2a\u5143\u7d20\u3002\u8981\u5e8f\u5217\u5316\u4e00\u4e2aUDT\uff0c\u9700\u8981\u5e8f\u5217\u5316\u5b83\u7684\u6bcf\u4e00\u4e2a\u6210\u5458\u3002</li> <li>\u4e8c\u8fdb\u5236\u5e8f\u5217\u5316\u7ec6\u8282\uff1a<ul> <li>\u5bf9\u4e8e\u7b97\u672f\u7c7b\u578b\uff1a\u76f4\u63a5\u5199\u5165\u5b83\u4eec\u7684\u5b57\u8282\u8868\u793a\u3002\u901a\u5e38\u4f7f\u7528<code>reinterpret_cast</code>\u548c<code>ostream::write</code> / <code>istream::read</code>\u3002</li> <li>\u5bf9\u4e8e<code>std::string</code>\uff1a\u5199\u5165\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff0c\u7136\u540e\u662f\u5176\u5b57\u7b26\u6570\u636e\u3002</li> <li>\u5bf9\u4e8e\u5bb9\u5668\uff1a\u901a\u5e38\uff0c\u5199\u5165\u5143\u7d20\u7684\u6570\u91cf\uff0c\u7136\u540e\u5e8f\u5217\u5316\u6bcf\u4e2a\u5143\u7d20\u3002\u5bf9\u4e8e<code>std::map</code>\uff0c\u5e8f\u5217\u5316\u6bcf\u4e2a\u952e\u503c\u5bf9\u3002</li> </ul> </li> <li>XML\u5e8f\u5217\u5316\u7ec6\u8282 (<code>tinyxml2</code>)\uff1a<ul> <li>\u7b97\u672f\u7c7b\u578b\uff1a\u5b58\u50a8\u4e3a\u5c5e\u6027\u503c (\u4f8b\u5982 <code>&lt;int_value val=\"123\"/&gt;</code>) \u6216\u6587\u672c\u5185\u5bb9\u3002</li> <li><code>std::string</code>\uff1a\u5982\u679c\u5305\u542b\u7279\u6b8a\u7684XML\u5b57\u7b26\uff0c\u5219\u5b58\u50a8\u4e3a\u5c5e\u6027\u503c\u6216CDATA\u8282\u3002</li> <li>\u5bb9\u5668\uff1a\u8868\u793a\u4e3a\u5d4c\u5957\u7684XML\u5143\u7d20\u3002\u5bf9\u4e8e<code>std::vector</code>\uff0c\u6bcf\u4e2a\u5143\u7d20\u6210\u4e3a\u4e00\u4e2a\u5b50XML\u5143\u7d20\u3002\u5bf9\u4e8e<code>std::map</code>\uff0c\u6bcf\u4e2a\u952e\u503c\u5bf9\u53ef\u80fd\u662f\u4e00\u4e2a\u5305\u542b\u952e\u548c\u503c\u5b50\u5143\u7d20\u6216\u5c5e\u6027\u7684\u5143\u7d20\u3002</li> </ul> </li> <li>\u7528\u6237\u81ea\u5b9a\u4e49\u7c7b\u578b\u673a\u5236\uff1a<ul> <li>\u4e00\u79cd\u5e38\u89c1\u7684\u65b9\u6cd5\u662f\u8981\u6c42UDT\u5b9e\u73b0\u4e00\u4e2a\u7279\u5b9a\u7684\u6210\u5458\u51fd\u6570 (\u4f8b\u5982 <code>serialize(Archive&amp; ar)</code>) \u6216\u63d0\u4f9b\u4e00\u4e2a\u975e\u6210\u5458\u53cb\u5143\u51fd\u6570\u3002\u5b8f\u53ef\u4ee5\u5e2e\u52a9\u51cf\u5c11\u6837\u677f\u4ee3\u7801\u3002</li> <li>\u201cArchive\u201d\uff08\u5b58\u6863\uff09\u7684\u6982\u5ff5\u5728\u8fd9\u91cc\u5f88\u6709\u7528\uff1a\u4e00\u4e2a\u62bd\u8c61\u4e86\u5e95\u5c42\u6d41\uff08\u4e8c\u8fdb\u5236\u6216XML\uff09\u5e76\u63d0\u4f9b\u8bf8\u5982<code>ar &lt;&lt; data</code>\u6216<code>ar(data_name, data_value)</code>\u4e4b\u7c7b\u65b9\u6cd5\u7684\u5bf9\u8c61\u3002</li> </ul> </li> <li>\u6d4b\u8bd5\uff1a \u5f7b\u5e95\u6d4b\u8bd5\u6240\u6709\u5fc5\u9700\u7684\u7c7b\u578b\u548cUDT\u673a\u5236\u3002\u6d4b\u8bd5\u8fb9\u754c\u60c5\u51b5\uff08\u7a7a\u5bb9\u5668\u3001\u9ed8\u8ba4\u6784\u9020\u7684\u5bf9\u8c61\u3001\u9644\u52a0\u6311\u6218\u4e2d\u7684\u7a7a\u6307\u9488\uff09\u3002</li> </ul>"},{"location":"note/courses/OOP/project/#14","title":"1.4 \ud83d\udcaf \u8bc4\u4f30\u6807\u51c6\uff1a","text":"<ul> <li>C++\u4ee3\u7801\u8d28\u91cf\uff1a<ul> <li>\u7b80\u6d01 (Clean)\uff1a \u683c\u5f0f\u826f\u597d\uff0c\u53ef\u8bfb\u6027\u5f3a\uff0c\u98ce\u683c\u4e00\u81f4\u3002</li> <li>\u7d27\u51d1 (Compact)\uff1a \u907f\u514d\u4e0d\u5fc5\u8981\u7684\u4ee3\u7801\uff0c\u6709\u6548\u5730\u4f7f\u7528\u62bd\u8c61\uff08\u6a21\u677f\u662f\u8fd9\u91cc\u7684\u5173\u952e\uff09\u3002</li> <li>\u5408\u7406 (Reasonable)\uff1a \u826f\u597d\u7684\u8bbe\u8ba1\u9009\u62e9\uff0c\u903b\u8f91\u7ed3\u6784\u6e05\u6670\uff0c\u6070\u5f53\u4f7f\u7528C++\u7279\u6027\u3002</li> </ul> </li> <li>\u6ce8\u91ca\u8d28\u91cf\uff1a<ul> <li>\u7b80\u6d01 (Succinct)\uff1a \u76f4\u622a\u4e86\u5f53\uff0c\u4e0d\u8fc7\u4e8e\u5197\u957f\u3002</li> <li>\u51c6\u786e (Accurate)\uff1a \u6b63\u786e\u63cf\u8ff0\u4ee3\u7801\u7684\u7528\u9014\u548c\u884c\u4e3a\u3002</li> </ul> </li> <li>\u6b63\u786e\u6027\u548c\u8fd0\u884c\u6027\u80fd\uff1a<ul> <li>\u6b63\u786e\u6027\uff1a \u6838\u5fc3\u8981\u6c42\u2014\u2014\u5e8f\u5217\u5316\u7684\u5bf9\u8c61\u5fc5\u987b\u80fd\u591f\u5b8c\u7f8e\u91cd\u5efa\u3002</li> <li>\u6027\u80fd\uff1a \u5bf9\u4e8e\u4e8c\u8fdb\u5236\u5e8f\u5217\u5316\u5c24\u5176\u91cd\u8981\u3002\u671f\u671b\u9ad8\u6548\u7684I/O\u548c\u6700\u5c0f\u7684\u5904\u7406\u5f00\u9500\u3002\u5bf9\u4e8eXML\uff0c<code>tinyxml2</code>\u7684\u6027\u80fd\u5c06\u662f\u4e00\u4e2a\u56e0\u7d20\uff0c\u4f46\u4f60\u7684\u5c01\u88c5\u5c42\u4e5f\u5e94\u8be5\u9ad8\u6548\u3002</li> </ul> </li> </ul> <p>\u8fd9\u4e2a\u9879\u76ee\u662f\u5bf9C++\u6a21\u677f\u5143\u7f16\u7a0b\u3001\u9762\u5411\u5bf9\u8c61\u8bbe\u8ba1\u548c\u6587\u4ef6I/O\u7684\u4e00\u4e2a\u5168\u9762\u5b9e\u8df5\u3002\u5b83\u89e6\u53ca\u4e86\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u4e0e\u6570\u636e\u6301\u4e45\u5316\u548c\u4ea4\u6362\u76f8\u5173\u7684\u5e38\u89c1\u6311\u6218\u3002\u795d\u4f60\u597d\u8fd0\uff01</p>"},{"location":"note/courses/ads/Final/","title":"Lec 13: Randomized Algorithm","text":"<ul> <li>\u5c06\u968f\u673a\u7b97\u6cd5\u5206\u4e3a\u4e24\u5927\u7c7b\uff1a<ul> <li>\u9ad8\u6548\u6027\uff1a\u53ea\u9700\u5728\u8f83\u9ad8\u6982\u7387\u4e0b\u5f97\u5230\u6b63\u786e\u89e3\u7684\u9ad8\u6548\u968f\u673a\u7b97\u6cd5</li> <li>\u786e\u5b9a\u6027\uff1a\u53ea\u9700\u5728\u9884\u671f\u6548\u7387\u5185\u59cb\u7ec8\u5f97\u5230\u6b63\u786e\u89e3\u7684\u968f\u673a\u7b97\u6cd5</li> </ul> </li> </ul> <p>Note</p> <ul> <li>\\(Pr[A]:\\)\u4e8b\u4ef6A\u53d1\u751f\u7684\u6982\u7387</li> <li>\\(\\overline A\\)\uff1a\u4e8b\u4ef6A \u7684\u8865</li> <li>\\(E[X]\\):\u968f\u673a\u53d8\u91cfX\u7684\u671f\u671b</li> </ul>"},{"location":"note/courses/ads/Final/#1-hiring-problems","title":"1 Hiring Problems","text":"<p>\u9762\u8bd5\u6210\u672c\\(C_i\\),\u96c7\u4f63\u6210\u672c\\(C_h\\),-\u5728\u00a0N\u00a0\u5929\u65f6\u95f4\u5185\uff0c\u6bcf\u5929\u9700\u8981\u9762\u8bd5\u4e00\u4f4d\u4e0d\u540c\u7684\u52a9\u7406,\u5047\u8bbe\u96c7\u4f63\u4e86M\u4eba\uff0c\u90a3\u4e48\u603b\u6210\u672c\u4e3a\\(O(NC_i+MC_h)\\)</p>"},{"location":"note/courses/ads/Final/#11-naive-solution","title":"1.1 Naive Solution","text":"<p>\u91c7\u53d6\u7b56\u7565\uff1a\u6bcf\u6b21\u80fd\u88ab\u96c7\u4f63\u7684\u5019\u9009\u8005\u9700\u8981\u6709\u9ad8\u4e8e\u5df2\u88ab\u96c7\u4f63\u7684\u5019\u9009\u8005\u7684\u80fd\u529b</p> <ul> <li>\u6700\u574f\u60c5\u51b5\uff1a\u5019\u9009\u8005\u6309\u7167\u80fd\u529b\u7684\u987a\u5e8f\u8fdb\u884c\u9762\u8bd5\uff0c\u6b64\u65f6\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(NC_h)\\)</li> </ul>"},{"location":"note/courses/ads/Final/#12-offline-randomized-solution","title":"1.2 Offline Randomized Solution","text":"<p>\u524d\u00a0i\u00a0\u4e2a\u5019\u9009\u8005\u7b49\u53ef\u80fd\u5730\u5177\u5907\u6700\u4f73\u80fd\u529b, \\(E[X_i]=Pr[candidate~i~is~hired]=\\frac 1 i\\), \\(E[X]=\\sum_{i=1}^N\\frac 1 i=ln ~N+O(1)\\)</p> <p>\u6240\u4ee5\u603b\u6210\u672c\u4e3a\\(O(ln~N\\cdot C_h+NC_i)\\)</p> <p>\u8fd9\u6837\uff0c\u6211\u4eec\u4ec5\u9700\u5728\u5904\u7406\u6570\u636e\u524d\u5148\u5bf9\u6570\u636e\u8fdb\u884c\u968f\u673a\u6392\u5217\uff08Randomized Permutation\uff09\uff0c\u5373\u53ef\u5f97\u5230\u968f\u673a\u6392\u5e8f\u7684\u6570\u636e\uff0c\u4ece\u800c\u907f\u514d\u4e86\u6700\u574f\u60c5\u51b5\uff1b\u4f46\u7f3a\u70b9\u5728\u4e8e\u968f\u673a\u6392\u5217\u6570\u636e\u9700\u8981\u989d\u5916\u7684\u65f6\u95f4\u6210\u672c\u3002</p> <p>\u968f\u673a\u6392\u5217\u601d\u60f3\u975e\u5e38\u7b80\u5355\uff0c\u6211\u4eec\u4e3a\u6570\u7ec4\u00a0<code>A[]</code>\u00a0\u7684\u6bcf\u4e2a\u5143\u7d20\u00a0<code>A[i]</code>\u00a0\u9884\u5148\u8d4b\u4e88\u4e00\u4e2a\u968f\u673a\u7684\u4f18\u5148\u503c <code>P[i]</code>\uff0c\u7136\u540e\u5bf9\u6570\u7ec4\u8fdb\u884c\u6392\u5e8f</p>"},{"location":"note/courses/ads/Final/#13-online-randomized-solution","title":"1.3 Online Randomized Solution","text":"<p>\u79bb\u7ebf\u7b97\u6cd5\uff08Offline Algorithm\uff09\u5728\u6b63\u5f0f\u5904\u7406\u6570\u636e\u524d\u9700\u8981\u77e5\u9053\u6240\u6709\u7684\u8f93\u5165\u6570\u636e\uff0c\u5b83\u867d\u7136\u80fd\u591f\u786e\u4fdd\u8ba1\u7b97\u7ed3\u679c\u603b\u662f\u6b63\u786e\u7684\uff0c\u4f46\u662f\u6548\u7387\u5e76\u4e0d\u662f\u5f88\u9ad8\u3002\u73b0\u5728\u6211\u4eec\u8003\u8651\u4e00\u79cd\u66f4\u9ad8\u6548\u7684\u5728\u7ebf\u7b97\u6cd5\uff08Online Algorithm\uff09</p> <p>\u6211\u4eec\u5148\u9762\u8bd5\u524d\u00a0k\u00a0\u4e2a\u5019\u9009\u8005\uff0c\u627e\u5230\u4ed6\u4eec\u4e4b\u4e2d\u6700\u9ad8\u7684\u80fd\u529b\u503c\uff0c\u4f46\u5e76\u4e0d\u4f1a\u96c7\u4f63\u4ed6\u4eec\uff1b\u7136\u540e\u9762\u8bd5\u540e\u9762\u7684\u5019\u9009\u8005\uff0c\u4ee5\u5148\u524d\u786e\u5b9a\u7684\u6700\u9ad8\u80fd\u529b\u503c\u4f5c\u4e3a\u9608\u503c\u7b5b\u9009\u8fd9\u4e9b\u5019\u9009\u8005\uff0c\u5982\u679c\u9ad8\u4e8e\u8fd9\u4e2a\u9608\u503c\uff0c\u5c31\u96c7\u4f63\u8fd9\u4e2a\u4eba\u5e76\u4e0d\u518d\u9762\u8bd5\u540e\u9762\u7684\u4eba\u3002</p> <p>\u6700\u4f73\u7684k\u503c\u662fN/e,\u901a\u8fc7\u8fd9\u4e00\u7b97\u6cd5\u96c7\u4f63\u5230\u80fd\u529b\u6700\u4f73\u7684\u5019\u9009\u8005\u7684\u6982\u7387\u81f3\u5c11\u4e3a\\(\\frac 1 e\\)</p> <p>Warning</p> <p>\u5982\u679c\u80fd\u529b\u6700\u4f73\u7684\u5019\u9009\u8005\u51fa\u73b0\u5728\u524d\u00a0k\u00a0\u4e2a\u4eba\u91cc\u9762\uff0c\u90a3\u4e48\u8fd9\u79cd\u5728\u7ebf\u7b97\u6cd5\u5c31\u65e0\u6cd5\u5f97\u5230\u6b63\u786e\u7ed3\u679c\uff0c\u56e0\u6b64\u8be5\u7b97\u6cd5\u65e0\u6cd5\u4fdd\u8bc1\u603b\u662f\u80fd\u591f\u627e\u5230\u6b63\u786e\u89e3\u3002</p>"},{"location":"note/courses/ads/Final/#2-randomized-quicksort","title":"2 Randomized Quicksort","text":"<p>\u5feb\u901f\u6392\u5e8f\u7684\u4e8b\u4ef6\u590d\u6742\u5ea6\uff1a - \\(\\Theta(N^2)\\):\u6700\u574f\u60c5\u51b5\u4e0b\u7684\u8fd0\u884c\u4e8b\u4ef6 - \\(\\Theta(NlogN)\\):\u5e73\u5747\u8fd0\u884c\u4e8b\u4ef6</p> <p>\u5bfb\u627eCentral Splitter\u7684\u671f\u671b\u8fed\u4ee3\u6b21\u6570\u4e3a2</p>"},{"location":"note/courses/ads/Final/#lec-14-parallel-algorithms","title":"Lec 14: Parallel Algorithms","text":""},{"location":"note/courses/ads/Final/#1-pram","title":"1 PRAM \u5e76\u884c\u968f\u673a\u8bbf\u95ee\u673a","text":"<p>\u6c42\u548c\u95ee\u9898\uff1a \u81ea\u5e95\u5411\u4e0a\u4e24\u4e24\u76f8\u52a0\uff0c\u6574\u4e2a\u8fc7\u7a0b\u4e2d\u6240\u6709\u5de5\u4f5c\u7684\u5904\u7406\u5668\u6784\u6210\u4e86\u4e00\u68f5\u6ee1\u4e8c\u53c9\u6811\uff0c\u5c42\u6570\u4e3a\\(\\mathrm{log}~n\\), \\(B(h,i)\\)\u8868\u793a\u7b2ch\u6b65\u4e2d\u7b2ci\u4e2a\u5904\u7406\u5668\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u6709\u4e00\u4e0b\u5173\u7cfb\u5f0f\u6210\u7acb\uff1a \\(\\(B(h,i)=B(h-1,2i-1)+B(h-1,2i)\\)\\) \u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T(n)=\\mathrm{log}~n+2\\)</p> <p>PRAM\u6a21\u578b\u65e0\u6cd5\u63ed\u793a\u7b97\u6cd5\u548c\u5b9e\u9645\u4f7f\u7528\u7684\u5904\u7406\u5668\u4e2a\u6570\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u4e14\u9700\u8981\u6307\u5b9a\u54ea\u4e2a\u5904\u7406\u5668\u5904\u7406\u54ea\u90e8\u5206\u7684\u6307\u4ee4</p>"},{"location":"note/courses/ads/Final/#2-work-depth","title":"2 Work Depth","text":"<p> ///caption Work Depth ///</p> <p>\u5bf9 PRAM \u6a21\u578b\u6765\u8bf4\uff0c\u5982\u679c\u6709\u00a0W(n)W(n)\u00a0\u6b21\u64cd\u4f5c\uff0c\u9700\u8981\u82b1\u8d39\u00a0T(n)T(n)\u00a0\u65f6\u95f4\uff1a</p> <ul> <li>\u5f53\u4f7f\u7528\u5904\u7406\u5668\u6570\u91cf\u4e3a\u00a0P(n)=W(n)T(n)P(n)=T(n)W(n)\u200b\u00a0\u65f6\uff0c\u6240\u9700\u65f6\u95f4\u4e3a\u00a0T(n)T(n)</li> <li>\u5f53\u4f7f\u7528\u5904\u7406\u5668\u6570\u91cf\u4e3a\u00a0P(n)\u2264W(n)T(n)P(n)\u2264T(n)W(n)\u200b\u00a0\u65f6\uff0c\u6240\u9700\u65f6\u95f4\u4e3a\u00a0W(n)P(n)P(n)W(n)\u200b\uff08\u5bf9\u5e94\u5904\u7406\u5668\u4e0d\u8db3\u7684\u60c5\u51b5\uff09</li> <li>\u5f53\u4f7f\u7528\u4efb\u610f\u6570\u91cf\u4e3a\u00a0P(n)P(n)\u00a0\u7684\u5904\u7406\u5668\u65f6\uff0c\u6240\u9700\u65f6\u95f4\u4e3a\u00a0W(n)P(n)+T(n)P(n)W(n)\u200b+T(n)\uff08\u5bf9\u5e94\u5904\u7406\u5668\u5197\u4f59\u7684\u60c5\u51b5\uff09</li> </ul> <p>\u8fd9\u4e09\u4e2a\u6307\u6807\u5b9e\u9645\u4e0a\u662f\u6e10\u8fdb\u7b49\u4ef7\u7684\uff08Asymptotically Equivalent\uff09\uff0c\u5373\u5bf9\u4e8e\u4efb\u610f\u5927\u7684\u00a0nn\uff0c\u8fd9\u4e09\u8005\u4f4d\u4e8e\u540c\u4e00\u590d\u6742\u5ea6\u4e0b\u3002</p> <p>\u5bf9 WD \u6a21\u578b\u6765\u8bf4\uff0c\u6709\u5982\u4e0b\u5b9a\u7406\uff1a</p> <ul> <li>WD\u00a0\u8868\u793a\u6cd5\u5145\u5206\u6027\u5b9a\u7406\uff08WD-Presentation Sufficiency Theorem\uff09\uff1a\u7528\u00a0WD\u00a0\u6a21\u578b\u8868\u793a\u7684\u7b97\u6cd5\u80fd\u591f\u88ab\u4efb\u610f\u00a0P(n)P(n)\u00a0\u4e2a\u5904\u7406\u5668\u5728\u00a0O(W(n)P(n)+T(n))O(P(n)W(n)\u200b+T(n))\u00a0\u65f6\u95f4\u5185\u5b9e\u73b0\uff0c\u6b64\u65f6\u91c7\u7528\u5e76\u53d1\u5199\u5165\u89c4\u5219\u3002</li> </ul> <p>\u867d\u7136\u00a0PRAM\u00a0\u6a21\u578b\u548c\u00a0WD\u00a0\u6a21\u578b\u672c\u8d28\u4e0a\u6ca1\u6709\u592a\u5927\u7684\u533a\u522b\uff0c\u4f46\u662f\u00a0WD\u00a0\u6a21\u578b\u53ef\u4ee5\u53cd\u6620\u7b97\u6cd5\u4e0e\u5904\u7406\u5668\u6570\u91cf\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u56e0\u6b64\u8868\u73b0\u4f1a\u66f4\u597d\u3002</p>"},{"location":"note/courses/ads/Final/#3-prefix-sums","title":"3 Prefix Sums","text":"<p>\u8282\u70b9\u4ece1\u5f00\u59cb</p> <ul> <li> <p>\u6700\u5de6\u8fb9\u8def\u5f84\u4e0a\u7684\u8282\u70b9\uff1a <pre><code>if(i==1)\n    C(h,i):=B(h,i)\n</code></pre></p> </li> <li> <p>\u5076\u6570\u4f4d\u8282\u70b9 <pre><code>if(i%2==0)\n    C(h,i):=C(h+1,i/2)\n</code></pre></p> </li> <li> <p>\u9664\u6700\u5de6\u8fb9\u5916\u5947\u6570\u4f4d\u4e0a\u7684\u8282\u70b9 <pre><code>if(i%2!=0 &amp;&amp; i!=1)\n    C(h,i):= C(h+1,(i-1)/2)+B(h,i)\n</code></pre></p> </li> </ul> <p></p>"},{"location":"note/courses/ads/Final/#4-merging","title":"4 Merging","text":"<pre><code>for P_i, 1 &lt;= i &lt;= n pardo\n    C(i + RANK(i, B)) := A(i)\nfor P_i, 1 &lt;= i &lt;= n pardo\n    C(i + RANK(i, A)) := B(i)\n</code></pre> <p>\u5982\u4f55\u6c42Ranking? \u5148\u9009p\u4e2aselect\uff0c\u4e8c\u5206\u67e5\u627e\u5212\u5206\u5b50\u95ee\u9898\uff0c\u7136\u540e\u6bcf\u4e2a\u5b50\u95ee\u9898\u987a\u5e8f\u6392\u5e8f</p> <p>\u6574\u4e2a\u5e76\u884c\u6392\u884c\u7684\u00a0\\(T(n)=O(log\u2061n),W(n)=O(n)T(n)=O(logn),W(n)=O(n)\\)</p> <p>\u89e3\u51b3 Ranking \u6c42\u89e3\u4e4b\u540e\uff0c\u6574\u4e2a Merging \u95ee\u9898\u5c31\u53ef\u4ee5\u5728\u00a0\\(T(n)=O(1)T(n)=O(1)\\)\u00a0\u548c\\(W(n)=O(n+m)W(n)=O(n+m)\\)\u4e0b\u6c42\u89e3\u4e86</p>"},{"location":"note/courses/ads/Final/#5-maximum-finding","title":"5 Maximum Finding","text":"<ul> <li>\u53ef\u4ee5\u5f53\u4f5c\u6c42\u548c\u95ee\u9898\u7684\u53d8\u5f0f\\(T(n)=O(logN),W(n)=O(n)\\)</li> <li>Compare All Pairs: \\(T(n)=O(1),W(n)=O(n^2)\\),CRCW</li> <li>Doubly-Logarithmic Paradigm,\u4f1a\u5f71\u54cdT/W</li> <li>Random Sampling: CRCW, \u4e0d\u80fd\u4fdd\u8bc1\u5f97\u5230\u6b63\u786e\u7ed3\u679c </li> </ul>"},{"location":"note/courses/ads/Final/#lec-15-external-sorting","title":"Lec 15\uff1a External Sorting","text":"<p>\u82e5\u8981\u5bf9N\u6761\u8bb0\u5f55\u8fdb\u884c\u5916\u90e8\u6392\u5e8f\uff0c\u4e14\u4e3b\u5b58\u6700\u591a\u5bf9M\u6761\u8bb0\u5f55\u8fdb\u884c\u6392\u5e8f\uff0c\u90a3\u4e48\u9700\u8981\u7684\u8d9f\u6570\uff08number of passes \uff09\u4e3a\\(1+\\lceil log_2 \\frac NM\\rceil\\) </p>"},{"location":"note/courses/ads/Final/#1-k-way-merge","title":"1 k-way Merge","text":"<p>Number of passes:\\(1+\\lceil log_k \\frac NM\\rceil\\)</p> <p>\u9700\u89812k\u6761taps</p>"},{"location":"note/courses/ads/Final/#11-polymerge-sort","title":"1.1 Polymerge Sort","text":"<p>\u5728\u8d77\u59cb\u6b65\u7684\u65f6\u5019\uff0c\u5bf9\u539f\u5e8f\u5217\u8fdb\u884c\u4e0d\u5747\u7b49\u7684\u5206\u5272\uff0c\u5f62\u6210\u5927\u5c0f\u4e0d\u4e00\u7684\u5b50\u5e8f\u5217\u3002\u8fd9\u6837\u53ef\u4ee5\u786e\u4fdd\u5728\u6bcf\u4e00\u8d9f\u7ed3\u675f\u540e\uff0c\uff08\u9664\u4e86\u6700\u540e\u9636\u6bb5\u5916\uff09\u59cb\u7ec8\u4f1a\u6709\u591a\u4e2a\u5305\u542b\u8bb0\u5f55\u7684\u5b50\u5e8f\u5217\uff0c\u56e0\u6b64\u65e0\u9700\u989d\u5916\u9ad8\u6602\u7684\u62f7\u8d1d\u64cd\u4f5c\u3002</p> <ul> <li>\u5bf9\u4e8e\u4e24\u8def\u5f52\u5e76\u6392\u5e8f\uff0c\u5982\u679c\u5e8f\u5217\u4e2d\u00a0Run\u00a0\u7684\u6570\u91cf\u662f\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u00a0FNFN\u200b\u200b\uff0c\u90a3\u4e48\u6700\u597d\u7684\u5206\u5272\u60c5\u51b5\u662f\u5c06\u5b83\u5206\u6210\u5305\u542b\u00a0\\(F_{N\u22121}\\)\u200b\u00a0\u4e2a\u00a0run\u00a0\u548c\u00a0\\(F_{N\u22122}\\)\u200b\u00a0\u4e2a\u00a0run\u00a0\u7684\u5b50\u5e8f\u5217\u3002<ul> <li>\u5982\u679c\u521d\u59cb\u00a0run\u00a0\u7684\u6570\u91cf\u4e0d\u662f\u4e00\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u7684\u8bdd\u4e5f\u6ca1\u6709\u95ee\u9898\uff0c\u53ea\u9700\u627e\u5230\u79bb\u8be5\u6570\u6700\u63a5\u8fd1\u7684\u6590\u6ce2\u90a3\u5951\u6570\uff0c\u7136\u540e\u6309\u7167\u8fd9\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\u7684\u9012\u63a8\u5f0f\u5c06\u5176\u5206\u6210\u4e24\u4e2a\u5b50\u5e8f\u5217\uff08\u6ce8\u610f\u5176\u4e2d\u4e00\u4e2a\u5b50\u5e8f\u5217\u53ef\u80fd\u4e5f\u4e0d\u662f\u6590\u6ce2\u90a3\u5951\u6570\uff09</li> </ul> </li> <li>\u5bf9\u4e8e\u00a0k\u00a0\u8def\u5f52\u5e76\u6392\u5e8f\uff0c\\(F_N(k)=F_{N\u22121}(k)+\u22ef+F_{N\u2212k}(k)\\)\uff0c\u5176\u4e2d\u00a0\\(F_N(k)=0(0\u2264N\u2264k\u22122),F_{k\u22121}(k)=1\\)<ul> <li>\u56e0\u6b64\uff0c\u5bf9\u4e8e\u00a0k\u00a0\u8def\u5f52\u5e76\u6392\u5e8f\uff0c\u53ea\u9700\u8981\u00a0k+1\u00a0\u4e2a\u78c1\u5e26\u5c31\u591f\u4e86</li> <li>\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u53ef\u80fd\u5f88\u96be\u505a\u5230\u5c06\u00a0Run\u00a0\u7684\u6570\u91cf\u5212\u5206\u4e3a\u591a\u4e2a\u6590\u6ce2\u90a3\u5951\u6570\uff0c\u4f46\u6211\u4eec\u5e94\u786e\u4fdd\u6709\u5c3d\u53ef\u80fd\u591a\u7684\u6590\u6ce2\u90a3\u5951\u6570</li> </ul> </li> </ul>"},{"location":"note/courses/ads/Final/#12-replacement-selection","title":"1.2 Replacement Selection","text":"<ul> <li>\u7528\u8fd9\u79cd\u7b97\u6cd5\u751f\u6210\u5f97\u5230\u7684Run\u7684\u5e73\u5747\u957f\u5ea6\\(L_{avg}=2M\\)</li> <li>\u5f53\u5e8f\u5217\u7684\u6570\u636e\u5904\u4e8e\u63a5\u8fd1\u6392\u597d\u5e8f\u7684\u72b6\u6001\u65f6\uff0c\u8fd9\u79cd\u7b97\u6cd5\u7684\u8868\u73b0\u5c31\u975e\u5e38\u4e0d\u9519</li> </ul>"},{"location":"note/courses/ads/Final/#2-buffer-handling","title":"2 Buffer Handling","text":"<p>k\u2191\u21d2number\u00a0of\u00a0input\u00a0buffers\u2191\u21d2buffer\u00a0size\u2193\u21d2block\u00a0size\u00a0on\u00a0disk\u2193\u21d2seek\u00a0time\u2191\uff08\u5373\u00a0I/O\u00a0\u65f6\u95f4\u7684\u589e\u52a0\uff09,\u56e0\u6b64\u8fd9\u79cd\u5212\u5206\u65b9\u6cd5\u5bf9\u4e8e\u66f4\u5927\u7684\u00a0k\u00a0\u800c\u8a00\u6548\u679c\u53ef\u80fd\u4e0d\u662f\u7279\u522b\u597d\u3002\u4e3a\u4e86\u53d6\u5f97\u6700\u4f73\u6548\u679c\uff0c\u6211\u4eec\u9700\u8981\u7efc\u5408\u78c1\u76d8\u53c2\u6570\u548c\u7528\u4e8e\u7f13\u5b58\u7684\u4e3b\u5b58\u7a7a\u95f4\u5bb9\u91cf\u6765\u9009\u62e9\u5408\u9002\u7684\u00a0k\u503c</p>"},{"location":"note/courses/ads/Final/#21-minimizing-the-merge-time","title":"2.1 Minimizing the Merge Time","text":"<p>\u8fd9\u91cc\u6211\u4eec\u501f\u52a9\u54c8\u592b\u66fc\u7f16\u7801\u2014\u2014\u5728\u5408\u5e76\u6570\u4e2a\u957f\u5ea6\u4e0d\u4e00\u7684\u00a0run\u00a0\u65f6\uff0c\u6211\u4eec\u5e94\u907f\u514d\u591a\u6b21\u5408\u5e76\u957f\u5ea6\u8f83\u957f\u7684\u00a0run\uff0c\u800c\u54c8\u592b\u66fc\u7f16\u7801\u7684\u8d2a\u5fc3\u7b56\u7565\u6b63\u7b26\u5408\u6211\u4eec\u7684\u9700\u6c42\u3002\u4e0b\u9762\u6765\u770b\u4e2a\u4f8b\u5b50\uff0c\u4ee5\u4fbf\u66f4\u6e05\u695a\u5730\u4e86\u89e3\u8be5\u7b97\u6cd5\u5728\u5408\u5e76\u8fc7\u7a0b\u4e2d\u7684\u5e94\u7528\uff1a</p> <p>Example</p> QuestionAnswer <p>\u5047\u8bbe\u6211\u4eec\u6709\u00a04\u00a0\u4e2a\u00a0Run\uff0c\u957f\u5ea6\u5206\u522b\u4e3a\u00a02, 4, 5, 15\u3002\u8bf7\u8ba1\u7b97\u6700\u5c0f\u7684\u5408\u5e76\u65f6\u957f\u3002</p> <p>\u6700\u5c0f\u65f6\u95f4\u00a0\\(= 2 * 3 + 4 * 3 + 5 * 2 + 15 * 1 = 43\\)</p> <p>\u7ed3\u8bba\uff1a\u6700\u5c0f\u5408\u5e76\u65f6\u95f4\u00a0\\(=\u00a0O(\\text{the\u00a0weighted\u00a0external\u00a0path\u00a0length})\\)\uff08\u54c8\u592b\u66fc\u6811\u7684\u5e26\u6743\u8def\u5f84\u548c\uff09</p>"},{"location":"note/courses/ads/Lec%2010/","title":"Lec 10: NP-Completeness","text":"<p>Halmilton Problem\u3001Clique Problem \u3001 TSP Problem\u3001Vertex cover Problem\u90fd\u662fNPC\u95ee\u9898</p> <p>The easist: \u662f\\(O(N)\\)\u7ea7\u522b\u7684\uff0c\u56e0\u4e3a\u6211\u4eec\u5fc5\u987b\u8bfb\u5165\u8f93\u5165\u81f3\u5c11\u4e00\u6b21</p> <p>The hardest: undecided problems</p>"},{"location":"note/courses/ads/Lec%2010/#1-halting-problem","title":"1 Halting problem","text":"<p>\u5bf9\u4e8e\u4efb\u610f\u4e00\u4e2a\u7a0b\u5e8f\uff0c\u6211\u4eec\u65e0\u6cd5\u8bbe\u8ba1\u4e00\u4e2a\u7b97\u6cd5\u6765\u5224\u65ad\u5b83\u662f\u5426\u4f1a\u5728\u6709\u9650\u65f6\u95f4\u5185\u505c\u673a\uff08\u5373\u5224\u65ad\u7a0b\u5e8f\u662f\u5426\u4f1a\u6b7b\u5faa\u73af\uff09\u3002</p>"},{"location":"note/courses/ads/Lec%2010/#2-the-class-np","title":"2 The class NP","text":"<p>\u786e\u5b9a\u578b\u56fe\u7075\u673a\uff1a\u6839\u636e\u552f\u4e00\u72b6\u6001\uff0c\u4e0b\u4e00\u6b65\u600e\u4e48\u8d70\u662f\u786e\u5b9a\u7684</p> <p>\u975e\u786e\u5b9a\u6027\u56fe\u7075\u673a\uff1a \u4e0b\u4e00\u6b65\u6709\u591a\u4e2a\u9009\u62e9</p> <p>NP\uff1a Nondeterministic polynomial-time, \u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u9a8c\u8bc1\u7ed9\u5b9a\u89e3\u7684\u6b63\u786e\u4e0e\u5426</p> <p>P\u7c7b\u95ee\u9898\uff1a \u591a\u9879\u5f0f\u65f6\u95f4\u590d\u6742\u5ea6\u5185\u89e3\u51b3</p> <p>\\(P \\subseteq NP\\) ture</p> <p>\\(P \\subset NP\\) ?</p> <p>NPC\u95ee\u9898\uff1a \u6240\u6709NP\u95ee\u9898\u90fd\u53ef\u4ee5\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u89c4\u7ea6\u4e3aNP\u95ee\u9898\uff0c\u53ea\u8981\u89e3\u51b3\u4e00\u4e2aNPC\u95ee\u9898\uff0c\u5c31\u53ef\u4ee5\u89e3\u51b3\u6240\u6709NP\u95ee\u9898</p> <p>\u7ed9\u5b9a\u4efb\u610f\u5b9e\u4f8b\\(\\alpha \\in Problem~A\\),\u5982\u679c\u6211\u4eec\u53ef\u4ee5\u627e\u5230\u4e00\u4e2a\u7a0b\u5e8f\\(R(\\alpha)\\rightarrow \\belta \\in Problem~B\\),\u7a0b\u5e8fB\u662f\\(O(N^{k1})\\)\u7684\uff0c\u800c\u4e14\u53e6\u4e00\u4e2a\u7a0b\u5e8f\\(D(\\belta)\\)\u53ef\u4ee5\u5728\\(O(N^{k2})\\)\u65f6\u95f4\u5185\u5f97\u5230\u7b54\u6848\uff0c\u5e76\u4e14\u4e24\u4e2a\u95ee\u9898\u7684\u7b54\u6848\u76f8\u540c\uff0c\u5c31\u79f0\u4e4b\u4e3a\u95ee\u9898A\u89c4\u7ea6\uff08reduce\uff09\u5230\u95ee\u9898B</p>"},{"location":"note/courses/ads/Lec%2010/#3-a-formal-language-framework","title":"3 A Formal-language Framework","text":"<p>\u62bd\u8c61\u95ee\u9898\uff1a\u62bd\u8c61\u95ee\u9898\u00a0Q\u00a0\u662f\u4e00\u4e2a\u5173\u4e8e\u96c6\u5408\u00a0I\u00a0\u548c\u96c6\u5408\u00a0S\u00a0\u7684\u4e00\u4e2a\u4e8c\u5143\u5173\u7cfb\u3002\u5176\u4e2d\u00a0I\u8868\u793a\u95ee\u9898\u5b9e\u4f8b\uff08Instance\uff09\uff0cSS\u8868\u793a\u95ee\u9898\u7684\u89e3\uff08Solution\uff09</p> <p>\u6240\u6709\u7684\u4f18\u5316\u95ee\u9898\u53ef\u4ee5\u8f6c\u5316\u4e3a\u5224\u5b9a\u95ee\u9898\uff08Yes or No\uff09\uff0c\u5224\u5b9a\u95ee\u9898\u65b9\u4fbf\u8fdb\u884c\u89c4\u7ea6</p> <p>Encoding: \u8ba1\u7b97\u673a\u5c06\u95ee\u9898\u8f6c\u5316\u4e3a0,1\u4e32</p>"},{"location":"note/courses/ads/Lec%2010/#31-formal-language-theory","title":"3.1 Formal language Theory","text":"<p>\u4e00\u4e2a\u5224\u5b9a\u95ee\u9898\u53ef\u4ee5\u8868\u8fbe\u4e3a\u7b54\u6848\u4e3a1\u7684\u6240\u6709\u95ee\u9898\u7684\u96c6\u5408</p> <p>\u7ed9\u51fa\u4e00\u4e2a\u65b0\u7684\u5b9e\u4f8b\uff0c\u5982\u679c\u662f\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u7b97\u6cd5\u5c31\u4f1a\u63a5\u53d7\u5b83\uff0c\u5982\u679c\u4e0d\u662f\u96c6\u5408\u4e2d\u7684\u4e00\u4e2a\u5143\u7d20\uff0c\u7b97\u6cd5\u5c31\u4f1a\u62d2\u7edd\u5b83\uff0c\u5c31\u79f0\u4e4b\u4e3a\u7b97\u6cd5\u80fd\u591f\u89e3\u51b3\u6211\u4eec\u7684\u95ee\u9898</p> <p>co-NP\u95ee\u9898\uff0cL\u548cL\u7684\u8865\u90fd\u662fNP\u95ee\u9898</p>"},{"location":"note/courses/ads/Lec%2012/","title":"Local Search","text":""},{"location":"note/courses/ads/Lec%2012/#1-vertex-cover-problem","title":"1 Vertex Cover Problem","text":"<p>Metropolis \u7b97\u6cd5\uff1a\u8be5\u7b97\u6cd5\u4e0e\u68af\u5ea6\u4e0b\u964d\u6cd5\u6700\u5927\u7684\u4e0d\u540c\u5728\u4e8e\uff0c\u5982\u679c\u65b0\u7684\u9876\u70b9\u8986\u76d6\u96c6\u5408\\(S'\\)\u7684\u6210\u672c\u66f4\u5927\uff0c\u4e0d\u4f1a\u7acb\u9a6c\u88ab\u653e\u5f03\u800c\u662f\u4ee5\\(e^{\\frac{\\Delta cost}{kT}}\\)</p> <p>Info</p> <ul> <li>\u5339\u914d\u95ee\u9898\uff1a \u8fb9\u96c6E\u7684\u4e00\u4e2a\u5b50\u96c6\uff0c\u8fd9\u4e2a\u5b50\u96c6\u4e2d\u7684\u4efb\u610f\u4e24\u8fb9\u6ca1\u6709\u5171\u540c\u7684\u9876\u70b9</li> <li>\u67ef\u5c3c\u5e0c\u5b9a\u7406\uff1a \u5728\u4efb\u610f\u4e8c\u5206\u56fe\u4e2d\uff0c\u6700\u5927\u5339\u914d\u7684\u8fb9\u6570\u7b49\u4e8e\u6700\u5c0f\u8986\u76d6\u7684\u9876\u70b9\u6570</li> </ul>"},{"location":"note/courses/ads/Lec%2012/#2-hopfield-neural-networks","title":"2 Hopfield Neural Networks","text":"<p>\u72b6\u6001\u7ffb\u8f6c\u7b97\u6cd5(state-flipping)\u7b97\u6cd5\uff1a <pre><code>ConfigType State_flipping() {\n    Start from an arbitrary configuration S;\n    while (!IsStable(S)) {\n        u = GetUnsatisfied(S);\n        s_u = -s_u;\n    }\n\n    return S;\n}\n</code></pre> \u53ea\u8981\u8fd9\u4e2a\u5e03\u5c40\u4e0d\u662f\u7a33\u5b9a\u7684\uff0c\u7b97\u6cd5\u5c31\u4f1a\u627e\u51fa\u4e0d\u6ee1\u610f\u70b9\u5e76\u7ffb\u8f6c\u5b83\u7684\u72b6\u6001\uff0c\u8fd9\u6837\u5c31\u80fd\u4f7f\u5176\u53d8\u6210\u6ee1\u610f\u70b9</p> <p>\u8be5\u7b97\u6cd5\u5728\u4e4b\u591a\\(W=\\sum|w_e|\\)\u6b21\u8fed\u4ee3\u540e\u7ec8\u6b62</p>"},{"location":"note/courses/ads/Lec%2012/#3-maximum-cut-problem","title":"3 Maximum Cut Problem","text":"<p>\u7ed9\u5b9a\u4e00\u5f20\u65e0\u5411\u56fe\uff0c\u6bcf\u6761\u8fb9\u90fd\u6709\u6b63\u6574\u6570\u6743\u91cd\uff0c\u627e\u5230\u4e00\u79cd\u9876\u70b9\u5212\u5206\uff0c\u503c\u5f97\u5272\u4e4b\u95f4\u6240\u6709\u8fb9\u7684\u6743\u91cd\u548c\u6700\u5927</p> <p>\u5c40\u90e8\u6700\u4f18\u7684\u5212\u5206\u81f3\u5c11\u662f\u5168\u5c40\u6700\u4f18\u7684\u4e00\u534a\uff0c\u72b6\u6001\u7ffb\u8f6c\u7b97\u6cd5\u5728\u672c\u9898\u662f\u4e00\u79cd2-\u8fd1\u4f3c\u7b97\u6cd5</p> <ul> <li> <p>\u80fd\u5426\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u5f97\u5230\u7ed3\u679c\u5462\uff1f</p> <ul> <li>\u4e00\u79cd\u7b56\u7565\u662f\uff1a\u5982\u679c\u7b97\u6cd5\u627e\u4e0d\u5230\u6709\u201c\u8db3\u591f\u5927\u201d\u63d0\u5347\u7684\u89e3\uff0c\u90a3\u4e48\u7b97\u6cd5\u5c31\u4f1a\u7ec8\u6b62\u8fed\u4ee3\uff0c\u79f0\u8fd9\u79cd\u7b97\u6cd5\u4e3a\u5927\u63d0\u5347\u7ffb\u8f6c(big-improvement-flip)\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u8be5\u7b97\u6cd5\u6311\u9009\u90a3\u4e9b\u80fd\u591f\u63d0\u5347\u81f3\u5c11\\(\\dfrac{2\\varepsilon}{|V|}w(A, B)\\)\u5272\u503c\u7684\u9876\u70b9\u6765\u7ffb\u8f6c</li> <li>\u76f8\u5173\u7ed3\u8bba\uff1a<ul> <li> <p>\u7b97\u6cd5\u4e2d\u6b62\u540e\u4f1a\u8fd4\u56de\u4e00\u4e2a\u5272\u96c6\\((A, B)\\)\uff0c\u6ee1\u8db3\uff1a\\((2 + \\varepsilon)w(A, B) \\ge w(A^_, B^_)\\)</p> <ul> <li>\u56e0\u6b64\u8be5\u7b97\u6cd5\u662f\u4e00\u4e2a\\((2 + \\varepsilon)\\)-\u8fd1\u4f3c\u7b97\u6cd5         - \u8be5\u7b97\u6cd5\u80fd\u591f\u5728\u81f3\u591a\\(O(\\dfrac{n}{\\varepsilon} \\log W)\\)\u6b21\u7ffb\u8f6c\u540e\u7ec8\u6b62</li> </ul> </li> </ul> </li> </ul> </li> <li> <p>\u662f\u5426\u5b58\u5728\u4e00\u79cd\u66f4\u597d\u7684\u300c\u5c40\u90e8\u300d\uff1f</p> <ul> <li>\u4e00\u4e2a\u597d\u7684\u300c\u5c40\u90e8\u300d\u9700\u8981\u6ee1\u8db3\uff1a<ul> <li>\u89e3\u7684\u90bb\u5c45\u9700\u8981\u8db3\u591f\u5927\uff0c\u4f7f\u5f97\u7b97\u6cd5\u4e0d\u4f1a\u9677\u5165\u5c40\u90e8\u6700\u4f18\u89e3\u800c\u201c\u51fa\u4e0d\u6765\u201d</li> <li>\u4f46\u89e3\u7684\u90bb\u5c45\u4e5f\u4e0d\u80fd\u592a\u5927\uff0c\u56e0\u4e3a\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u5728\u6709\u9650\u7684\u6b65\u6570\u5185\uff0c\u5728\u90bb\u5c45\u96c6\u4e2d\u9ad8\u6548\u5730\u5bfb\u627e\u6700\u4f18\u89e3</li> </ul> </li> <li>\u6539\u8fdb\u65b9\u6cd5\uff1a\\(k\\)\u7ffb\u8f6c\u7b97\u6cd5\uff08\u4e00\u79cd\u542f\u53d1\u5f0f\u7b97\u6cd5\uff09\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(\\Theta(n^k)\\)\uff0c\u4e0b\u9762\u6765\u770b\u4e00\u4e0b\u6267\u884c\u6b65\u9aa4\uff1a<ul> <li>\u7b2c1\u6b65\uff1a\u5bf9\u6574\u4e2a\u9876\u70b9\u96c6\u4f7f\u7528\u72b6\u6001\u7ffb\u8f6c\u7b97\u6cd5\uff08\u5355\u9876\u70b9\u7684\u7ffb\u8f6c\uff09\uff0c\u6b64\u65f6\u5f97\u5230\u7684\u6700\u4f18\u89e3\u4e3a\\((A_1, B_1)\\)\uff0c\u88ab\u7ffb\u8f6c\u7684\u90a3\u4e2a\u9876\u70b9\u8bb0\u4e3a\\(v_1\\)<ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n)\\)</li> </ul> </li> <li>\u7b2ck\u6b65\uff1a\u5bf9\u5c1a\u672a\u7ffb\u8f6c\u8fc7\u7684\u9876\u70b9\u96c6\u4f7f\u7528\u72b6\u6001\u7ffb\u8f6c\u7b97\u6cd5\uff0c\u6b64\u65f6\u5f97\u5230\u7684\u6700\u4f18\u89e3\u4e3a\\((A_k, B_k)\\)\uff0c\u88ab\u7ffb\u8f6c\u7684\u9876\u70b9\u6709\\(v_1, \\dots, v_k\\)<ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n - k + 1)\\)</li> </ul> </li> <li>\u7b2cn\u6b65\uff1a\\((A_n, b_n) = (B, A)\\)</li> <li>\u56e0\u6b64\uff0c\u5212\u5206\\((A, B)\\)\u7684\u90bb\u5c45\u96c6\u4e3a\\({(A_1, B_1), \\dots, (A_{n - 1}, B_{n - 1})}\\)\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n^2)\\)</li> </ul> </li> </ul> </li> </ul>"},{"location":"note/courses/ads/Lec%209/","title":"Greedy Algorithm","text":"<p>Optimization Problem: \u7ed9\u5b9a\u4e00\u7ec4\u9650\u5236\u6761\u4ef6\u548c\u4f18\u5316\u51fd\u6570\uff0c\u79f0\u6ee1\u8db3\u6761\u4ef6\u7684\u89e3\u4e3a\u53ef\u884c\u89e3\uff0c\u5982\u679c\u4e00\u4e2a\u53ef\u884c\u89e3\u5728\u4f18\u5316\u51fd\u6570\u4e2d\u53d6\u5f97\u6700\u4f73\u503c\uff0c\u5219\u79f0\u8be5\u89e3\u4e3a\u6700\u4f18\u89e3</p> <p>The Greedy Method: </p> <ul> <li>\u6839\u636e\u9884\u5148\u8bbe\u5b9a\u7684\u8d2a\u5fc3\u6807\u51c6\uff0c\u5728\u6bcf\u4e2a\u9636\u6bb5\u4e2d\u505a\u51fa\u6700\u4f73\u51b3\u7b56</li> <li>\u5f53\u524d\u505a\u51fa\u7684\u51b3\u7b56\u4e0d\u5141\u8bb8\u5728\u540e\u9762\u6539\u53d8\uff0c\u6240\u4ee5\u786e\u4fdd\u505a\u51fa\u6bcf\u4e2a\u51b3\u7b56\u90fd\u662f\u53ef\u884c\u7684</li> <li>\u53ea\u6709\u5f53\u5c40\u90e8\u6700\u4f18=\u5168\u5c40\u6700\u4f18\u65f6\uff0c\u8d2a\u5fc3\u7b97\u6cd5\u624d\u662f\u53ef\u884c\u7684</li> <li>\u8d2a\u5fc3\u7b97\u6cd5\u4e0d\u4fdd\u8bc1\u5f97\u5230\u6700\u4f18\u89e3</li> </ul>"},{"location":"note/courses/ads/Lec%209/#1-activity-selection","title":"1 Activity Selection","text":"<p>Question</p> <ul> <li>\u7ed9\u5b9a\u4e00\u7ec4\u6d3b\u52a8\u96c6\\(S = \\{a_1, a_2, \\dots, a_n\\}\\)\uff0c\u8fd9\u4e9b\u6d3b\u52a8\u5747\u5728\u4e00\u4e2a\u623f\u95f4\u5f00\u5c55\uff0c\u6d3b\u52a8\\(a_i\\)\u7684\u8fdb\u884c\u65f6\u95f4\u4e3a\\([s_i. f_i)\\)</li> <li>\u5982\u679c\\(a_i\\)\u548c\\(a_j\\)\u6ee1\u8db3\\(s_i \\ge f_j\\)\u6216\\(s_j \\ge f_i\\)\uff08\u5373\u4e24\u4e2a\u6d3b\u52a8\u7684\u65f6\u95f4\u4e0d\u91cd\u53e0\uff09\uff0c\u79f0\u8fd9\u4e24\u4e2a\u6d3b\u52a8\u662f\u517c\u5bb9\u7684(compatible)</li> <li>\u4e3a\u4e86\u89e3\u9898\u65b9\u4fbf\uff0c\u9884\u5148\u5c06\u8fd9\u4e9b\u6d3b\u52a8\u6839\u636e\u7ed3\u675f\u65f6\u95f4\u7684\u5148\u540e\u6392\u597d\u5e8f\uff0c\u5373\u4fdd\u8bc1\\(f_1 \\le f_2 \\le \\dots f_{n-1} \\le f_n\\)</li> </ul> <p>\u95ee\u9898\uff1a\u8bf7\u4f60\u6c42\u51fa\u6700\u5927\u7684\u3001\u6d3b\u52a8\u4e4b\u95f4\u76f8\u4e92\u517c\u5bb9\u7684\u5b50\u96c6\uff0c\u5373\u6c42\u5728\u4e0d\u53d1\u751f\u51b2\u7a81\u7684\u524d\u63d0\u4e0b\u80fd\u5b89\u6392\u7684\u6700\u591a\u6d3b\u52a8\u7684\u65b9\u6848</p> <p>\u51e0\u79cd\u8d2a\u5fc3\u7b56\u7565\uff1a</p> <ul> <li>\u6311\u9009\u6700\u65e9\u5f00\u59cb\u7684\u6d3b\u52a8\uff08false</li> <li>\u6311\u9009\u65f6\u95f4\u6700\u77ed\u7684\u6d3b\u52a8\uff08false</li> <li>\u6311\u9009\u51b2\u7a81\u6700\u5c11\u7684\u6d3b\u52a8\uff08false</li> <li> <p>\u6311\u9009\u6700\u65e9\u7ed3\u675f\u7684\u6d3b\u52a8\uff08good</p> </li> <li> <p>\u5b9e\u73b0\u6b65\u9aa4\uff1a</p> <ul> <li>\u9009\u62e9\u9996\u5148\u7ed3\u675f\u7684\u6d3b\u52a8\uff0c\u9012\u5f52\u89e3\u51b3\u5269\u4f59\u7684\u6d3b\u52a8\u5b50\u96c6</li> <li>\u7531\u4e8e\u8fd9\u662f\u4e00\u4e2a\u5c3e\u9012\u5f52\uff0c\u56e0\u6b64\u53ef\u4ee5\u7528\u8fed\u4ee3\u65b9\u6cd5\u66ff\u4ee3</li> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(N \\log N)\\)\uff08\u76ee\u524d\u4e0d\u6e05\u695a\u4e3a\u4ec0\u4e48\uff09</li> </ul> </li> <li> <p>\u5f97\u5230\u6b63\u786e\u7684\u8d2a\u5fc3\u7b97\u6cd5\u540e\uff0c\u6211\u4eec\u56de\u8fc7\u5934\u6765\u4fee\u6539DP\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\uff1a</p> \\[ c_{1, j} = \\begin{cases}1 &amp; \\text{if}\\ j = 1 \\ \\max {c_{1, j - 1}, c_{1, k(j)} + 1} &amp; \\text{if}\\ j &gt; 1\\end{cases} \\] <p>\u5176\u4e2d\\(c_{1, j}\\)\u662f\\(a_1\\)\u5230\\(a_j\\)\u4e4b\u95f4\u7684\u6700\u4f18\u89e3\uff0c\\(a_{k(j)}\\)\u662f\u79bb\\(a_j\\)\u6700\u8fd1\u7684\u3001\u517c\u5bb9\u7684\u3001\u4e14\u5148\u4e8e\\(a_j\\)\u5b8c\u6210\u7684\u6d3b\u52a8</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\\(O(n^2)\\)</p> </li> <li> <p>\u5982\u679c\u6bcf\u4e2a\u6d3b\u52a8\u90fd\u6709\u4e00\u4e2a\u6743\u91cd\uff0c\u90a3\u4e48\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a</p> \\[ c_{1, j} = \\begin{cases}w_j &amp; \\text{if}\\ j = 1 \\ \\max {c_{1, j - 1}, c_{1, k(j)} + w_j} &amp; \\text{if}\\ j &gt; 1\\end{cases} \\] <ul> <li>\u6b64\u65f6DP\u7b97\u6cd5\u4f9d\u7136\u53ef\u884c\uff0c\u4f46\u662f\u8d2a\u5fc3\u7b97\u6cd5\u5c31\u884c\u4e0d\u901a\u4e86</li> </ul> </li> </ul> <p>\u533a\u95f4\u8c03\u5ea6\u95ee\u9898\uff1a</p> <ul> <li>\u9996\u5148\u8bbe\u7f6e\u521d\u59cb\u6559\u5ba4\u6570\u91cf\u4e3a1\uff0c\u5c06\u6240\u6709\u6d3b\u52a8\u6309\u7167\u5f00\u59cb\u65f6\u95f4\u6392\u5e8f\uff0c\u7136\u540e\u4ece\u524d\u5f80\u540e\u904d\u5386</li> <li>\u6bcf\u6b21\u9009\u62e9\u4e00\u4e2a\u6d3b\u52a8\u65f6\uff0c\u770b\u5f53\u524d\u6709\u65e0\u7a7a\u95f2\u6559\u5ba4\uff0c\u5982\u679c\u6709\u5c31\u76f4\u63a5\u653e\u8fdb\u5bf9\u5e94\u7684\u6559\u5ba4\uff0c\u5426\u5219\u7684\u8bdd\u5219\u65b0\u5f00\u4e00\u4e2a\u6559\u5ba4</li> </ul>"},{"location":"note/courses/ads/Lec%209/#2-schedule-problems","title":"2 Schedule Problems","text":"<p>Problem</p> <p>\u8c03\u5ea6\u95ee\u9898\uff1a \u7ed9\u5b9an\u4e2a\u4efb\u52a1\uff0c\u6bcf\u4e2a\u4efb\u52a1i\u6709\u4e00\u4e2a\u5b8c\u6210\u6240\u9700\u65f6\u95f4\\(l_u\\)\u548c\u6743\u91cd\\(w_i\\)\uff0c\u8fd9\u4e9b\u4efb\u52a1\u53ea\u80fd\u88ab\u4e00\u6b21\u6267\u884c\uff0c\u4e0d\u80fd\u5e76\u884c</p> <p>\u8bb0\\(\\sigma\\)\u4e3a\u4e00\u79cd\u8c03\u5ea6\uff0c\u4efb\u52a1i\u5b8c\u6210\u7684\u65f6\u95f4\\(C_i(\\sigma)+l_i\\)+(i\u4e4b\u524d\u7684\u4efb\u52a1\u65f6\u957f\u4e4b\u548c\uff09\uff0c\u9898\u76ee\u8981\u6c42\u6700\u5c0f\u5316\u52a0\u6743\u65f6\u95f4\u548c\uff0c\u5373\u6c42\\(T=min\\sum_{i=1}^{n}w_iC_i(\\sigma)\\)</p> <p>\u8fd9\u7c7b\u95ee\u9898\u5f88\u9002\u5408\u7528\u8d2a\u5fc3\u7b56\u7565\u89e3\u51b3\uff1a\u5c06\u6743\u91cd\u66f4\u5927\u3001\u65f6\u95f4\u66f4\u77ed\u7684\u4efb\u52a1\u653e\u5728\u524d\u9762\u5904\u7406\uff0c\u8fd9\u6837\u5f97\u5230\u7684\u89e3\u5e94\u4e3a\u6700\u4f18\u89e3\u3002</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(O(log n)\\)</p>"},{"location":"note/courses/ads/Lec%209/#3-huffman-codes","title":"3 Huffman Codes","text":"<p>\u6240\u6709\u7684\u5b57\u7b26\u4f4d\u53f6\u5b50\u8282\u70b9\u4e0a\uff0c\u800c\u4e0d\u4f1a\u4f4d\u4e8e\u5185\u90e8\u8282\u70b9\uff0c</p> <p>Code</p> <p><pre><code>void Huffman(PriorityQueue heap[], int C) {\n    consider the C characters as C single node binary trees,\n    and initialize them into a min heap;\n\n    for (i = 1; i &lt; C; i++) {\n        create a new node;\n        // be greedy here\n        delete root from min heap and attach it to left_child of node;\n        delete root from min heap and attach it to right_child of node;            \n        weight of node = sum of weights of its children;\n        // weight of a tree = sum of the frequencies of its leaves\n        insert node into min heap;\n    }\n}\n</code></pre> \u5177\u4f53\u6b65\u9aa4\u4e3a\uff1a  - \u521d\u59cb\u5316\uff1a\u5c06\u6bcf\u4e2a\u5b57\u7b26\u4f5c\u4e3a\u4e00\u4e2a\u4e8c\u53c9\u6811\u7684\u59d0\u5f1f\u554a\uff0c\u5e76\u5c06\u5b83\u4eec\u653e\u5728\u4e00\u4e2a\u6700\u5c0f\u5806\u5185 - \u5faa\u73af\u6267\u884c\u4e00\u4e0b\u6b65\u9aa4\uff1a\uff08\u5171\u8282\u70b9\u6570-1\u6b21\uff09     - \u53d6\u51fa\u9891\u7387\u6700\u5c0f\u7684\u8282\u70b9\uff0c\u4f5c\u4e3a\u65b0\u6811\u7684\u5de6\u5b69\u5b50     - \u518d\u53d6\u51fa\u9891\u7387\u6b21\u5c0f\u7684\u8282\u70b9\uff0c\u4f5c\u4e3a\u65b0\u6811\u7684\u53f3\u5b69\u5b50\uff0c\u65b0\u6811\u7684\u6839\u8282\u70b9\u662f\u4e8c\u8282\u70b9\u9891\u7387\u4e4b\u548c\uff0c\u91cd\u65b0\u653e\u56de\u6700\u5c0f\u5806</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T=O(ClogC)\\)</p> <p>Note</p> <ul> <li>\u82e5\u5b57\u7b26\u4e2a\u6570\u4e3aC,Huffman tree\u7684\u8282\u70b9\u4e2a\u6570\u4e3a2C-1</li> <li>\u7f16\u7801\u957f\u5ea6\u4e0d\u8d85\u8fc7C-1</li> </ul>"},{"location":"note/courses/ads/Lec11/","title":"Approximation","text":"<p>\u2014\u2014\u2014\u2014Dealing with Hard problems \u51e0\u79cd\u601d\u8def\uff1a - N\u5f88\u5c0f\uff0c\u53ca\u65f6\u65f6\u95f4\u590d\u6742\u5ea6\u5f88\u5dee\u4e5f\u53ef\u4ee5\u63a5\u53d7 - \u5728\u591a\u9879\u5f0f\u65f6\u95f4\u91cc\u9762\u89e3\u51b3\u4e00\u4e9bspecial case - \u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u627e\u51fa\u4e00\u4e2a\u8fd1\u4f3c\u6700\u4f18\u89e3</p>"},{"location":"note/courses/ads/Lec11/#1-approximation-ratio","title":"1 Approximation Ratio","text":"<p>[!note] Definition </p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u4f18\u5316\u95ee\u9898\uff0c\u5047\u8bbe ( \\(\\text{OPT}\\)) \u662f\u6700\u4f18\u89e3\u7684\u503c\uff0c( \\(\\text{ALG}\\)) \u662f\u8fd1\u4f3c\u7b97\u6cd5\u7ed9\u51fa\u7684\u89e3\u7684\u503c\u3002\u8fd1\u4f3c\u6bd4\u5b9a\u4e49\u4e3a\uff1a</p> <ul> <li>\u5bf9\u4e8e\u6700\u5c0f\u5316\u95ee\u9898\uff1a\\([ \\text{Approximation Ratio} = \\frac{\\text{ALG}}{\\text{OPT}} ]\\)</li> <li>\u5bf9\u4e8e\u6700\u5927\u5316\u95ee\u9898\uff1a\\([ \\text{Approximation Ratio} = \\frac{\\text{OPT}}{\\text{ALG}} ]\\)</li> </ul> <p>\u5176\u4e2d\uff1a - ( \\(\\text{ALG}\\) ) \u662f\u8fd1\u4f3c\u7b97\u6cd5\u7684\u89e3\u7684\u503c\u3002 - ( \\(\\text{OPT}\\)) \u662f\u6700\u4f18\u89e3\u7684\u503c\u3002</p> <p>\u8fd1\u4f3c\u6bd4\u8d8a\u63a5\u8fd11\uff0c\u8868\u793a\u8fd1\u4f3c\u7b97\u6cd5\u7684\u89e3\u8d8a\u63a5\u8fd1\u6700\u4f18\u89e3\u3002\u4e00\u4e2a\u8fd1\u4f3c\u6bd4\u4e3a ( \\(\\rho(n)\\) ) \u7684\u7b97\u6cd5\u88ab\u79f0\u4e3a ( \\(\\rho(n)\\) )-\u8fd1\u4f3c\u7b97\u6cd5\u3002</p> <p>\u6700\u4f18\u89e3\u7684\u8fd1\u4f3c\u65b9\u6848(approximation scheme)\u6307\u7684\u662f\u4e00\u7c7b\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u5b83\u4e0d\u4ec5\u80fd\u591f\u5c06\u8f93\u5165\u4f5c\u4e3a\u95ee\u9898\u7684\u5b9e\u4f8b\uff0c\u800c\u4e14\u5bf9\u4e8e\u4efb\u610f\u7ed9\u5b9a\u503c\\(\\varepsilon &gt; 0\\)\uff0c\u5b83\u662f\u4e00\u4e2a\\((1 + \\varepsilon)\\)\u8fd1\u4f3c\u7b97\u6cd5\u3002</p> <ul> <li>\u591a\u9879\u5f0f\u65f6\u95f4\u8fd1\u4f3c\u65b9\u6848(polynomial-time approximation scheme, PTAS)\uff1a\u5bf9\u4e8e\u4efb\u610f\u7ed9\u5b9a\u503c\\(\\varepsilon &gt; 0\\)\uff0c\u5f53\u8f93\u5165\u5b9e\u4f8b\u89c4\u6a21\u4e3a\\(n\\)\u65f6\uff0c\u8be5\u65b9\u6848\u80fd\u5728\u591a\u9879\u5f0f\u65f6\u95f4\u5185\u5b8c\u6210\u8ba1\u7b97\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u8bb0\u4e3a\\(O(n^{f(\\frac{1}{\\varepsilon})})\\)<ul> <li>\u6ee1\u591a\u9879\u5f0f\u65f6\u95f4\u8fd1\u4f3c\u65b9\u6848(fully polynomial-time approximation scheme, FPTAS)\uff1a\u5728PTAS\u7684\u57fa\u7840\u4e0a\uff0c\u8981\u6c42\u8be5\u65b9\u6848\u7684\u8fd0\u884c\u65f6\u95f4\u5173\u4e8e\\(n\\)\u548c\\(\\varepsilon\\)\u90fd\u662f\u591a\u9879\u5f0f\u7ea7\u7684\uff0c\u65f6\u95f4\u590d\u6742\u5ea6\u53ef\u8bb0\u4e3a\\(O(n^{O(1)} (\\dfrac{1}{\\varepsilon})^{O(1)})\\)</li> <li>\u9ad8\u6548\u591a\u9879\u5f0f\u65f6\u95f4\u8fd1\u4f3c\u65b9\u6848(efficient polynomial-time approximation scheme,\u00a0EPTAS)\uff1a\u5728\u00a0PTAS\u00a0\u7684\u57fa\u7840\u4e0a\uff0c\u8981\u6c42\u8be5\u65b9\u6848\u7684\u8fd0\u884c\u65f6\u95f4\u662f\u4e0e\u00a0\u03b5\u03b5\u00a0\u65e0\u5173\uff0c\u5173\u4e8e\u00a0nn\u00a0\u7684\u591a\u9879\u5f0f\u65f6\u95f4\uff0c\u5373\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n^{O(1)f(\\frac{1}{\\varepsilon})})\\)</li> </ul> </li> </ul> <p>Warning</p> <p>\u5982\u679cA\u95ee\u9898\u80fd\u88ab\u89c4\u7ea6\u5230B\uff0c\u4e14B\u95ee\u9898\u6709\u4e00\u4e2a\\(\\belta\\)-\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u90a3\u4e48\u5e76\u4e0d\u80fd\u8bf4\u660eA\u4e00\u5b9a\u4e5f\u6709\u4e00\u4e2a\\(\\belta\\)\u8fd1\u4f3c\u7b97\u6cd5</p>"},{"location":"note/courses/ads/Lec11/#2-approximate-bin-packing","title":"2 \u96c6\u88c5\u7bb1\u95ee\u9898\uff08Approximate Bin Packing\uff09","text":"<p>\u7ed9\u5b9a\u00a0N\u00a0\u4e2a\u5927\u5c0f\u5206\u522b\u4e3a\u00a0\\(S_1,S_2,S_N\\)\u00a0\u7684\u7269\u54c1\uff0c\u6ee1\u8db3\u00a0\\(\\forall 1\u2264i\u2264N,0&lt;S_i\u22641\\)\uff0c\u5e76\u5047\u8bbe\u6709\u82e5\u5e72\u4e2a\u5bb9\u91cf\u4e3a\u00a01\u00a0\u7684\u6876\u3002\u73b0\u5728\u8bf7\u4f60\u6c42\u51fa\u80fd\u591f\u88c5\u4e0b\u6240\u6709\u7269\u54c1\u7684\u6700\u5c0f\u6876\u6570\u3002</p> <p>Note</p> <p>\u8fd9\u662f\u4e00\u4e2aNPH\u95ee\u9898\uff0c\u800c\u5176\u51b3\u7b56\u7248\u672c\uff0c\u7ed9\u5b9aK\u4e2a\u6876\uff0c\u80fd\u5426\u88c5\u4e0bN\u4e2a\u7269\u54c1\u662f\u4e00\u4e2aNPC\u95ee\u9898</p>"},{"location":"note/courses/ads/Lec11/#21-online-algorithms","title":"2.1 Online Algorithms","text":"<ul> <li>Next Fit : \u6309\u7167\u8f93\u5165\u987a\u5e8f\u4e00\u4e2a\u4e2a\u65b9\u7269\u54c1,\\(O(N)\\);\u4ee4M\u4e3a\u88c5\u4e0b\u8fd9\u4e9b\u7269\u54c1\u7684\u6700\u4f18\u89e3\u6876\u6570\uff0c\u90a3\u4e48\u8be5\u65b9\u6cd5\u6240\u5f97\u540c\u5c5e\u4e0d\u8d85\u8fc72M-1</li> <li>First Fit : \u5bf9\u4e8e\u5f53\u524d\u7269\u54c1\uff0c\u627e\u5230\u7b2c\u4e00\u4e2a\u73b0\u5b58\u7684\u80fd\u591f\u5bb9\u5f97\u4e0b\u5b83\u7684\u6876\uff0c\u5982\u679c\u4e0d\u5b58\u5728\u8fd9\u6837\u7684\u6876\u518d\u6dfb\u52a0\u65b0\u7684\u6876\u3002\\(O(NlogN)\\),\u6240\u5f97\u6876\u6570\u4e0d\u8d85\u8fc7\\(\\frac{17M}{10}\\)</li> <li>Best Fit: \u548cFF\u5dee\u4e0d\u591a</li> </ul> <p>\u5bf9\u4e8e\u672c\u9898\u6240\u6709\u7684\u8fd1\u4f3c\u7b97\u6cd5\uff0c\u5f97\u5230\u7684\u8fd1\u4f3c\u89e3\u6876\u6570\u81f3\u5c11\u662f\u6700\u4f18\u89e3\u76845/3\u500d</p>"},{"location":"note/courses/ads/Lec11/#22-offline-algorithms","title":"2.2 Offline Algorithms","text":"<p>\u5148\u5c06\u7269\u54c1\u6309\u5927\u5c0f\u7684\u975e\u9012\u589e\u987a\u5e8f\u6392\u5e8f\uff0c\u7136\u540e\u7528FF or BF</p> <p>FFD\u6240\u5f97\u6876\u6570\u4e0d\u8d85\u8fc7\\(\\frac {11M}9+\\frac 69\\)</p>"},{"location":"note/courses/ads/Lec11/#3-knapsack-problems","title":"3 Knapsack Problems","text":"<p>\u95ee\u9898\uff1a \u5206\u6570\u7248\u672c\u76840-1\u80cc\u5305\u95ee\u9898</p> <p>\u6309\u4ef7\u503c\u5bc6\u5ea6\u7684\u964d\u5e8f\u6311\u9009\u7269\u54c1\uff0c\u76f4\u5230\u80cc\u5305\u88ab\u586b\u6ee1</p>"},{"location":"note/courses/ads/Lec11/#31-0-1-version","title":"3.1 0-1 version","text":"<p>NPH</p> <p>\u540c\u4e0a\u7684\u8d2a\u5fc3\u6cd5\u662f\u4e00\u4e2a2-\u8fd1\u4f3c\u7b97\u6cd5</p> <p>\u901a\u5e38\u89e3\u6cd5\uff08dp\uff09\uff1a</p> <ul> <li>\u4ee4\\(W_{i, p}\\)\u4e3a\u7269\u54c11\u5230\u7269\u54c1\\(i\\)\u4e4b\u95f4\u7684\u6700\u5c0f\u8d28\u91cf\uff0c\u603b\u4ef7\u503c\u4e3a\\(p\\)</li> <li>\u5206\u7c7b\u8ba8\u8bba\uff1a<ul> <li>\u53d6\u7269\u54c1\\(i\\)\uff1a\\(W_{i, p} = w_i + W_{i - 1, p - p_i}\\)</li> <li>\u4e0d\u53d6\u7269\u54c1\\(i\\)\uff1a\\(W_{i, p} = W_{i - 1, p}\\)</li> <li>\u4e0d\u53ef\u80fd\u5f97\u5230\u4ef7\u503c\\(p\\)\uff1a\\(W_{i, p} = \\infty\\)</li> </ul> </li> <li>\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a</li> </ul> <p>Wi,p={\u221ei=0\u00a0Wi\u22121,ppi&gt;p\u00a0minWi\u22121,p,wi+Wi\u22121,p\u2212piotherwise</p> <ul> <li>\u5176\u4e2d\uff0c\\(i = 1, \\dots, n, p = 1, \\dots, np_{\\text{max}}\\)\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(n^2 p_{\\text{max}})\\)</li> </ul>"},{"location":"note/courses/ads/Lec11/#4-k-center-problems","title":"4 K-center Problems","text":"<p>Question</p> <p>\u7ed9\u5b9a\\(n\\)\u4e2a\u5730\u5740\\(s_1, \\dots, s_n\\)\uff0c\u5728\u5730\u56fe\u4e0a\u9009\u62e9\\(K\\)\u4e2a\u4e2d\u5fc3\u70b9\\(c\\)\uff0c\u4f7f\u4efb\u610f\u5730\u5740\u5230\u79bb\u5b83\u8ddd\u79bb\u6700\u8fd1\u7684\u4e2d\u5fc3\u70b9\u4e4b\u95f4\u7684\u8ddd\u79bb\u4e2d\u7684\u6700\u5927\u503c\u6700\u5c0f\u5316\u3002</p> <p> </p> <p>\u8fd9\u4e48\u8bf4\u53ef\u80fd\u4e0d\u592a\u597d\u7406\u89e3\uff0c\u4e0b\u9762\u7ed9\u51fa\u7b26\u53f7\u5316\u7684\u5b9a\u4e49\uff1a</p> <p>\u672c\u95ee\u9898\u63d0\u5230\u7684\u8ddd\u79bb(distance)\u4e0d\u540c\u4e8e\u56fe\u8bba\u4e2d\u8fb9\u7684\u6743\u91cd\uff0c\u5b9e\u9645\u4e0a\u5b83\u5c31\u662f\u6570\u5b66\u4e0a\u672c\u6765\u7684\u610f\u601d\uff1a</p> <ul> <li>\u540c\u4e00\u6027(identity)\uff1a\\(dist(x, x) = 0\\)</li> <li>\u5bf9\u79f0\u6027(symmetry)\uff1a\\(dist(x, y) = dist(y, x)\\)</li> <li>\u4e09\u89d2\u4e0d\u7b49\u5f0f(triangle inequality)\uff1a\\(dist(x, y) \\le dist(x, z) + dist(z, y)\\)</li> </ul> <p>\u4ee4\uff1a</p> <ul> <li>\\(dist(s_i, C) = \\min\\limits_{c \\in C} \\{dist(s_i, c)\\}\\)\uff0c\u5373\\(s_i\\)\u5230\u6700\u8fd1\u4e2d\u5fc3\u70b9\u95f4\u7684\u8ddd\u79bb</li> <li>\\(r(C) = \\max\\limits_{i} \\{dist(s_i, C)\\}\\)\uff0c\u5373\u6240\u6709\u4e2d\u5fc3\u70b9\u4e2d\u6700\u5927\u7684\u6700\u5c0f\u8986\u76d6\u534a\u5f84</li> </ul> <p>\u76ee\u6807\uff1a\u627e\u5230\u4e00\u7ec4\u4e2d\u5fc3\u70b9\u96c6\\(C\\)\uff0c\u4f7f\u5f97\\(r(C)\\)\u6700\u5c0f\u5316\uff0c\u4e14\u4fdd\u8bc1\\(|C| = K\\)\uff08\\(K\\)\u4e3a\u5e38\u6570\uff09</p>"},{"location":"note/courses/ads/Lec11/#41-naive-greedy","title":"4.1 Naive Greedy","text":"<ul> <li>\u8ba9\u7b2c\u4e00\u4e2a\u4e2d\u5fc3\u70b9\u4f5c\u4e3a\u6240\u6709\u5730\u5740\u7684\u4e2d\u70b9</li> <li>\u968f\u540e\u52a0\u5165\u7684\u4e2d\u5fc3\u70b9\u80fd\u591f\u51cf\u5c11r(C)\u7684\u503c</li> </ul> <p>\u4f46\u662f\u5728\u6574\u4e2a\u70b9\u96c6\u5305\u62ec\u4e24\u4e2a\u76f8\u9694\u5f88\u8fdc\u7684\u5b50\u96c6\u4e14K=2\u65f6\uff0c\u8fd9\u79cd\u8d2a\u5fc3\u7b56\u7565\u5c31\u5931\u6548\u4e86</p>"},{"location":"note/courses/ads/Lec11/#42-2-r-greedy","title":"4.2 2-r Greedy","text":"<pre><code>Centers Greedy-2r(Sites S[], int n, int K, double r) {\n    Sites S`[] = S[];  // S` is the set of the remaining sites\n    Centers C[] = NULL;\n    while (S`[] != NULL) {\n        Select any s form S` and add it to C;\n        Delete all s` from S` that are at dist(s`, s) &lt;= 2r;\n    } // end-while\n    if (|C| &lt;= K) \n        return C;\n    else\n        ERROR(\"No set of K centers with covering radius at most r\");\n}\n</code></pre> <p>\u4e8c\u5206\u6cd5\u4e0d\u65ad\u51cf\u5c0fr\u7684\u503c\u76f4\u5230\u627e\u5230\u5408\u9002\u7684r,\u65f6\u95f4\u590d\u6742\u5ea6\\(O(log r_{max})\\)</p> <ul> <li>\u4ece\u8f93\u5165\u70b9\u96c6\u4e2d\u968f\u673a\u9009\u53d6\u7b2c\u4e00\u4e2a\u70b9\u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u4e2d\u5fc3\uff0c\u7136\u540e\u5220\u9664\u8be5\u70b9\u4e3a\u4e2d\u5fc3\uff0c\\(2r\\)\u4e3a\u534a\u5f84\u7684\u6240\u6709\u70b9</li> <li>\u7136\u540e\u5728\u5269\u4f59\u70b9\u4e2d\u968f\u673a\u9009\u62e9\u7b2c\u4e8c\u4e2a\u4e2d\u5fc3\uff0c\u4ee5\u6b64\u7c7b\u63a8</li> <li>\u5982\u679c\u8be5\\(r\\)\u503c\u786e\u5b9e\u662f\u6700\u4f18\u89e3\uff0c\u90a3\u4e48\u8fd9\u4e00\u7b97\u6cd5\u5728\\(K\\)\u6b65\u4e4b\u5185\u5fc5\u7136\u505c\u6b62\uff0c\u4e14\u5f97\u5230\u7684\u89e3\u662f\u6700\u4f18\u89e3\u76842\u500d\uff0c\u5373\u8be5\u7b97\u6cd5\u662f\u4e00\u4e2a2-\u8fd1\u4f3c\u7b97\u6cd5</li> <li>\u5b9a\u7406\uff1a\u5047\u8bbe\u8be5\u7b97\u6cd5\u9009\u62e9\u7684\u4e2d\u5fc3\u70b9\u6570\u8d85\u8fc7\\(K\\)\uff0c\u90a3\u4e48\u5bf9\u4e8e\u4efb\u610f\u89c4\u6a21\u81f3\u591a\u4e3a\\(K\\)\u7684\u4e2d\u5fc3\u70b9\u96c6\\(C^_\\)\uff0c\u8986\u76d6\u534a\u5f84\u4e3a\\(r(C_) &gt; r\\)</li> </ul>"},{"location":"note/courses/ads/Lec11/#43-smarter-greedy","title":"4.3 Smarter Greedy","text":"<p>\u8fd9\u4e2a\u8d2a\u5fc3\u6cd5\u8fd8\u53ef\u4ee5\u518d\u6539\u8fdb\uff01\u8fd8\u662f\u5148\u7ed9\u51fa\u4f2a\u4ee3\u7801\uff1a</p> <pre><code>Centers Greedy-Kcenter(Sites S[], int n, int K) {\n    Centers C[] = NULL;\n    Select any s from S and add it to C;\n    while (|C| &lt; K) {\n        Select s from S with maximum dist(s, C);\n        Add s to C;\n    }  // end-while\n    return C;\n}\n</code></pre> <ul> <li> <p>\u8fd9\u91cc\u7684\u8d2a\u5fc3\u6cd5\u4e0e\u4e0a\u9762\u7684\u8d2a\u5fc3\u6cd5\u533a\u522b\u5728\u4e8e\uff1a\u540e\u8005\u662f\u4efb\u610f\u9009\u53d6\u8f93\u5165\u70b9\u96c6\u4e2d\u7684\u70b9\u4f5c\u4e3a\u4e2d\u5fc3\u70b9\uff0c\u800c\u524d\u8005\u7684\u7b56\u7565\u662f\uff1a</p> <ul> <li>\u7b2c\u4e00\u4e2a\u70b9\u8fd8\u662f\u4efb\u610f\u53d6\u7684</li> <li>\u4e4b\u540e\u9009\u62e9\u79bb\u4e2d\u5fc3\u70b9\u96c6\u4e2d\u7684\u70b9\u5c3d\u53ef\u80fd\u8fdc\u7684\u70b9\u4f5c\u4e3a\u65b0\u7684\u4e2d\u5fc3\u70b9\uff0c\u8fd9\u6837\u7684\u9009\u62e9\u65b9\u6cd5\u66f4\u52a0\u806a\u660e\u4e9b</li> <li>\u5faa\u73af\\(K\\)\u904d\u5c31\u7ed3\u675f\u5faa\u73af\u4e86</li> <li>\u5b9a\u7406\uff1a\u8be5\u7b97\u6cd5\u8fd4\u56de\u5305\u542b\u89c4\u6a21\u4e3a\\(K\\)\u7684\u4e2d\u5fc3\u70b9\u96c6\\(C\\)\uff0c\u4f7f\u5f97\\(r(C) \\le 2r(C^_)\\)\uff0c\u5176\u4e2d\\(C^_\\)\u8868\u793a\u6700\u4f18\u4e2d\u5fc3\u70b9\u96c6</li> </ul> </li> <li> <p>\u5f88\u53ef\u60dc\u7684\u662f\uff0c\u8fd9\u79cd\u505a\u6cd5\u5c5e\u4e8e\u201c\u6362\u6c64\u4e0d\u6362\u836f\u201d\uff0c\u672c\u8d28\u4e0a\u4f9d\u65e7\u662f\u4e00\u4e2a2-\u8fd1\u4f3c\u7b97\u6cd5\u3002</p> </li> </ul> <p>\u5f88\u9057\u61be\u7684\u662f\uff0c\u5bf9\u4e8e\u8be5\u95ee\u9898\uff08\u4e2d\u95f4\u9009\u62e9\u95ee\u9898\uff09\uff0c\u4e0d\u5b58\u5728\\(\\rho &lt; 2\\)\u7684\u8fd1\u4f3c\u7b97\u6cd5</p>"},{"location":"note/courses/ads/Lec14/","title":"Introduction","text":"<p>\u6240\u8c13\u5e76\u884c(parallelism)\uff0c\u5c31\u662f\u6307\u6bcf\u4e00\u6b65\u80fd\u591f\u540c\u65f6\u5b8c\u6210\u591a\u4e2a\u64cd\u4f5c\u3002\u53ef\u4ee5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u7c7b\u5e76\u884c\u65b9\u5f0f\uff1a</p> <ul> <li>\u673a\u5668\u5e76\u884c\uff08\u786c\u4ef6\u5c42\u9762\uff09\uff1a\u5305\u62ec\u4e86\u5904\u7406\u5668\u5e76\u884c\u3001\u6d41\u6c34\u7ebf\u3001\u8d85\u957f\u6307\u4ee4\u5b57\u00a0(VLIW)\u00a0\u7b49\u65b9\u6cd5</li> <li>\u5e76\u884c\u7b97\u6cd5(parallel algorithms)\uff08\u8f6f\u4ef6\u5c42\u9762\uff09\uff1a\u8fd9\u5c31\u662f\u672c\u8bb2\u7684\u4e3b\u9898\uff0c\u4e0b\u9762\u4f1a\u8be6\u7ec6\u4ecb\u7ecd\u3002\u5e76\u884c\u7b97\u6cd5\u4e2d\u5e38\u7528\u7684\u6a21\u578b\u6709\uff1a<ul> <li>\u5e76\u884c\u968f\u673a\u8bbf\u95ee\u673a(parallel random access machine, PRAM)</li> <li>\u5de5\u4f5c\u00a0-\u00a0\u6df1\u5ea6(work-depth, WD)</li> </ul> </li> </ul>"},{"location":"note/courses/ads/Lec14/#pram","title":"PRAM","text":"<p>\u56fe\u793a\uff1a\u591a\u4e2a\u5904\u7406\u5668\u8bbf\u95ee\u540c\u4e00\u5757\u5185\u5b58</p> <p> ///caption PRAM ///</p> <ul> <li>\\(P_1,\\cdots,P_n\\)\u4ee3\u8868n\u4e2a\u5904\u7406\u5668\uff0c\u5b83\u4eec\u540c\u65f6\u8bbf\u95ee\u4e00\u5757\u5171\u4eab\u5185\u5b58</li> <li>\u6bcf\u4e2a\u5904\u7406\u5668\u4e0e\u5171\u4eab\u5185\u5b58\u4e4b\u95f4\u7684\u53cc\u5411\u7bad\u5934\u8868\u793a\u5355\u4f4d\u65f6\u95f4\u5185\u5bf9\u5185\u5b58\u7684\u8bbf\u95ee\uff08\u5305\u62ec\u8bfb\u3001\u5199\u3001\u8ba1\u7b97\u7b49\u64cd\u4f5c\uff09</li> </ul> \\[ \\cdots \\] <p>operations</p> example1 <p>2</p>"},{"location":"note/courses/ads/Lec7/","title":"Lec 7: Divide and Conquer","text":""},{"location":"note/courses/ads/Lec7/#1-introduction","title":"1 Introduction","text":"<p>\u5206\u6cbb\u6cd5(Divide-and-conquer algorithm)\u5c5e\u4e8e\u4e00\u79cd\u7b97\u6cd5\u8303\u578b\uff0c\u5b83\u7684\u57fa\u672c\u601d\u60f3\u662f\u5c06\u4e00\u4e2a\u95ee\u9898\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u89c4\u6a21\u8f83\u5c0f\u7684\u76f8\u540c\u95ee\u9898\uff0c\u7136\u540e\u9012\u5f52\u5730\u89e3\u51b3\u8fd9\u4e9b\u5b50\u95ee\u9898\uff0c\u6700\u540e\u5c06\u8fd9\u4e9b\u5b50\u95ee\u9898\u7684\u89e3\u5408\u5e76\u5f97\u5230\u539f\u95ee\u9898\u7684\u89e3\uff0c\u4e00\u4e2a\u6bd4\u8f83\u7ecf\u5178\u7684\u6848\u4f8b\u5c31\u662f\u5f52\u5e76\u6392\u5e8f\u548c\u5feb\u901f\u6392\u5e8f\u3002</p> <p>Closest Points Problem</p> <p>\u4e8c\u7ef4\u6700\u8fd1\u70b9\u95ee\u9898(Closest Points Problem)\uff0c\u6307\u7684\u662f\u7ed9\u5b9a\u5e73\u9762\u4e0a\u7684 n \u4e2a\u70b9\uff0c\u627e\u51fa\u5176\u4e2d\u8ddd\u79bb\u6700\u8fd1\u7684\u4e24\u4e2a\u70b9\u3002</p> <p>\u8be5\u5206\u6cbb\u7b97\u6cd5\u7684\u65f6\u95f4\u590d\u6742\u5ea6\u8ba1\u7b97\u9012\u63a8\u516c\u5f0f\uff1a \\(\\(T(N=2T(\\frac N2)+O(N)=O(N\\mathrm{log}N)\\)\\)</p>"},{"location":"note/courses/ads/Lec8/","title":"Lec8 : Dynamic Programming","text":""},{"location":"note/courses/ads/Lec8/#1-climbing-stairs-problem","title":"1 Climbing Stairs Problem","text":"<p>Question</p> <p>\u697c\u5e95\u548c\u697c\u9876\u4e4b\u95f4\u6709\u00a0n\u00a0\u6bb5\u53f0\u9636\uff0c\u6bcf\u6b65\u53ef\u4ee5\u4e0a\u00a01\u00a0\u4e2a\u6216\u00a02\u00a0\u4e2a\u53f0\u9636\uff0c\u8bf7\u95ee\u6709\u591a\u5c11\u79cd\u722c\u5230\u697c\u9876\u7684\u65b9\u6cd5\u3002</p> <ul> <li>\u5047\u5982\u6211\u4eec\u73b0\u5728\u7ad9\u5728\u7b2ci\u4e2a\u53f0\u9636\u4e0a\uff0c\u56e0\u4e3a\u6bcf\u6b65\u53ef\u4ee5\u4e0a1\u4e2a\u62162\u4e2a\u53f0\u9636\uff0c\u6240\u4ee5\u5728\u4e0a\u4e00\u6b65\u6211\u4eec\u5e94\u8be5\u7ad9\u5728\u7b2ci-1\u6216\u7b2ci-2\u4e2a\u53f0\u9636\u4e0a</li> <li> <p>\u4ee4\u722c\u5230\u7b2ci\u4e2a\u53f0\u9636\u7684\u65b9\u6848\u6811\u4e3a\\(F_i\\)\uff0c\u90a3\u4e48\u5f88\u81ea\u7136\u5730\uff0c\u6211\u4eec\u5f97\u5230\u4e86\u4e00\u4e2a\u9012\u63a8\u5173\u7cfb\u5f0f\uff1a\\(F_i = F_{i - 1} + F_{i - 2}\\)</p> </li> <li> <p>\u6839\u636e\u9012\u63a8\u5173\u7cfb\uff0c\u8981\u5f97\u5230\u00a0FNFN\u200b\uff0c\u53ea\u9700\u77e5\u9053\u00a0FN\u22121FN\u22121\u200b\u00a0\u548c\u00a0FN\u22122FN\u22122\u200b\u00a0\u7684\u503c</p> </li> </ul> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(T(N)=O(N)\\)</p>"},{"location":"note/courses/ads/Lec8/#2-ordering-matrix-multiplications","title":"2 Ordering Matrix Multiplications","text":"<p>\u5047\u8bbe\u6211\u4eec\u8ba1\u7b97\\(n\\)\u4e2a\u77e9\u9635\u7684\u4e58\u6cd5\\(\\mathbf{M}_1 \\cdot \\dots \\cdot \\mathbf{M}_n\\)\uff0c\u5176\u4e2d\\(\\mathbf{M}_i\\)\u662f\u4e00\u4e2a\u89c4\u6a21\u4e3a\\(r_{i-1} \\times r_i\\)\u7684\u77e9\u9635\u3002\u4ee4\u8ba1\u7b97\u77e9\u9635\u4e58\u6cd5\\(\\mathbf{M}_i \\cdot \\dots \\cdot \\mathbf{M}_j\\)\u7684\u6700\u4f18\u6210\u672c\u4e3a\\(m_{ij}\\)\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u4ee5\u4e0b\u9012\u63a8\u5173\u7cfb\u5f0f\uff1a</p> <p>mij={0if\u00a0i=j\u00a0mini\u2264li <ul> <li>\u6211\u4eec\u9700\u8981\u8ba1\u7b97\u7684\\(m_{ij}\\)\u6709\\(O(N^2)\\)\u4e2a\uff08\\(i, j\\)\u7684\u8303\u56f4\u5728\\([1, n]\\)\u4e4b\u95f4\uff09</li> <li>\u6839\u636e\u9012\u63a8\u5173\u7cfb\u5f0f\uff0c\u67d0\u4e2a\u5b50\u95ee\u9898\u7684\u89e3\u4e00\u5b9a\u6765\u81ea\u6bd4\u8be5\u5b50\u95ee\u9898\u89c4\u6a21\u66f4\u5c0f\u7684\u5b50\u95ee\u9898\u7684\u89e3\u4e2d\u3002\u56e0\u6b64\u4e3a\u4e86\u8282\u7701\u8ba1\u7b97\u6b21\u6570\uff0c\u6211\u4eec\u8fd8\u662f\u81ea\u5e95\u5411\u4e0a\u8ba1\u7b97\uff1a\u5148\u7b97\u6700\u5c0f\u89c4\u6a21\uff08\u5373\\(i = j\\)\u65f6\uff09\u7684\\(m_{ij}\\)\uff0c\u518d\u8ba1\u7b97\u66f4\u5927\u89c4\u6a21\u7684\\(m_{ij}\\)\uff0c\u8fd9\u6837\u89c4\u6a21\u8f83\u5927\u7684\u5b50\u95ee\u9898\u53ef\u4ee5\u5229\u7528\u89c4\u6a21\u8f83\u5c0f\u7684\u5b50\u95ee\u9898\u7684\u89e3\u76f4\u63a5\u8ba1\u7b97\uff0c\u800c\u65e0\u9700\u91cd\u590d\u8ba1\u7b97\u66f4\u5c0f\u89c4\u6a21\u7684\u5b50\u95ee\u9898</li> </ul> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(T(N)=O(N^3)\\)</p>"},{"location":"note/courses/ads/Lec8/#3-optimal-binary-search-trees","title":"3 Optimal Binary Search Trees","text":"<p>\u6700\u4f18\u4e8c\u53c9\u67e5\u627e\u6811(optimal binary search trees, OBST)\uff1a\u4e00\u79cd\u5728\u4e8c\u53c9\u67e5\u627e\u6811\u4e0a\u5b8c\u6210\u9759\u6001\u67e5\u627e(static search)\uff08\u5373\u6ca1\u6709\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\uff09\u64cd\u4f5c\u7684\u6700\u4f18\u65b9\u6cd5\u3002</p> <p>Question</p> <p>\u7ed9\u5b9a\\(N\\)\u4e2a\u5355\u8bcd\uff0c\u6ee1\u8db3\u8bcd\u5178\u5e8f\\(w_1 &lt; w_2 &lt; \\dots &lt; w_N\\)\uff0c\u4e14\u6bcf\u4e2a\u8bcd\\(w_i\\)\u51fa\u73b0\u7684\u6982\u7387\uff08\u4ee5\u4e0b\u79f0\u4e3a\u201c\u8bcd\u9891\u201d\uff09\u4e3a\\(p_i\\)\u3002\u73b0\u5728\u8981\u6c42\u5c06\u8fd9\u4e9b\u8bcd\u6392\u5217\u5728\u4e00\u4e2a\u4e8c\u53c9\u67e5\u627e\u6811\u4e0a\uff0c\u4f7f\u5f97\u6240\u6709\u5355\u8bcd\u7684\u9884\u671f\u67e5\u627e\u65f6\u95f4\uff08\\(T(N) = \\sum\\limits_{i=1}^N p_i \\cdot (1 + d_i)\\)\uff0c\u5176\u4e2d\\(d_i\\)\u4e3a\\(w_i\\)\u5728\u6811\u4e2d\u7684\u6df1\u5ea6\uff09\u5c3d\u53ef\u80fd\u5c0f\uff0c\u5373\u6784\u9020\u4e00\u68f5OBST\u3002</p> <p>\u6784\u9020OBST\u7684\u89e3\u6cd5\u4e0e\u8ba1\u7b97\u77e9\u9635\u4e58\u6cd5\u7684\u6700\u4f18\u987a\u5e8f\u7c7b\u4f3c\u3002\u5148\u4ee4\uff1a</p> <ul> <li>Tij\uff1a\u7531\u5355\u8bcd\\(w_i \\dots w_j(i &lt; j)\\)\u6784\u6210\u7684OBST</li> <li>cij\uff1a\\(T_{ij}\\)\u7684\u6210\u672c\uff08\\(c_{ii} = p_i\\)\uff0cPPT\u4e0a\u7684\u662f\u9519\u7684\uff09</li> <li>rij\uff1a\\(T_{ij}\\)\u7684\u6839\u8282\u70b9</li> <li>wij\uff1a\\(T_{ij}\\)\u7684\u6743\u91cd\uff0c\u7b49\u4e8e\\(\\sum\\limits_{k = i}^j p_k\\)\uff08\\(w_{ii} = p_i\\)\uff09</li> </ul> <p>\u82e5\\(T_{ij}\\)\u662f\u6700\u4f18\u7684\uff0c\u90a3\u4e48\u9700\u8981\u6ee1\u8db3\\(c_{ij} = w_{ij} + \\min\\limits_{i &lt; l \\le j}{c_{i, l - 1} + c_{l + 1, j}}\\)</p> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(T(N)=O(N^3)\\)</p>"},{"location":"note/courses/ads/Lec8/#4-floyd-shortest-path-algorithm","title":"4 Floyd Shortest Path Algorithm","text":"<p>Floyd\u7b97\u6cd5\u7684\u5927\u81f4\u601d\u8def\uff1a\u4ece\\(D^{-1}\\)\u5f00\u59cb\uff0c\u8fde\u7eed\u5f97\u5230\\(D^0, D^1, \\dots, D^{N-1}\\)\u3002\u5982\u679c\u5df2\u7ecf\u89e3\u51b3\u4e86\\(D^{k-1}\\)\uff0c\u5219\u6b64\u65f6\u6709\u4e24\u79cd\u53ef\u80fd\u7684\u60c5\u51b5\uff1a</p> <ul> <li>\u7b2c\\(k\\)\u4e2a\u8282\u70b9\u5e76\u4e0d\u5728\u6700\u77ed\u8def\u5185\uff0c\u5373\\(D^k = D^{k - 1}\\)</li> <li>\u7b2c\\(k\\)\u4e2a\u8282\u70b9\u5728\u6700\u77ed\u8def\u5185\uff0c\u90a3\u4e48\u6ee1\u8db3\\(D^k[i][j] = D^{k-1}[i][k] + D^{k-1}[k][j]\\)</li> </ul> <p>\u56e0\u6b64\u6709\u9012\u63a8\u5173\u7cfb\uff1a\\(D^k[i][j] = \\min{D^{k-1}[i][j], D^{k-1}[i][k] + D^{k-1}[k][j]}, k \\ge 0\\)</p> \u4ee3\u7801\u5b9e\u73b0 <pre><code>// A[] contains the adjacency matric with A[i][i] = 0\n// D[] contains the values of the shortest path\n// N is the number of vertices\n// A negative cycle exists iff D[i][i] &lt; 0\nvoid AllPairs(TwoDimArray A, TwoDimArray D, int N) {\n    int i, j, k;\n    for (i = 0; i &lt; N; i++)    // initialize D\n        for (j = 0; j &lt; N; j++)\n            D[i][j] = A[i][j];\n\n    for (k = 0; k &lt; N; k++)      // add the kth vertex into the path\n        for (i = 0; i &lt; N; i++)\n            for (j = 0; j &lt; N; j++)\n                if (D[i][k] + D[k][j] &lt; D[i][j])    // update shortest path\n                    D[i][j] = D[i][k] + D[k][j];\n}\n</code></pre> <p>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a \\(T(N)=O(N^3)\\)</p>"},{"location":"note/courses/ads/Lec8/#5-product-assembly","title":"5 Product Assembly","text":"\\[ \\begin{align} f[line][stage] &amp; = \\min\\{f[line][stage - 1] + t_{process}[line][stage - 1] \\notag  , f[1 - line][stage - 1] + t_{transit}[1 - line][stage - 1]\\} \\notag \\end{align} \\] <p>\u5176\u4e2d\\(f[line][stage]\\)\u8868\u793a\u5728_stage_\u9636\u6bb5\u65f6\uff0c\u5728\u7b2c_line_\u6761\u7ec4\u88c5\u7ebf\u4e0a\u7684\u6700\u4f18\u65f6\u95f4\uff0c\\(t_{process}[line][stage]\\)\u8868\u793a\u5728\u540c\u4e00\u6761\u7ec4\u88c5\u7ebf\u4e0a\u8fdb\u5165_stage_\u9636\u6bb5\u6240\u9700\u7684\u65f6\u95f4\uff0c\\(t_{process}[line][stage]\\)\u8868\u793a\u4ece\u4e0d\u540c\u7ec4\u88c5\u7ebf\u4e0a\u8fdb\u5165_stage_\u9636\u6bb5\u6240\u9700\u7684\u65f6\u95f4\u3002</p> <ol> <li> <p>\u786e\u5b9a\u597d\u8ba1\u7b97\u7684\u987a\u5e8f\u3002\u8fd9\u91cc\u76f4\u63a5\u770b\u4ee3\u7801\uff1a</p> <p>\u4ee3\u7801\u5b9e\u73b0</p> <pre><code>// Initialization\nf[0][0] = 0; \nf[1][0] = 0;\n// Outer loop: start from the first stage, end with the last stage\nfor (stage = 1; stage &lt;= n; stage++) {\n    // Inner loop: test each line and find the minimum path\n    for (line = 0; line &lt;= 1; line++) {\n        f[line][stage] = min(f[line][stage - 1] + t_process[line][stage - 1], f[1 - line][stage - 1] + t_transit[1 - line][stage - 1]);\n    }\n}\n// The solution comes from the last stage of two lines\nSolution = min(f[0][n], f[1][n]);\n</code></pre> </li> </ol>"},{"location":"note/courses/ads/Lec8/#6-knapsack-problem","title":"6 Knapsack Problem","text":""},{"location":"note/courses/ads/Lec8/#61-0-1","title":"6.1 0-1\u80cc\u5305\u95ee\u9898","text":"<p>\u89e3\u9898\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u5b9a\u4e49\u72b6\u6001</p> <ul> <li>\u89c2\u5bdf\u53d1\u73b0\uff0c\u653e\u5165\u7269\u54c1\u4f1a\u6539\u53d8\u80cc\u5305\u5185\u7269\u54c1\u7684\u603b\u4ef7\u503c\u548c\u80cc\u5305\u5bb9\u91cf\uff0c\u56e0\u6b64\u9700\u8981\u8bb0\u5f55\u7684\u91cf\u4e3a\u524d\\(i\\)\u4e2a\u7269\u54c1\u5728\u5bb9\u91cf\u4e3a\\(c\\)\u7684\u80cc\u5305\u4e2d\u7684\u6700\u5927\u4ef7\u503c\uff0c\u7528\u7b26\u53f7\u5316\u7684\u8bed\u8a00\u8868\u793a\u4e3a\\(dp[i, c]\\)\uff0c\u90a3\u4e48\u8981\u6c42\u7684\u5c31\u662f\\(dp[n, cap]\\)</li> <li> <p>\u7528\u4e00\u5f20\\((n + 1) \\times (cap + 1)\\)\u7684\u8868\u6765\u8bb0\u5f55\u72b6\u6001 2. \u63a8\u5bfc\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b</p> </li> <li> <p>\u5f53\u6211\u4eec\u5bf9\u7269\u54c1\\(i\\)\u505a\u51fa\u51b3\u7b56\u65f6\uff0c\u9700\u8981\u8003\u8651\u4e24\u79cd\u60c5\u51b5</p> <ul> <li>\u4e0d\u653e\u5165\u7269\u54c1\uff1a\\(dp[i, c] = dp[i - 1, c]\\)\uff0c\u80cc\u5305\u5bb9\u91cf\u548c\u4ef7\u503c\u5747\u4e0d\u53d8</li> <li>\u653e\u5165\u7269\u54c1\uff1a\\(dp[i, c] = dp[i - 1, c - w_{i - 1}] + v_{i - 1}\\)\uff0c\u80cc\u5305\u5bb9\u91cf\u51cf\u5c11\uff0c\u4ef7\u503c\u589e\u52a0<ul> <li>\u56e0\u6b64\u5b8c\u6574\u7684\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a</li> </ul> </li> </ul> \\[ dp[i, c] = \\max{dp[i - 1, c], dp[i - 1, c - w_{i - 1}] + v_{i - 1}} \\] </li> </ul> </li> <li> <p>\u786e\u5b9a\u8ba1\u7b97\u987a\u5e8f</p> <ul> <li>\u9996\u5148\u786e\u5b9a\u4e00\u4e0b\u8fb9\u754c\u6761\u4ef6\uff1a\u5f53\u65e0\u7269\u54c1\u6216\u80cc\u5305\u5bb9\u91cf\u4e3a0\u65f6\u6700\u5927\u4ef7\u503c\u4e3a0\uff0c\u5373\u72b6\u6001\u8868\u9996\u5217\\(dp[i, 0]\\)\u548c\u9996\u884c\\(dp[0, c]\\)\u5747\u7b49\u4e8e0</li> <li>\u6839\u636e\u72b6\u6001\u65b9\u7a0b\u77e5\uff0c\u5f53\u524d\u72b6\u6001\u662f\u6839\u636e\u5b83\u4e0a\u65b9\u548c\u5de6\u4e0a\u65b9\u7684\u72b6\u6001\u63a8\u51fa\u6765\u7684\uff0c\u56e0\u6b64\u53ea\u9700\u6b63\u5411\u5faa\u73af\u904d\u5386\u8fd9\u5f20\u72b6\u6001\u8868\u5373\u53ef</li> </ul> </li> </ol> <p>\u4e0b\u9762\u5c55\u793a\u5bf9\u5e94\u7684\u4ee3\u7801\u5b9e\u73b0\uff1a</p> \u4ee3\u7801\u5b9e\u73b0 <pre><code>int knapsack_01(int weight[], int val[], int n, int cap) {\n    int i, j;\n    int dp[MAXN][MAXCAP];\n\n    for (i = 0; i &lt;= n; i++) \n        for (j = 0; j &lt;= cap; j++)\n            dp[i][j] = 0;\n\n    for (i = 1; i &lt;= n; i++) {\n        for (j = 1; j &lt;= cap; j++) {\n            if (weight[i - 1] &gt; c) {\n                dp[i][j] = dp[i - 1][j];\n            } else {\n                dp[i][j] = max(dp[i - 1][j], dp[i - 1][j - weight[i - 1]] + val[i - 1]);\n            }\n        }\n    }\n\n    return dp[n][cap];\n}\n</code></pre> <ul> <li>\u65f6\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n \\cdot cap)\\)</li> <li>\u7a7a\u95f4\u590d\u6742\u5ea6\uff1a\\(O(n \\cdot cap)\\)</li> </ul> <p>\u4e8b\u5b9e\u4e0a\uff0c\u8fd9\u79cd\u7b97\u6cd5\u5728\u7a7a\u95f4\u4e0a\u8fd8\u53ef\u4ee5\u518d\u4f18\u5316\uff08\\(O(n \\cdot cap) \\rightarrow O(n)\\)\uff09\uff1a</p> <ul> <li>\u89c2\u5bdf\u53d1\u73b0\uff0c\u7b2ci\u884c\u72b6\u6001\u8868\u7684\u72b6\u6001\u6765\u81ea\u4e8e\u7b2ci-1\u884c\u72b6\u6001\u8868\u7684\u72b6\u6001\uff1b\u4e14\u904d\u5386\u7b2ci\u884c\u65f6\u7b2ci-1\u884c\u7684\u72b6\u6001\u5df2\u7ecf\u7b97\u597d\u4e86\uff0c\u56e0\u6b64\u6211\u4eec\u5c1d\u8bd5\u5c06\u72b6\u6001\u8868\u4ece\u4e8c\u7ef4\u964d\u5230\u4e00\u7ef4</li> <li>\u8fd9\u65f6\u5c31\u4e0d\u80fd\u6b63\u5411\u904d\u5386\u4e86\uff0c\u56e0\u4e3a\u5728\u539f\u6765\u7684\u72b6\u6001\u8868\u4e2d\uff0c\u5f53\u524d\u72b6\u6001\u4f9d\u8d56\u4e8e\u5b83\u4e0a\u9762\u7684\u548c\u5de6\u4e0a\u89d2\u7684\u72b6\u6001\uff1b\u5982\u679c\u538b\u7f29\u6210\u4e00\u7ef4\uff0c\u5de6\u4e0a\u89d2\u7684\u72b6\u6001\u5c31\u88ab\u538b\u5230\u4e86\u5de6\u8fb9\uff0c\u800c\u5de6\u8fb9\u7684\u72b6\u6001\u5373\u4e0a\u4e00\u4e2a\u72b6\u6001\u5df2\u7ecf\u66f4\u65b0\u8fc7\u4e86\uff0c\u6240\u4ee5\u6b63\u5411\u904d\u5386\u5c31\u5931\u6548\u4e86\uff0c\u56e0\u6b64\u91c7\u53d6\u5012\u5e8f\u904d\u5386\u7684\u7b56\u7565</li> </ul> \u4ee3\u7801\u5b9e\u73b0 <pre><code>int knapsack_01(int weight[], int val[], int n, int cap) {\n    int j;\n    int dp[MAXN][MAXCAP];\n\n    for (j = 0; j &lt;= cap; j++)\n        dp[j] = 0;\n\n    for (i = 1; i &lt;= n; i++) {\n        for (j = cap; j &gt;= 1; j--) {\n            if (weight[i - 1] &lt;= c) {\n                dp[j] = max(dp[j], dp[c - weight[i - 1]] + val[i - 1]);\n            }\n        }\n    }\n\n\n    return dp[cap];\n}\n</code></pre>"},{"location":"note/courses/ads/Lec8/#611-unbounded-knapsack-problem","title":"6.1.1 Unbounded Knapsack Problem","text":"<p>\u5b8c\u5168\u80cc\u5305\u95ee\u9898\u5219\u89e3\u653e\u4e860-1\u80cc\u5305\u7684\u9650\u5236\uff1a\u6bcf\u4e2a\u7269\u54c1\u53ef\u4ee5\u91cd\u590d\u9009\u53d6\uff08\u65e0\u6570\u6b21\uff09\u3002</p> <ul> <li>\u89e3\u9898\u601d\u8def\u4e0e0-1\u80cc\u5305\u95ee\u9898\u7c7b\u4f3c\uff0c\u552f\u4e00\u7684\u533a\u522b\u5728\u4e8e\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e2d\uff0c\u9009\u53d6\u7269\u54c1\u7684\u65f6\u5019\u4e0d\u9700\u8981\u6539\u53d8i\u503c\uff0c\u56e0\u4e3a\u7269\u4f53\u53ef\u4ee5\u91cd\u590d\u9009\u53d6</li> <li>\u5bf9\u4e8e\u7a7a\u95f4\u538b\u7f29\uff0c\u7531\u4e8e\u5f53\u524d\u72b6\u6001\u4f9d\u8d56\u4e8e\u4e0a\u9762\u548c\u5de6\u8fb9\u7684\u72b6\u6001\uff0c\u56e0\u6b64\u5c06\u6570\u7ec4\u538b\u7f29\u6210\u4e00\u7ef4\u540e\uff0c\u6b63\u5411\u904d\u5386\u5c31\u80fd\u6b63\u786e\u89e3\u51b3\u95ee\u9898</li> </ul> \u4ee3\u7801\u5b9e\u73b0 <pre><code>// \u4e0e\u4e0a\u9762\u4ee3\u7801\u7684\u552f\u4e00\u533a\u522b\u5728\u4e8e\u5185\u90e8\u5faa\u73af\u7684\u904d\u5386\u987a\u5e8f\u53d1\u751f\u6539\u53d8\nint knapsack_ub(int weight[], int val[], int n, int cap) {\n    int j;\n    int dp[MAXN][MAXCAP];\n\n    for (j = 0; j &lt;= cap; j++)\n        dp[j] = 0;\n\n    for (i = 1; i &lt;= n; i++) {\n        for (j = 1; j &lt;= 1; j++) {\n            if (weight[i - 1] &lt;= c) {\n                dp[j] = max(dp[j], dp[c - weight[i - 1]] + val[i - 1]);\n            }\n        }\n    }\n\n    return dp[cap];\n}\n</code></pre>"},{"location":"note/courses/ads/Lec8/#612-bounded-knapsack-problem","title":"6.1.2 Bounded Knapsack Problem","text":"<p>\u591a\u91cd\u80cc\u5305\u95ee\u9898\u6709\u4e86\u66f4\u590d\u6742\u7684\u9650\u5236\uff1a\u7269\u54c1\\(i\\)\u6700\u591a\u53ea\u80fd\u9009\u53d6\\(k_i\\)\u6b21\u3002</p> <ul> <li> <p>\u6b64\u65f6\u72b6\u6001\u8f6c\u79fb\u65b9\u7a0b\u4e3a\uff1a</p> \\[ dp[i, c] = \\max\\limits_{0 \\le k \\le k_i}{dp[i - 1, c], dp[i - 1, c - w_{i - 1} \\cdot k] + v_{i - 1} \\cdot k} \\] <p>\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e\u6bcf\u79cd\u7269\u54c1\uff0c\u6211\u4eec\u9700\u8981\u52a0\u4e00\u5c42\u904d\u5386\u6765\u51b3\u5b9a\u9009\u53d6\u591a\u5c11\u7684\u8fd9\u4e00\u7c7b\u7684\u7269\u54c1\uff0c\u56e0\u6b64\u65f6\u95f4\u590d\u6742\u5ea6\u5c31\u63d0\u5347\u81f3\\(O(n \\cdot cap \\cdot \\max{k_i})\\)\uff0c\u4f46\u7a7a\u95f4\u590d\u6742\u5ea6\u6ca1\u6709\u6539\u53d8</p> </li> <li> <p>\u4e8b\u5b9e\u4e0a\u8be5\u7b97\u6cd5\u8fd8\u53ef\u4ee5\u8fdb\u4e00\u6b65\u4f18\u5316\uff0c\u751a\u81f3\u53ef\u4ee5\u5c06\u65f6\u95f4\u590d\u6742\u5ea6\u964d\u5230\u7ebf\u6027</p> </li> </ul>"},{"location":"note/courses/ads/note/","title":"Note","text":"<ul> <li>skewed tree     the binary tree in which each node has either one or no child is known as a skewed binary tree.</li> </ul>"},{"location":"note/courses/ads/note/#avl-tree","title":"AVL Tree","text":""},{"location":"note/courses/ads/note/#1-adelson-velskii-landis-trees","title":"1 Adelson-Velskii-Landis Trees","text":"<p>Definition: An empty binary tree is height balanced. If \\(T\\) is a nonempty binary tree with \\(T_L\\) and \\(T_R\\) as its left and right subtree, then T is height balanced iff - \\(T_L\\) and \\(T_R\\) are height balanced, and - \\(|h_L-h_R|\\le 1\\) where \\(h_L\\) and \\(h_R\\) are the heights of \\(T_L\\) and \\(T_R\\), respectively</p> <p>Definition: The balance factor BF(node)=\\(h_L-h_R\\). In an AVL tree, \\(BF(node) = -1, 0, 1\\)</p> <p>trouble finder: the first node that signals the trouble(\\(|BF|(node) &gt; 1\\))</p>"},{"location":"note/courses/ads/note/#2-single-rotation","title":"2 single rotation","text":"<p>LL rotation\u5de6\u5b50\u6811\u987a\u65f6\u9488\u65cb\u8f6c\uff0cRR rotation\u53f3\u5b50\u6811\u9006\u65f6\u9488\u65cb\u8f6c\uff1f  - If B has a left tree before rotation, we should make it the right subtree of A - A is not expected to be the root of the whole tree, it can be the root of any subtree</p>"},{"location":"note/courses/ads/note/#3-double-rotation","title":"3 double rotation","text":"<p>It can be considered as the combination of two single rotations LR rotation </p>"},{"location":"note/courses/ads/note/#4-the-height-of-avl-tree","title":"4 The height of AVL tree","text":"<p>Let \\(n_h\\) be the minimum number of the nodes in a height balanced tree of height \\(h\\).  \\(\\(n_h = n_{h-1} + n_{h-2}+1\\)\\) so \\(n_h=F_{h+2}-1 \\approx \\frac 1{\\sqrt 5}({\\frac{1+\\sqrt 5}2})^{h+2}-1\\) </p>"},{"location":"note/courses/ads/note/#splay-trees","title":"Splay Trees","text":"<p>target: Any M consecutive tree operations starting from an empty tree take at most \\(O(MlogN)\\)time</p> <p>AVL tree is bound to be Splay tree</p> <p>In splay tree, the amortized time is \\(O(logN)\\)\u644a\u8fd8\u65f6\u95f4</p> <p>\u4e0d\u80fd\u8ba9\u6700\u574f\u7684\u60c5\u51b5\u6301\u7eed\u53d1\u751f\uff0c\u5982\u679c\u67d0\u4e00\u8282\u70b9\u662f\u67d0\u4e00\u64cd\u4f5c\u7684\u6700\u574f\u60c5\u51b5\uff0c\u90a3\u4e48\u4e0b\u6b21\u5b83\u5c31\u5f97\u662f\u6700\u597d\u7684\u60c5\u51b5</p> <p>Idea: After a node is accessed, it is pushed to the root by a series of AVL tree rotations</p>"},{"location":"note/courses/ads/note/#1-splay","title":"1 Splay\u64cd\u4f5c","text":"<p>\u6bcf\u8bbf\u95ee\u4e00\u4e2a\u8282\u70b9x\u540e\u90fd\u8981\u5f3a\u5236\u5c06\u5176\u65cb\u8f6c\u5230\u6839\u8282\u70b9 - zig:\u5728\\(p\\)\u662f\u6839\u8282\u70b9\u65f6\u64cd\u4f5c\uff0cSplay \u6811\u4f1a\u6839\u636e\u00a0!\\(x\\)\u00a0\u548c\u00a0\u00a0\\(z\\)\u95f4\u7684\u8fb9\u65cb\u8f6c\u3002\\(zig\\)\u5b58\u5728\u662f\u7528\u4e8e\u5904\u7406\u5947\u5076\u6821\u9a8c\u6587\u4f53\uff0c\u4ec5\u5f53\\(x\\)\u5728splay\u64cd\u4f5c\u5f00\u59cb\u65f6\u5177\u6709\u5947\u6570\u6df1\u5ea6\u65f6\u4f5c\u4e3asplay\u64cd\u4f5c\u7684\u6700\u540e\u4e00\u6b65\u6267\u884c \u26a0\ufe0fupload failed, check dev console</p> <ul> <li>zig-zig\uff1a\u540c\u4fa7</li> <li>zig-zag\uff1a\u952f\u9f7f\u72b6</li> </ul>"},{"location":"note/courses/ads/note/#analysis-methods","title":"analysis methods","text":""},{"location":"note/courses/ads/note/#1-aggregate-analysis","title":"1 Aggregate analysis","text":"<p>\u603b\u91cf\u5206\u6790</p>"},{"location":"note/courses/ads/note/#2-accounting-method","title":"2 Accounting method","text":"<p>Theorem The amortized time to splay a tree with root T at node X is at most \\(3(R(T)-R(X))+1=O(logN)\\) \\(R(T)=\\sum logS(i) (i\\in T)\\)</p>"},{"location":"note/courses/ads/note/#red-black-trees","title":"Red-Black Trees","text":"<p> <code>NULL</code> is equal to <code>NIL</code>, which is considered an external node with the color black \u5728\u7ea2\u9ed1\u6811\u4e2d\u628a\u6bcf\u4e00\u4e2a\u7a7a\u8282\u70b9\u770b\u4f5c\u4e00\u4e2a<code>leaf node</code> <code>internal nodes</code>: \u9664\u7a7a\u8282\u70b9\u5916\u7684\u6240\u6709\u8282\u70b9</p>"},{"location":"note/courses/ads/note/#summary-1","title":"Summary 1","text":"<p>compare AVL trees with Red-Black Trees  \u5982\u679c\u67e5\u8be2\u66f4\u591a\uff0cAVL tree \u5feb\u4e00\u70b9 \u5982\u679c\u63d2\u5165\u548c\u5220\u9664\u66f4\u591a\uff0c\u7ea2\u9ed1\u6811\u5feb\u4e00\u70b9</p>"},{"location":"note/courses/ads/note/#b-trees","title":"B+ Trees","text":"<p>B\u6811\u662f\u641c\u7d22\u6811\u4f46\u4e0d\u662f\u4e8c\u53c9\u6811  Definition \uff1a A B+ tree of order M  is a tree with the following structural properties: - \u6839\u8282\u70b9\u662f\u53f6\u5b50\u8282\u70b9\u6216\u8005\u67092~M\u4e2a\u5b50\u8282\u70b9</p>"},{"location":"note/courses/ads/note/#1-insertion","title":"1 Insertion","text":""},{"location":"note/courses/ads/note/#2-analysis","title":"2 Analysis","text":""},{"location":"note/courses/ads/note/#inverted-file-index","title":"Inverted File Index","text":"<p>index\u7528\u6765\u5b58\u50a8\u7ed9\u5b9a\u5355\u8bcd\u5728\u6587\u7ae0\u4e2d\u7684\u672a\u77e5 Inverted file \u5b58\u50a8\u6307\u5411\u51fa\u73b0\u7684\u5355\u8bcd\u7684\u6307\u9488  \u4e0d\u4ec5\u5305\u62ec\u5728\u54ea\u7bc7\u6587\u7ae0\uff0c\u8fd8\u5305\u62ec\u5728\u6587\u7ae0\u4e2d\u7684\u90a3\u4e2a\u4f4d\u7f6e</p> <p>\u67e5\u627e\u4e00\u53e5\u8bdd\u65f6\u4ece\u9891\u7387\u6700\u4f4e\u7684\u5355\u8bcd\u5f00\u59cb</p>"},{"location":"note/courses/ads/note/#1-index-generator","title":"1 Index Generator","text":""},{"location":"note/courses/ads/note/#11-token-analyzer-stop-filter","title":"1.1 Token Analyzer &amp; Stop Filter","text":""},{"location":"note/courses/ads/note/#111-word-stemming","title":"1.1.1 Word Stemming\u8bcd\u5e72\u63d0\u53d6","text":""},{"location":"note/courses/ads/note/#112-stop-words","title":"1.1.2 Stop Words","text":"<p>\u4e00\u4e9b\u5728\u6587\u7ae0\u4e2d\u7ecf\u5e38\u51fa\u73b0\u7684\u5355\u8bcd\uff0c\u4e0d\u7528\u53bbindex\uff0c\u5728\u5904\u7406\u4e4b\u524d\u8981\u5148\u5220\u9664\u6389</p>"},{"location":"note/courses/ads/note/#12-vocabulary-scanner","title":"1.2 Vocabulary Scanner","text":""},{"location":"note/courses/ads/note/#13-memory-management","title":"1.3 Memory Management","text":""},{"location":"note/courses/ads/note/#2-distributed-indexing","title":"2 Distributed indexing","text":"<p>Each node contains index of a subset of collection </p>"},{"location":"note/courses/ads/note/#3-dynamic-indexing","title":"3 Dynamic indexing","text":""},{"location":"note/courses/ads/note/#4-compression","title":"4 Compression","text":""},{"location":"note/courses/ads/note/#5-thredholding","title":"5 Thredholding","text":"<p>\u9608\u503c \u53ea\u89e3\u51b3\u4e00\u90e8\u5206\u95ee\u9898 - Document\uff1a\u53ea\u63a5\u53d7\u6743\u503c\u6700\u9ad8\u7684x\u4e2a\u6587\u4ef6 - Query</p>"},{"location":"note/courses/ads/note/#6-measures-for-a-search-engine","title":"6 Measures for a search engine","text":"<ul> <li>index\u7684\u901f\u5ea6</li> <li>search\u7684\u901f\u5ea6</li> <li>expressiveness of query language<ul> <li>\u8868\u8fbe\u590d\u6742\u4fe1\u606f\u7684\u80fd\u529b</li> <li>\u5904\u7406\u590d\u6742</li> <li>query\u7684\u901f\u5ea6</li> </ul> </li> <li>data \u68c0\u7d22\u80fd\u529b\u8bc4\u4f30</li> <li>information \u68c0\u7d22\u4fe1\u606f\u80fd\u529b</li> </ul>"},{"location":"note/courses/ads/note/#61-measure-the-relevancy","title":"6.1 measure the relevancy","text":"<ul> <li>A benchmark document collection</li> <li>A benchmark suite of queries</li> <li>A binary assessment of either relevant or irrelevant for each query-doc pair  How to improve the relevancy of search results 1</li> </ul>"},{"location":"note/courses/ads/note/#leftist-heaps-and-skew-heaps","title":"Leftist Heaps and Skew Heaps","text":""},{"location":"note/courses/ads/note/#1-leftist-heaps","title":"1 Leftist Heaps","text":"<p>\u5728\u7ebf\u6027\u65f6\u95f4\u5185\u4f18\u5316\u5408\u5e76 \u666e\u901a\u5806\u7684\u5408\u5e76\uff0c\\(\\Theta(N)\\) Leftist Heap: -  Order Property - the same - Structure Property - binary tree, but unbalanced null path length: \u4efb\u4f55\u8282\u70b9\u7684\\(Npl(X)\\)\u662f\u4eceX\u5230\u4efb\u610f\u4e00\u4e2a\u6ca1\u6709\u4e24\u4e2a\u5b50\u8282\u70b9\u7684\u8282\u70b9\u7684\u6700\u77ed\u8def\u5f84\uff0cNpl(NULL)=-1 \u4ece\u5e95\u81f3\u4e0a\u8ba1\u7b97 $$Npl(X)=min{Npl(C)+1<sub>for</sub>all<sub>C</sub>as<sub>children</sub>of~X} $$</p>"},{"location":"note/courses/ads/note/#skew-heap","title":"Skew Heap","text":"<p>\u60f3\u8981\u5de6\u504f\u5806\u6539\u53d8\u80fd\u591f\u8fdb\u884c\u81ea\u4e0b\u800c\u4e0a\u7ef4\u62a4\uff0c\u5c31\u8981\u6539\u53d8\u751a\u81f3\u653e\u5f03\u5b83\u7684\u5de6\u504f\u7684\u6027\u8d28\u7684\u4e25\u683c\u6027</p> <p>skew heap \u7684\u5408\u5e76\u4e0e\u5de6\u504f\u5806\u7684\u5408\u5e76\u5341\u5206\u7c7b\u4f3c\uff0c\u77e5\u8bc6\u6b64\u65f6\u65e0\u6761\u4ef6\u5730\u4ea4\u6362\u5de6\u53f3\u5b50\u6811\uff0c\u4e0d\u8bba\u5de6\u504f\u6027\u8d28\u5982\u4f55\u53d8\u5316\uff0c\u6211\u4eec\u90fd\u4f1a</p>"},{"location":"note/courses/ads/note/#binomial-queue","title":"Binomial Queue","text":""},{"location":"note/courses/ads/note/#1","title":"1 \u6982\u5ff5","text":"<p>\u4e8c\u9879\u961f\u5217\u672c\u8d28\u4e0a\u662f\u4e00\u7cfb\u5217\u4e8c\u9879\u6811\u7684\u96c6\u5408\u3002</p> <p>\u4e8c\u9879\u6811 \u4e8c\u9879\u6811\u6ee1\u8db3\u5806\u7684\u6027\u8d28\uff0c\u5373parent\u8282\u70b9\u7684\u503c\u5c0f\u4e8e\uff08\u5927\u4e8e\uff09child\u7684\u503c</p>"},{"location":"note/courses/ads/note/#2","title":"2 \u64cd\u4f5c","text":""},{"location":"note/courses/ads/note/#21","title":"2.1 \u5408\u5e76","text":"<p>\u4e8c\u9879\u961f\u5217\u7684\u5408\u5e76\u53ef\u4ee5\u770b\u4f5c\u4e24\u4e2a\u4e8c\u8fdb\u5236\u6570\u7684\u76f8\u52a0</p>"},{"location":"note/courses/ads/note/#22","title":"2.2 \u5355\u70b9\u63d2\u5165","text":"<p>\u89c6\u4e3a\u5408\u5e76\u53ea\u6709\u4e00\u4e2a\u8282\u70b9</p>"},{"location":"note/courses/ads/note/#23","title":"2.3 \u67e5\u8be2\u961f\u9996","text":"<p>\u4e8c\u9879\u961f\u5217\u7684\u961f\u9996\u5c31\u662f\u6574\u4e2a\u961f\u5217\u7684\u6700\u5c0f\u503c\uff08\u6700\u5927\u503c\uff09\uff0c\u662f\u8fd9\u82e5\u5e72\u4e2a\uff08\\(O(logN)\\)\u4e2a\uff09\u4e8c\u9879\u6811\u7684\u6839\u4e2d\u6700\u5c0f\uff08\u6700\u5927\uff09\u7684\u90a3\u4e2a\uff0c\u6240\u4ee5\u5176\u65f6\u95f4\u590d\u6742\u5ea6\u4e3a\\(O(logN)\\)</p>"},{"location":"note/courses/ads/note/#24","title":"2.4 \u961f\u9996\u51fa\u961f","text":"<p>\u961f\u9996\u51fa\u961f\u9996\u5148\u8981\u627e\u5230\u961f\u9996\uff0c\u8fd9\u4ef6\u4e8b\u6211\u4eec\u5728#\u67e5\u8be2\u961f\u9996\u5df2\u7ecf\u8ba8\u8bba\u8fc7\u4e86\u3002</p> <p>\u627e\u5230\u961f\u9996\u540e\uff0c\u6211\u4eec\u5c06\u5176\u4ece\u4e8c\u9879\u961f\u5217\u4e2d\u79fb\u9664\uff0c\u6211\u4eec\u77e5\u9053\uff0c\u961f\u9996\u5fc5\u7136\u662f\u67d0\u4e2a\u4e8c\u9879\u6811\u7684\u6839\uff0c\u6240\u4ee5\u5220\u6389\u8fd9\u4e2a\u961f\u9996\u4ee5\u540e\uff0c\u5c31\u4f1a\u4ea7\u751f\u00a0kk\u00a0\u4e2a\u65b0\u7684\u5b50\u6811\u3002</p> <p>\u800c\u8ba9\u6211\u4eec\u56de\u987e\u4e8c\u9879\u6811\u7684\u5408\u5e76\u8fc7\u7a0b\uff0c\u53ef\u4ee5\u53d1\u73b0\uff0c\u6839\u7684\u6240\u6709\u513f\u5b50\u90fd\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u00a0kk\u00a0\u9636\u4e8c\u9879\u6811\u5408\u5e76\u8fc7\u6765\u7684\uff0c\u6240\u4ee5\u5f53\u6211\u4eec\u5220\u6389\u8fd9\u4e2a\u6839\uff0c\u4ea7\u751f\u7684\u6240\u6709\u5b50\u6811\u90fd\u662f\u4e8c\u9879\u6811\u3002</p> <p>\u56e0\u6b64\u6211\u4eec\u8054\u60f3\u5230\uff0c\u5c06\u961f\u9996\u51fa\u961f\u95ee\u9898\u8f6c\u5316\u4e3a\u5408\u5e76\u4e8c\u9879\u961f\u5217\u7684\u95ee\u9898\u2014\u2014\u5047\u8bbe\u00a0T\u7684\u961f\u9996\u662f\u00a0Bk\u7684\u6839\uff0c\u5219\u961f\u9996\u51fa\u961f\u53ef\u4ee5\u8f6c\u5316\u4e3a\u6c42\u89e3\u00a0merge(<code>T\u2212Bk,Bk.root.children</code>)\u7684\u95ee\u9898\u3002</p> <p> \\(\\(\\rho = \\frac{2m-1}{m}\\)\\)</p>"},{"location":"note/courses/computer_organization/Chapter%201/","title":"Chapter 1","text":""},{"location":"note/courses/computer_organization/Chapter%201/#1-computer-organization","title":"1 Computer organization","text":""},{"location":"note/courses/computer_organization/Chapter%201/#11-software-categorization","title":"1.1 Software categorization","text":"<ul> <li>operating system</li> <li>compiler</li> <li>fireware\uff08\u9a71\u52a8\uff09</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%201/#2","title":"2 \u56fe\u7075\u6d4b\u8bd5/\u56fe\u7075\u5b8c\u5907","text":""},{"location":"note/courses/computer_organization/Chapter%201/#21","title":"2.1 \u56fe\u7075\u6d4b\u8bd5","text":"<p>\u56fe\u7075\u6d4b\u8bd5\uff08Turing Test\uff09\u662f\u7531\u82f1\u56fd\u6570\u5b66\u5bb6\u548c\u8ba1\u7b97\u673a\u79d1\u5b66\u5bb6\u827e\u4f26\u00b7\u56fe\u7075\uff08Alan Turing\uff09\u57281950\u5e74\u63d0\u51fa\u7684\u4e00\u79cd\u6d4b\u8bd5\uff0c\u7528\u4e8e\u5224\u65ad\u673a\u5668\u662f\u5426\u5177\u6709\u667a\u80fd\u3002\u56fe\u7075\u6d4b\u8bd5\u7684\u57fa\u672c\u601d\u60f3\u662f\uff0c\u5982\u679c\u4e00\u53f0\u673a\u5668\u80fd\u591f\u5728\u5bf9\u8bdd\u4e2d\u8868\u73b0\u5f97\u4e0e\u4eba\u7c7b\u65e0\u5f02\uff0c\u90a3\u4e48\u8fd9\u53f0\u673a\u5668\u5c31\u53ef\u4ee5\u88ab\u8ba4\u4e3a\u5177\u6709\u667a\u80fd\u3002</p>"},{"location":"note/courses/computer_organization/Chapter%201/#211","title":"2.1.1 \u56fe\u7075\u6d4b\u8bd5\u7684\u57fa\u672c\u8fc7\u7a0b\uff1a","text":"<ol> <li>\u53c2\u4e0e\u8005\uff1a\u6d4b\u8bd5\u4e2d\u6709\u4e09\u65b9\u53c2\u4e0e\u8005\uff1a\u4e00\u4e2a\u4eba\u7c7b\u8bc4\u5ba1\u5458\uff08C\uff09\uff0c\u4e00\u4e2a\u4eba\u7c7b\u53c2\u4e0e\u8005\uff08A\uff09\uff0c\u548c\u4e00\u4e2a\u673a\u5668\u53c2\u4e0e\u8005\uff08B\uff09\u3002</li> <li>\u9694\u79bb\uff1a\u8bc4\u5ba1\u5458\u4e0e\u53c2\u4e0e\u8005\u4e4b\u95f4\u901a\u8fc7\u6587\u672c\u8fdb\u884c\u4ea4\u6d41\uff0c\u8bc4\u5ba1\u5458\u65e0\u6cd5\u770b\u5230\u6216\u542c\u5230\u53c2\u4e0e\u8005\uff0c\u53ea\u80fd\u901a\u8fc7\u6253\u5b57\u8fdb\u884c\u4ea4\u6d41\u3002</li> <li>\u5bf9\u8bdd\uff1a\u8bc4\u5ba1\u5458\u4e0e\u4eba\u7c7b\u53c2\u4e0e\u8005\u548c\u673a\u5668\u53c2\u4e0e\u8005\u5206\u522b\u8fdb\u884c\u5bf9\u8bdd\uff0c\u8bc4\u5ba1\u5458\u7684\u4efb\u52a1\u662f\u5224\u65ad\u54ea\u4e2a\u662f\u4eba\u7c7b\uff0c\u54ea\u4e2a\u662f\u673a\u5668\u3002</li> <li>\u5224\u65ad\uff1a\u5982\u679c\u8bc4\u5ba1\u5458\u65e0\u6cd5\u53ef\u9760\u5730\u533a\u5206\u4eba\u7c7b\u548c\u673a\u5668\uff0c\u6216\u8005\u673a\u5668\u80fd\u591f\u6210\u529f\u5730\u6b3a\u9a97\u8bc4\u5ba1\u5458\uff0c\u4f7f\u5176\u8ba4\u4e3a\u673a\u5668\u662f\u4eba\u7c7b\uff0c\u90a3\u4e48\u673a\u5668\u5c31\u901a\u8fc7\u4e86\u56fe\u7075\u6d4b\u8bd5\u3002</li> </ol> <p>\u56fe\u7075\u6d4b\u8bd5\u7684\u6838\u5fc3\u5728\u4e8e\u673a\u5668\u80fd\u5426\u5728\u81ea\u7136\u8bed\u8a00\u5bf9\u8bdd\u4e2d\u8868\u73b0\u51fa\u4e0e\u4eba\u7c7b\u65e0\u5f02\u7684\u667a\u80fd\uff0c\u800c\u4e0d\u662f\u673a\u5668\u7684\u5185\u90e8\u5de5\u4f5c\u539f\u7406\u6216\u5176\u5b9e\u73b0\u65b9\u5f0f\u3002</p>"},{"location":"note/courses/computer_organization/Chapter%201/#22","title":"2.2 \u56fe\u7075\u5b8c\u5907","text":"<p>\u56fe\u7075\u5b8c\u5907\uff08Turing Completeness\uff09\u662f\u8ba1\u7b97\u7406\u8bba\u4e2d\u7684\u4e00\u4e2a\u6982\u5ff5\uff0c\u7528\u4e8e\u63cf\u8ff0\u4e00\u4e2a\u7cfb\u7edf\uff08\u901a\u5e38\u662f\u7f16\u7a0b\u8bed\u8a00\u6216\u8ba1\u7b97\u6a21\u578b\uff09\u7684\u8ba1\u7b97\u80fd\u529b\u3002\u4e00\u4e2a\u7cfb\u7edf\u88ab\u79f0\u4e3a\u56fe\u7075\u5b8c\u5907\u7684\uff0c\u5982\u679c\u5b83\u80fd\u591f\u6a21\u62df\u56fe\u7075\u673a\u7684\u8ba1\u7b97\u80fd\u529b\uff0c\u5373\u80fd\u591f\u6267\u884c\u4efb\u4f55\u56fe\u7075\u673a\u53ef\u4ee5\u6267\u884c\u7684\u8ba1\u7b97\u3002</p>"},{"location":"note/courses/computer_organization/Chapter%201/#221","title":"2.2.1 \u56fe\u7075\u5b8c\u5907\u7684\u57fa\u672c\u6761\u4ef6\uff1a","text":"<ol> <li>\u6761\u4ef6\u5206\u652f\uff1a\u7cfb\u7edf\u5fc5\u987b\u80fd\u591f\u6267\u884c\u6761\u4ef6\u5206\u652f\uff08\u5982if-else\u8bed\u53e5\uff09\uff0c\u4ee5\u4fbf\u6839\u636e\u4e0d\u540c\u7684\u6761\u4ef6\u6267\u884c\u4e0d\u540c\u7684\u64cd\u4f5c\u3002</li> <li>\u5faa\u73af\uff1a\u7cfb\u7edf\u5fc5\u987b\u80fd\u591f\u6267\u884c\u5faa\u73af\uff08\u5982for\u3001while\u8bed\u53e5\uff09\uff0c\u4ee5\u4fbf\u91cd\u590d\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u3002</li> <li>\u5b58\u50a8\u548c\u64cd\u4f5c\u6570\u636e\uff1a\u7cfb\u7edf\u5fc5\u987b\u80fd\u591f\u5b58\u50a8\u548c\u64cd\u4f5c\u6570\u636e\uff0c\u5305\u62ec\u8bfb\u5199\u53d8\u91cf\u548c\u6570\u636e\u7ed3\u6784\u3002</li> </ol>"},{"location":"note/courses/computer_organization/Chapter%201/#222","title":"2.2.2 \u56fe\u7075\u5b8c\u5907\u7684\u610f\u4e49\uff1a","text":"<ul> <li>\u901a\u7528\u6027\uff1a\u56fe\u7075\u5b8c\u5907\u610f\u5473\u7740\u8be5\u7cfb\u7edf\u5177\u6709\u901a\u7528\u8ba1\u7b97\u80fd\u529b\uff0c\u53ef\u4ee5\u89e3\u51b3\u4efb\u4f55\u53ef\u8ba1\u7b97\u7684\u95ee\u9898\uff0c\u53ea\u8981\u6709\u8db3\u591f\u7684\u65f6\u95f4\u548c\u8d44\u6e90\u3002</li> <li>\u7f16\u7a0b\u8bed\u8a00\uff1a\u5927\u591a\u6570\u73b0\u4ee3\u7f16\u7a0b\u8bed\u8a00\uff08\u5982C\u3001Java\u3001Python\u7b49\uff09\u90fd\u662f\u56fe\u7075\u5b8c\u5907\u7684\uff0c\u56e0\u4e3a\u5b83\u4eec\u5177\u5907\u6761\u4ef6\u5206\u652f\u3001\u5faa\u73af\u548c\u6570\u636e\u64cd\u4f5c\u7684\u80fd\u529b\u3002</li> <li>\u8ba1\u7b97\u6a21\u578b\uff1a\u56fe\u7075\u5b8c\u5907\u7684\u8ba1\u7b97\u6a21\u578b\u5305\u62ec\u56fe\u7075\u673a\u3001\u03bb\u6f14\u7b97\uff08Lambda Calculus\uff09\u7b49\uff0c\u8fd9\u4e9b\u6a21\u578b\u4e3a\u8ba1\u7b97\u7406\u8bba\u63d0\u4f9b\u4e86\u57fa\u7840\u3002</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%201/#23-from-a-high-level-language-to-the-language-of-hardware","title":"2.3 From a High-Level Language to the Language of Hardware","text":"<ul> <li>Machine language     \u7531\u4e8c\u8fdb\u5236\u6570\u8868\u793a\u6307\u4ee4</li> <li>Assembly language     the assembler translates them into machine instruction</li> <li>High-level programming language     the compiler translates into assembly language</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%201/#24-integrated-circuits","title":"2.4 Integrated circuits/\u96c6\u6210\u7535\u8def","text":"<p>Both processor and memory are made of integrated circuits  </p>"},{"location":"note/courses/computer_organization/Chapter%201/#3-computer-design-performance-and-idea","title":"3 Computer design: performance and idea","text":"<ul> <li>Response time/ execution time</li> <li>throughput(total work done per unit time)</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%201/#31-relative-performance","title":"3.1 Relative Performance","text":""},{"location":"note/courses/computer_organization/Chapter%201/#32-measuring-execution-time","title":"3.2 Measuring Execution Time","text":"<ul> <li>Elapse time     total response time: processing, I/O, OS overhead, idle time</li> <li>CPU time     CPU\u65f6\u95f4\uff08CPU Time\uff09\u662f\u6307\u7a0b\u5e8f\u5728CPU\u4e0a\u5b9e\u9645\u6267\u884c\u7684\u65f6\u95f4\u3002\u5b83\u53ea\u8ba1\u7b97CPU\u5728\u5904\u7406\u7a0b\u5e8f\u6307\u4ee4\u65f6\u6240\u82b1\u8d39\u7684\u65f6\u95f4\uff0c\u4e0d\u5305\u62ec\u7a0b\u5e8f\u7b49\u5f85I/O\u64cd\u4f5c\u6216\u5176\u4ed6\u8fdb\u7a0b\u6267\u884c\u7684\u65f6\u95f4\u3002</li> <li>clock period: duration of a clock cycle</li> <li>clock frequency(rate): cycles per second</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%201/#321-cpu-time","title":"3.2.1 CPU Time","text":"\\[CPU~Time=\\frac {CPU~Clock ~Cycles}{Clock ~Rate}$$ - Performance improved by     - Reducing number of clock cycles     - Increasing clock rate     - Hardware designer must often trade off clock rate against cycle count $${Clock~Cycles=Instruction Count\\times {Cycles ~per~ Instruction}} \\newline $$ $${CPU ~Time}= Instuctinon ~Count\\times \\frac{CPI} {Clock Rate} $$     \u5982\u679c\u4e0d\u540c\u7684\u6307\u4ee4\u96c6\u6d88\u8017\u4e86\u4e0d\u540c\u7684\u65f6\u949f\u5468\u671f\uff0c\u5206\u5f00\u8ba1\u7b97     - Weighted average CPI\u5219\u53d6\u5e73\u5747     $$CPI=\\frac {Clock~cycles}{Instruction Count}$$ **Performance Summary** $$CPU~Time=\\frac {Instructions}{Program}\\times\\frac{Clock Cycles}{Instruction}\\times\\frac{Seconds}{Clock cycle}\\] <p>performance depends on: - Algorithm: affects IC, possibly CPI - Programming language: affects IC, CPI - Compiler : affects IC\uff0c CPI - Instruction set architecture: affects IC,CPI, \\(T_c\\) </p>"},{"location":"note/courses/computer_organization/Chapter%201/#33-power-trends","title":"3.3 Power Trends","text":""},{"location":"note/courses/computer_organization/Chapter%201/#4-multiprocessors","title":"4 Multiprocessors","text":"<p>More than one processor per chip - requires explicitly parallel programming - hard to do:     - programming for performance     - load balancing\u8d1f\u8f7d\u5e73\u8861     - optimizing communication and synchronization\u901a\u4fe1\u548c\u540c\u6b65</p>"},{"location":"note/courses/computer_organization/Chapter%201/#41-amdahls-law","title":"4.1 Amdahl's Law","text":"<p>\u901a\u8fc7\u4f18\u5316\u7cfb\u7edf\u7684\u5355\u4e2a\u90e8\u5206\u800c\u83b7\u5f97\u7684\u6574\u4f53\u6027\u80fd\u63d0\u5347\u53d7\u5230\u6539\u8fdb\u90e8\u5206\u5b9e\u9645\u4f7f\u7528\u7684\u65f6\u95f4\u7684\u9650\u5236 \u6709\u4e00\u90e8\u5206\u7684\u7a0b\u5e8f\u53ea\u80fd\u901a\u8fc7\u4e32\u884c\u8fdb\u884c\u8bbf\u95ee  5.2 MIPS </p>"},{"location":"note/courses/computer_organization/Chapter%201/#5-eight-great-ideas","title":"5 Eight Great Ideas","text":"<ul> <li>Design for Moore's Law     integrated circuit resources double every 18\u201324 months</li> <li>Use Abstraction to Simplify Design     use abstraction to characterize the design at different levels of representation;     \u62bd\u8c61\uff0c\u5c01\u88c5</li> <li>Make the Common Case Fast (\u52a0\u901f\u5927\u6982\u7387\u4e8b\u4ef6)</li> <li>performance via parallelism(\u901a\u8fc7\u5e76\u884c\u63d0\u9ad8\u6027\u80fd)</li> <li>performance via pipelining(\u901a\u8fc7\u6d41\u6c34\u7ebf\u63d0\u9ad8\u6027\u80fd)</li> <li>performance via prediction(\u901a\u8fc7\u9884\u6d4b\u63d0\u9ad8\u6027\u80fd)</li> <li>hierarchy of memories(\u5b58\u50a8\u5668\u5c42\u6b21)</li> <li>dependability via redundancy(\u901a\u8fc7\u5197\u4f59\u63d0\u9ad8\u53ef\u9760\u6027)</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%201/#chapter-3-arithmetic-for-computer","title":"Chapter 3: Arithmetic for computer","text":""},{"location":"note/courses/computer_organization/Chapter%201/#1-numbers","title":"1 Numbers","text":"<ul> <li>sign-magnitude \u539f\u7801</li> <li>1's complement code \u53cd\u7801</li> <li>2's complement code \u8865\u7801</li> <li>biased notation \u79fb\u7801\uff08\u5728\u8865\u7801\u7684\u57fa\u7840\u4e0a\uff0c\u7b26\u53f7\u4f4d\u53d6\u53cd\uff09 </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%201/#11-number-types","title":"1.1 Number Types","text":""},{"location":"note/courses/computer_organization/Chapter%201/#2-overflow","title":"2 Overflow","text":"<p> slt: set on less than  </p>"},{"location":"note/courses/computer_organization/Chapter%201/#3-complete-alu","title":"3 Complete ALU","text":"<ul> <li>Input<ul> <li>A,B</li> </ul> </li> <li>Control lines<ul> <li>Binvert</li> <li>Operation</li> <li>Carry in</li> </ul> </li> <li>Output<ul> <li>Result</li> <li>overflow</li> </ul> </li> <li>Slow, but simple<ul> <li>Inputs parallel</li> <li>Carry is cascaded<ul> <li>Ripple carry adder</li> </ul> </li> </ul> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%201/#31-with-zero-detector","title":"3.1 with Zero detector","text":""},{"location":"note/courses/computer_organization/Chapter%201/#4-fast-adders","title":"4 Fast adders","text":""},{"location":"note/courses/computer_organization/Chapter%201/#41-carry-look-ahead-addercla","title":"4.1 Carry look-ahead adder(CLA)","text":"<p>\u63d0\u524d\u8ba1\u7b97\u4f1a\u4e0d\u4f1a\u4ea7\u751f\u8fdb\u4f4d - \\(A_i,B_i\\)\u90fd\u662f1 - \\(A_i,B_i\\)\u5176\u4e2d\u4e00\u4e2a\u662f1\uff0c\u4e14\u6709\u8fdb\u4f4d two signal conditions are called - generate\\(G_i\\) - propagate \\(P_i\\) \u63a8\u5bfc\u516c\u5f0f $$\\begin{align} &amp;P_i=A_i\\oplus B_i\\ &amp;G_i=A_iB_i\\ &amp;S_i=P_i\\oplus C_i\\ &amp;C_{i+1}=G_i+P_iC_i \\end{align} $$ \u56db\u4f4d\u5168\u52a0\u5668  PFA\uff08Partial Fully Adder, \u7528\u4e8e\u4e0a\u8ff0\u56db\u4e2a\u53d8\u91cf\u7684\u8ba1\u7b97 \u5bf9\u4e8e\u4f4d\u6570\u66f4\u591a\u7684\u52a0\u6cd5\u5668\uff0c\u6211\u4eec\u5229\u7528\u8fd9\u6837\u6784\u6210\u76844-\u6bd4\u4ed6CLA\u901a\u8fc7\u7c7b\u4f3c\u7684\u65b9\u5f0f\u4e32\u8d77\u6765</p>"},{"location":"note/courses/computer_organization/Chapter%201/#42-carry-select-addercsa","title":"4.2 Carry select adder(CSA)","text":""},{"location":"note/courses/computer_organization/Chapter%201/#5-multiplication","title":"5 Multiplication","text":"<p>\u79fb\u4f4d\\(\\rightarrow\\)\u76f8\u4e58\\(\\rightarrow\\)\u76f8\u52a0 </p>"},{"location":"note/courses/computer_organization/Chapter%201/#51-v1","title":"5.1 V1","text":"<ul> <li>\u9700\u898164\u6b21\u8fed\u4ee3<ul> <li>Addition</li> <li>Shift</li> <li>Comparison</li> </ul> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%201/#52-v2","title":"5.2 V2","text":"<ul> <li>Don't shift the multiplicand</li> <li>Instead, shift the product</li> <li>Shift the multiplier 129\u4f4d\u7684product \u5bc4\u5b58\u5668\u662f\u4e3a\u4e86\u4fdd\u7559\u8fdb\u4f4d  </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%201/#53-v3","title":"5.3 V3","text":"<p> - \u79ef\u5bc4\u5b58\u5668\u8bbe\u4e3a0  \u5c31\u662f\u628a\u539f\u6765\u7684product\u548cmultiplier\u9996\u5c3e\u76f8\u8fde\u653e\u5728\u540c\u4e00\u4e2a\u5bc4\u5b58\u5668\u91cc\u9762\uff0c\u5728\u6bcf\u4e00\u6b21\u4e58\u79ef\u4e4b\u540e\u90fd\u4e00\u8d77\u53f3\u79fb</p>"},{"location":"note/courses/computer_organization/Chapter%201/#6-signed-multiplication","title":"6 Signed multiplication(\u6709\u7b26\u53f7\u6570\u7684\u4e58\u79ef)","text":"<p>basic approach: - \u5b58\u50a8\u7b26\u53f7\u4f4d - \u5224\u65ad\u540c\u53f7\u8fd8\u662f\u5f02\u53f7 - \u6570\u503c\u90e8\u5206\u76f8\u4e58 - \u518d\u52a0\u4e0a\u7b26\u53f7\u4f4d</p>"},{"location":"note/courses/computer_organization/Chapter%201/#61-booths-algorithm","title":"6.1 Booth's Algorithm","text":"<p>\u4f18\u5316\u7b26\u53f7\u6570\u4e58\u6cd5 idea: Booth's Algorithm \u7684\u4e3b\u8981\u601d\u60f3\u5728\u4e8e\uff0c\u51cf\u5c11\u4e58\u6570\u4e2d\u201c<code>1</code>\u201d\u7684\u6570\u91cf\u3002\u5177\u4f53\u6765\u8bf4\uff0c\u5728\u6211\u4eec\u539f\u5148\u7684\u4e58\u6cd5\u7b56\u7565\u4e2d\uff0c\u6bcf\u5f53\u4e58\u6570\u4e2d\u6709\u4e00\u4f4d\u00a0<code>1</code>\u00a0\u65f6\uff0c\u90fd\u4f1a\u9700\u8981\u4e00\u4e2a\u52a0\u6cd5\uff08\u5c06\u4f4d\u79fb\u540e\u7684\u88ab\u4e58\u6570\u7d2f\u52a0\u5230\u7ed3\u679c\u4e2d\uff09\u3002\u4f46\u662f\uff0c\u5982\u679c\u4e58\u6570\u4e2d\u6709\u8f83\u957f\u7684\u4e00\u4e32\u00a0<code>1</code>\u00a0\u65f6\uff0c\u6211\u4eec\u53ef\u4ee5\u5c06\u5b83\u8f6c\u5316\u4e3a\u4e00\u4e2a\u5927\u6570\u5b57\u51cf\u4e00\u4e2a\u5c0f\u6570\uff0c\u5982\uff1a<code>00111100 = 01000000 - 00000100</code>\uff0c\u6b64\u65f6 4 \u4e2a\u00a0<code>1</code>\u00a0\u53d8\u4e3a 2 \u4e2a\u00a0<code>1</code>\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u51cf\u5c11\u505a\u52a0\u6cd5\u7684\u6b21\u6570  </p>"},{"location":"note/courses/computer_organization/Chapter%201/#62-faster-multiplication","title":"6.2 Faster Multiplication","text":""},{"location":"note/courses/computer_organization/Chapter%201/#63-risc-v-multiplication","title":"6.3 RISC-V Multiplication","text":"<p>Four multiply instructions: - mul: \u7ed9\u51fa\u4e58\u79ef\u7684\u4f4e64\u4f4d - mulh\uff1a\u9ad864\u4f4d - mulhu\uff1a \u65e0\u7b26\u53f7\uff0c\u9ad864\u4f4d - mulhsu\uff1a\u4e00\u6709\u4e00\u65e0</p>"},{"location":"note/courses/computer_organization/Chapter%201/#7-division","title":"7 Division\u9664\u6cd5","text":""},{"location":"note/courses/computer_organization/Chapter%201/#71-division-v1","title":"7.1 Division V1","text":"<p>\u9996\u5148\uff0c\u9664\u6570\u5728\u9664\u6570\u5bc4\u5b58\u5668\u7684\u5de6\u534a\u90e8\u5206\uff0c\u88ab\u9664\u6570\u5728\u7ed3\u679c\u7684\u53f3\u534a\u90e8\u5206 \u6bcf\u4e00\u6b65\u4e4b\u540e\u53f3\u79fb\u4e00\u4f4d  \u4e3a\u4ec0\u4e48\u88ab\u9664\u6570\u8981\u88ab\u653e\u5728\u53f3\u534a\u90e8\u5206\uff1f </p>"},{"location":"note/courses/computer_organization/Chapter%201/#72-division-v2","title":"7.2 Division V2","text":"<p> remainders\u5de6\u79fb\uff0c\u5546\u8865\u5145\u5728\u53f3\u8fb9</p>"},{"location":"note/courses/computer_organization/Chapter%201/#73-signed-division","title":"7.3 Signed division","text":"<p> \u82e5\u540c\u53f7\u5219quotient\u4e3a\u6b63\uff0c\u5f02\u53f7\u5219\u4e3a\u8d1f\uff0c\u82e5dividend\u4e3a\u6b63\uff0c\u5219remainder\u4e3a\u6b63\uff0c\u5426\u5219remainder\u4e3a\u8d1f Faster Division </p>"},{"location":"note/courses/computer_organization/Chapter%201/#74-risc-v-division","title":"7.4 RISC-V Division","text":"<p>instructions: - div ,rem: \u6709\u7b26\u53f7\uff0cremainder - divu,remu: \u65e0\u7b26\u53f7\uff0cremainder </p>"},{"location":"note/courses/computer_organization/Chapter%201/#75-floating-point-numbers","title":"7.5 Floating point numbers","text":"<p>\u6211\u4eec\u5c06\u5c0f\u6570\u70b9\u5de6\u8fb9\u53ea\u6709 1 \u4f4d\u6570\u5b57\u7684\u8868\u793a\u6570\u7684\u65b9\u6cd5\u79f0\u4e3a\u00a0\u79d1\u5b66\u8bb0\u6570\u6cd5, scientific notation\uff0c\u800c\u5982\u679c\u5c0f\u6570\u70b9\u5de6\u8fb9\u7684\u6570\u5b57\u4e0d\u662f 0\uff0c\u6211\u4eec\u79f0\u8fd9\u4e2a\u6570\u7684\u8868\u793a\u662f\u4e00\u4e2a\u00a0\u89c4\u683c\u5316\u6570, normalized number\u3002\u79d1\u5b66\u8bb0\u6570\u6cd5\u80fd\u7528\u6765\u8868\u793a\u5341\u8fdb\u5236\u6570\uff0c\u5f53\u7136\u4e5f\u80fd\u7528\u6765\u8868\u793a\u4e8c\u8fdb\u5236\u6570\u3002</p> <p>\u6211\u4eec\u5c06\u6d6e\u70b9\u6570\u8868\u793a\u4e3a\\((-1)^S\\times F\\times 2^E\\)\u7684\u5f62\u5f0f  0\u7528\u7279\u6b8a\u7684\u65b9\u5f0f\u4fdd\u5b58  \u5728\u4e0a\u8868\u4e2d\uff1a - \u7b2c\u4e00\u6761\u8868\u793a0 - \u7b2c\u4e8c\u6761\u8868\u793a\u975e\u89c4\u683c\u5316\u6570\uff0c\u4e3b\u8981\u662f\u4e3a\u4e86\u7528\u6765\u8868\u793a\u4e00\u4e9b\u5f88\u5c0f\u7684\u6570\uff0c\u5b83\u7684\u53d6\u503c\u4e3a\\((-1)^S\\cdot(0+fraction)\\cdot 2^{-bias}\\) - \u7b2c\u4e09\u6761\u8868\u793a\u6b63\u5e38\u7684\u6d6e\u70b9\u6570 - \u7b2c\u56db\u6761\u8868\u793a\u65e0\u7a77\u5927\u6216\u8005\u65e0\u7a77\u5c0f\uff0c\u51fa\u73b0\u5728exponent overflow\u6216\u8005\u6d6e\u70b9\u6570\u8fd0\u7b97\u4e2d\u975e0\u9664\u4ee50\u7684\u60c5\u51b5 - \u7b2c\u4e94\u6761\u8868\u793a\u975e\u6570\uff0c\u51fa\u73b0\u5728\\(\\frac 00,\\frac{inf}{inf},inf-inf,inf*0\\)\u7684\u60c5\u51b5 \u8303\u56f4 \u7cbe\u5ea6 </p>"},{"location":"note/courses/computer_organization/Chapter%201/#751","title":"7.5.1 \u6d6e\u70b9\u52a0\u6cd5","text":"<p>\u6d6e\u70b9\u6570\u7684\u52a0\u51cf\u6cd5\u5206\u4e3a\u4ee5\u4e0b\u51e0\u6b65\uff1a - Alignment:\u6307\u6570\u5bf9\u9f50\uff0c\u5c06\u5c0f\u6307\u6570\u5bf9\u9f50\u5230\u5927\u6307\u6570 - Addiction Fraction\uff1a\u90e8\u5206\u76f8\u52a0\u51cf - Normalization: \u5c06\u7ed3\u679c\u89c4\u683c\u5316\uff0c\u5e76\u68c0\u67e5\u662f\u5426\u51fa\u5e2d\u90a3overflow\u6216\u8005underflow\uff0c\u5982\u679c\u51fa\u73b0\u5219\u51fa\u53d1Exception - Rounding: \u5c06Fraction\u90e8\u5206\u820d\u5165\u5230\u6b63\u786e\u7684\u4f4d\u6570\uff1b\u820d\u5165\u7ed3\u679c\u53ef\u80fd\u8fd8\u9700\u8981\u89c4\u683c\u5316\uff0c\u6b64\u65f6\u56de\u5230\u4e0a\u4e00\u4e2a\u6b65\u9aa4\u7ee7\u7eed\u8fd0\u884c  </p>"},{"location":"note/courses/computer_organization/Chapter%201/#752","title":"7.5.2 \u6d6e\u70b9\u4e58\u6cd5","text":"<p>\u5206\u522b\u5904\u7406\u7b26\u53f7\u4f4d\uff0cexponent\uff0cfraction - \u5c06\u4e24\u4e2aExponent \u76f8\u52a0\u5e76\u51cf\u53bb\u4e00\u4e2abias,\u56e0\u4e3abias \u52a0\u4e86\u4e24\u6b21 - \u5c06\u4e24\u4e2a(1+Fraction)\u60f3\u4e58\uff0c\u5e76\u5c06\u5176\u89c4\u683c\u54c8\uff0c\u6b64\u65f6\u540c\u6837\u8981\u8003\u8651overflow\u548cunderflow\uff0c\u7136\u540e\u820d\u5165\uff0c\u5982\u679c\u8fd8\u9700\u8981\u89c4\u683c\u5316\u5219\u91cd\u590d\u6267\u884c - \u6839\u636e\u4e24\u4e2a\u64cd\u4f5c\u6570\u7684\u7b26\u53f7\u51b3\u5b9a\u7ed3\u679c\u7684\u7b26\u53f7 </p>"},{"location":"note/courses/computer_organization/Chapter%201/#76","title":"7.6 \u7cbe\u786e\u7b97\u672f","text":"<p>Round modes - guard/round/sticky  Round to nearest even \u53ea\u5bf90.5\u6709\u6548\uff0c\u522b\u7684\u90fd\u548c\u56db\u820d\u4e94\u5165\u4e00\u6837 \u4e00\u822c\u7684\u6d6e\u70b9\u6570\u540e\u9762\u8fd8\u4f1a\u67092bits\uff0c\u5206\u522b\u79f0\u4e3aguard\u548cround\uff0c\u5176\u4e3b\u8981\u76ee\u7684\u662f\u8ba9\u8ba1\u7b97\u7ed3\u679c\u7684\u820d\u5165\u66f4\u52a0\u7cbe\u786e</p> <p>\u4e8b\u5b9e\u4e0a\u52a0\u6cd5\u53ea\u9700\u8981\u7528\u5230guard\uff0c\u4f46\u662f\u5bf9\u4e8e\u4e58\u6cd5\uff0c\u5982\u679c\u5b58\u5728\u524d\u5bfc0\uff0c\u9700\u8981\u5c06\u7ed3\u679c\u4f5c\u4e1a\uff0c\u8fd9\u65f6\u5019round bit \u5c31\u6210\u4e86\u6709\u6548\u4f4d</p> <p>\u53e6\u5916\u8fd8\u6709\u4e00\u4e2a\u4f4d\u53eb sticky bit\uff0c\u5176\u5b9a\u4e49\u662f\uff1a\u53ea\u8981 round \u53f3\u8fb9\u51fa\u73b0\u8fc7\u975e\u96f6\u4f4d\uff0c\u5c31\u5c06 sticky \u7f6e 1\uff0c\u8fd9\u4e00\u70b9\u53ef\u4ee5\u7528\u5728\u52a0\u6cd5\u7684\u53f3\u79fb\u4e2d\uff0c\u53ef\u4ee5\u8bb0\u4f4f\u662f\u5426\u6709 1 \u88ab\u79fb\u51fa\uff0c\u4ece\u800c\u80fd\u591f\u5b9e\u73b0 \"round to nearest even\"\u3002</p>"},{"location":"note/courses/computer_organization/Chapter%202/","title":"Introduction","text":""},{"location":"note/courses/computer_organization/Chapter%202/#operations","title":"Operations","text":"<p>[!info] Design Principle 1.Simplicity favors regularity 2.Smaller is faster 3. make common case faster</p> <p>operations of the Computer Hardware \u6bcf\u4e00\u6761\u6307\u4ee4\u53ea\u80fd\u5b8c\u6210\u4e00\u4e2aoperation \u6bcf\u4e00\u6761\u6307\u4ee4\u53ea\u542b\u6709\u4e09\u4e2a\u53d8\u91cf - word 32bit - doubleword 64bit \u7ecf\u5e38\u7528\u7684\u53d8\u91cf\u653e\u5230\u5bc4\u5b58\u5668\u91cc\u9762</p>"},{"location":"note/courses/computer_organization/Chapter%202/#1-risc-v-registers","title":"1 RISC-V Registers","text":"<p>\u5728RISC-V\u4f53\u7cfb\u7ed3\u6784\u4e2d\uff0c\u5bc4\u5b58\u5668\u7684\u5927\u5c0f\u4e3a64\u4f4d ![[file-20241028125513896.png]]</p>"},{"location":"note/courses/computer_organization/Chapter%202/#1-memory-operands","title":"1 Memory Operands","text":"<p>operands \u53ea\u80fd\u662f\u5bc4\u5b58\u5668</p>"},{"location":"note/courses/computer_organization/Chapter%202/#2-signed-and-unsigned-numbers","title":"2 Signed and Unsigned Numbers","text":"<p>\u5bf9\u4e8c\u8fdb\u5236\u8865\u7801\u6c42\u76f8\u53cd\u6570\uff1a\u6240\u6709\u4f4d\u53d6\u53cd\u52a0\u4e00</p>"},{"location":"note/courses/computer_organization/Chapter%202/#operands","title":"Operands","text":"<ul> <li>Main memory used for composite data<ul> <li>\u6570\u7ec4\uff0c\u7ed3\u6784\uff0c\u52a8\u6001\u6570\u636e</li> </ul> </li> <li>To apply arithmetic operations <ul> <li>\u628a\u6570\u636e\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668</li> <li>\u628a\u7ed3\u679c\u5b58\u50a8\u56de\u5185\u5b58</li> </ul> </li> <li>\u5730\u5740\u4f7f\u7528byte\u8fdb\u884c\u7d22\u5f15</li> <li>RISC-V  \u662f\u5c0f\u7aef\u7684\uff08\u5c31\u662f\u4f4e\u4f4d\u5b57\u8282\u6392\u653e\u5728\u5185\u5b58\u7684\u4f4e\u5730\u5740\u7aef\uff0c\u9ad8\u4f4d\u5b57\u8282\u6392\u653e\u5728\u5185\u5b58\u7684\u9ad8\u5730\u5740\u7aef\uff09</li> <li>RISC-V\u4e0d\u9700\u8981\u6570\u636e\u81ea\u7136\u5bf9\u9f50\uff0c\u4f46\u662f\u4f1a\u53d8\u6162</li> <li>\u5bf9\u9f50\uff1aword\u7684\u8d77\u59cb\u5730\u5740\u5fc5\u987b\u662f4\u7684\u500d\u6570\uff0cdoubleword\u7684\u8d77\u59cb\u5730\u5740\u5fc5\u987b\u662f8\u7684\u500d\u6570\uff0c\u5bf9\u9f50\u4f1a\u4f7f\u6570\u636e\u7684\u4f20\u8f93\u66f4\u5feb </li> </ul> <p> RISC-V instructions - \u6307\u4ee4\u90fd\u662f32\u4f4d</p>"},{"location":"note/courses/computer_organization/Chapter%202/#representing-instructions-in-the-computer","title":"Representing Instructions in the computer","text":"<ul> <li>\u8ba1\u7b97\u673a\u4e2d\u7684\u6240\u6709\u4fe1\u606f\u90fd\u662f\u7528\u4e8c\u8fdb\u5236\u6765\u8868\u793a\u7684</li> <li>\u6307\u4ee4\u4e5f\u7528\u4e8c\u8fdb\u5236\u7f16\u7801</li> <li>\u5bc4\u5b58\u5668\u6620\u5c04\u5230\u6570\u636e</li> <li>RISC-V\u6307\u4ee4<ul> <li>\u7f16\u7801\u4e3a32bit\u7684word</li> <li>\u5c11\u91cf\u683c\u5f0f\u7f16\u7801\u64cd\u4f5c\u4ee3\u7801</li> <li>\u89c4\u6574</li> </ul> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%202/#1-translating-assembly-into-machine-code","title":"1 Translating assembly into machine code","text":"<p>![[file-20241028160825421.png]]</p>"},{"location":"note/courses/computer_organization/Chapter%202/#2-risc-v","title":"2 RISC-V \u6307\u4ee4\u683c\u5f0f","text":""},{"location":"note/courses/computer_organization/Chapter%202/#21-r","title":"2.1 R \u578b\u6307\u4ee4","text":"<p>\u7528\u4e8e\u5bc4\u5b58\u5668</p> funct7 rs2 rs1 funct3 rd opcode 7 bits 5 bits 5 bits 3 bits 5 bits 7 bits - opcode : operation code - rd: destination register number - funct3: 3-bit function code(additional code) - rs1: \u7b2c\u4e00\u4e2a\u6e90\u5bc4\u5b58\u5668 - rs2\uff1a\u7b2c\u4e8c\u4e2a\u6e90\u5bc4\u5b58\u5668 - funct7\uff1a7-bit function code(additional code) ### 2.2 I-\u578b\u6307\u4ee4 \u7528\u4e8e\u5e26\u4e00\u4e2a\u5e38\u6570\u7684\u6307\u4ee4\u548cload\u6307\u4ee4 <p>\u5728\u79fb\u4f4d\u6307\u4ee4\u4e2d\u524d\u516d\u4f4dfunct6  - rs1: source or base address register number - immediate: constant operand, or offset added to base address</p> <p>p 2s-complement, sign extended</p>"},{"location":"note/courses/computer_organization/Chapter%202/#23-s","title":"2.3 S\u578b\u6307\u4ee4","text":"<ul> <li>rs1: \u5bc4\u5b58\u5668\u57fa\u5740</li> <li>rs2: \u6e90\u64cd\u4f5c\u6570\u5bc4\u5b58\u5668</li> <li>immediate \uff1a offset added to base address</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%202/#24-u-type","title":"2.4 U-type","text":"<p>\u7528\u4e8e\u4e0e\u9ad8\u4f4d\u7acb\u5373\u6570\u76f8\u5173\u7684\u64cd\u4f5c</p>"},{"location":"note/courses/computer_organization/Chapter%202/#25-sb-type","title":"2.5 SB-type","text":"<p>\u7528\u4e8e\u6761\u4ef6\u5206\u652f\u6307\u4ee4 ![[file-20241020193641182.png]]</p>"},{"location":"note/courses/computer_organization/Chapter%202/#26-uj-type","title":"2.6 UJ-type","text":"<p>\u7528\u4e8e\u65e0\u6761\u4ef6\u5206\u652f\u6307\u4ee4\uff08<code>jal</code>,<code>jalr</code>\uff09 - <code>rd</code>\u7528\u4e8e\u5b58\u653e\u94fe\u63a5\u5730\u5740\uff08\u5373\u8fd4\u56de\u5730\u5740\uff09 - \u5982\u679c\u8df3\u8f6c\u5730\u5740\uff08\u7acb\u5373\u6570\uff09\u8fc7\u5927\uff0c\u8d85\u8fc7\u4e86\u00a020\u00a0\u4f4d\uff0c\u90a3\u4e48\u53ef\u4ee5\u5148\u7528<code>lui</code>\u6307\u4ee4\uff08\u540e\u9762\u4f1a\u8bb2\u5230\u8fd9\u6761\u6307\u4ee4\uff0c\u4e5f\u4f1a\u4ecb\u7ecd\u7c7b\u4f3c\u7684\u65b9\u6cd5\uff09\u5c06\u9ad8\u00a020\u00a0\u4f4d\u6570\u5b57\u653e\u5165\u4e34\u65f6\u5bc4\u5b58\u5668\u4e2d\uff0c\u7136\u540e\u518d\u7528<code>jalr</code>\u6307\u4ee4\uff0c\u8df3\u8f6c\u5230\u5730\u5740\u00a0<code>\u5269\u4f59\u7684\u4f4e\u4f4d\u6570\u5b57(\u4e34\u65f6\u5bc4\u5b58\u5668)</code>\u00a0\u4e0a</p>"},{"location":"note/courses/computer_organization/Chapter%202/#27-stored-program-computer","title":"2.7 Stored Program Computer","text":"<ul> <li>Instructions represented in binary</li> <li>\u6307\u4ee4\u548c\u6570\u636e\u5b58\u50a8\u5728\u5185\u5b58\u4e2d</li> <li>\u7a0b\u5e8f\u5728\u7a0b\u5e8f\u4e0a\u64cd\u4f5c\uff08\u7f16\u8bd1\u5668\uff09</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%202/#3-logical-operations","title":"3 Logical Operations","text":""},{"location":"note/courses/computer_organization/Chapter%202/#31-shift-operations","title":"3.1 Shift Operations","text":"<p> - immed \u51b3\u5b9a\u4f4d\u7f6e\u5982\u4f55\u79fb\u52a8 - \u5de6\u79fb     - <code>slli rd, rs1, imm</code>\u5373<code>rd = rs1&lt;&lt; imm</code> - \u53f3\u79fb     - <code>srli</code></p>"},{"location":"note/courses/computer_organization/Chapter%202/#32-and-operations","title":"3.2 And Operations","text":""},{"location":"note/courses/computer_organization/Chapter%202/#33-or-operations","title":"3.3 Or Operations","text":""},{"location":"note/courses/computer_organization/Chapter%202/#34-xor-operations","title":"3.4 XOR Operations","text":""},{"location":"note/courses/computer_organization/Chapter%202/#4-instructions-for-making-decisions","title":"4 Instructions for making decisions","text":""},{"location":"note/courses/computer_organization/Chapter%202/#41-branch-instructions","title":"4.1 Branch instructions","text":"<ul> <li><code>beq registers1, register2,L1</code> <p>branch if equal</p> </li> <li><code>bne register1,register2,L1</code> <p>branch if not equal </p> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%202/#42-compare-operations","title":"4.2 Compare Operations","text":"<ul> <li><code>slt x5,x19,x20   #x5=1 if x19&lt;x20</code></li> <li><code>blt rs1,rs2,L1</code> <p>if(rs1&lt;rs2)branch to instruction labeled L1</p> </li> <li><code>bge rs1,rs2,L1</code> <p>if (rs1&gt;=rs2)branch to instruction labeled L1</p> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%202/#43-jump-register-jump-address-table","title":"4.3 Jump register &amp; jump address table","text":"<ul> <li>Jump-and-link register <code>jalr x1,100(x6)</code> \u8df3\u8f6c\u5230\u6240\u7ed9\u5730\u5740\u6267\u884c\u7a0b\u5e8f\uff0cexit\u4e4b\u540e\u6267\u884cPC+4\u7684\u6307\u4ee4</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%202/#44-basic-blocks","title":"4.4 Basic Blocks","text":"<p>A basic block is a sequence of instructions with - \u6ca1\u6709branch\u8df3\u51fa\u7a0b\u5e8f\uff0c\u4e5f\u4e0d\u4f1a\u6709branch\u7a81\u7136\u8df3\u5230\u672c\u7a0b\u5e8f\u7684\u4e2d\u95f4</p> <p>\u6240\u4ee5\u7f16\u8bd1\u5668\u53ef\u4ee5\u8fdb\u884c\u5145\u5206\u7684\u4f18\u5316</p>"},{"location":"note/courses/computer_organization/Chapter%202/#5-suporting-procedures-in-computer-hardware","title":"5 Suporting Procedures in Computer Hardware","text":"<p>\u8fdb\u7a0b\u8c03\u7528\u7684\u516d\u5927\u6b65\u9aa4\uff1a 1. \u4f20\u5165\u53c2\u6570 2. \u7a0b\u5e8f\u7684\u63a7\u5236\u6743\u4ea4\u7ed9\u8fd9\u4e2a\u8fdb\u7a0b 3. \u5f97\u5230\u5b58\u50a8\u8d44\u6e90 4. \u5b8c\u6210desired task 5. \u4f7f\u4e3b\u7a0b\u5e8f\u80fd\u5f97\u5230\u7ed3\u679c 6. \u5f52\u8fd8\u63a7\u5236\u6743</p> <p>program counter\uff08PC\uff09 \uff1a\u7528\u4e8e\u4fdd\u5b58\u5f53\u524d\u6267\u884c\u6307\u4ee4\u7684\u5730\u5740</p>"},{"location":"note/courses/computer_organization/Chapter%202/#51-procedure-call-instructions","title":"5.1 Procedure Call Instructions","text":"<ul> <li>Instruction for procedures<code>jal x1,ProcedureAddress</code>:         \u4e0b\u4e00\u6761\u6307\u4ee4\u5730\u5740\u5728x1\uff0c\u8df3\u8f6c\u5230\u76ee\u6807\u5730\u5740</li> <li>Procedure\u00a0return: jump and link register <code>jalr x0, 0(x1)</code><ul> <li>Like jal, but jumps to\u00a0<code>0 + address in x1</code></li> <li>Use\u00a0<code>x0</code>\u00a0as rd (<code>x0</code>\u00a0cannot be changed)</li> <li>Can also be used for computed jump</li> </ul> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%202/#52-using-more-registers","title":"5.2 Using More Registers","text":"<ul> <li>More Registers for prodedures calling:<ul> <li>a0-a7(x10-x17):\u516b\u4e2a\u4f20\u53c2\u548c\u8fd4\u56de\u503c\u5bc4\u5b58\u5668</li> <li>ra/x1:\u8fd4\u56de\u65f6\u7684\u5730\u5740</li> </ul> </li> <li>Stack<ul> <li>\u5bf9\u4e8e\u5bc4\u5b58\u5668\u6ea2\u51fa\uff0c\u7406\u60f3\u7684\u6570\u636e\u7ed3\u6784\u662fstack</li> <li>In RISC-V\uff0cthe stack pointer is x2/sp</li> <li>push/pop</li> <li>Stack grow from higher address to lower address<ul> <li>Push:<code>sp=sp-8</code></li> <li>pop:<code>sp=sp+8</code> <p>[!info] compiling a leaf procedure  </p> </li> </ul> </li> </ul> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%202/#53-nested-procedures","title":"5.3 Nested Procedures","text":"<p>\u540c\u6837\u662f\u538b\u6808\\(\\rightarrow\\)\u51fa\u6808</p> <p>[!note] procedure ![[file-20241020193257872.png]]</p> <p>![[file-20241020194218195.png]] todo \u7236\u51fd\u6570\u4fdd\u8bc1\uff1a\u5b50\u51fd\u6570\u80fd\u968f\u4fbf\u4f7f\u7528temporary registers\uff0c\u8fd4\u56de\u7ed9\u7236\u51fd\u6570\u7684\u65f6\u5019\uff0c\u503c\u53ef\u4ee5\u88ab\u6539\u53d8 \u5b50\u51fd\u6570\u4fdd\u8bc1\uff1a\u8fd4\u56de\u7ed9\u7236\u51fd\u6570\u7684\u65f6\u5019\uff0csaved registers \u4fdd\u6301\u7236\u51fd\u6570\u8c03\u7528\u5b50\u51fd\u6570\u524d\u7684\u503c</p>"},{"location":"note/courses/computer_organization/Chapter%202/#6-local-data-on-the-stack","title":"6 Local Data on the Stack","text":"<p>\u5728\u6808\u4e0a\u7ed9\u65b0\u6570\u636e\u5206\u914d\u5185\u5b58 - \u8fc7\u7a0b\u5e27(procedure frame)/\u6d3b\u52a8\u8bb0\u5f55(activation record)\uff1a\u6808\u5185\u7684\u4e00\u6bb5\u7a7a\u95f4\uff0c\u91cc\u9762\u5b58\u50a8\u4e86\u8fc7\u7a0b\u6240\u9700\u7684\u5bc4\u5b58\u5668\u548c\u53d8\u91cf \u3002 - \u5bc4\u5b58\u5668<code>x8</code>\uff08\u6216\u8005\u79f0\u4e3a<code>fp</code>\uff09\u662f\u4e00\u4e2a\u5e27\u6307\u9488(frame pointer)\uff0c\u5b83\u6307\u5411\u8fc7\u7a0b\u5e27\u5185\u7b2c\u4e00\u4e2adouble word\u3002</p> <pre><code>- \u6808\u6307\u9488\u4f1a\u968f\u7740\u8fc7\u7a0b\u7684\u8fdb\u884c\u800c\u4e0d\u65ad\u53d8\u5316\uff0c\u56e0\u6b64\u5728\u8fc7\u7a0b\u7684\u4e0d\u540c\u9636\u6bb5\u8bbf\u95ee\u540c\u4e00\u4e2a\u53d8\u91cf\u6216\u5bc4\u5b58\u5668\u65f6\uff0c\u7528\u5230\u7684\u504f\u79fb\u91cf\u4f1a\u4e0d\u65ad\u53d8\u5316\uff0c\u4ece\u800c\u5e26\u6765\u7406\u89e3\u4e0a\u7684\u4e0d\u4fbf\n- \u800c\u5e27\u6307\u9488\u5728\u8fc7\u7a0b\u4e2d\u4e3a\u5c40\u90e8\u53d8\u91cf\u63d0\u4f9b\u4e00\u4e2a\u7a33\u5b9a\u7684\u57fa\u5740\u5bc4\u5b58\u5668\n\n![](https://note.noughtq.top/hardware/co/images/C2/18.png)\n</code></pre> <ul> <li> <p>\u5bc4\u5b58\u5668<code>x3</code>\uff08\u6216\u8005\u79f0\u4e3a<code>gp</code>\uff09\u662f\u4e00\u4e2a\u5168\u5c40\u6307\u9488(global pointer)\uff0c\u5b83\u6307\u5411\u7684\u662f\u9759\u6001\u00a0(static)\u00a0\u6570\u636e\u3002</p> </li> <li> <p>Linux\u00a0\u7cfb\u7edf\u4e0a\u00a0RISC-V\u00a0\u7684\u5185\u5b58\u5206\u914d\u793a\u610f\u56fe\uff1a</p> <p></p> <ul> <li>\u6700\u5e95\u4e0b\u7684\u5185\u5b58\u662f\u4fdd\u7559\u7684\u7a7a\u95f4\uff08\u4e0d\u53ef\u8bbf\u95ee\uff09</li> <li>\u7b2c\u4e8c\u5c42\u7684\u5185\u5b58\u7528\u4e8e\u5b58\u653e\u00a0RISC-V\u00a0\u7684\u673a\u5668\u7801\uff0c\u79f0\u4e3a\u6587\u672c\u6bb5(text segment)</li> <li>\u7b2c\u4e09\u5c42\u7684\u5185\u5b58\u79f0\u4e3a\u9759\u6001\u6570\u636e\u6bb5(static data segment)\uff0c\u7528\u4e8e\u653e\u7f6e\u7acb\u5373\u6570\u548c\u5176\u4ed6\u9759\u6001\u53d8\u91cf</li> <li>\u6700\u4e0a\u5c42\u540c\u65f6\u5b58\u653e\u6808\u548c\u52a8\u6001\u6570\u636e\uff08\u6bd4\u5982\u94fe\u8868\u7b49\uff09\uff0c\u5176\u4e2d\u5b58\u653e\u52a8\u6001\u6570\u636e\u7684\u6570\u636e\u7ed3\u6784\u79f0\u4e3a\u5806(heap)\u3002\u6ce8\u610f\u5230\u6808\u548c\u5806\u4f4d\u4e8e\u8fd9\u5757\u5185\u5b58\u7684\u4e24\u7aef\uff0c\u5206\u522b\u81ea\u9876\u5411\u4e0b\u548c\u81ea\u5e95\u5411\u4e0a\u589e\u957f<ul> <li>C\u00a0\u8bed\u8a00\u4e2d\u4f7f\u7528<code>malloc()</code>\u5728\u5806\u4e2d\u5206\u914d\u7a7a\u95f4\uff0c\u4f7f\u7528<code>free()</code>\u91ca\u653e\u5806\u5185\u7684\u7a7a\u95f4\u3002\u5982\u679c\u8fc7\u665a\u91ca\u653e\u7a7a\u95f4\uff0c\u5c31\u4f1a\u9020\u6210\u5185\u5b58\u6cc4\u9732\u95ee\u9898\uff1b\u5982\u679c\u8fc7\u65e9\u91ca\u653e\u7a7a\u95f4\uff0c\u5c31\u4f1a\u9020\u6210\u60ac\u7a7a\u6307\u9488\u00a0(dangling pointers)\uff08\u7c7b\u4f3c\u91ce\u6307\u9488\uff09\u95ee\u9898\u3002 ![[file-20241028190531928.png]]</li> </ul> </li> </ul> </li> <li> <p>Byte-encoded character sets</p> <ul> <li>ASCII</li> <li>Latin-1</li> </ul> </li> <li>Unicode: 32-bit character set</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%202/#communicating-with-people-character-data","title":"Communicating with people character data","text":""},{"location":"note/courses/computer_organization/Chapter%202/#1-bytehalfwordword-operations","title":"1 Byte/halfword/word Operations","text":"<ul> <li>RISC-V byte/halfword/word load/store<ul> <li><code>lb rd, offset(rs1)</code></li> <li>`lh rd, offset(rs1)</li> <li><code>lw rd, offser(rs1)</code> ![[file-20241021131319049.png]] <p>[!note] Strcpy Example ![[file-20241021131810673.png]] ![[file-20241021131827015.png]]</p> </li> </ul> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%202/#addressing","title":"Addressing","text":""},{"location":"note/courses/computer_organization/Chapter%202/#1-risc-v-addressing-for-32-bit-immediate-and-addresses","title":"1 RISC-V Addressing for 32-bit Immediate and Addresses \u8d85\u5927\u7acb\u5373\u6570\u52a0\u8f7d","text":"<p>\u867d\u7136\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u7acb\u5373\u6570\u4e0d\u4f1a\u5f88\u5927\uff08\u2264\\(2^12\\)\uff09\uff0c\u80fd\u591f\u76f4\u63a5\u5b58\u5728\u6307\u4ee4\u4e2d\uff1b\u4f46\u5982\u679c\u8d85\u8fc7\u00a012\u00a0\u4f4d\uff0cRISC-V\u00a0\u4f1a\u7528<code>lui</code>\u00a0(load upper immediate)\u00a0\u6307\u4ee4\u6765\u5904\u7406\u8fd9\u7c7b\u8f83\u5927\u7684\u7acb\u5373\u6570\u3002</p> <ul> <li><code>lui</code>\u7684\u6307\u4ee4\u683c\u5f0f\u4e3a\u00a0U-type</li> <li>\u5b83\u53ef\u4ee5\u52a0\u8f7d\u7acb\u5373\u6570\u7684\u9ad8\u00a020\u00a0\u4f4d\uff0c\u5c06\u5176\u653e\u5165\u5bc4\u5b58\u5668\u4e2d\u95f4\u7684\u7b2c\u00a012\u00a0\u4f4d\u5230\u7b2c\u00a031\u00a0\u4f4d\uff0c\u5bc4\u5b58\u5668\u7684\u4f4e\u00a012\u00a0\u4f4d\u7528\u00a00\u00a0\u586b\u5145\uff0c\u9ad8\u00a032\u00a0\u4f4d\u7528\u7b2c\u00a031\u00a0\u4f4d\u4e0a\u7684\u6570\u5b57\u586b\u5145</li> <li>\u4e3e\u4e2a\u4f8b\u5b50\uff1a\u8981\u5c06\u00a032\u00a0\u4f4d\u7acb\u5373\u6570\u8d4b\u7ed9\u5bc4\u5b58\u5668\uff0c\u53ef\u4ee5\u5148\u7528<code>lui</code>\u6307\u4ee4\u5c06\u9ad8\u00a020\u00a0\u4f4d\u8d4b\u7ed9\u5bc4\u5b58\u5668\uff0c\u4e4b\u540e\u7528<code>addi</code>\u6307\u4ee4\u5c06\u5269\u4f59\u7684\u00a012\u00a0\u4f4d\u52a0\u5230\u5bc4\u5b58\u5668\u4e2d\uff08\u5177\u4f53\u89c1\u4e0b\u9762\u7684\u201c\u4f8b\u9898\u201d\uff09</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%202/#2-addressing-mode","title":"2 Addressing Mode","text":"<p>![[file-20241021134200405.png]]</p>"},{"location":"note/courses/computer_organization/Chapter%202/#21-branch-addressing","title":"2.1 Branch Addressing","text":"<p>\u9ed8\u8ba4\u7acb\u5373\u6570\u672b\u5c3e\u88650\uff0c\u5206\u652f\u6307\u4ee4\u662fPC\u76f8\u5bf9\u5bfb\u5740 <pre><code>bne x10,x11,32 #\u5b58\u50a8\u7684\u662f16\n</code></pre> ![[file-20241021133413404.png]]</p>"},{"location":"note/courses/computer_organization/Chapter%202/#22-jump-addressing","title":"2.2 Jump  Addressing","text":"<p>![[file-20241021133439755.png]] ![[file-20241021133517443.png]] branch\u6307\u4ee4\u7684offset\u6700\u540e\u4e00\u4f4d\u662f\u7b26\u53f7\u4f4d - \u867d\u7136\u5927\u90e8\u5206\u7684\u8df3\u8f6c\u5730\u5740\u79bb\u5206\u652f\u6307\u4ee4\u90fd\u6bd4\u8f83\u8fd1\uff08\u6839\u636e\u00a0SPEC\u00a0\u6d4b\u8bd5\uff0c\u4e00\u534a\u5de6\u53f3\u7684\u5206\u652f\u6307\u4ee4\u8df3\u8f6c\u8ddd\u79bb\u4e0d\u8d85\u8fc7\u00a016\u00a0\u6761\u6307\u4ee4\uff09\uff0c\u4f46\u662f\u4ecd\u4f1a\u5b58\u5728\u4e00\u4e9b\u8df3\u8f6c\u8ddd\u79bb\u5f88\u8fdc\uff0c\u8d85\u8fc7\u00a012\u00a0\u4f4d\u5730\u5740\u7684\u6307\u4ee4\u3002\u8fd9\u65f6\u6c47\u7f16\u5668\u4f1a\u91c7\u53d6\u4ee5\u4e0b\u633d\u6551\u63aa\u65bd\uff1a     - \u63d2\u5165\u4e00\u6761\u65e0\u6761\u4ef6\u5206\u652f\u6307\u4ee4\uff0c\u5b83\u7684\u8df3\u8f6c\u5730\u5740\u5373\u4e3a\u76ee\u6807\u8df3\u8f6c\u5730\u5740     - \u5c06\u539f\u6765\u6761\u4ef6\u5206\u652f\u6307\u4ee4\u7684\u6761\u4ef6\u53d6\u53cd\uff0c\u8ba9\u6761\u4ef6\u5206\u652f\u8bed\u53e5\u81ea\u884c\u51b3\u5b9a\u662f\u5426\u8df3\u8fc7\u65e0\u6761\u4ef6\u5206\u652f</p> <p>[!note] example <code>beq x10,x0,L1</code> \u5982\u679c<code>L1</code>\u5730\u5740\u8fc7\u8fdc\uff0c\u8fd9\u6761\u6307\u4ee4\u5c06\u88ab\u66ff\u6362\u6210\u4ee5\u4e0b\u6307\u4ee4\uff1a <pre><code>bne x10,x0,L2\njal x0,L1\n</code></pre></p>"},{"location":"note/courses/computer_organization/Chapter%202/#23-summary","title":"2.3 Summary","text":"<p>\u5bfb\u5740\u6a21\u5f0f\uff08addressing mode\uff09\uff1a\u51b3\u5b9a\u6b64\u67b6\u6784\u4e0b\u673a\u5668\u8bed\u8a00\u6307\u4ee4\u5bf9\u4e8e\u7684\u8fd0\u7b97\u6570 ![[file-20241021132629772.png]] - \u7acb\u5373\u5bfb\u5740(immediate addressing)\uff1a\u64cd\u4f5c\u6570\u4e3a\u6307\u4ee4\u5185\u7684\u7acb\u5373\u6570 - \u5bc4\u5b58\u5668\u5bfb\u5740(register addressing)\uff1a\u64cd\u4f5c\u6570\u4e3a\u5bc4\u5b58\u5668 - \u57fa\u5740\u6216\u504f\u79fb\u5bfb\u5740(base or displacement addressing)\uff1a\u64cd\u4f5c\u6570\u4f4d\u4e8e\u6307\u5b9a\u7684\u5185\u5b58\u4f4d\u7f6e\u4e0a\uff0c\u8be5\u4f4d\u7f6e\u662f\u5bc4\u5b58\u5668\u548c\u7acb\u5373\u6570\u4e4b\u548c - PC\u00a0\u76f8\u5bf9\u5bfb\u5740(PC-relative addressing)\uff1a\u5206\u652f\u5730\u5740\u4e3a\u00a0PC\u00a0\u548c\u5206\u652f\u504f\u79fb\u91cf\uff08\u7acb\u5373\u6570\u7684\u00a02\u00a0\u500d\uff09\u4e4b\u548c     \\(\\(\\begin{align}Target~address=&amp;PC+Branch~offset\\\\=&amp;PC+immediate\\times 2\\end{align}\\)\\)</p>"},{"location":"note/courses/computer_organization/Chapter%202/#3-decoding-assembly-code","title":"3 Decoding assembly code","text":"<ul> <li>\u786e\u5b9aopcode</li> <li>\u786e\u5b9a\u5176\u4ed6\u7684\u533a\u57df</li> <li>\u7ffb\u8bd1\u4e3a\u6c47\u7f16\u8bed\u8a00 <p>[!info] example ![[file-20241021134456795.png]]</p> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%202/#31-summary","title":"3.1 Summary","text":"<p>![[file-20241021134532644.png]] ![[file-20241021134543756.png]] ![[file-20241021134554625.png]]</p>"},{"location":"note/courses/computer_organization/Chapter%202/#4-risc-v","title":"4 RISC-V\u4e2d\u7684\u540c\u6b65","text":"<ul> <li>\u4e24\u4e2a\u8fdb\u7a0b\u4f7f\u7528\u4e00\u7247\u5185\u5b58<ul> <li>P1 writes, then P2 reads</li> <li>Data race  \u5982\u679cP1 P2 \u6ca1\u6709\u540c\u6b65</li> </ul> </li> <li>\u786c\u4ef6\u652f\u6301<ul> <li>\u539f\u5b50\u8bfb\u5199\u64cd\u4f5c</li> <li>\u8bfb\u5199\u4e4b\u95f4\u4e0d\u5141\u8bb8\u8bbf\u95ee\u8fd9\u5757\u5730\u5740</li> </ul> </li> </ul> <p>\u6709\u4e9b\u5904\u7406\u5668\u6709\u4e13\u95e8\u5b9e\u73b0\u539f\u5b50\u64cd\u4f5c\u7684\u6307\u4ee4\uff0c\u6bd4\u5982\u539f\u5b50\u4ea4\u6362\u00a0(atomic swap/exchange)\uff08\u5b9e\u73b0\u5bc4\u5b58\u5668\u548c\u5185\u5b58\u6570\u636e\u7684\u4ea4\u6362\uff09\u7b49\u3002\u800c\u00a0RISC-V\u00a0\u63d0\u4f9b\u4e86\u4e00\u4e2a\u6307\u4ee4\u5bf9\u00a0(instruction pair)\u00a0<code>lr.d</code>\u548c<code>sc.d</code>\uff1a</p> <ul> <li> <p><code>lr.d</code>(load-reserved doubleword)\uff1a</p> <ul> <li> <p>\u683c\u5f0f\uff1a</p> <p><code>lr.d rd, (rs1)</code></p> </li> <li> <p>\u529f\u80fd\uff1a\u5c06\u5b58\u50a8\u5728\u5bc4\u5b58\u5668<code>rs1</code>\u7684\u5185\u5b58\u5730\u5740\u4e0a\u7684\u6570\u636e\u52a0\u8f7d\u5230\u5bc4\u5b58\u5668<code>rd</code>\u4e0a\uff0c\u540c\u65f6\u4fdd\u7559\u8fd9\u5757\u5185\u5b58\u5730\u5740\uff0c\u9664<code>sc.d</code>\u7684\u5176\u4ed6\u6307\u4ee4\u4e0d\u5e94\u8be5\u8bbf\u95ee\u8fd9\u5757\u5730\u5740</p> </li> </ul> </li> <li> <p><code>sc.d</code>(store-conditional doubleword)\uff1a</p> <ul> <li>\u683c\u5f0f\uff1a <code>sc.d rd, rs1, (rs2)</code></li> <li>\u529f\u80fd\uff1a<ul> <li>\u5c06\u5bc4\u5b58\u5668<code>rs1</code>\u4e0a\u7684\u6570\u636e\u653e\u5165\u5b58\u50a8\u5728\u5bc4\u5b58\u5668<code>rs2</code>\u7684\u5185\u5b58\u5730\u5740\u4e0a</li> <li>\u5e76\u4e14\u7531\u5bc4\u5b58\u5668<code>rd</code>\u6307\u793a\u8be5\u6307\u4ee4\u662f\u5426\u6210\u529f\uff1a\u82e5\u6210\u529f\uff0c\u5219<code>rd = 0</code>\uff0c\u5426\u5219<code>rd</code>\u4e3a\u4e00\u4e2a\u975e\u96f6\u503c\uff08\u8868\u793a\u6709\u5176\u4ed6\u6307\u4ee4\u8bbf\u95ee\u8fc7\u8fd9\u5757\u5185\u5b58\u7a7a\u95f4\uff09 <p>[!note] Example1:\u539f\u5b50\u4ea4\u6362 <pre><code>again:\n   lr.d x10,(x20)\n   sc.d x11,x23,(x20)\n   bne x11,x0,again\n   addi x23,x10,0\n</code></pre></p> <p>[!note] Example2\uff1a\u52a0\u9501&amp;\u89e3\u9501 ```   addi x12, x0, 1 again:   lr.d x10, (x20)   bne x10, x0, again   sc.d x11, x12, (x20)   bne x11,x0,again   sd x0, 0(x20)</p> </li> </ul> </li> </ul> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%202/#5-translating-and-starting-a-program","title":"5 Translating and starting a program","text":"<p>==to do ==</p>"},{"location":"note/courses/computer_organization/Chapter%202/#6-arrays-versus-pointers","title":"6 Arrays versus Pointers","text":""},{"location":"note/courses/computer_organization/Chapter%202/#7-mips-instructions","title":"7 MIPS Instructions","text":""},{"location":"note/courses/computer_organization/Chapter%202/#8-x86-instructions","title":"8 x86 Instructions","text":""},{"location":"note/courses/computer_organization/Chapter%202/#9-risc-v","title":"9 \u5176\u4ed6RISC-V\u6307\u4ee4","text":"<p>![[file-20241021144153007.png]] - M\uff1a integer multiply, divide , remainder - A: atomic memory operations - F\uff1asingle-precision floating point - D\uff1a double-precision floating point - C: compressed instructions     - 16-bit encoding for frequently used instructions</p>"},{"location":"note/courses/computer_organization/Chapter%204/","title":"\u6d41\u6c34\u7ebf\u5904\u7406\u5668","text":"<p>\u5728\u5355\u5468\u671f\u5904\u7406\u5668\u4e2d\u6700\u957f\u7684\u5ef6\u8fdf\u51b3\u5b9a\u4e86\u65f6\u949f\u5468\u671f\u957f\u5ea6</p> <p>\u4e0d\u80fd\u4f7f\u7528\u7f29\u77ed\u5e38\u7528\u6307\u4ee4\u6267\u884c\u65f6\u95f4\u800c\u4e0d\u6539\u53d8\u6700\u574f\u60c5\u51b5\u7684\u5b9e\u73b0\u6280\u672f</p>"},{"location":"note/courses/computer_organization/Chapter%204/#1-pipelining-risc-v-instruction-set","title":"1 Pipelining RISC-V instruction set","text":"<p>\u65f6\u949f\u5468\u671f\u964d\u5230\u4e861\uff0c\u6bcf\u4e2a\u65f6\u949f\u5468\u671f\u591a\u4e2a\u6307\u4ee4\u5728\u5e76\u884c ![[file-20241030103513303.png|425]]</p> <ul> <li>\u5728\u6d41\u6c34\u7ebf\u6570\u636e\u901a\u8def\u4e2d\uff0c\u6bcf\u4e24\u4e2a\u9636\u6bb5\u4e4b\u95f4\u52a0\u5165\u5bc4\u5b58\u5668\uff08\u5806\uff09\uff0c\u7528\u4ee5\u4fdd\u5b58\u6570\u636e\uff0c\u662f\u7684\u90e8\u5206\u6570\u636e\u901a\u8def\u53ef\u4ee5\u5728\u6267\u884c\u8fc7\u7a0b\u4e2d\u88ab\u5171\u4eab</li> <li>\u7528\u524d\u540e\u4e24\u4e2a\u9636\u6bb5\u7684\u7f29\u5199\u547d\u540d</li> <li>IF: \u53d6\u6307</li> <li>ID: \u8bd1\u7801\uff0c\u8bfb\u5bc4\u5b58\u5668</li> <li>EX: \u6267\u884c\uff0c\u8ba1\u7b97\u5730\u5740</li> <li>MEM: \u5185\u5b58\u8bbf\u95ee\u64cd\u4f5c</li> <li>WB: \u7ed3\u679c\u5199\u56de\u5bc4\u5b58\u5668</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%204/#11","title":"1.1 \u6d41\u6c34\u7ebf\u7684\u6027\u80fd\u5206\u6790\uff1a\u8ba1\u7b97\u65f6\u949f\u5468\u671f\u6570","text":"<ul> <li>\u5728\u7406\u60f3\u6761\u4ef6\u4e0b\uff0c\u7ed9\u5b9aN\u6761\u6307\u4ee4\uff0c\u65f6\u949f\u5468\u671f\u4e3aC,\u6d41\u6c34\u7ebf\u7ea7\u6570M(\u9636\u6bb5\u6570\u76ee)\uff0c\u8ba1\u7b97\u6240\u9700\u7684\u65f6\u95f4T\u4e3a: \\(\\(T=N*C+(M-1)*C\\)\\)</li> </ul> <p>\u5bf9\u6307\u4ee4\u9636\u6bb5\u9002\u5f53\u7684\u62c6\u5206\u53ef\u4ee5\u63d0\u9ad8\u6d41\u6c34\u7ebf\u5904\u7406\u5668\u7684\u6027\u80fd</p>"},{"location":"note/courses/computer_organization/Chapter%204/#12","title":"1.2 \u6d41\u6c34\u7ebf\u7684\u7ea7\u6570","text":"<p>\u6d41\u6c34\u7ebf\u7684\u7ea7\u6570\uff1a\u6267\u884c\u6307\u4ee4\u6240\u9700\u8981\u7684\u9636\u6bb5\u6570\u76ee,\u7ea7\u6570\u591a\u5219\u79f0\u6d41\u6c34\u7ebf\u6bd4\u8f83\u6df1</p> <p>\u82e5\u7ea7\u6570\u8fc7\u591a\uff0c\u6d41\u6c34\u7ebf\u5bc4\u5b58\u5668\u5ef6\u8fdf\u5728\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u4e2d\u7684\u5360\u6bd4\u5927\u5927\u589e\u52a0\uff0c\u4ece\u800c\u5f71\u54cd\u4e86\u6d41\u6c34\u7ebf\u5904\u7406\u5668\u6027\u80fd\u7684\u63d0\u5347</p> <p>\u6d41\u6c34\u7ebf\u7ea7\u6570\u662f\u4e00\u4e2atradeoff\u7684\u8bbe\u8ba1\uff0c\u5728\u7ea7\u6570\u5408\u7406\u65f6\uff0c\u5177\u5907\u6700\u9ad8\u7684\u52a0\u901f\u6bd4</p>"},{"location":"note/courses/computer_organization/Chapter%204/#13","title":"1.3 \u6d41\u6c34\u7ebf\u52a0\u901f","text":"<p>\u5982\u679c\u6bcf\u4e00\u7ea7\u9700\u8981\u7684\u65f6\u95f4\u90fd\u662f\u5e73\u8861\u7684\uff0c\u52a0\u901f\u6bd4\u6700\u5feb \u5982\u679c\u6240\u9700\u65f6\u95f4\u4e0d\u5e73\u8861\uff0c\u90a3\u4e48\u52a0\u901f\u6bd4\u5c31\u6ca1\u90a3\u4e48\u5feb\u4e86</p> <p>Latency(time for each instruction) \u672a\u964d\u4f4e</p> <p>RISC-V\u6307\u4ee4\u9002\u5408\u6d41\u6c34\u7ebf\u52a0\u901f\uff1a - \u6240\u6709\u6307\u4ee4\u90fd\u662f32bit\u7684 - \u6307\u4ee4\u683c\u5f0f\u66f4\u5c11\u4e14\u89c4\u6574 - Load/store addressing \u53ef\u4ee5\u5728\u7b2c\u4e09\u9636\u6bb5\u8ba1\u7b97\uff0c\u7b2c\u56db\u9636\u6bb5\u52a0\u8f7d</p>"},{"location":"note/courses/computer_organization/Chapter%204/#14-pipeline-hazard","title":"1.4 pipeline  hazard","text":""},{"location":"note/courses/computer_organization/Chapter%204/#141-structural-hazard","title":"1.4.1 Structural hazard","text":"<p>\u786c\u4ef6\u4e0d\u652f\u6301\u591a\u6761\u6307\u4ee4\u5728\u540c\u4e00\u65f6\u95f4\u5468\u671f\u6267\u884c</p> <p>\u89e3\u51b3\u65b9\u6cd5:\u6307\u4ee4\u548c\u6570\u636e\u5206\u5f00\u5b58\u50a8</p>"},{"location":"note/courses/computer_organization/Chapter%204/#142-data-hazard","title":"1.4.2 Data hazard","text":"<p>\u7531\u4e8e\u4e00\u4e2a\u6b65\u9aa4\u5fc5\u987b\u7b49\u5f85\u53e6\u4e00\u6b65\u9aa4\u5b8c\u6210\u800c\u5bfc\u81f4\u7684\u6d41\u6c34\u7ebf\u505c\u987f  \u5373<code>rd=rs</code></p> <p>\u89e3\u51b3\u65b9\u6848\uff1aforwarding/bypassing,\u4e00\u65e6ALU\u8ba1\u7b97\u51fa\u52a0\u6cd5\u7684\u548c\uff0c\u5c31\u53ef\u5c06\u5176\u4f5c\u4e3a\u51cf\u6cd5\u7684\u8f93\u5165\u3002\u5411\u5185\u90e8\u8d44\u6e90\u6dfb\u52a0\u989d\u5916\u7684\u786c\u4ef6\u4ee5\u5c3d\u5feb\u627e\u5230\u7f3a\u5c11\u7684\u8fd0\u7b97\u9879</p> <p>[!note] \u975eload-use data hazard \u4e0d\u518d\u7b49\u5f85\u8ba1\u7b97\u7684\u7ed3\u679c\u5199\u56de\u5bc4\u5b58\u5668\uff0c\u76f4\u63a5\u653e\u5728\u5185\u90e8\u7f13\u5b58\u5668\u91cc\u9762\uff0c\u76f4\u63a5\u4f20\u9012\u5230\u4e0b\u4e00\u6761\u6307\u4ee4\u6267\u884c\u7684\u8f93\u5165 </p> <p>[!nore] load-use data hazard \u5373\u4f7f\u4f7f\u7528\u4e86forwarding, \u5728mem\u9636\u6bb5\u4e4b\u540e\u624d\u80fd\u62ff\u5230\u7ed3\u679c\uff0c\u4ecd\u7136\u9700\u8981\u6d6a\u8d39\u4e00\u4e2a\u65f6\u949f\u5468\u671f\uff0c\u63d2\u5165\u4e00\u4e2abubble </p> <p>RISC-V\u4e2d\u6bcf\u4e00\u6761\u6307\u4ee4\u53ea\u6709\u4e00\u4e2a\u7ed3\u679c\uff0c\u65b9\u4fbf\u4e86\u8fdb\u884c\u8fd9\u6837\u7684\u5404\u79cd\u4f18\u5316</p> <p>\u5982\u4f55\u4f18\u5316load-store\u578b\u6570\u636e\u5192\u9669\uff1a \u6539\u53d8\u6307\u4ee4\u7684\u987a\u5e8f\uff0c\u5728\u539f\u672c\u5e94\u8be5\u63d2\u5165bubble\u7684\u65f6\u5019\u63d2\u5165\u4e00\u6761\u4e0e\u5176\u4ed6\u6307\u4ee4\u4e0d\u51b2\u7a81\u7684\u6307\u4ee4</p> <p>[!warning] forwarding \u65f6\u95f4\u4e0d\u80fd\u5012\u6d41\uff01</p>"},{"location":"note/courses/computer_organization/Chapter%204/#1421-data-hazard","title":"1.4.2.1 \u5982\u4f55\u68c0\u6d4bdata hazard","text":"<p>[!info] Dependencies &amp; Forwarding </p> <p>\u5224\u65ad\uff1a  \u4e0a\u4e00\u4e2a\u6307\u4ee4\u7684rd\u548c\u4e0b\u4e00\u4e2a\u6307\u4ee4\u7684rs\u7684\u7f16\u53f7\u662f\u4e00\u6837\u7684</p> <p>\u7b2c\u4e00\u79cd\uff0cID\u4ece\u5185\u5b58\u4e2d\u62ff\u6570\u636e\u7684\u65f6\u5019\u8981\u7528 \u7b2c\u4e8c\u79cd\uff0cID\u4ece\u5bc4\u5b58\u5668\u5806\u4e2d\u62ff\u6570\u636e\u7684\u65f6\u5019\u7528 \u5728EX/MEM.RegWrite,MEM/WD.RegWrite\u4e3a1\u4e14\u76ee\u6807\u5bc4\u5b58\u5668\u4e0d\u4e3a0\u7684\u65f6\u5019\u624d\u8fdb\u884cforwarding</p> <p>[!note] Forwarding   </p> <p>ALU \u6bcf\u6b21\u8ba1\u7b97\u7684\u65f6\u5019\u8f93\u5165\u6709\u4e09\u4e2a\uff0c\u4e00\u4e2a\u662f\u5bc4\u5b58\u5668\u4e2d\u8bfb\u51fa\u7684\u503c\u6216\u8005\u7acb\u5373\u6570\uff0c\u4e0a\u4e00\u4e2a\u6307\u4ee4\u4e2dEX\u9636\u6bb5\u7684\u8ba1\u7b97\u7ed3\u679c\uff0c\u4e0a\u4e00\u4e2a\u6307\u4ee4\u4e2dMEM\u4e2d\u53d6\u51fa\u7684\u6570\u636e/\u66f4\u65e9\u7684ALU\u8ba1\u7b97\u7ed3\u679c</p> <p>[!note] Double Data Hazard Consider the sequence: <pre><code>add x1,x1,x2\n add x1,x1,x3\nadd x1,x1,x4\n</code></pre> \u5728\u591a\u4e2a\u5192\u9669\u540c\u65f6\u53d1\u751f\u7684\u65f6\u5019\u8003\u8651\u6700\u65b0\u7684\uff0cEX\u5192\u9669\u4f18\u5148\u7ea7\u66f4\u9ad8  </p> <p>[!Note] Load-Use Hazard Detection \u5728ID\u9636\u6bb5\u8fdb\u884c\u68c0\u6d4b Load Use Hazard when:</p> <p>ID/EX.MemRead and</p> <p>(ID/EX.RegisterRd = IF/ID.RegisterRs1)or</p> <p>(ID/EX.RegisterRd = IF/ID.RegisterRs2)</p> <p>\u5982\u679c\u68c0\u6d4b\u5230\u5c31\u63d2\u5165\u4e00\u4e2abubble</p> <p>\u5982\u4f55\u8fdb\u884cstall\uff1f ID/EX\u5bc4\u5b58\u5668\u5806\u4e2d\u7684\u6240\u6709\u4fe1\u53f7\u90fd\u7f6e\u4e3a0 \u963b\u6b62PC\u548cIF/ID\u5bc4\u5b58\u5668\u7684\u66f4\u65b0  Datapath with Hazard Detection: </p>"},{"location":"note/courses/computer_organization/Chapter%204/#143-control-hazard","title":"1.4.3 Control hazard","text":"<p>\u9700\u8981\u6839\u636e\u4e00\u6761\u6307\u4ee4\u7684\u7ed3\u679c\u505a\u51fa\u51b3\u5b9a\uff0c\u800c\u5176\u4ed6\u6307\u4ee4\u6b63\u5728\u6267\u884c</p> <p>[!note] \u89e3\u51b3\u65b9\u6848\uff1a \u5c06\u5206\u652f\u5224\u65ad\u63d0\u524d\u5230ID\u9636\u6bb5\uff0c\u8fd9\u6837\u53ea\u8981\u6d6a\u8d39\u4e00\u4e2a\u65f6\u949f\u5468\u671f </p> <p>Branch Prediction - \u8f83\u957f\u7684\u6d41\u6c34\u7ebf\u65e0\u6cd5\u63d0\u524d\u8fdb\u884c\u5206\u652f\u7684\u6bd4\u8f83\uff0c - \u8fdb\u884c\u5206\u652f\u9884\u6d4b\uff0c\u5f53\u9884\u6d4b\u9519\u8bef\u65f6\u963b\u585e\u53d1\u751f\uff0c - In RISC-V pipeline     - Can predict branches not taken     - Fetch instruction after branch, with no delay \u66f4\u73b0\u5b9e\u7684\u5206\u652f\u9884\u6d4b\uff1a - \u9759\u6001     - \u603b\u662f\u9884\u6d4b\u8df3\u8f6c\u6216\u8005\u4e0d\u8df3\u8f6c - \u52a8\u6001     - \u501f\u52a9\u786c\u4ef6\u652f\u6301\uff0c\u8bb0\u5f55\u8df3\u8f6c\u7684\u5386\u53f2 - \u9884\u6d4b\u9519\u8bef\uff0c\u72b6\u6001\u5355\u5143\u5168\u90e8\u66f4\u65b0(flush)\uff0c\u4ece\u6b63\u786e\u7684\u6307\u4ee4\u5730\u5740\u91cd\u65b0\u5f00\u59cb\u6d41\u6c34\u7ebf</p>"},{"location":"note/courses/computer_organization/Chapter%204/#2-pipeline-summary","title":"2 Pipeline Summary","text":"<ul> <li>\u6d41\u6c34\u7ebf\u901a\u8fc7\u589e\u52a0instruction throughout \u6765\u63d0\u5347\u6027\u80fd,\u5355\u4f4d\u65f6\u95f4\u5185\u7684\u541e\u5410\u7387\u5f97\u5230\u4e86\u63d0\u5347</li> <li>\u6307\u4ee4\u96c6\u7684\u8bbe\u8ba1\u4f1a\u5f71\u54cd\u6d41\u6c34\u7ebf\u7684\u8868\u73b0</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%204/#3","title":"3 \u6d41\u6c34\u7ebf\u6570\u636e\u901a\u8def\u53ca\u5176\u63a7\u5236","text":"<p>WB\u9636\u6bb5\u548cPC\u66f4\u65b0\u9636\u6bb5\u51fa\u73b0\u4ece\u53f3\u5230\u5de6\u7684\u901a\u8def\uff0c\u5bb9\u6613\u4ea7\u751fhazard</p> <p>\u5728\u6bcf\u4e24\u4e2a\u9636\u6bb5\u4e4b\u95f4\u63d2\u5165\u4e00\u4e2a\u5bc4\u5b58\u5668\u5806\u7528\u6765\u4fdd\u5b58\u6570\u636e</p>"},{"location":"note/courses/computer_organization/Chapter%204/#4-branch-hazards","title":"4 Branch Hazards","text":"<p>\u8df3\u8f6c\u4fe1\u53f7\u548cALU\u8f93\u51fa\u7684zero\u5728MEM\u7ea7\u8fdb\u884c\u4e0e\u64cd\u4f5c\uff0c\u51b3\u5b9a\u662f\u5426\u8df3\u8f6c</p> <p>Reducing Branch Delay - \u5728ID\u9636\u6bb5\u51b3\u5b9a\u6bd4\u8f83\u7684\u7ed3\u679c\uff08\u786c\u4ef6\u4ee3\u4ef7\uff1aALU\u8ba1\u7b97\u76ee\u6807\u5730\u5740\uff0c\u5bc4\u5b58\u5668\uff09</p> <p>[!example] Branch Taken  \u9519\u4e86\u5c31\u52a0\u4e00\u4e2abubble</p>"},{"location":"note/courses/computer_organization/Chapter%204/#41-dynamic-branch-prediction","title":"4.1 Dynamic Branch Prediction","text":"<p>\u5728\u4e00\u4e2a\u975e\u5e38\u6df1\u7684\u6d41\u6c34\u7ebf\u4e2d\uff0cbranch penalty \u975e\u5e38\u5173\u952e - \u6839\u636e\u5386\u53f2\u8df3\u8f6c\u7ed3\u679c\u8fdb\u884c\u8df3\u8f6c - \u7528\u8df3\u8f6c\u6307\u4ee4\u7684\u5730\u5740\u4f5c\u7d22\u5f15\uff0c\u8bb0\u5f55\u662f\u5426\u8df3\u8f6c\u4e86 - \u4e3a\u4e86\u6267\u884cbranch     - \u67e5\u8868\uff0c\u9884\u6d4b\u76f8\u540c\u7684\u7ed3\u679c     - \u53d6\u6307     - \u5982\u679c\u9884\u6d4b\u9519\u4e86\uff0cfulsh\u5e76\u7ffb\u8f6c\u9884\u6d4b</p>"},{"location":"note/courses/computer_organization/Chapter%204/#42-1-bit-predictor","title":"4.2 1-bit predictor","text":"<p>for \u5faa\u73af\u91cc\u9762\u9884\u6d4b\u6700\u591a\u9519\u4e24\u6b21\uff0c\u5f00\u59cb\u548c\u7ed3\u675f\u7684\u65f6\u5019\u5404\u9519\u4e00\u6b21</p>"},{"location":"note/courses/computer_organization/Chapter%204/#43-2-bit-predictor","title":"4.3 2-bit predictor","text":"<p>\u53ea\u6709\u8fde\u7eed\u9884\u6d4b\u9519\u4e24\u6b21\u624d\u53bb\u6539\u9884\u6d4b\u7684\u65b9\u9488  \u5728\u8fd9\u79cd\u60c5\u51b5\u4e0b\uff0c\u9884\u6d4b\u9519\u4e86\u4f9d\u7136\u8981\u5ef6\u8fdf\u4e00\u4e2a\u65f6\u949f\u5468\u671f</p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a \u52a0\u4e00\u4e2a\u7f13\u5b58\u6765\u5b58\u50a8\u76ee\u6807\u5730\u5740</p>"},{"location":"note/courses/computer_organization/Chapter%204/#5-exceptions-and-interrupts","title":"5 Exceptions and Interrupts\u5f02\u5e38\u548c\u4e2d\u65ad","text":"<ul> <li>\"Unexpected\" \u4e8b\u4ef6\u6539\u53d8\u4e86\u6211\u4eec\u7684\u63a7\u5236\u6d41</li> <li>\"Exception\", Arises within CPU\uff0c\u4e0d\u533a\u5206\u4ec0\u4e48\u5f15\u8d77\u7684</li> <li>\"Interrupt\", \u6765\u81ea\u5916\u90e8I/O\u63a7\u5236</li> <li>\u4e0d\u53bb\u727a\u7272\u6027\u80fd\u6765\u5904\u7406\u662f\u56f0\u96be\u7684</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%204/#51","title":"5.1 \u5904\u7406\u4e2d\u65ad","text":"<ul> <li>\u4fdd\u5b58\u539f\u6765\u7684\u6267\u884c\u7684\u5730\u5740\uff1aSupervisor Exception Program Counter</li> <li>SCAUSE: \u7528\u6765\u5b58\u50a8\u95ee\u9898\u53d1\u751f\u7684\u539f\u56e0</li> <li>Jump to handler</li> </ul> <p>[!example] \u4e00\u79cd\u53ef\u9009\u62e9\u7684\u65b9\u5f0f \u5411\u91cf\u5f0f\u4e2d\u65ad\uff0c\u7531\u539f\u56e0\u51b3\u5b9a</p> <p>\u57fa\u5740\u5bc4\u5b58\u5668\u52a0\u4e0avector address</p> <p>\u5904\u7406\u4e2d\u65ad\u6216\u8005\u8df3\u5230handler</p> <p>Handler\u7684\u64cd\u4f5c \u8bfb\u51facause\u5e76\u8df3\u5230\u76f8\u5173\u7684handler\uff0c\u786e\u5b9a\u4ec0\u4e48\u6837\u7684action\uff0c </p>"},{"location":"note/courses/computer_organization/Chapter%204/#511","title":"5.1.1 \u6d41\u6c34\u7ebf\u4e2d\u7684\u5f02\u5e38","text":"<ul> <li>\u53e6\u4e00\u79cd\u5f62\u5f0f\u7684control hazard</li> <li> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%204/#512-exception","title":"5.1.2 Exception\u7684\u6027\u8d28","text":"<ul> <li>Restartable<ul> <li>\u6d41\u6c34\u7ebf\u53ef\u4ee5flush</li> <li>handler \u6267\u884c\u5e76\u8fd4\u56de\u6307\u4ee4</li> </ul> </li> <li>PC\u5b58\u5230SEPC\u5bc4\u5b58\u5668\u4e2d</li> </ul> <p>[!example] Exception   </p>"},{"location":"note/courses/computer_organization/Chapter%204/#513-multiple-exceptions","title":"5.1.3 Multiple Exceptions","text":"<ul> <li>\u6d41\u6c34\u7ebf\u4e2d\u540c\u65f6\u6709\u591a\u4e2a\u5f02\u5e38</li> <li>Simple approach:\u4ece\u6700\u65e9\u51fa\u73b0\u5f02\u5e38\u7684\u6307\u4ee4\u5f00\u59cb\u5904\u7406\uff0c\u540e\u9762\u7684\u5168\u90e8flush</li> </ul> <p>[!example] Imprecise Exceptions - \u505c\u4e0b\u6d41\u6c34\u7ebf\u5e76\u4fdd\u5b58\u72b6\u6001 - handler\u5de5\u4f5c - \u7b80\u5316\u786c\u4ef6\u4f46\u662f\u66f4\u591ahandler \u8f6f\u4ef6 - complex multiple-issue out-of -order pipelines \u4e2d\u4e0d\u53ef\u884c</p>"},{"location":"note/courses/computer_organization/Chapter%204/#6-instruction-level-parallelism","title":"6 Instruction Level Parallelism","text":"<p>\u6307\u4ee4\u96c6\u5e76\u884c \u5982\u4f55\u63d0\u5347\u5e76\u884c\uff1f\uff1a - \u66f4\u6df1\u7684\u6d41\u6c34\u7ebf - Multiple issue \u591a\u53d1     - \u591a\u6761pipeline     - \u6bcf\u4e2aclock cycle \u6267\u884c\u591a\u6761\u6307\u4ee4   \u9884\u6d4b\u4e4b\u540e\u63d0\u65e9\u6267\u884c \u7f16\u8bd1\u5668\u6216\u786c\u4ef6\u6295\u673a\uff1a \u7f16\u8bd1\u5668\u53ef\u4ee5\u91cd\u65b0\u6392\u5e8f\u6307\u4ee4 \u786c\u4ef6\u53ef\u4ee5\u63d0\u524d\u6267\u884c\u6307\u4ee4  Static Multiple Issue - \u7f16\u8bd1\u5668\u5c06\u6307\u4ee4\u6253\u5305\u5230\"issue packets\"\u4e2d\uff0c\u6839\u636e\u6d41\u6c34\u7ebf\u8d44\u6e90\u7684\u9700\u8981 - \u628a\u4e00\u4e2aissue packet \u770b\u4f5c\u4e00\u4e2a\u975e\u5e38\u957f\u7684\u6307\u4ee4 Scheduling Static Multiple Issue - reorder instructions issue packets - \u6253\u5305\u5230\u4e00\u4e2a\u5305\u5185\u7684instructions \u6ca1\u6709dependency - \u4e0d\u540c\u7684\u5305\u4e4b\u95f4\u53ef\u80fd\u5b58\u5728\u4ee5\u6765 - pad with nop if necessary\uff0c\u4e0d\u80fd\u6210\u5bf9\u53d1\u5c04\u7684\u65f6\u5019\u7a7a\u7740</p> <p>[!example] RISC-V with Static Dual Issue  \u4e0d\u5b58\u5728\u4efb\u4f55\u8d44\u6e90\u4e0a\u7684\u7ade\u4e89 </p>"},{"location":"note/courses/computer_organization/Chapter%204/#611-hazard-in-the-dual-issue-risc-v","title":"6.1.1 Hazard in the Dual-Issue RISC-V","text":"<p>[!example] RISC-V \u6210\u5bf9\u53d1\u5c04  IPC instruction per cycle</p>"},{"location":"note/courses/computer_organization/Chapter%204/#612","title":"6.1.2 \u5faa\u73af\u5c55\u5f00","text":"<p>[!example]   </p> <ul> <li>\u590d\u5236\u5faa\u73af\u4f53\u6765\u8fdb\u884c\u66f4\u591a\u7684\u5e76\u884c</li> <li>\u5728\u6bcf\u6b21\u590d\u5236\u8fc7\u7a0b\u4e2d\u4f7f\u7528\u4e0d\u540c\u7684\u5bc4\u5b58\u5668</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%204/#613","title":"6.1.3 \u52a8\u6001\u591a\u53d1\u5c04","text":"<ul> <li>CPU\u6765\u51b3\u5b9a\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u53d1\u5c04\u51e0\u6761</li> <li>\u907f\u514dcompiler\u6765\u8fdb\u884cschedule</li> <li>\u8981\u4fdd\u8bc1\u7ed3\u679c\u5f0f\u8ba1\u7b97\u6b63\u786e\u7684</li> </ul> <p>[!example] Dynamically Scheduled CPU  \u7531\u786c\u4ef6\u5bf9\u6307\u4ee4\u8fdb\u884c\u91cd\u6392</p> <p>[!note] Register Renaming - \u5f53\u4e00\u6761\u6307\u4ee4\u53d1\u5c04\u65f6\uff0c\u8be5\u6307\u4ee4\u4f1a\u88ab\u590d\u5236\u5230\u67d0\u4e2a\u529f\u80fd\u5355\u5143(functional unit)\u00a0\u7684\u4fdd\u7559\u533a(reservation station)\uff08\u4e00\u5757\u4fdd\u7559\u64cd\u4f5c\u6570\u6216\u64cd\u4f5c\u7684\u7f13\u5b58\uff09\u4e2d\u3002\u5728\u5bc4\u5b58\u5668\u5806\u6216\u91cd\u6392\u7f13\u5b58(reorder buffer)\uff08\u4e00\u5757\u4fdd\u7559\u52a8\u6001\u8c03\u5ea6\u5904\u7406\u5668\u7ed3\u679c\u7684\u7f13\u5b58\uff0c\u76f4\u5230\u80fd\u591f\u5b89\u5168\u5730\u5c06\u7ed3\u679c\u5b58\u50a8\u5230\u5bc4\u5b58\u5668\u6216\u5185\u5b58\u4e3a\u6b62\uff09\u5185\u7684\u4efb\u4f55\u7a7a\u95f2\u64cd\u4f5c\u6570\u4e5f\u90fd\u4f1a\u88ab\u590d\u5236\u5230\u4fdd\u7559\u533a\u4e2d\u3002\u6307\u4ee4\u5c06\u4f1a\u4e00\u76f4\u5b58\u5728\u4fdd\u7559\u533a\u4e2d\uff0c\u76f4\u5230\u6240\u6709\u7684\u64cd\u4f5c\u6570\u548c\u529f\u80fd\u5355\u5143\u5904\u4e8e\u7a7a\u95f2\u72b6\u6001\u3002\u5bf9\u4e8e\u6b63\u5728\u53d1\u5c04\u7684\u6307\u4ee4\uff0c\u64cd\u4f5c\u6570\u7684\u5bc4\u5b58\u5668\u62f7\u8d1d\u4e0d\u518d\u9700\u8981\uff0c\u5176\u503c\u53ef\u88ab\u8986\u5199\u3002 - \u5982\u679c\u64cd\u4f5c\u6570\u4e0d\u5728\u5bc4\u5b58\u5668\u5806\u6216\u91cd\u6392\u7f13\u5b58\u4e2d\uff0c\u90a3\u4e00\u5b9a\u662f\u5728\u7b49\u5f85\u529f\u80fd\u5355\u5143\u751f\u6210\u8fd9\u4e2a\u64cd\u4f5c\u6570\uff0c\u8be5\u529f\u80fd\u5355\u5143\u7684\u540d\u5b57\u5c06\u4f1a\u88ab\u8ffd\u8e2a\u3002\u5f53\u8be5\u5355\u5143\u751f\u6210\u7ed3\u679c\u540e\uff0c\u8be5\u7ed3\u679c\u7684\u62f7\u8d1d\u4f1a\u7ed5\u8fc7\u5bc4\u5b58\u5668\uff0c\u88ab\u76f4\u63a5\u653e\u5165\u4fdd\u7559\u533a\u4e2d\u3002</p> <p>Why Do Dynamic Scheduling: - \u4e0d\u662f\u6240\u6709\u963b\u585e\u90fd\u53ef\u4ee5\u88ab\u9884\u6d4b - \u4e0d\u53ef\u80fd\u4e00\u76f4\u56f4\u7ed5branch\u8fdb\u884c\u9884\u6d4b - \u7531\u4e8e\u6d41\u6c34\u7ebf\u7684\u65f6\u5ef6\u548c\u53d1\u5c04\u5bbd\u5ea6\u6839\u636e\u5177\u4f53\u5b9e\u73b0\u7684\u4e0d\u540c\u800c\u6709\u6240\u53d8\u5316\uff0c\u56e0\u6b64\u7f16\u8bd1\u4ee3\u7801\u5e8f\u5217\u7684\u6700\u4f73\u65b9\u5f0f\u4e5f\u4f1a\u968f\u4e4b\u6539\u53d8</p> <p>[!question] \u591a\u53d1\u5c04\u603b\u662f\u6709\u6548\u561b \u4e0d\u4e00\u5b9a\uff0c\u53d1\u5c04\u901f\u7387\u4e0d\u662f\u8d8a\u5feb\u8d8a\u597d\uff0c\u56e0\u4e3a\u5f88\u5c11\u6709\u5e94\u7528\u80fd\u591f\u4fdd\u6301\u4e00\u4e2a\u65f6\u949f\u5468\u671f\u5185\u53d1\u5c04\u591a\u4e8e\u4e24\u4e2a\u6307\u4ee4\uff0c\u539f\u56e0\u6709\uff1a - \u5728\u6d41\u6c34\u7ebf\u5185\uff0c\u6700\u4e3b\u8981\u7684\u6027\u80fd\u74f6\u9888\u6765\u81ea\u65e0\u6cd5\u6d88\u9664\u7684\u4f9d\u8d56\u5173\u7cfb\uff0c\u56e0\u800c\u964d\u4f4e\u4e86\u6307\u4ee4\u95f4\u7684\u5e76\u884c\u548c\u53d1\u5c04\u901f\u7387  - \u6bd4\u5982\u4f7f\u7528\u6307\u9488\u521b\u9020\u522b\u540d\uff0c\u8fd9\u4f1a\u5e26\u6765\u66f4\u591a\u7684\u4f9d\u8d56\u5173\u7cfb\uff1b\u4f46\u5982\u679c\u7528\u6570\u7ec4\u7684\u8bdd\u5c31\u6ca1\u6709\u8fd9\u79cd\u4f9d\u8d56\u5173\u7cfb   - \u53c8\u6bd4\u5982\u6211\u4eec\u5f88\u96be\u5728\u7f16\u8bd1\u65f6\u6216\u8fd0\u884c\u65f6\u7cbe\u786e\u9884\u6d4b\u5206\u652f\u7ed3\u679c\uff0c\u8fd9\u4e5f\u5e26\u6765\u4e86\u9650\u5236 - \u5185\u5b58\u5c42\u7ea7\u7684\u7f3a\u5931\u4e5f\u4f1a\u9650\u5236\u6d41\u6c34\u7ebf\u8fd0\u884c\u7684\u80fd\u529b\uff0c\u6bd4\u5982\u5185\u5b58\u7684\u5b9e\u9a8c\u548c\u6709\u9650\u5e26\u5bbd\u7b49</p>"},{"location":"note/courses/computer_organization/Chapter%204/#62-power-efficiency","title":"6.2 Power Efficiency","text":"<p>\u590d\u6742\u7684\u52a8\u6001\u5206\u652f\u9884\u6d4brequire power</p> <p>Multiple simpler cores may be better</p>"},{"location":"note/courses/computer_organization/Chapter%204/#63-fallacies-and-pitfalls","title":"6.3 Fallacies and Pitfalls","text":"<p>[!warning] \u8c2c\u8bef - \u6d41\u6c34\u7ebf\u5f88\u7b80\u5355\uff08\u7b80\u5355\u00a0nm\uff09 - \u5927\u81f4\u601d\u8def\u5f88\u7b80\u5355\uff08\u6d17\u8863\u670d\u7684\u90a3\u4e2a\u7c7b\u6bd4\uff09\uff0c\u4f46\u7ec6\u8282\u4e0a\u7684\u7406\u89e3\u5c31\u56f0\u96be\u4e86\uff08\u6bd4\u5982\u5904\u7406\u5404\u7c7b\u5192\u9669\u95ee\u9898\u7b49\uff09 - \u6d41\u6c34\u7ebf\u601d\u60f3\u7684\u5b9e\u73b0\u4e0e\u5de5\u827a\u65e0\u5173 - \u5b9e\u9645\u4e0a\uff0c\u66f4\u591a\u7684\u6676\u4f53\u7ba1\u5c06\u4f1a\u5e26\u6765\u66f4\u9ad8\u7ea7\u7684\u5de5\u827a - \u6d41\u6c34\u7ebf\u76f8\u5173\u7684\u00a0ISA\u00a0\u8bbe\u8ba1\u9700\u8981\u8003\u8651\u5de5\u827a\u7684\u53d1\u5c55\u8d8b\u52bf</p> <p>[!warning] pitfalls \u4e0d\u826f\u7684\u00a0ISA\u00a0\u8bbe\u8ba1\u5c06\u4f1a\u5bf9\u6d41\u6c34\u7ebf\u8fd0\u884c\u4ea7\u751f\u4e0d\u5229\u5f71\u54cd</p> <p>\u590d\u6742\u7684\u6307\u4ee4\u96c6\u3001\u590d\u6742\u7684\u5bfb\u5740\u6a21\u5f0f\u3001\u5ef6\u8fdf\u5206\u652f\u90fd\u4f1a\u5f71\u54cd\u6d41\u6c34\u7ebf\u7684\u8fd0\u884c\u6548\u7387</p>"},{"location":"note/courses/computer_organization/Chapter%205/","title":"Large and Fast","text":""},{"location":"note/courses/computer_organization/Chapter%205/#1-key-merits-of-a-memory","title":"1 key merits of a memory","text":"<ul> <li>Speed</li> <li>Cost per bit (cost vs size)</li> <li>volatility \u6613\u5931\u6027</li> <li>Endurance cycles <p>[!example] example </p> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%205/#memory-technologies","title":"Memory Technologies","text":"<ul> <li>SRAM: \u9759\u6001\u968f\u673a\u8bbf\u95ee\u5b58\u50a8\u5668<ul> <li>\u5bf9\u4efb\u610f\u4f4d\u7f6e\u7684\u6570\u636e\u8bbf\u95ee\u4e8b\u4ef6\u662f\u56fa\u5b9a\u7684</li> <li>\u4e0d\u9700\u8981\u5b9a\u671f\u5237\u65b0</li> <li>value is stored  on a pair of inverting gates</li> <li>\u901f\u5ea6\u66f4\u5feb</li> </ul> </li> <li>DRAM: \u52a8\u6001\u968f\u673a\u8bbf\u95ee\u5b58\u50a8\u5668<ul> <li>\u5bc6\u5ea6\u66f4\u9ad8\uff0c\u4ef7\u683c\u66f4\u4f4e\u5ec9\uff0c\u9700\u8981\u4e0d\u505c\u5730\u5237\u65b0 <p>[!example] </p> </li> </ul> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%205/#1-advanced-dram-organization","title":"1 Advanced DRAM Organization","text":"<p>\u5730\u5740\u5206\u65f6\u8d4b\u7528 - \u6bcf\u6b21\u8bbf\u95ee\u4e00\u6574\u884c - Burst mode: supply  successive words from  a row with reduced latency - DDR DRAM \u5728\u4e0a\u5347\u4e0b\u964d\u6cbf\u90fd\u53ef\u4ee5\u4f20\u8f93 - Quad data rate DRAM     - \u5206\u79bbDDR \u7684inputs and outputs</p>"},{"location":"note/courses/computer_organization/Chapter%205/#2-flash-storage","title":"2 Flash Storage","text":"<p>\u975e\u6613\u5931\u6027\u5b58\u50a8</p>"},{"location":"note/courses/computer_organization/Chapter%205/#21-flash-types","title":"2.1 Flash Types","text":"<ul> <li>NOR flash: bit cell like a NOR gate</li> <li>NAND flash: bit cell like a NAND gate</li> <li>Flash bits \u78e8\u635fafter 1000's of access</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%205/#3-disk-storage","title":"3 Disk  Storage","text":""},{"location":"note/courses/computer_organization/Chapter%205/#31-disk-sectors-and-access","title":"3.1 Disk Sectors and Access","text":"<ul> <li>\u6bcf\u4e2a\u6247\u533a\u5b58\u50a8\u4e86<ul> <li>\u6247\u533aID</li> <li>Data</li> <li>ECC \u9519\u8bef\u7ea0\u6b63\u4ee3\u7801</li> </ul> </li> <li>\u8bbf\u95ee\u6247\u533a<ul> <li>\u52a8\u63a2\u5934</li> <li>\u8f6c\u52a8\u78c1\u76d8</li> <li>Data transfer</li> <li>Controller overhead</li> </ul> </li> </ul> <p>[!example] Disk Access Example </p>"},{"location":"note/courses/computer_organization/Chapter%205/#32-problems-in-memory-designing","title":"3.2 Problems in memory designing","text":""},{"location":"note/courses/computer_organization/Chapter%205/#4-memory-hieracrhy-introduction","title":"4 Memory Hieracrhy Introduction\u5c42\u6b21\u5b58\u50a8","text":"<p>\u6bcf\u6b21\u8bbf\u95ee\u7684\u90fd\u662f\u975e\u5e38\u5c0f\u7684\u4e00\u90e8\u5206 - \u65f6\u95f4\u5c40\u90e8\u6027     - \u6700\u8fd1\u88ab\u8bbf\u95ee\u7684\u5bf9\u8c61\u88ab\u518d\u6b21\u8bbf\u95ee\u7684\u53ef\u80fd\u6027\u8f83\u9ad8 - \u7a7a\u95f4\u5c40\u90e8\u6027     - \u6b63\u5728\u88ab\u8bbf\u95ee\u7684\u5b58\u50a8\u5668\u5355\u5143\u9644\u8fd1\u7684\u5355\u5143\u53ef\u80fd\u7ecf\u5e38\u88ab\u8bbf\u95ee</p>"},{"location":"note/courses/computer_organization/Chapter%205/#41","title":"4.1 \u5229\u7528\u5c40\u90e8\u6027","text":"<ul> <li>Memory hierarchy</li> <li>\u6240\u6709\u4e1c\u897f\u90fd\u653e\u78c1\u76d8</li> <li>\u628a\u7ecf\u5e38\u7528\u7684items  copy\u5230\u66f4\u5c0f\u7684DRAM memory \u91cc\u9762</li> <li>\u518d\u628a\u66f4\u8fd1\u7684items copy \u5230\u66f4\u5c0f\u7684SRAM memory \u91cc\u9762</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%205/#42-some-important-items","title":"4.2 Some important items","text":"<ul> <li>Block: unit of copying, \u53ef\u80fd\u662f\u5f88\u591a\u4e2awords</li> <li>hit: CPU\u8bbf\u95ee\u6700\u9876\u5c42\u800c\u4e14\u6210\u529f\u8bfb\u53d6\u60f3\u8981\u7684\u6570\u636e</li> <li>miss: CPU \u8bbf\u95ee\u6700\u9876\u5c42\u4f46\u662f\u6ca1\u80fd\u6210\u529f\u8bfb\u53d6</li> <li>Hit time: \u8bbf\u95ee\u6700\u9876\u5c42\u9700\u8981\u7684\u65f6\u95f4</li> <li>miss penalty: \u5c06\u6700\u9876\u5c42\u4e2d\u7684block \u66ff\u6362\u4e3a\u5e95\u5c42\u4e2d\u5bf9\u5e94block\u7684\u65f6\u95f4\uff0c\u52a0\u4e0a\u8fd0\u8f93block\u5230processor\u7684\u65f6\u95f4\u3002 \u642c\u8fd0\u65f6\u8981\u628a\u6574\u4e2ablock\u642c\u8d70 <p>[!note] Memory hierachy </p> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%205/#5-the-basics-of-cache-sram-and-dram","title":"5 The basics of  Cache:  SRAM and DRAM","text":"<ul> <li>cache \u7684\u51fa\u73b0\u89e3\u51b3\u4e86\u4e3b\u5b58\u901f\u5ea6\u4e0d\u591f\u5feb\u7684\u95ee\u9898\uff0c\u4e3b\u5b58\u901f\u5ea6\u8ddf\u4e0d\u4e0aCPU\u7684\u901f\u5ea6</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%205/#51","title":"5.1 \u7b80\u5355\u7684\u5b9e\u73b0","text":"<ul> <li>\u6211\u4eec\u600e\u4e48\u77e5\u9053\u8981\u627e\u7684data item\u5728cache\u91cc\u9762</li> <li>\u5982\u679c\u5728\uff0c\u600e\u4e48\u627e\u5230data item</li> </ul> <p>[!info] \u57fa\u672c\u6982\u5ff5 </p>"},{"location":"note/courses/computer_organization/Chapter%205/#511-cache","title":"5.1.1 Cache \u5de5\u4f5c\u539f\u7406","text":"<ul> <li>\u5c40\u90e8\u6027\u539f\u7406<ul> <li>\u65f6\u95f4\u5c40\u90e8\u6027\uff1a\u6700\u8fd1\u88ab\u8bbf\u95ee\u7684\u5b58\u50a8\u5668\u5355\u5143\uff08\u6307\u4ee4\u6216\u6570\u636e\uff09\u5f88\u5feb\u4f1a\u88ab\u8bbf\u95ee</li> <li>\u7a7a\u95f4\u5c40\u90e8\u6027\uff1a \u6b63\u5728\u88ab\u8bbf\u95ee\u7684\u5b58\u50a8\u5668\u5355\u5143\u9644\u8fd1\u7684\u5355\u5143\u5f88\u5feb\u4f1a\u88ab\u8bbf\u95ee</li> </ul> </li> <li>\u5bf9\u7a7a\u95f4\u5c40\u90e8\u6027\u7684\u5229\u7528\uff1a\u4ece\u4e3b\u5b58\u4e2d\u53d6\u56de\u5f85\u8bbf\u95ee\u6570\u636e\u65f6\uff0c\u4f1a\u540c\u65f6\u53d6\u56de\u4e0e\u5176\u76f8\u90bb\u7684\u4e3b\u5b58\u5355\u5143\u7684\u6570\u636e</li> <li>\u5bf9\u65f6\u95f4\u5c40\u90e8\u6027\u7684\u5229\u7528\uff1a\u4fdd\u5b58\u8fd1\u671f\u88ab\u9891\u7e41\u8bbf\u95ee\u7684\u4e3b\u5b58\u5355\u5143\u7684\u6570\u636e</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%205/#512-cache","title":"5.1.2 Cache \u5730\u5740\u6620\u5c04\u673a\u5236","text":"<p> \u5757\u504f\u79fb\u91cf\uff1a\u7531\u4e00\u4e2ablock\u91cc\u9762\u6709\u591a\u5c11\u4e2abyte\u51b3\u5b9a</p> <p>Cache \u7684\u7ed3\u6784\uff1a \u88ab\u5206\u4e3a\u82e5\u5e72\u884c\uff0c\u6bcf\u884c\u7684\u5927\u5c0f\u4e0e\u4e3b\u5b58\u5757\u76f8\u540c \u6bcf\u884c\u5305\u542b\u56db\u90e8\u5206\uff1a - \u6807\u7b7eTag\u662f\u4eceCPU\u8bbf\u95ee\u4e3b\u5b58\u7684\u5730\u5740\u4e2d\u5265\u79bb\u5f97\u5230 - Data\u662f\u4e0e\u4e3b\u5b58\u4ea4\u6362\u7684\u6570\u636e\u5757 - Valid \u8868\u793aCache\u4e2d\u7684\u6570\u636e\u662f\u5426\u6709\u6548 - Dirty\u8868\u793aCache\u4e2d\u7684\u6570\u636e\u662f\u5426\u4e3a\u6700\u65b0</p>"},{"location":"note/courses/computer_organization/Chapter%205/#5121","title":"5.1.2.1 \u76f4\u63a5\u6620\u5c04","text":"<p>\u6bcf\u4e2a\u5b58\u50a8\u5730\u5740\u90fd\u76f4\u63a5\u6620\u5c04\u5230cache\u4e2d\u7684\u786e\u5b9a\u4f4d\u7f6e</p> <p>[!note] \u6620\u5c04\u65b9\u6cd5 \uff08\u5757\u5730\u5740\uff09mod\uff08cache\u4e2d\u7684\u6570\u636e\u5757\u6570\u91cf\uff09</p> <p>\u6216\u8005 \u82e5cache\u6709\\(2^n\\)\u4e2a\u6570\u636e\u5757\uff0c\u90a3\u4e48\u7d22\u5f15\u4e3a\u4e3b\u5b58\u5757\u5730\u5740\u7684\u6700\u4f4en\u4f4d</p> <p>\u5982\u4f55\u5728cache\u4e2d\u5feb\u901f\u67e5\u627e\u6570\u636e\uff1f - \u7d22\u5f15+\u6807\u7b7e+valid+dirty\u4f4d\u5171\u540c\u9501\u5b9a\u76ee\u6807     - \u6839\u636e\u7ed9\u51fa\u7684\u4e3b\u5b58\u5757\u5927\u5c0f\u3001Cache\u5927\u5c0f\uff0c\u4ece\u4e3b\u5b58\u5730\u5740\u4e2d\u5265\u79bb\u51fa\u5b57\u8282\u504f\u79fb\u91cf\u5b57\u6bb5\u3001\u7d22\u5f15\u5b57\u6bb5\u4ee5\u53ca\u6807\u7b7e\u5b57\u6bb5     - \u9996\u5148\u6839\u636e\u7d22\u5f15\u5b57\u6bb5\u627e\u5230\u76ee\u6807cache\u884c     - \u76ee\u6807cache\u884c\u4e2d\u7684\u6807\u7b7e\u5b57\u6bb5\u4e0e\u5265\u79bb\u51fa\u7684\u6807\u7b7e\u5b57\u6bb5\u8fdb\u884c\u5339\u914d     - Valid\u4f4d\u3001dirty\u4f4d\u662f\u5426\u6709\u6548</p> <p>[!example] \u8ba1\u7b97\u65b9\u6cd5  \u56e0\u4e3a\u5185\u5b58\u4e2d\u662f\u5b57\u8282\u5bf9\u9f50\u7684\uff0c\u6240\u4ee5\u4ee5byte\u4e3a\u5355\u4f4d\u8fdb\u884c\u8ba1\u7b97</p> <p>Cache\u4e2d\u7684Data\u5927\u5c0f\u5c31\u662f\u4e3b\u5b58\u4e2d\u7684Block\u5927\u5c0f</p> <p>Tags and Valid Bits: Valid bit: 1=present, 0= Not Present</p>"},{"location":"note/courses/computer_organization/Chapter%205/#5122","title":"5.1.2.2 \u7ec4\u76f8\u8054","text":""},{"location":"note/courses/computer_organization/Chapter%205/#5123","title":"5.1.2.3 \u5168\u76f8\u8fde","text":""},{"location":"note/courses/computer_organization/Chapter%205/#513-cache-hit-and-misses","title":"5.1.3 \u5904\u7406Cache \u8bfb hit and misses","text":"<ul> <li>Read misses: \u6307\u4ee4\u7f13\u5b58miss\u548c\u6570\u636e\u7f13\u5b58miss</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%205/#5131-instruction-cache-miss","title":"5.1.3.1 Instruction cache miss","text":"<ul> <li>stall cpu\uff0c\u53d6\u51fa\u9700\u8981\u7684memory\u5230cache\u91cc\u9762</li> <li>\u628aoriginal PC value(\u73b0\u5728\u7684PC-4)\u5b58\u5230\u5185\u5b58</li> <li>\u6307\u793a\u5185\u5b58\u53bb\u8bfb\u5e76\u7b49\u5f85\u76f4\u5230\u8fd9\u4e2a\u8fc7\u7a0b\u7ed3\u675f</li> <li></li> </ul>"},{"location":"note/courses/computer_organization/Chapter%205/#5132-data-cache-miss","title":"5.1.3.2 Data cache miss","text":""},{"location":"note/courses/computer_organization/Chapter%205/#514-cache-hit-and-misses","title":"5.1.4 \u5904\u7406Cache \u5199 hit and misses","text":"<p>write through \uff0c\u5373\u5199cache\u53c8\u5199\u4e3b\u5b58 write back, \u53ea\u5199cache write hits - write-back\uff0c\u53ea\u5199\u5230cache\u91cc\u9762,\u4e4b\u540e\u518d\u628a\u6570\u636e\u4ececache\u5199\u56dememory - write-through\uff0c \u5bf9cache\u548cmemory\u540c\u65f6\u66f4\u65b0\u3002\u5728\u5199cache\u91cc\u9762\u653e\u5230write buffer\u91cc write miss: \u6574\u4e2ablock\u8bfb\u5165cache\uff0c\u7136\u540e\u518d\u5199 - \u5bf9\u4e8ewrite through     - allocate on miss: fetch the block     - write around: don't fetch the block - \u5bf9\u4e8e write back:     - \u603b\u662ffetch the block</p> <p>[!important] summary </p> <p>\u76f4\u63a5\u6620\u5c04\u673a\u5236\u7684\u7279\u70b9\uff1a - cache \u5229\u7528\u7387\u4f4e - \u5757\u51b2\u7a81\u7387\u9ad8</p> <p>[!info] \u5757\u5927\u5c0f\u7684\u6743\u8861 </p>"},{"location":"note/courses/computer_organization/Chapter%205/#52-deep-concept-in-cache","title":"5.2 Deep concept in Cache:","text":""},{"location":"note/courses/computer_organization/Chapter%205/#521-block-placement","title":"5.2.1 Block Placement","text":"<ul> <li>\u76f4\u63a5\u6620\u5c04\uff1ablock\u53ea\u80fd\u5230cache\u91cc\u9762\u7684\u4e00\u4e2a\u4f4d\u7f6e</li> <li>\u5168\u76f8\u8054\uff1ablock\u53ef\u4ee5\u5230cache\u4efb\u610f\u4f4d\u7f6e</li> <li>\u7ec4\u76f8\u8054\uff1ablock\u53ef\u4ee5\u5230cache\u4e2d\u7684\u5176\u4e2d\u4e00\u7ec4\u4f4d\u7f6e\uff0c\u7531\u6c42\u6a21\u8ba1\u7b97\u5728\u54ea\u4e2aset\u4e2d\uff0c\u5982\u679c\u4e00\u4e2a\u7ec4\u4e2d\u7531n\u4e2ablock\uff0c\u5c31\u53ebn-way set associative</li> </ul> <p>[!example] Figure 8-32 Block Placement </p>"},{"location":"note/courses/computer_organization/Chapter%205/#522-block-identification","title":"5.2.2 Block Identification","text":""},{"location":"note/courses/computer_organization/Chapter%205/#5221-the-format-of-the-physical-address","title":"5.2.2.1 The Format of the Physical Address","text":"<ul> <li>Index field selects:<ul> <li>set,\u7ec4\u76f8\u8054</li> <li>block\uff0c\u76f4\u63a5\u6620\u5c04</li> </ul> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%205/#523-block-replacement","title":"5.2.3 Block Replacement","text":"<ul> <li>Random replacement</li> <li>Least-recently used(LRU):\u6311\u9009\u51fa\u6700\u65e9\u8bbf\u95ee\u7684</li> <li>First in, First out(FIFO)\uff1a</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%205/#524-write-strategy","title":"5.2.4 Write Strategy","text":"<ul> <li>Write through</li> <li>Write back</li> <li>Write stall, \u5728write through\u7b56\u7565\u4e2d\u836f\u7b49\u5f85\u5199\u5165\u5185\u5b58</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%205/#53-cache-performance","title":"5.3 Cache Performance","text":"\\[\\begin{align}Average~Memory ~Assess ~Time=hit~time+~miss time\\\\ =hit time+miss~rate\\times memory ~time \\end{align}\\]"},{"location":"note/courses/computer_organization/Chapter%205/#531-measuring-cache-performance","title":"5.3.1 Measuring cache performance","text":"<p>[!example] Calculating cache performance  </p> <p>\u5bf9\u4e8e\u4e00\u4e2a\u6027\u80fd\u66f4\u9ad8\u7684\u5904\u7406\u5668\uff0cmemory stall \u9020\u6210\u7684\u6027\u80fd\u4ee3\u4ef7\u66f4\u5927</p>"},{"location":"note/courses/computer_organization/Chapter%205/#532-solution-1","title":"5.3.2 Solution 1","text":"<p>\u66f4\u7075\u6d3b\u7684\u5757\u66ff\u6362\u6765\u964d\u4f4emiss rate</p> <p>\u7ec4\u76f8\u8fde\u53ef\u4ee5\u964d\u4f4emiss rate - \u5c06cache \u5206\u6210\u5f88\u591a\u7ec4\uff0c\u6bcf\u4e2a\u7ec4\u91cc\u9762\u6709\u5f88\u591a\u4e2ablock </p>"},{"location":"note/courses/computer_organization/Chapter%205/#533-solution-2-choosing-which-block-to-replace","title":"5.3.3 Solution 2: Choosing which block to replace","text":"<p>\u6700\u5e38\u89c1\u7684\u7b56\u7565\u662fLRU</p>"},{"location":"note/courses/computer_organization/Chapter%205/#534-solution-3-choosing-different-block-size","title":"5.3.4 Solution 3: Choosing different block size","text":"<p>\u53d6\u5230\u7f13\u5b58\u4e2d\u65f6\u6d6a\u8d39\u65f6\u95f4\uff0clarger miss penalty</p> <p>[!example] Performance in different block size </p>"},{"location":"note/courses/computer_organization/Chapter%205/#535-solution4-designing-the-memory-system-to-reduce-miss-penalty","title":"5.3.5 Solution4: Designing the memory system to reduce miss penalty","text":""},{"location":"note/courses/computer_organization/Chapter%205/#536-solution5-decreasing-miss-penalty-with-multilevel-caches","title":"5.3.6 Solution5: Decreasing miss penalty with multilevel caches","text":"<p>\u591a\u7ea7cache</p>"},{"location":"note/courses/computer_organization/Chapter%205/#537-solution-6-software-optimization-blocking","title":"5.3.7 Solution 6 : Software optimization blocking","text":""},{"location":"note/courses/computer_organization/Chapter%205/#54-virtual-memory","title":"5.4 Virtual Memory","text":"<p>\u4e00\u79cd\u5c06\u4e3b\u5b58\u770b\u4f5c\u8f85\u52a9\u5b58\u50a8\u7684cache\u6280\u672f\uff0c\u6269\u5927\u5185\u5b58\u7684\u5bfb\u5740\u7a7a\u95f4</p> <ul> <li>\u4f7f\u5f97\u591a\u4e2a\u7a0b\u5e8f\u53ef\u4ee5\u5171\u4eab\u4e3b\u5b58\uff0c\u6bcf\u4e2a\u7a0b\u5e8f\u6709\u81ea\u5df1\u79c1\u6709\u7684\u4e00\u4e2a\u865a\u62df\u5730\u5740</li> <li>\u6d88\u9664\u7531\u4e8e\u4e3b\u5b58\u672c\u8eab\u7684\u5c40\u9650\u6027\u5bfc\u81f4\u7684\u4e0a\u9650</li> </ul> <p>\u57fa\u672c\u5355\u4f4d\uff1a page\uff08\u76f8\u5f53\u4e8ecache\u4e2d\u7684block) \u5931\u6548\uff1a page fault</p> <p>[!note]  \u4fdd\u62a4\u6bcf\u4e2a\u7a0b\u5e8f\u72ec\u7acb\u8fdb\u884c\u800c\u4e0d\u53d7\u5176\u4ed6\u7a0b\u5e8f\u5e72\u6270</p>"},{"location":"note/courses/computer_organization/Chapter%205/#541-pages","title":"5.4.1 pages","text":"<p>virtual page \u6bd4physical page \u8981\u591a</p> <ul> <li>page fault: \u6570\u636e\u4e0d\u5728\u4e3b\u5b58\u4e2d\uff0c\u8981\u628a\u5b83\u4ecedisk\u4e2d\u53d6\u51fa\u6765<ul> <li>miss penalty \u975e\u5e38\u5927\uff0c\u6240\u4ee5pages\u8981\u5c3d\u53ef\u80fd\u5927</li> <li>\u964d\u4f4epage fault\u975e\u5e38\u91cd\u8981\uff0c\u4f7f\u7528\u5168\u76f8\u8054</li> <li>\u5728\u8f6f\u4ef6\u4e2d\u5904\u7406faults</li> <li>\u4f7f\u7528write back\u7b56\u7565</li> </ul> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%205/#5411-page-tables","title":"5.4.1.1 page tables","text":"<p> Virtual to physical address - \u5f97\u5230virtual page number - \u7528\u5b83\u4f5c\u4e3a\u7d22\u5f15\u5728page table \u4e2d\u8fdb\u884c\u5bfb\u627e\uff0c\u5982\u679cvalid \u4f4d\u4e3a\u4e00\uff0c\u5c31\u53d6\u51fa\uff0c\u5982\u679c\u4e3a0\uff0c\u5728disk\u4e2d - \u5168\u76f8\u8054 - page table\u5728\u4e3b\u5b58\u4e2d</p>"},{"location":"note/courses/computer_organization/Chapter%205/#5412-making-address-translation-fasttlb","title":"5.4.1.2 Making Address Translation Fast\u2014\u2014TLB","text":"<p>TLB\u76f8\u5f53\u4e8epage table \u7684\u7f13\u5b58 \u653e\u7ecf\u5e38\u8bbf\u95ee\u7684pagetable\u4e2d\u7684\u5185\u5bb9</p> <p>[!note] FastMATH Memory Hierarchy </p> <p></p> <p></p>"},{"location":"note/courses/computer_organization/Chapter%206/","title":"The  Hardware/Software Interface","text":""},{"location":"note/courses/computer_organization/Chapter%206/#1-introduction","title":"1 Introduction","text":"<ul> <li> <p>I/O\u8bbe\u8ba1\u8003\u8651\u591a\u65b9\u9762\u7684\u56e0\u7d20</p> <ul> <li>\u53ef\u6269\u5c55\u6027\uff08Expandability\uff09</li> <li>\u6062\u590d\u529b\uff08Resilience\uff09</li> <li>\u6027\u80fd\uff08Performance\uff09</li> </ul> </li> <li> <p>\u5ea6\u91cfI/O\u7cfb\u7edf\u7684\u8868\u73b0\u662f\u975e\u5e38\u56f0\u96be\u7684</p> </li> <li>I/O\u7cfb\u7edf\u7684\u6027\u80fd\u4f9d\u8d56\u4e8e\u8bbe\u5907\u548c\u7cfb\u7edf\u4e4b\u95f4\u7684\u94fe\u63a5\uff0c\u5185\u5b58\u5c42\u6b21\uff0c\u64cd\u4f5c\u7cfb\u7edf</li> </ul> <p>[!note] Typical connection of I/O device </p> <p>IO\u7684\u4e09\u4e2a\u7279\u6027: - Behavior: Input, Output ,or storage - Partner: \u8bfb\u53d6\u6570\u636e\u6216\u8005\u8f93\u5165\u6570\u636e\u7684\u4eba/\u8bbe\u5907 - Data rate: \u6570\u636e\u5728I/O\u8bbe\u5907\u548c\u4e3b\u5b58\u6216\u8005\u5904\u7406\u5668\u4e4b\u95f4\u7684\u6700\u9ad8\u4f20\u8f93\u901f\u7387</p> <p>IO \u6027\u80fd\u4f9d\u8d56\u4e8e\u5e94\u7528\uff1a - Throughput:  I/O bandwidth     - \u4e00\u5b9a\u65f6\u95f4\u5185\u7cfb\u7edf\u53ef\u4ee5\u8fd0\u8f93\u591a\u5c11\u6570\u636e     - \u5355\u4f4d\u65f6\u95f4\u5185\u591a\u5c11I/O\u64cd\u4f5c\u53ef\u4ee5\u8fdb\u884c - Response time:\u5f53I/O\u8bf7\u6c42\u975e\u5e38\u5927\u65f6\uff0c\u54cd\u5e94\u65f6\u95f4\u4e25\u91cd\u4f9d\u8d56\u4e8e\u5e26\u5bbd\uff0c\u4f46\u662f\u8bb8\u591a\u60c5\u51b5\u4e0b\u5927\u591a\u6570\u8bbf\u95ee\u7684\u6570\u636e\u91cf\u5f88\u5c0f\uff0c\u6240\u4ee5\u5355\u4e2a\u8bbf\u95ee\u64cd\u4f5c\u5ef6\u8fdf\u65f6\u95f4\u5f88\u77ed\u7684I/O\u7cfb\u7edf\u5c06\u83b7\u5f97\u6700\u5feb\u7684\u76f8\u5e94\u65f6\u95f4 - both throughput and response time \uff1a\u6bd4\u5982ATM</p>"},{"location":"note/courses/computer_organization/Chapter%206/#11-amdahls-law","title":"1.1 Amdahl's law","text":"<p>Sequential part can limit speedup  \\(\\(T_{new}=T_{paralized}/{n_{processors}+T_{sequential}}\\)\\) \\(\\(Speed~up=\\frac{1}{(1-F_{parallelizable}+F)}\\)\\)</p>"},{"location":"note/courses/computer_organization/Chapter%206/#2-disk-storage-and-dependability","title":"2 Disk Storage and Dependability","text":"<p>\u78c1\u76d8\u7684\u4e24\u79cd\u4e3b\u8981\u7c7b\u578b\uff1a - floppy disks:  - hard disks:larger, higher density , higher data rate , more than one platter</p> <p>\u78c1\u76d8\u5b58\u50a8\u662f\u975e\u6613\u5931\u6027\u7684</p>"},{"location":"note/courses/computer_organization/Chapter%206/#21-the-organization-of-hard-disk","title":"2.1 The organization of hard disk","text":"<p>\u4e00\u4e2a\u78c1\u76d8\u5305\u62ec\u4e00\u7ec4\u76d8\u7247\uff08platters\uff09\uff0c\u6bcf\u5f20\u76d8\u7247\u6709\u8bfe\u8bb0\u5f55\u7684\u4e24\u4e2a\u76d8\u9762\u3002\u6bcf\u4e2a\u76d8\u8868\u9762\u88ab\u5206\u4e3a\u8bb8\u591a\u88ab\u79f0\u4e3a\u8f68\u9053(tracks)\u7684\u540c\u5fc3\u5706,\u6bcf\u6761\u8f68\u9053\u53c8\u88ab\u5206\u6210\u4e00\u4e9b\u8bb0\u5f55\u4fe1\u606f\u7684\u6247\u533a\uff08sectors\uff09\uff0c\u5728\u78c1\u4ecb\u8d28\u4e2d\u4e00\u6b21\u5b58\u653e\u7740\u6247\u533a\u53f7\u3001\u95f4\u9694\u3001\u5e26\u6709\u7ea0\u9519\u7801\u7684\u6247\u533a\u4fe1\u606f\u3001\u95f4\u9694\u3001\u4e0b\u4e00\u4e2a\u6247\u533a\u7684 \u6247\u533a\u53f7\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7</p>"},{"location":"note/courses/computer_organization/Chapter%206/#22-disk","title":"2.2 \u52a0\u8f7ddisk\u4e2d\u7684\u6570\u636e","text":"<p>\u5bfb\u9053(Seek):\u5c06\u78c1\u5934\u5355\u4f4d\u5230\u6b63\u786e\u7684\u8f68\u9053\u4e0a\uff0c\u78c1\u5934\u627e\u5230\u6b63\u786e\u8f68\u9053\u7684\u65f6\u95f4\u88ab\u79f0\u4e3a\u5bfb\u9053\u65f6\u95f4\uff08Seek Time\uff09</p> <p>\u65cb\u8f6c\u5ef6\u8fdf\uff08Rotational latency):\u7b49\u5f85\u6b63\u786e\u6247\u533a\u8f6c\u5230\u8bfb\u5199\u5934\u4e0b\u7684\u65f6\u95f4\uff0c\u53d6\u5f97\u6240\u8981\u4fe1\u606f\u7684\u5e73\u5747\u65f6\u5ef6\u662f\u78c1\u76d8\u65cb\u8f6c\u534a\u5468\u6240\u9700\u7684\u65f6\u95f4,\u5373\\(\\frac{0.5\u8f6c}{\u8f6c\u901f}\\)</p> <p>\u4f20\u8f93\u65f6\u95f4\uff08transfer\uff09\uff1a\u4f20\u8f93\u4e00\u5757\uff08\u4e00\u822c\u662f\u4e00\u4e2a\u6247\u533a\uff09\u9700\u8981\u7684\u65f6\u95f4\uff0c\u4f20\u8f93\u65f6\u95f4\u662f\u6247\u533a\u5927\u5c0f\u3001\u65cb\u8f6c\u901f\u5ea6\u3001\u78c1\u9053\u8bb0\u5f55\u5bc6\u5ea6\u7684\u51fd\u6570</p> <p>\u78c1\u76d8\u63a7\u5236\u5668\uff08disk controller\uff09\uff1a\u901a\u5e38\u7528\u6765\u7cbe\u7ec6\u5730\u63a7\u5236\u78c1\u76d8\u4ee5\u53ca\u78c1\u76d8\u4e0e\u5185\u5b58\u4e4b\u95f4\u7684\u6570\u636e\u4f20\u8f93\uff0c\u5176\u5b58\u5728\u662f\u7684\u78c1\u76d8\u5b58\u53d6\u65f6\u95f4\u53c8\u591a\u4e86\u4e00\u9879\u63a7\u5236\u5668\u65f6\u95f4(controller time)</p> <p>read time=seek time + rotational latency + transfer time + controller time</p> <p>!!!  example \"\u8bfb\u78c1\u76d8\u65f6\u95f4\"     === \"question\"              === \"answer\"          \\(t=6.0ms+\\frac{0.5r}/{10000r/min}+\\frac{0.5KB}{50MB/s}+0.2ms=9.2ms\\)</p>"},{"location":"note/courses/computer_organization/Chapter%206/#23-flash-storage","title":"2.3 flash storage","text":"<p>\u95ea\u5b58\u5177\u6709\u5982\u4e0b\u7279\u6027\uff1a</p> <ul> <li>\u662f\u4e00\u79cd\u975e\u6613\u5931\u6027\uff08\u5373\u65ad\u7535\u6570\u636e\u4e5f\u4e0d\u4f1a\u4e22\u5931\uff09\u3001\u7535\u5b50\u53ef\u64e6\u9664\u3001\u53ef\u7f16\u7a0b\u53ea\u8bfb\u7684\u534a\u5bfc\u4f53\u5b58\u50a8\u5668\uff08EEPROM\uff09 </li> <li>\u6bd4\u78c1\u76d8\u5feb\u767e\u500d\u5230\u5343\u500d</li> <li>\u66f4\u5c0f\u578b\u3001\u8017\u7535\u66f4\u5c0f\u3001\u4f46\u662f\u4e5f\u66f4\u8d35\uff0c\u4ecb\u4e8e\u78c1\u76d8\u548cDRAM</li> <li>\u5199\u64cd\u4f5c\u53ef\u80fd\u4f1a\u78e8\u635f\u5b58\u50a8\u5668\u5185\u7684\u6811<ul> <li>\u57281000\u6b21\u8bbf\u95ee\u540e\u6570\u636e\u4f4d\u4f1a\u6709\u6240\u78e8\u635f</li> <li>\u56e0\u6b64\u5b83\u4e0d\u9002\u5408\u4f5c\u4e3aRAM/DISK  \u7684\u66ff\u4ee3</li> <li>\u4e3a\u51cf\u7f13\u78e8\u635f\uff0c\u95ea\u5b58\u4f1a\u7528\u4e00\u4e2a\u63a7\u5236\u5668\u6765spread \u5199\u64cd\u4f5c\u5230\u88ab\u66f4\u5c11\u4f7f\u7528\u7684\u533a\u57df\uff0c\u8fd9\u88ab\u79f0\u4e3a\uff08wear leveling\uff09</li> </ul> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%206/#231-flash-types","title":"2.3.1 flash types","text":"<ul> <li>NOR flash :\u6bcf\u4e00\u4e2acell\u50cf\u662f\u4e00\u4e2a\u6216\u975e\u95e8<ul> <li>\u968f\u673a\u8bfb\u5199\u66f4\u5feb</li> <li>\u901a\u5e38\u7528\u4e8e\u5b58\u50a8\u5d4c\u5165\u5f0f\u7cfb\u7edf\u7684\u6307\u4ee4</li> </ul> </li> <li>NAND flash : \u6bcf\u4e00\u4e2acell\u50cf\u662f\u4e00\u4e2a\u4e0e\u975e\u95e8<ul> <li>\u66f4\u4e3a\u5bc6\u96c6\uff0c\u4f46\u662f\u4ee5\u5757\u4e3a\u5355\u4f4d\u8fdb\u884c\u64cd\u4f5c</li> <li>\u66f4\u4fbf\u5b9c</li> <li>\u901a\u5e38\u7528\u4e8e\u5b58\u50a8USB\u5bc6\u94a5\u3001\u5a92\u4f53\u6570\u636e\u7b49\u7b49</li> </ul> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%206/#24-disk-performance-issues","title":"2.4 Disk performance Issues","text":"<ul> <li>\u5c40\u90e8\u6027\u548cOS\u89c4\u5212\uff0c\u63a7\u5236\u5668\uff0c\u5229\u7528cache\u6280\u672f\u52a0\u901f</li> </ul> <p>\u7cfb\u7edf\u4f20\u9012\u7ed9\u7528\u6237\u7684\u670d\u52a1\uff08Service\uff09\u6709\u4e24\u79cd\u72b6\u6001\uff1a - \u670d\u52a1\u5b9e\u73b0\uff08Service Accomplishment\uff09\uff1a \u4f20\u9012\u7684\u670d\u52a1\u4e0e\u6307\u5b9a\u7684\u670d\u52a1\u76f8\u540c - \u670d\u52a1\u4e2d\u65ad\uff08Service interrupt\uff09\uff1a \u4f20\u9012\u7684\u670d\u52a1\u4e0e\u6307\u5b9a\u7684\u670d\u52a1\u4e0d\u540c</p> <p>\u4ece\u670d\u52a1\u5b9e\u73b0\u5230\u670d\u52a1\u4e2d\u65ad\u7684\u8fc7\u7a0b\u79f0\u4e3a\u5931\u8d25\uff08Failures\uff09\uff0c\u4ece\u670d\u52a1\u4e2d\u65ad\u5230\u670d\u52a1\u5b9e\u73b0\u7684\u8fc7\u7a0b\u79f0\u4e3a\u6062\u590d\uff08Restorations\uff09\u3002\u5931\u8d25\u53ef\u4ee5\u5206\u4e3a\u6c38\u4e45\u6027\u7684\uff08Permenant\uff09\u548c\u95f4\u6b47\u6027\u7684\uff08Intermittent\uff09\uff0c\u5176\u4e2d\u524d\u8005\u8f83\u597d\u8bca\u65ad\u51fa\u6765\uff0c\u800c\u540e\u8005\u7531\u4e8e\u4f1a\u5728\u4e24\u4e2a\u72b6\u6001\u95f4\u632f\u8361\uff0c\u56e0\u6b64\u4e0d\u592a\u597d\u8bca\u65ad\u3002\u7531\u6b64\uff0c\u6211\u4eec\u5f15\u51fa\u4e86\u4ee5\u4e0b\u76f8\u5173\u672f\u8bed\uff1a</p> <p>Dependability\uff08\u53ef\u4f9d\u8d56\u6027\uff09:\u63d0\u4f9b\u670d\u52a1\u7684\u8d28\u91cf</p> <p>\u6bcf\u4e2a\u6a21\u5757\u90fd\u6709\u4e00\u4e2a\u7406\u60f3\u7684\u6307\u5b9a\u884c\u4e3a\uff0c\u5176\u4e2d\u670d\u52a1\u8bf4\u660e\u5e94\u662f\u5bf9\u671f\u671b\u884c\u4e3a\u5e7f\u6cdb\u8ba4\u540c\u7684\u63cf\u8ff0\uff0c\u5f53\u5b9e\u9645\u884c\u4e3a\u504f\u79bb\u6307\u5b9a\u884c\u4e3a\u65f6\uff0c\u7cfb\u7edf\u53d1\u751f\u9519\u8bef</p> <p>Reliability\uff08\u53ef\u9760\u6027\uff09:</p> <p>\u662f\u8fde\u7eed\u670d\u52a1\u65f6\u95f4\u7684\u91cf\u5ea6\uff0c\u6216\u8005\u4ece\u53c2\u7167\u70b9\u81f3\u51fa\u73b0\u6545\u969c\u6240\u9700\u65f6\u95f4\u7684\u91cf\u5ea6\uff0c\u78c1\u76d8\u5e73\u5747\u6545\u969c\u65f6\u95f4\uff08MTTF\uff09\u662f\u4e00\u4e2a\u53ef\u9760\u6027\u7684\u91cf\u5ea6</p> <p>Availability\uff08\u53ef\u7528\u6027\uff09\uff1a</p> <p>\u5982\u679c\u8bf4\u670d\u52a1\u5728\u662f\u5b9e\u73b0\u548c\u4e2d\u65ad\u4e24\u4e2a\u72b6\u6001\u4e4b\u95f4\u53d8\u5316\u7684\u5316\uff0c\u90a3\u4e48\u53ef\u7528\u6027\u4e3a\u670d\u52a1\u5b9e\u73b0\u7684\u91cf\u5ea6\u3002 \\(\\(\u53ef\u7528\u6027=\\frac{MTTF}{MTTF=MTTR}\\)\\)</p>"},{"location":"note/courses/computer_organization/Chapter%206/#241-measure","title":"2.4.1 Measure","text":"<ul> <li>MTTF \u5e73\u5747\u65e0\u6545\u969c\u65f6\u95f4</li> <li>MTTR \u5e73\u5747\u4fee\u590d\u65f6\u95f4</li> <li>MTBF=MTTF+MTTR\u5e73\u5747\u6545\u969c\u95f4\u9694\u65f6\u95f4</li> <li> <p>Availability=\\(\\frac{MTTF}{MTTF+MTTR}\\)</p> </li> <li> <p>Fault(\u9519\u8bef)\uff1a\u7cfb\u7edf\u4e2d\u67d0\u4e2a\u90e8\u4ef6(Component)\u7684\u5931\u8d25</p> </li> </ul> <p>\u63d0\u5347MTTF\u7684\u4e09\u79cd\u65b9\u5f0f\uff1a</p> <ul> <li>Fault avoidance:\u901a\u8fc7\u7ed3\u6784\u6765\u9884\u9632fault\u7684\u53d1\u751f</li> <li>Fault tolerance:\u4f7f\u7528\u5197\u4f59\u6280\u672f\u5141\u8bb8\u670d\u52a1\u5728\u9519\u8bef\u53d1\u751f\u65f6\u4ecd\u80fd\u7167\u5e38\u5de5\u4f5c\uff0c\u8fd9\u91cc\u9519\u8bef\u4e3b\u8981\u6307\u786c\u4ef6\u9519\u8bef</li> <li>Fault forecasting:\u9884\u6d4b\u9519\u8bef\u7684\u5b58\u5728\u548c\u521b\u9020\uff0c\u5141\u8bb8\u90e8\u4ef6\u5728\u5931\u8d25\u4e4b\u6c14\u90a3\u88ab\u66ff\u6362\uff0c\u5e94\u7528\u4e8e\u8f6f\u786c\u4ef6\u9519\u8bef</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%206/#242-redundant-arrays-of-disks","title":"2.4.2 Redundant arrays of disks","text":"<p>RAID\uff1a\u72ec\u7acb/\u5ec9\u4ef7\u786c\u76d8\u5197\u4f59\u9635\u5217\u00a0(Redundant Arrays of Inexpensive/Independent Disks)</p> <ul> <li>\u7528\u786c\u76d8\u9635\u5217\u53d6\u4ee3\u4e00\u4e2a\u5bb9\u91cf\u66f4\u5927\u7684\u786c\u76d8</li> <li>\u6587\u4ef6\u88ab\u5b58\u50a8\u5728\u591a\u4e2a\u786c\u76d8\u4e2d</li> <li>\u589e\u52a0\u6821\u9a8c\u76d8/\u5197\u4f59\u76d8\uff0c\u6765\u63d0\u9ad8\u5b58\u50a8\u7684\u53ef\u4f9d\u8d56\u6027</li> <li>\u6587\u4ef6\u4f1a\u5206\u6563\u5b58\u50a8\u5728\u591a\u4e2a\u786c\u76d8\uff08\u5f62\u6210\u4e00\u4e2a\u9635\u5217\uff09\u5185</li> <li>\u901a\u8fc7\u5197\u4f59\uff08Redundancy\uff09\u5f97\u5230\u66f4\u9ad8\u7684\u6570\u636e\u53ef\u7528\u6027\uff08\u5373\u4f7f\u67d0\u4e2a\u78c1\u76d8\u574f\u4e86\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u4ece\u522b\u7684\u786c\u76d8\u4e2d\u83b7\u53d6\u6587\u4ef6\uff09</li> <li>\u5197\u4f59\u7684\u4ee3\u4ef7\uff1a<ul> <li>\u5bb9\u91cf\u635f\u5931\uff1a\u5b58\u50a8\u5197\u4f59\u4fe1\u606f</li> <li>\u5e26\u5bbd\u635f\u5931\uff1a\u66f4\u65b0\u5197\u4f59\u4fe1\u606f</li> </ul> </li> </ul> <p>\u4f7f\u7528\u4e00\u7cfb\u5217\u5c0f\u7684\u78c1\u76d8\u6765\u63d0\u9ad8\u5b58\u50a8\u7684\u53ef\u4f9d\u8d56\u6027</p> <p>\\(Reliability~of~N~disks = Reliability~of~1~Disk/N\\)</p> <p>Example</p> <p> </p> <p>\u6ce8\u610f</p> <p>\u4e0d\u80fd\u540c\u65f6\u5bf9\u4e00\u4e2a\u78c1\u76d8\u8fdb\u884c\u591a\u4e2a\u64cd\u4f5c\uff0c\u56e0\u4e3a\u78c1\u76d8\u662f\u901a\u8fc7\u65cb\u8f6c\u00b7\u00b7\u00b7\u00b7\u00b7\u00b7\u6765\u5b9e\u73b0\u8bbf\u95ee\u7684\uff0c\u4f8b\u5982\u4e4b\u540e\u4f1a\u63d0\u5230\u7684\u5bf9\u4e00\u4e2a\u6821\u9a8c\u78c1\u76d8\u4e0d\u80fd\u540c\u65f6\u8fdb\u884c\u5199\u6216\u8005\u8bfb\u64cd\u4f5c\uff0c\u6784\u6210\u4e86\u74f6\u9888</p> <p>Info</p> RAID 0RAID 1RAID 3RAID 4RAID 5RAID 6 <p>RAID 0 \u4e0d\u4f7f\u7528\u5197\u4f59</p> <ul> <li>\u867d\u7136\u6570\u636e\u5206\u6563\u5728\u786c\u76d8\u9635\u5217\u91cc\uff0c\u4f46\u662f\u672a\u91c7\u7528\u5197\u4f59\u6765\u5e94\u5bf9\u786c\u76d8\u6545\u969c</li> <li>\u4f46\u662f\u8be5\u65b9\u6cd5\u5bf9\u4e8e\u5927\u91cf\u7684\u8bbf\u95ee\u800c\u8a00\u63d0\u5347\u4e86\u8868\u73b0\uff0c\u56e0\u4e3a\u53ea\u9700\u5bf9\u78c1\u76d8\u64cd\u4f5c\u4e00\u6b21</li> </ul> <p>RAID 1 \u4e3a\u786c\u76d8\u955c\u50cf\u00a0/\u00a0\u6295\u5f71\uff08Disk Mirroring/Shadowing\uff09</p> <ul> <li>\u6bcf\u4e2a\u78c1\u76d8\u90fd\u6709\u4e00\u4efd\u5bf9\u5e94\u7684\u5b8c\u6574\u62f7\u8d1d\uff0c\u79f0\u4e3a\u955c\u50cf\uff08Mirror)\uff0c\u56e0\u800c\u8be5\u65b9\u6cd5\u5177\u5907\u5f88\u9ad8\u7684\u53ef\u7528\u6027</li> <li>\u8be5\u65b9\u6cd5\u727a\u7272\u4e86\u5199\u64cd\u4f5c\u7684\u5e26\u5bbd\uff1a\u4e00\u6b21\u903b\u8f91\u5199\u64cd\u4f5c\u00a0=\u00a0\u4e24\u6b21\u7269\u7406\u5199\u64cd\u4f5c\uff1b\u4f46\u662f\u8bfb\u64cd\u4f5c\u53ef\u80fd\u5f97\u5230\u4f18\u5316</li> <li>\u7531\u4e8e\u662f\u201c\u5b8c\u6574\u62f7\u8d1d\u201d\uff0c\u6240\u4ee5\u5b83\u9700\u8981\u989d\u5916\u00a0100%\u00a0\u7684\u5bb9\u91cf\u5f00\u9500\uff0c\u56e0\u800c\u662f\u6700\u6602\u8d35\u7684\u65b9\u6cd5</li> </ul> <p> RAID 3 \u4e3a\u4f4d\u4ea4\u9519\u5947\u5076\u6821\u9a8c\u786c\u76d8\uff08Bit-Interleaved Parity Disk\uff09</p> <ul> <li>\u6211\u4eec\u8ba9\u67d0\u51e0\u4e2a\u786c\u76d8\u5171\u7528\u4e00\u4e2a\u5197\u4f59\u7684\u78c1\u76d8\u00a0P\uff0cP\u00a0\u7684\u6570\u636e\u7684\u6bcf\u4e00\u4f4d\u7b49\u4e8e\u201c\u8fd9\u4e9b\u786c\u76d8\u5bf9\u5e94\u4f4d\u4e4b\u548c\u00a0mod 2\u201d\uff08\u5373\u5947\u5076\u4f4d\uff08Parity\uff09\uff09</li> <li>\u5982\u679c\u67d0\u4e2a\u786c\u76d8\u51fa\u73b0\u6545\u969c\uff0c\u53ef\u4ee5\u7528\u201c\u78c1\u76d8\u00a0P -\u00a0\u5176\u4ed6\u6b63\u5e38\u7684\u786c\u76d8\u7684\u6570\u636e\u4e4b\u548c\u201d\u6765\u8fd8\u539f\u56e0\u6545\u969c\u9057\u5931\u7684\u4fe1\u606f</li> </ul> <p>RAID 4 \u4e3a\u5757\u4ea4\u9519\u5947\u5076\u6821\u9a8c\uff08Block-Interleaved Parity\uff09  \u6211\u4eec\u5e0c\u671b\u81ea\u5df1\u7684\u76d8\u6709\u81ea\u5df1\u7684\u9519\u8bef\u68c0\u6d4b\uff0c\u4e0d\u9700\u8981\u6821\u9a8c\u76d8\u6765\u68c0\u9a8c\u81ea\u5df1\u5bf9\u4e0d\u5bf9\uff0c\u76d8\u4e0e\u76d8\u4e4b\u95f4\u6ca1\u6709\u4f9d\u8d56\u5173\u7cfb\u3002\u4e8b\u5b9e\u4e0a\uff0c\u786c\u76d8\u7684\u6bcf\u4e2a\u6247\u533a\u90fd\u6709\u4e00\u4e2a\u9519\u8bef\u68c0\u6d4b\u5b57\u6bb5</p> <ul> <li>\u628a\u81ea\u5df1\u6bcf\u4e2a Block \u505a\u4e86\u6821\u9a8c\u4f4d\uff0c\u653e\u5230\u5907\u4efd\u76d8\u4e2d</li> <li>\u8be5\u65b9\u6cd5\u5141\u8bb8\u540c\u6b65\u3001\u72ec\u7acb\u5730\u8bfb\u53d6\u4e0d\u540c\u786c\u76d8\u7684\u6570\u636e,\u540c\u4e00\u884c\u4e5f\u53ef\u4ee5\u540c\u65f6\u5199\uff0csmall write \u6709\u95ee\u9898\uff08\u4e0d\u5728\u540c\u4e00\u884c\u4e0a\uff09</li> <li>\u5bf9\u4e8e\u5c0f\u8303\u56f4\u8bfb\u64cd\u4f5c\u800c\u8a00\uff0c\u4e0d\u9700\u8981\u53bb\u8bfbparity\u4f4d</li> <li>\u91c7\u7528\u5c0f\u8303\u56f4\u5199\u7b97\u6cd5\uff1a1\u00a0\u6b21\u903b\u8f91\u5199\u00a0= 2\u00a0\u6b21\u7269\u7406\u8bfb\u00a0+ 2\u00a0\u6b21\u7269\u7406\u5199\uff08\u6bcf\u6b21\u5199\u64cd\u4f5c\u90fd\u4f1a\u6d89\u53ca\u5230\u5947\u5076\u6821\u9a8c\u786c\u76d8\u00a0P\uff09\uff0c\u6210\u672c\u8f83\u9ad8\u3002\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\u6240\u793a\uff1a </li> </ul> <p>RAID 5 \u4e3a\u9ad8\u00a0I/O\u00a0\u901f\u7387\u4ea4\u9519\u5947\u5076\u6821\u9a8c\uff08High I/O Rate Interleaved Parity\uff09  - \u4ea4\u9519\u7684\u5947\u5076\u6821\u9a8c\u5757 - \u72ec\u7acb\u7684\u8bfb\u5199\u64cd\u4f5c - \u6821\u9a8c\u4fe1\u606f\u5728\u4e0d\u540c\u7684\u78c1\u76d8\u4e0a,\u8fd9\u79cd\u7ec4\u7ec7\u65b9\u5f0f\u4f7f\u5f97\u591a\u4e2a\u5199\u64cd\u4f5c\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c</p> <p>RAID 6 \u4e3a P+Q \u5197\u4f59\u6821\u9a8c</p> <p>\u6709 P, Q \u4e24\u4f4d\uff0c\u5f53\u5355\u6b21\u9519\u8bef\u7ea0\u6b63\u4ecd\u7136\u65e0\u6cd5\u6ee1\u8db3\u8981\u6c42\u65f6\uff0c\u53ef\u4ee5\u4ece\u6570\u636e\u4e2d\u518d\u6b21\u8ba1\u7b97\u5f97\u5230\u5947\u5076\u6821\u9a8c\u4f4d\uff0c\u4ee5\u8fdb\u884c\u989d\u5916\u7684\u4fe1\u606f\u68c0\u67e5\uff0c\u53ef\u4ee5\u6062\u590d\u51fa\u4e24\u4e2a\u76d8\u7684\u5185\u5bb9\u3002\u4e8c\u6b21\u6821\u9a8c\u5757\u673a\u5236\u53ef\u4f7f\u7cfb\u7edf\u4ece\u4e8c\u6b21\u9519\u8bef\u4e2d\u6062\u590d\u8fc7\u6765\uff0c\u56e0\u6b64\u5b83\u7684\u5f00\u9500\u662fRAID\u7684\u4e24\u500d\uff0c\u8fdb\u884c\u5c0f\u6570\u636e\u91cf\u5199\u7684\u65f6\u5019\u8981\u8bbf\u95ee6\u4e2a\u76d8</p>"},{"location":"note/courses/computer_organization/Chapter%206/#3-buses-and-other-connections-between-processors-memory-and-io-devices","title":"3 Buses and Other Connections between Processors Memory, and I/O Devices","text":"<ul> <li>Bus \u603b\u7ebf\uff1a \u5171\u7528\u7684\u901a\u4fe1\u7ebf\u8def\uff08\u5305\u542b\u4e00\u6839\u6216\u8005\u591a\u6839\u7ebf\u8def\uff09</li> </ul> <p>\u603b\u7ebf\u8bbe\u8ba1\u4e0a\u7684\u56f0\u96be\uff1a</p> <ul> <li>\u603b\u7ebf\u957f\u5ea6\u548c\u8bbe\u5907\u6570\u91cf\u9650\u5236\u4e86\u6700\u9ad8\u603b\u7ebf\u901f\u5ea6</li> <li>\u8981\u652f\u6301\u4e00\u7cfb\u5217\u7684\u5ef6\u8fdf\u548c\u6570\u636e\u4f20\u8f93\u7387\u5404\u4e0d\u76f8\u540c\u7684\u8bbe\u5907</li> <li>\u65f6\u949f\u504f\u5dee\u548c\u4fe1\u53f7\u53cd\u5c04\u7684\u95ee\u9898\u5bfc\u81f4\u9ad8\u901f\u7684\u5e76\u884c\u7ebf\u8def\u5f88\u96be\u8bbe\u8ba1</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%206/#31-bus-basics","title":"3.1 Bus Basics","text":"<ul> <li> <p>\u603b\u7ebf\u5305\u542b\u4e24\u7c7b\u7ebf\u8def\uff1a</p> <ul> <li>\u63a7\u5236\u7ebf\u8def\uff1a\u4fe1\u53f7\u7684\u8bf7\u6c42\uff08Request\uff09\u548c\u786e\u8ba4\uff08Acknowledgement\uff09\uff0c\u5e76\u8868\u660e\u6570\u636e\u7ebf\u8def\u4e0a\u4fe1\u606f\u7684\u7c7b\u578b</li> <li>\u6570\u636e\u7ebf\u8def\uff1a\u5728\u6e90\u548c\u76ee\u7684\u4e4b\u95f4\u4f20\u9012\u4fe1\u606f\uff08\u6570\u636e\u3001\u5730\u5740\u3001\u590d\u6742\u547d\u4ee4\u7b49\uff09</li> </ul> </li> <li> <p>\u603b\u7ebf\u4e8b\u52a1\uff08Transaction\uff09\uff1a\u53d1\u9001\u5730\u5740\uff0c\u4ee5\u53ca\u63a5\u6536\u6216\u53d1\u9001\u6570\u636e</p> </li> <li>\u8f93\u51fa\u64cd\u4f5c\uff1a</li> </ul> <ul> <li>\u8f93\u5165\u64cd\u4f5c\uff1a</li> </ul> <ul> <li>\u603b\u7ebf\u7c7b\u578b\uff1a<ul> <li>\u5904\u7406\u5668\u00a0-\u00a0\u5185\u5b58\uff1a\u8f83\u9ad8\u7684\u901f\u5ea6\uff0c\u4e2a\u6027\u5316\u8bbe\u8ba1</li> <li>\u5e95\u677f\uff08Backplane\uff09\uff1a\u9ad8\u901f\uff0c\u6807\u51c6\u5316\u8bbe\u8ba1\uff08\u4f8b\u5982 PCI\uff09</li> <li>I/O\uff1a\u4f4e\u901f\uff0c\u4e0d\u540c\u8bbe\u5907\uff0c\u6807\u51c6\u5316\uff08\u4f8b\u5982 SCSI\uff09</li> </ul> </li> </ul>"},{"location":"note/courses/computer_organization/Chapter%206/#32-synchronous-vs-asynchronous","title":"3.2 Synchronous vs Asynchronous","text":"<ul> <li> <p>\u540c\u6b65\u603b\u7ebf\uff1a\u4f7f\u7528\u65f6\u949f\u548c\u56fa\u5b9a\u7684\u534f\u8bae\uff0c\u5feb\u800c\u5c0f\uff0c\u4f46\u662f\u6240\u6709\u8bbe\u5907\u9700\u8981\u4fdd\u6301\u76f8\u540c\u7684\u8fd0\u4f5c\u901f\u7387\uff0c\u4e14\u4e3a\u907f\u514d\u65f6\u949f\u504f\u659c\uff08Clock Skew\uff09\u95ee\u9898\uff0c\u603b\u7ebf\u9700\u8981\u77ed\u4e00\u4e9b</p> </li> <li> <p>\u5f02\u6b65\u603b\u7ebf\uff1a\u4e0d\u7528\u65f6\u949f\uff0c\u800c\u91c7\u7528\u63e1\u624b\u534f\u8bae\uff08Handshaking Protocol\uff09\u2014\u2014\u4e00\u79cd\u7528\u4e8e\u534f\u8c03\u5f02\u6b65\u603b\u7ebf\u4f20\u8f93\u7684\u4e32\u884c\u6b65\u9aa4\uff0c\u5177\u4f53\u8fc7\u7a0b\u5982\u4e0b\uff1a </p> </li> </ul> <ol> <li>\u5f53\u00a0<code>ReadReq</code>\u00a0\u5904\u4e8e\u9ad8\u7535\u5e73\u65f6\uff0c\u5185\u5b58\u4ece\u6570\u636e\u603b\u7ebf\u4e2d\u8bfb\u53d6\u5730\u5740\uff0c\u6267\u884c\u8bfb\u64cd\u4f5c\uff0c\u7136\u540e\u62ac\u9ad8\u00a0<code>Ack</code>\u00a0\u7684\u7535\u5e73\uff0c\u544a\u8bc9\u8bbe\u5907\u5b83\u770b\u5230\u4e86\u00a0<code>ReadReq</code>\u00a0\u4fe1\u53f7</li> <li>I/O\u00a0\u8bbe\u5907\u770b\u5230\u00a0<code>Ack</code>\u00a0\u5904\u4e8e\u9ad8\u7535\u5e73\u540e\uff0c\u5c06\u00a0<code>ReadReq</code>\u00a0\u7f6e\u4e8e\u4f4e\u7535\u5e73\u72b6\u6001</li> <li>\u5185\u5b58\u770b\u5230\u00a0<code>ReadReq</code>\u00a0\u5904\u4e8e\u4f4e\u7535\u5e73\u540e\uff0c\u5c06\u00a0<code>Ack</code>\u00a0\u7f6e\u4e8e\u4f4e\u7535\u5e73\u72b6\u6001</li> <li>\u5f53\u5185\u5b58\u5b8c\u6210\u6570\u636e\u8bfb\u53d6\u540e\uff0c\u5b83\u5c06\u6570\u636e\u653e\u5728\u6570\u636e\u7ebf\u8def\u4e0a\uff0c\u5e76\u62ac\u9ad8\u00a0<code>DataRdy</code>\u00a0\u7684\u7535\u5e73</li> <li>I/O\u00a0\u8bbe\u5907\u770b\u5230\u00a0<code>DataRdy</code>\u00a0\u5904\u4e8e\u9ad8\u7535\u5e73\u540e\uff0c\u5c06\u4ece\u603b\u7ebf\u4e2d\u8bfb\u53d6\u6570\u636e\uff0c\u7136\u540e\u62ac\u9ad8\u00a0<code>Ack</code>\u00a0\u7535\u5e73\u6765\u8868\u660e\u00a0I/O\u00a0\u8bbe\u5907\u5b8c\u6210\u5bf9\u6570\u636e\u7684\u8bfb\u53d6</li> <li>\u5185\u5b58\u770b\u5230\u00a0<code>Ack</code>\u00a0\u5904\u4e8e\u9ad8\u7535\u5e73\u540e\uff0c\u5c06\u00a0<code>DataRdy</code>\u00a0\u7f6e\u4e8e\u4f4e\u7535\u5e73\u72b6\u6001</li> <li>I/O\u00a0\u8bbe\u5907\u770b\u5230\u00a0<code>DataRdy</code>\u00a0\u5904\u4e8e\u4f4e\u7535\u5e73\u540e\uff0c\u5c06\u00a0<code>Ack</code>\u00a0\u7f6e\u4e8e\u4f4e\u7535\u5e73\u72b6\u6001\uff0c\u8868\u660e\u5b8c\u6210\u4e86\u6574\u4e2a\u4f20\u8f93\u8fc7\u7a0b</li> </ol> <p>\u4e8c\u8005\u6027\u80fd\u6bd4\u8f83</p> QuestionAnswer <p>\u5047\u8bbe\u540c\u6b65\u603b\u7ebf\u65f6\u949f\u5468\u671f\u4e3a 50ns\uff0c\u6bcf\u6761\u603b\u7ebf\u7684\u4f20\u8f93\u9700\u8981\u4e00\u4e2a\u65f6\u949f\u5468\u671f\uff1b\u5f02\u6b65\u603b\u7ebf\u6bcf\u6b21\u63e1\u624b\u9700\u8981 40ns\u3002\u4e24\u79cd\u603b\u7ebf\u7684\u6570\u636e\u5bbd\u5ea6\u90fd\u4e3a 32 \u4f4d</p> <p>\u6c42\u51fa\u6bcf\u79cd\u603b\u7ebf\u4ece\u4e00\u4e2a 200ns \u7684\u5185\u5b58\u5f53\u4e2d\u8bfb\u53d6\u6570\u636e\u7684\u5e26\u5bbd</p> SynchronousAsynchronous <p>\u5bf9\u4e8e\u540c\u6b65\u603b\u7ebf\uff0c\u5b83\u6267\u884c\u4ee5\u4e0b\u6b65\u9aa4\uff1a</p> <ul> <li>\u5c06\u5730\u5740\u9001\u7ed9\u5185\u5b58\uff1a50ns</li> <li>\u8bfb\u53d6\u5185\u5b58\uff1a200ns</li> <li>\u5c06\u6570\u636e\u9001\u56de\u8bbe\u5907\uff1a50ns</li> </ul> <p>\u6240\u4ee5\u9700\u8981\u7684\u603b\u65f6\u95f4\u4e3a 300ns\uff0c\u5e26\u5bbd \\(\\text{Bandwidth}=\\frac{4\\text{ Bytes}}{300ns}=13.3\\text{ MB/s}\\)</p> <p>\u5bf9\u4e8e\u5f02\u6b65\u603b\u7ebf\u6765\u8bf4\uff0c\u4e03\u4e2a\u6b65\u9aa4\u6709\u4e9b\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\uff0c\u5177\u4f53\u6765\u8bf4\uff0cStep1 \u7ed3\u675f\u65f6\u5185\u5b58\u5df2\u7ecf\u62ff\u5230\u5730\u5740\u4e86\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d Step234 \u53ef\u4ee5\u540c\u65f6\u505a\uff1a</p> <ul> <li>Step 1: 40ns</li> <li>Step 2,3,4: \\(\\max(2\\times 40ns+40ns, 200ns)=200ns\\)</li> <li>Step 5,6,7: \\(3\\times 40ns=120ns\\)</li> </ul> <p>\u6240\u4ee5\u9700\u8981\u7684\u603b\u65f6\u95f4\u4e3a 360ns\uff0c\u5e26\u5bbd \\(\\text{Bandwidth}=\\frac{4\\text{ Bytes}}{360ns}=11.1\\text{ MB/s}\\)</p> <p>\u7efc\u4e0a\u6240\u8ff0\u540c\u6b65\u603b\u7ebf\u5927\u7ea6\u5feb 20%</p>"},{"location":"note/courses/computer_organization/Chapter%206/#33-bus-arbitration","title":"3.3 Bus Arbitration","text":"<ul> <li>\u5982\u679c\u4e0d\u52a0\u4efb\u4f55\u63a7\u5236\uff0c\u8bb8\u591a\u8bbe\u5907\u90fd\u671f\u671b\u83b7\u5f97\u5bf9\u63a7\u5236\u00a0/\u00a0\u6570\u636e\u603b\u7ebf\u7684\u63a7\u5236\u6743\uff0c\u4ee5\u4fbf\u5b9e\u73b0\u81ea\u5df1\u8fd9\u90e8\u5206\u7684\u6570\u636e\u4f20\u9012\uff0c\u8fd9\u6837\u663e\u7136\u4f1a\u51fa\u4e71\u5b50</li> <li>\u56e0\u6b64\u9700\u8981\u7528\u4e00\u4e2a\u603b\u7ebf\u63a7\u5236\u5668\uff08Bus master\uff09\u6765\u53d1\u8d77\u548c\u63a7\u5236\u6240\u6709\u7684\u603b\u7ebf\u8bf7\u6c42</li> </ul> <p>\u5355\u4e2a\u63a7\u5236\u5668\u5728\u603b\u7ebf\u4e8b\u52a1\u4e2d\u7684\u521d\u59cb\u5316</p> <p> </p> <p>\u6211\u4eec\u6709\u4ee5\u4e0b\u65b9\u6cd5\u8fdb\u884c\u603b\u7ebf\u4ef2\u88c1\uff1a</p> <ul> <li>\u83ca\u5f0f\u94fe\uff08Daisy Chain\uff09\u4ef2\u88c1\uff08\u5e76\u4e0d\u662f\u5f88\u516c\u5e73\uff09</li> <li>\u96c6\u4e2d\uff08Centralized\uff09\u5e76\u884c\u4ef2\u88c1\uff08\u9700\u8981\u4e00\u4e2a\u4ef2\u88c1\u8005\uff0c\u4f8b\u5982 PCI\uff09</li> <li>\u81ea\u9009\uff08Self Selection\uff09\uff08\u4f8b\u5982 Macintosh \u7528\u7684 NuBus\uff09</li> <li>\u51b2\u7a81\u68c0\u6d4b\uff08Collision Detection\uff09\uff08\u4f8b\u5982\u4ee5\u592a\u7f51\uff09</li> </ul> <p>\u4e3a\u8bbe\u5907\u5206\u914d\u603b\u7ebf\u9700\u8981\u8003\u8651\u7684\u56e0\u7d20\uff1a</p> <ul> <li>\u603b\u7ebf\u4f18\u5148\u7ea7</li> <li>\u516c\u5e73\u6027\uff08Fairness\uff09</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%206/#34-increasing-the-bancwidth","title":"3.4 Increasing the Bancwidth","text":"<p>\u5047\u8bbe\u6211\u4eec\u6709\u4e00\u4e2a\u5177\u6709\u5982\u4e0b\u7279\u5f81\u7684\u7cfb\u7edf\uff1a</p> <ul> <li>\u4e00\u4e2a\u5185\u5b58\u548c\u603b\u7ebf\u7cfb\u7edf\uff0c\u652f\u6301 4 \u5230 16 \u5b57\u5927\u5c0f\u7684\u5757\u8bbf\u95ee</li> <li>\u4e00\u6761 64 \u4f4d\u540c\u6b65\u603b\u7ebf\uff0c\u65f6\u949f\u9891\u7387\u4e3a 200MHz\uff0c\u6bcf\u6b21\u4f20\u8f93 64 \u4f4d\u6570\u636e\u9700\u8981\u4e00\u4e2a\u65f6\u949f\u5468\u671f\uff0c\u6bcf\u6b21\u628a\u5730\u5740\u4f20\u7ed9\u5185\u5b58\u9700\u8981\u4e00\u4e2a\u65f6\u949f\u5468\u671f</li> <li>\u6bcf\u6b21\u603b\u7ebf\u64cd\u4f5c\u4e4b\u95f4\u9700\u8981\u4e24\u4e2a\u65f6\u949f\u5468\u671f</li> <li>\u4ece\u5185\u5b58\u8bfb\u53d6\u524d 4 \u4e2a\u5b57\u9700\u8981\u7684\u65f6\u95f4\u4e3a 200ns\uff0c\u6bcf\u591a\u8bfb\u53d6 4 \u5b57\u9700\u8981 20ns\uff0c\u5e76\u4e14\u5047\u8bbe\u4f20\u8f93\u6700\u8fd1\u8bfb\u53d6\u7684\u6570\u636e\u548c\u8bfb\u53d6\u63a5\u4e0b\u6765\u7684\u56db\u4e2a\u5b57\u64cd\u4f5c\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c</li> </ul> <p>Question</p> QuestionAnswer <p>\u5206\u522b\u6c42\u51fa\u8bbf\u95ee 4 \u5b57\u5927\u5c0f\u5757\u7528\u4e8e\u4f20\u8f93\u548c\u8bbf\u95ee 16 \u5b57\u5927\u5c0f\u5757\u7528\u4e8e\u4f20\u8f93\u65f6\uff0c\u8bfb\u53d6 256 \u5b57\u6570\u636e\u7684\u5e26\u5bbd\u548c\u5ef6\u8fdf\u3002\u540c\u65f6\u5206\u522b\u8ba1\u7b97\u51fa\u6bcf\u79d2\u7684\u6709\u6548\u603b\u6570\u4e8b\u52a1\u6570</p> 4 \u5b57\u5927\u5c0f\u575716 \u5b57\u5927\u5c0f\u5757 <p>\u6bcf\u4e2a\u5757\u9700\u8981\uff1a</p> <ul> <li>1 \u4e2a\u65f6\u949f\u5468\u671f\u628a\u5730\u5740\u9001\u7ed9\u5185\u5b58</li> <li>\\(\\frac{200ns}{5ns/cycle}=40\\) \u4e2a\u65f6\u949f\u5468\u671f\u6765\u8bfb\u53d6\u5185\u5b58</li> <li>2 \u4e2a\u65f6\u949f\u5468\u671f\u628a\u6570\u636e\u4ece\u5185\u5b58\u9001\u56de\u6765</li> <li>\u5728\u6bcf\u6b21\u603b\u7ebf\u64cd\u4f5c\u4e4b\u95f4\u9700\u8981 2 \u4e2a\u65f6\u949f\u5468\u671f</li> </ul> <p>\u603b\u5171 45 \u4e2a\u65f6\u949f\u5468\u671f\uff0c\u800c\u603b\u5171\u6709 \\(\\frac{256}{4}=64\\) \u4e2a\u5757</p> <p>\u6240\u4ee5\u4f20\u8f93 256 \u4e2a\u5b57\u9700\u8981 \\(45\\times 64=2880\\) \u4e2a\u65f6\u949f\u5468\u671f</p> <p>\u4f20\u8f93 256 \u4e2a\u5b57\u7684\u5ef6\u8fdf\u4e3a \\(2880Cycles\\times(5ns/cycle)=14400ns\\)</p> <p>\u6240\u4ee5\u603b\u7ebf\u5e26\u5bbd\u4e3a \\((256\\times 4)Bytes\\times\\frac{1\\text{ second}}{14400ns}=71.11MB/s\\)</p> <p>\u6bcf\u79d2\u7684\u603b\u7ebf\u4e8b\u52a1\u6570\u4e3a \\(64\\text{transactions}\\times\\frac{1\\text{ second}}{14400ns}=4.44M\\text{ transactions/s}\\)</p> <p>     \u7b2c\u4e00\u4e2a\u5757\u9700\u8981\uff1a</p> <pre><code>- 1 \u4e2a\u65f6\u949f\u5468\u671f\u628a\u5730\u5740\u9001\u7ed9\u5185\u5b58\n- $\\frac{200ns}{5ns/cycle}=40$ \u4e2a\u65f6\u949f\u5468\u671f\u6765\u8bfb\u53d6\u5185\u5b58\n- 2 \u4e2a\u65f6\u949f\u5468\u671f\u5c06\u6570\u636e\u4f20\u9001\u56de\u6765\uff0c\u540c\u65f6\u63a5\u4e0b\u6765 4 \u4e2a\u5b57\u88ab\u8bfb\u53d6\n- \u5728\u6bcf\u6b21\u603b\u7ebf\u64cd\u4f5c\u4e4b\u95f4\u9700\u8981 2 \u4e2a\u65f6\u949f\u5468\u671f\n\n\u6839\u636e\u4e0a\u9762\u7684\u793a\u610f\u56fe\uff0c\u603b\u5171\u9700\u8981 $1+40+4\\times 3+2+2=57$ \u4e2a\u65f6\u949f\u5468\u671f\uff0c\u800c\u603b\u5171\u6709 $\\frac{256}{16}=16$ \u4e2a\u5757\n\n\u6240\u4ee5\u4f20\u8f93 256 \u4e2a\u5b57\u9700\u8981 $57\\times 16=912$ \u4e2a\u65f6\u949f\u5468\u671f\n\n\u4f20\u8f93 256 \u4e2a\u5b57\u7684\u5ef6\u8fdf\u4e3a $912Cycles\\times(5ns/cycle)=4560ns$\n\n\u6240\u4ee5\u603b\u7ebf\u5e26\u5bbd\u4e3a $(256\\times 4)Bytes\\times\\frac{1\\text{ second}}{45600ns}=224.56MB/s$\n\n\u6bcf\u79d2\u7684\u603b\u7ebf\u4e8b\u52a1\u6570\u4e3a $16\\text{transactions}\\times\\frac{1\\text{ second}}{4560ns}=3.51M\\text{ transactions/s}$\n</code></pre> <p>\u6240\u4ee5 16 \u5b57\u5927\u5c0f\u7684\u5757\u5e26\u5bbd\u6bd4 4 \u5b57\u5927\u5c0f\u7684\u5757\u5e26\u5bbd\u9ad8 3.16 \u500d</p> <p>\u4ece\u4e0a\u9762\u4f8b\u5b50\u6211\u4eec\u53ef\u4ee5\u5f97\u77e5\uff0c\u5982\u679c\u60f3\u8981\u63d0\u9ad8\u5e26\u5bbd\uff0c\u53ef\u4ee5\uff1a</p> <ul> <li>\u589e\u5927\u6570\u636e\u603b\u7ebf\u7684\u5bbd\u5ea6</li> <li>\u4f7f\u7528\u5206\u5f00\u7684\u5730\u5740\u548c\u6570\u636e\u5757</li> <li>\u4f20\u8f93\u591a\u4e2a\u5b57</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%206/#4-interfacing-io-devices-to-the-memory-processor-and-operating-system","title":"4 Interfacing I/O Devices to the Memory, Processor, and Operating System","text":"<p>I/O\u00a0\u7cfb\u7edf\u7684\u4e09\u5927\u7279\u5f81\uff1a</p> <ul> <li>\u591a\u4e2a\u7a0b\u5e8f\u5171\u7528\uff08Share\uff09I/O\u00a0\u7cfb\u7edf</li> <li>\u901a\u5e38\u4f7f\u7528\u4e2d\u65ad\uff08Interrupt\uff09\u6765\u5b9e\u73b0\u00a0I/O\u00a0\u64cd\u4f5c\u7684\u4fe1\u606f\u4f20\u9012\uff08Communicate\uff09<ul> <li>\u5fc5\u9700\u7684\u4f20\u9012\u7c7b\u578b\u6709\uff1a<ul> <li>OS\u00a0\u5fc5\u987b\u80fd\u591f\u4e3a\u00a0I/O\u00a0\u8bbe\u5907\u63d0\u4f9b\u547d\u4ee4\uff08Commands\uff09<ul> <li>\u5185\u5b58\u6620\u5c04\u00a0I/O\uff1a\u90e8\u5206\u7684\u5185\u5b58\u5730\u5740\u7a7a\u95f4\u4f1a\u88ab\u5206\u914d\u7ed9\u00a0I/O\u00a0\u8bbe\u5907\uff0c\u4e14\u00a0<code>lw</code>\u00a0\u548c\u00a0<code>sw</code>\u00a0\u6307\u4ee4\u80fd\u591f\u8bbf\u95ee\u00a0I/O\u00a0\u7aef\u53e3</li> <li>\u7279\u6b8a\u00a0I/O\u00a0\u6307\u4ee4<ul> <li>\u8f93\u5165\uff1a<code>in al, port</code></li> <li>\u8f93\u51fa\uff1a<code>out port, al</code></li> </ul> </li> <li>\u547d\u4ee4\u7aef\u53e3\u3001\u6570\u636e\u7aef\u53e3<ul> <li>\u72b6\u6001\u5bc4\u5b58\u5668\uff08\u8bb0\u5f55\u5b8c\u6210\u4f4d\uff08Done Bit\uff09\u3001\u9519\u8bef\u4f4d\uff08Error Bit\uff09\u7b49\uff09</li> <li>\u6570\u636e\u5bc4\u5b58\u5668\u3001\u547d\u4ee4\u5bc4\u5b58\u5668</li> </ul> </li> </ul> </li> <li>\u5f53\u00a0I/O\u00a0\u8bbe\u5907\u5b8c\u6210\u64cd\u4f5c\u6216\u9047\u5230\u9519\u8bef\u65f6\uff0c\u5fc5\u987b\u901a\u77e5\uff08Notify\uff09OS</li> <li>\u6570\u636e\u5fc5\u987b\u5728\u5185\u5b58\u548c\u00a0I/O\u00a0\u8bbe\u5907\u4e4b\u95f4\u4f20\u8f93</li> </ul> </li> </ul> </li> <li>\u5bf9\u00a0I/O\u00a0\u8bbe\u5907\u7684\u5e95\u5c42\u63a7\u5236\u8f83\u4e3a\u590d\u6742</li> </ul> <p>\u5904\u7406\u5668\u4e0e\u00a0I/O\u00a0\u8bbe\u5907\u4e4b\u95f4\u7684\u901a\u4fe1\uff1a</p> <ul> <li>\u8f6e\u8be2\uff08Polling\uff09\uff1a\u5904\u7406\u5668\u5468\u671f\u6027\u5730\u68c0\u67e5\u72b6\u6001\u4f4d\uff0c\u89c2\u5bdf\u5f53\u524d\u662f\u5426\u9700\u8981\u8fdb\u884c\u4e0b\u4e00\u6b65\u00a0I/O\u00a0\u64cd\u4f5c<ul> <li>\u7f3a\u70b9\uff1a\u6d6a\u8d39\u5927\u91cf\u7684\u5904\u7406\u5668\u65f6\u95f4</li> </ul> </li> <li> <p>\u4e2d\u65ad\uff08Interrupt\uff09</p> <ul> <li>\u4e2d\u65ad\u9a71\u52a8\u7684\u00a0I/O\u00a0\u6a21\u5f0f\uff0c\u4e2d\u65ad\u7528\u6765\u901a\u77e5\u5904\u7406\u5668I/O\u8bbe\u5907\u9700\u8981\u5904\u7406\u5668 \u7684\u6ce8\u610f\u4f18\u70b9\u662f\u5e76\u53d1\u64cd\u4f5c\uff08Concurrent Operation\uff09</li> <li>\u4e00\u4e2aI/O\u4e2d\u65ad\u5c31\u50cf\u5f02\u5e38\u4e00\u6837\uff0c\u4f46\u662f\u6709\u4e24\u4e2a\u91cd\u8981\u533a\u522b\uff1a\u4ece\u6307\u4ee4\u6267\u884c\u7684\u89d2\u5ea6\u8bf4\uff0cI/O\u4e2d\u65ad\u662f\u5f02\u6b65\u7684\uff0c\u4e2d\u65ad\u4e0e\u4efb\u4f55\u6307\u4ee4\u4e0d\u60f3\u7ba1\u4e14\u4e0d\u5f71\u54cd\u4efb\u4f55\u6307\u4ee4\u7684\u5b8c\u6210\uff1b\u4e2d\u65ad\u4ee3\u8868\u7684\u8bbe\u5907\u6709\u4e0d\u540c\u7684\u4f18\u5148\u7ea7 </li> </ul> </li> </ul> <p>\u76f4\u63a5\u5185\u5b58\u8bbf\u95ee\uff08Direct Memory Access, DMA\uff09\uff1a\u8bbe\u5907\u63a7\u5236\u5668\u76f4\u63a5\u5411/\u4ece\u5185\u5b58\u4f20\u8f93\u6570\u636e\uff0c\u4e0d\u9700\u8981\u5904\u7406\u5668\u7684\u4ecb\u5165</p> <ul> <li> <p>DMA\u00a0\u4f20\u8f93\u6a21\u5f0f</p> <ul> <li>\u9996\u5148\u5904\u7406\u5668\u901a\u8fc7\u63d0\u4f9b\u4e00\u4e9b\u4fe1\u606f\u6765\u8bbe\u7f6e\u00a0DMA\u00a0\u6a21\u5f0f\uff0c\u5177\u4f53\u5305\u62ec\uff1a\u8bbe\u5907\u00a0ID\u3001\u64cd\u4f5c\u3001\u5f85\u4f20\u8f93\u6570\u636e\u7684\u5185\u5b58\u6e90\u5730\u5740\u548c\u76ee\u6807\u5730\u5740\u3001\u9700\u8981\u4f20\u8f93\u7684\u5b57\u8282\u6570\u7b49</li> <li>DMA\u00a0\u5f00\u59cb\u6267\u884c\u64cd\u4f5c\uff0c\u5e76\u5bf9\u603b\u7ebf\u8fdb\u884c\u4ef2\u88c1\u3002\u82e5\u67d0\u4e2a\u8bf7\u6c42\u9700\u8981\u5728\u603b\u7ebf\u4e0a\u591a\u6b21\u4f20\u8f93\u6570\u636e\uff0c\u90a3\u4e48\u00a0DMA\u00a0\u5355\u5143\u751f\u6210\u4e0b\u4e00\u4e2a\u5185\u5b58\u7684\u5730\u5740\uff0c\u5e76\u53d1\u8d77\u4e0b\u4e00\u6b21\u4f20\u8f93</li> <li>\u4e00\u65e6\u00a0DMA\u00a0\u4f20\u8f93\u5b8c\u6210\uff0c\u63a7\u5236\u5668\u5411\u5904\u7406\u5668\u53d1\u8d77\u4e2d\u65ad\uff0c\u968f\u540e\u68c0\u67e5\u662f\u5426\u53d1\u751f\u9519\u8bef </li> </ul> </li> </ul> <p>\u6bd4\u8f83\u4e09\u79cd\u901a\u4fe1\u65b9\u5f0f\u7684\u5f00\u9500</p> <p>\u5047\u8bbe\uff1a</p> <ul> <li>\u5904\u7406\u5668\u7684\u65f6\u949f\u9891\u7387\u4e3a 500 MHz</li> <li>\u8f6f\u76d8\u4ee5 16 \u4f4d\u4e3a\u5355\u5143\u4f20\u8f93\u6570\u636e\u7ed9\u5904\u7406\u5668\uff0c\u5e76\u4e14\u4f20\u8f93\u901f\u5ea6\u4e3a 50KB/s</li> <li>\u786c\u76d8\u4ee5 4 \u5b57\u7684\u5757\u4e3a\u5355\u5143\u4f20\u8f93\u6570\u636e\uff0c\u4f20\u8f93\u901f\u5ea6\u4e3a 4MB/s</li> <li>\u6ca1\u6709\u9519\u6f0f\u4efb\u4f55\u6570\u636e\u4f20\u8f93</li> </ul> \u8f6e\u8be2\u4e2d\u65adDMA QuestionAnswer <p>\u5047\u8bbe\uff1a</p> <ul> <li>\u8f6e\u8be2\u64cd\u4f5c\u9700\u8981\u7684\u65f6\u949f\u5468\u671f\u6570\u4e3a 400</li> <li>\u8f6e\u8be2\u64cd\u4f5c\u8db3\u591f\u9891\u7e41\uff0c\u6240\u6709\u7684\u6570\u636e\u90fd\u6ca1\u6709\u7f3a\u5931</li> <li>\u6240\u6709\u8bbe\u5907\u5927\u6982\u7387\u4e00\u76f4\u90fd\u975e\u5e38\u5fd9\u788c\uff08\u5e94\u8be5\u662f\u88ab\u5360\u7528\u7684\u610f\u601d\uff09</li> <li>\u9f20\u6807\u5fc5\u987b\u6bcf\u79d2\u949f\u8f6e\u8be2 30 \u6b21\uff0c\u786e\u4fdd\u6211\u4eec\u6ca1\u6709\u9519\u6f0f\u7528\u6237\u7684\u4efb\u4f55\u52a8\u4f5c</li> </ul> <p>\u6c42\u51fa CPU \u6d6a\u8d39\u5728\u9f20\u6807\u3001\u8f6f\u76d8\u548c\u786c\u76d8\u7684\u65f6\u95f4\u6bd4\u4f8b</p> <p>\u5bf9\u4e8e\u9f20\u6807\u6765\u8bf4\uff1a\u6bcf\u79d2\u4e3a\u4e86\u8f6e\u8be2\u9700\u8981\u7684\u65f6\u949f\u5468\u671f\u4e3a \\(30\\times 400=12000\\text{ Cycles}\\)\uff0c\u5219\u6d6a\u8d39\u6bd4\u4f8b\u4e3a \\(\\frac{12\\times 10^3}{500\\times 10^6}=0.002\\%\\)</p> <p>\u5bf9\u4e8e\u8f6f\u76d8\u6765\u8bf4\uff0c\u6bcf\u79d2\u9700\u8981\u7684\u8f6e\u8be2\u6b21\u6570\u4e3a \\(\\frac{50KB}{2B}=25K\\)\uff0c\u9700\u8981\u7684\u65f6\u949f\u5468\u671f\u4e3a \\(25K\\times 400=10\\times 10^6\\)\uff0c\u5219\u6d6a\u8d39\u6bd4\u4f8b\u4e3a \\(\\frac{10\\times 10^6}{500\\times 10^6}=2\\%\\)</p> <p>\u5bf9\u4e8e\u786c\u76d8\u6765\u8bf4\uff0c\u6bcf\u79d2\u9700\u8981\u7684\u8f6e\u8be2\u6b21\u6570\u4e3a \\(\\frac{4MB}{16B}=0.25M\\)\uff0c\u9700\u8981\u7684\u65f6\u949f\u5468\u671f\u4e3a \\(0.25M\\times 400=10\\times 10^7\\)\uff0c\u5219\u6d6a\u8d39\u6bd4\u4f8b\u4e3a \\(\\frac{10\\times 10^7}{500\\times 10^6}=20\\%\\)</p> <p>\u53ef\u4ee5\u770b\u51fa\uff0c\u5bf9\u4e8e\u9f20\u6807\u6765\u8bf4\uff0c\u8f6e\u8be2\u662f\u4e0d\u4f1a\u592a\u5927\u5f71\u54cd\u5230\u5904\u7406\u5668\u7684\u6027\u80fd\u7684\uff0c\u4f46\u662f\u5bf9\u4e8e\u786c\u76d8\u6765\u8bf4\u5c31\u662f\u4e0d\u53ef\u63a5\u53d7\u7684\u4e86</p> QuestionAnswer <p>\u5047\u8bbe\u6bcf\u6b21\u6570\u636e\u4f20\u8f93\uff0c\u5305\u62ec\u4e2d\u65ad\u65f6\u95f4\uff0c\u52a0\u8d77\u6765\u4e00\u5171\u9700\u8981 500 \u4e2a\u65f6\u949f\u5468\u671f</p> <p>\u5982\u679c\u786c\u76d8\u53ea\u5728 5% \u7684\u65f6\u95f4\u4e2d\u4f20\u8f93\u6570\u636e\uff0c\u6c42\u51fa\u5904\u7406\u5668\u6d6a\u8d39\u7684\u65f6\u95f4\u6bd4\u4f8b</p> <p>\u6211\u4eec\u9996\u5148\u5047\u8bbe\u786c\u76d8\u5728 100% \u7684\u65f6\u95f4\u4e2d\u4f20\u8f93\u6570\u636e\uff0c\u6b64\u65f6\u4e2d\u65ad\u7387\u548c\u8f6e\u8be2\u7387\u662f\u4e00\u6837\u7684\uff0c\u5bf9\u4e8e\u786c\u76d8\u6765\u8bf4\u6bcf\u79d2\u7684\u65f6\u949f\u5468\u671f\u4e3a \\(0.25M\\times 500=125\\times 10^6\\text{ Cycles Per Second}\\)\uff0c\u6b64\u65f6\u7684\u6d6a\u8d39\u6bd4\u4f8b\u4e3a \\(\\frac{125\\times 10^6}{500\\times 10^6}=25\\%\\)</p> <p>\u5b9e\u9645\u4e0a\u786c\u76d8\u53ea\u5728 5% \u7684\u65f6\u95f4\u4e2d\u4f20\u8f93\u6570\u636e\uff0c\u90a3\u4e48\u6d6a\u8d39\u6bd4\u4f8b\u5373\u4e3a \\(25%\\times 5\\%=1.25\\%\\)</p> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\uff0c\u4e00\u4e2a\u4e2d\u65ad\u9a71\u52a8\u7684 I/O \u8bbe\u5907\u5982\u679c\u5e76\u6ca1\u6709\u5728\u4f20\u8f93\u6570\u636e\u65f6\uff0c\u662f\u4e0d\u9700\u8981 CPU \u65f6\u95f4\u7684\u3002\u8fd9\u4fbf\u662f\u7ec8\u7aef\u9a71\u52a8\u76f8\u5bf9\u4e8e\u8f6e\u8be2\u7684\u4f18\u70b9\u3002</p> QuestionAnswer <p>\u5047\u8bbe\uff1a</p> <ul> <li>DMA \u4f20\u8f93\u7684\u521d\u59cb\u8bbe\u7f6e\u9700\u8981 1000 \u4e2a\u65f6\u949f\u5468\u671f</li> <li>DMA \u7ed3\u675f\u540e\u7684\u4e2d\u65ad\u5904\u7406\u9700\u8981 500 \u4e2a\u65f6\u949f\u5468\u671f</li> <li>\u4ece\u78c1\u76d8\u4e2d\u4f20\u8f93\u6570\u636e\u7684\u5e73\u5747\u5927\u5c0f\u4e3a 8KB</li> <li>\u78c1\u76d8\u5728 100% \u7684\u65f6\u95f4\u90fd\u5728\u4f20\u8f93\u6570\u636e</li> </ul> <p>\u6c42\u51fa\u5904\u7406\u5668\u6d6a\u8d39\u7684\u65f6\u95f4\u6bd4\u4f8b</p> <p>\u6bcf\u6b21\u4f20\u8f93 8KB \u7684\u65f6\u95f4\u4e3a \\(\\frac{8KB}{4MB/\\text{second}}=2\\times 10^{-3}\\text{seconds}\\)</p> <p>\u90a3\u4e48\u6bcf\u79d2\u9700\u8981\u7684\u65f6\u949f\u5468\u671f\u6570\u4e3a \\(\\frac{(1000+500)\\frac{\\text{Cycles}}{\\text{Transfer}}}{2\\times 10^{-3}\\frac{\\text{Seconds}}{\\text{Transfer}}}=750\\times 10^3\\frac{\\text{Clock Cycles}}{\\text{Second}}\\)</p> <p>\u5219\u6d6a\u8d39\u65f6\u95f4\u6bd4\u4f8b\u4e3a \\(\\frac{750\\times 10^3}{500\\times 10^6}=0.2%\\)</p> <p>\u4e0e\u8f6e\u8be2\u548c\u4e2d\u65ad\u9a71\u52a8\u7684 I/O \u90fd\u4e0d\u76f8\u540c\uff0cDMA \u53ef\u4ee5\u88ab\u7528\u4e8e\u8fde\u63a5\u786c\u76d8\uff0c\u800c\u4e0d\u4f1a\u6d88\u8017\u5355\u4e2a I/O \u7684\u6240\u6709\u5904\u7406\u5668\u5468\u671f</p>"},{"location":"note/courses/computer_organization/Chapter%206/#5-io-performance-measures","title":"5 I/O Performance Measures","text":"<p>\u51e0\u7c7b\u5173\u4e8e\u00a0I/O\u00a0\u7684\u57fa\u51c6\u6d4b\u8bd5\uff08Benchmark\uff09\uff1a</p> <ul> <li>\u8d85\u7ea7\u8ba1\u7b97\u673a\u00a0I/O\u00a0\u57fa\u51c6\u6d4b\u8bd5</li> <li>\u4e8b\u52a1\u5904\u7406\u00a0I/O\u00a0\u57fa\u51c6\u6d4b\u8bd5<ul> <li>I/O\u00a0\u901f\u7387\uff1a\u6bcf\u79d2\u8bbf\u95ee\u786c\u76d8\u7684\u6570\u91cf\uff08\u6570\u636e\u901f\u7387\u7684\u5012\u6570\uff09</li> </ul> </li> <li>\u6587\u4ef6\u7cfb\u7edf\u00a0I/O\u00a0\u57fa\u51c6\u6d4b\u8bd5\uff1a\u5305\u62ec\u00a0MakeDir\u3001Copy\u3001ScanDir\u3001ReadAll\u3001Make\u00a0\u64cd\u4f5c\u7b49</li> </ul>"},{"location":"note/courses/computer_organization/Chapter%206/#6-designing-an-io-system","title":"6 Designing an I/O System","text":"<p>\u8bbe\u8ba1\u00a0I/O\u00a0\u7cfb\u7edf\u7684\u901a\u7528\u65b9\u6cd5\uff1a</p> <ul> <li>\u627e\u5230\u00a0I/O\u00a0\u7cfb\u7edf\u6700\u5f31\u7684\u8fde\u63a5\uff0c\u5b83\u662f\u00a0I/O\u00a0\u901a\u8def\u4e0a\u9650\u5236\u8bbe\u8ba1\u7684\u4e00\u4e2a\u7ec4\u4ef6\u3002\u5de5\u4f5c\u8d1f\u8f7d\u548c\u914d\u7f6e\u9650\u5236\u90fd\u53ef\u4ee5\u51b3\u5b9a\u6700\u5f31\u94fe\u63a5\u7684\u4f4d\u7f6e</li> <li>\u901a\u8fc7\u914d\u7f6e\u8be5\u90e8\u4ef6\u6765\u7ef4\u6301\u6240\u9700\u5e26\u5bbd\u3002\u786e\u5b9a\u7cfb\u7edf\u5176\u4f59\u90e8\u5206\u7684\u8981\u6c42\uff0c\u5e76\u914d\u7f6e\u5b83\u4eec\u4ee5\u652f\u6301\u6b64\u5e26\u5bbd</li> </ul> <p>Example</p> QuestionAnswer <p></p> <p></p>"},{"location":"note/courses/computer_organization/HW1/","title":"HW1","text":"<p>1.2 a. Performance via Pipelining b. Dependability via Redundancy c. Performance via Prediction d. Make common case fast e. Hierarchy of Memories f. Design for Moore's Law g. Use Abstraction to Simplify Design h. Performance via Parallelism</p> <p>1.5 a. P2 b.</p> processor number of cycles number of instructions p1 30G 20G p2 25G 25G p3 40G \\(\\frac {200}{11}G\\) c. \\(C(p1)=1.5\\times 1.2=1.8\\) \\(C(p2)=1\\times 1.2=1.2\\) \\(C(p3)= 2.2*1.2=2.64\\) \\(f(p1)= \\frac {20G\\times 1.8}{7}=5.14Ghz\\) \\(f(p2)=\\frac {25G\\times 1.2}{7}=4.29GHz\\) \\(f(p3)=\\frac {\\frac {200}{11}G\\times 2.64}{7}=6.75GHz\\) <p>1.6 a.  - P1:\\(global CPI=1\\times 0.1+2\\times 0.2+3\\times 0.5+3\\times 0.2=2.6\\) - P2:\\(global CPI = 2.0\\) b. p1:\\(cycles=2.6*1.0E6=2.6E6\\) p2:\\(cycles=2.0*1.0E6=2.0E6\\) 1.7 a.\\(CPI(A)=1.1 ~~CPI(B)=1.25\\) b.\\(\\(\\frac {f_B}{f_A}=\\frac {N(B)\\times CPI(B)}{N(A)\\times CPI(A)}=1.37\\)\\) c.\\(\\frac {T_A} {T_{new}}=1.67\\) \\(\\frac {T_B}{T_new}=2.27\\) 1.13 1. \\(T_{fp}=56s\\) \\(T_{new}=236s,Reduction=5.6\\%\\) 2. \\(\\(reduction = 20\\%\\)\\) 3.  $$  \\begin{align} &amp;T_{reduction}=0.2*250s=50s&gt; T_{branch} \\ &amp;So~it ~is ~impossible \\end{align}$$</p>"},{"location":"note/courses/database%20system/Chapter%2011/","title":"Query Processing","text":"Abstract <ul> <li>Basic Steps in Query Processing</li> <li>Measures of Query Cost</li> <li>Selection Operation  </li> <li>Sorting </li> <li>Join Operation </li> <li>Other Operations</li> <li>Evaluation of Expressions</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2011/#1-basic-steps-in-query-processing","title":"1 Basic Steps in Query Processing","text":"<ul> <li>Parsing and translation: <ul> <li>translate the query into its internal form.\u00a0 This is then translated into relational algebra.</li> <li>parser\u68c0\u67e5\u8bed\u6cd5\uff0c\u786e\u8ba4\u5173\u7cfb</li> </ul> </li> <li>Optimization: \u9009\u62e9\u5f00\u9500\u6700\u4f4e\u7684evaluation plan</li> <li>Evaluation\uff1a </li> </ul> <p>\u7ecf\u8fc7\u8bed\u6cd5\u5206\u6790\u3001\u8bed\u4e49\u68c0\u67e5\u7ffb\u8bd1\u6210\u5173\u7cfb\u8868\u8fbe\u5f0f\uff0c\u7ecf\u8fc7\u67e5\u8be2\u4f18\u5316\u8f6c\u5316\u6210\u6267\u884c\u8ba1\u5212\uff08\u76ee\u6807\u4ee3\u7801\uff09\uff0c\u7531\u6c42\u503c\u5f15\u64ce\u5f97\u5230\u8f93\u51fa\u3002</p> <p>Example</p> <p> </p> <p>\u903b\u8f91\u4f18\u5316\uff1a\u628a\u9009\u62e9\u8fd0\u7b97\u5f80\u53f6\u5b50\u4e0a\u63a8,\u5c3d\u91cf\u5148\u505a\uff1b\u5148\u8fde\u63a5\u7684\u662f\u7ed3\u679c\u6bd4\u8f83\u5c0f\u7684\u3002\u4f7f\u5f97\u4e2d\u95f4\u7ed3\u679c\u6bd4\u8f83\u5c0f\uff0c\u80fd\u591f\u51cf\u5c11\u5f00\u9500 An evaluation plan defines exactly what algorithm is used for each operation, and how the execution of the operations is coordinated.  \u6bcf\u4e2a\u64cd\u4f5c\u90fd\u6709\u5f88\u591a\u79cd\u7b97\u6cd5  </p> <p>\u7ecf\u8fc7\u4ee3\u4ef7\u4f30\u7b97\uff0c\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a\u7b97\u6cd5\u7684\u4ee3\u4ef7\u6700\u5c0f\u3002\u5982\u4e0a\u56fe\u5de6\u8fb9\u4f7f\u7528\u4e86 B+ \u6811\u7d22\u5f15\uff0c\u53f3\u8fb9\u4f7f\u7528\u4e86\u7ebf\u6027\u626b\u63cf\u3002 pipeline \u8868\u793a\u6700\u4e0b\u9762\u4e24\u6b65\u53ef\u4ee5\u6d41\u6c34\u7ebf\uff0c\u5373\u5e76\u884c\u8ba1\u7b97\u3002 \uff08\u706b\u5c71\u6a21\u578b\uff09</p>"},{"location":"note/courses/database%20system/Chapter%2011/#2-measures-of-query-cost","title":"2 Measures of Query Cost","text":"<p>Typically disk access is the predominant cost, and is also relatively easy to estimate.  \u5ffd\u7565 CPU cost. Measured by taking into account</p> <ul> <li>Number of seeks </li> <li>Number of blocks read </li> <li>Number of blocks written  \u901a\u5e38\u5199\u7684\u65f6\u95f4\u6bd4\u8bfb\u7684\u65f6\u95f4\u4e45\uff0c\u56e0\u4e3a\u6211\u4eec\u53ef\u80fd\u9700\u8981\u68c0\u9a8c\u5199\u7684\u7ed3\u679c</li> </ul> <p>For simplicity we just use the number of block transfers from disk and the number of seeks as the cost measures</p> <ul> <li>\\(t_T\\) \u2013 time to transfer one block\uff08\u4e0d\u533a\u5206\u8bfb\u5199\uff09</li> <li>\\(t_S\\) \u2013 time for one seek</li> <li>Cost for b block transfers plus S seeks \\(b * t_T + S * t_S\\) </li> </ul> <p>We often use worst case estimates, assuming only the minimum amount of memory needed for the operation is available. \u5373\u5047\u8bbe\u7f13\u51b2\u533a\u6700\u5c0f\u7684\u65f6\u5019\uff0c\u800c\u4e14\u90fd\u662f\u4ece\u6587\u4ef6\u4e2d\u8bfb\u53d6\u800c\u975e\u4ece buffer \u4e2d\u8bfb\u53d6\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2011/#21-measure-of-query-cost","title":"2.1 Measure of Query Cost","text":"<p>We often use worst case estimates, assuming only the minimum amount of memory needed for the operation is available</p>"},{"location":"note/courses/database%20system/Chapter%2011/#3-selection-operation","title":"3 Selection Operation","text":""},{"location":"note/courses/database%20system/Chapter%2011/#31-file-scan","title":"3.1 File scan","text":"<p>Algorithm A1 (linear search). Scan each file block and test all records to see whether they satisfy the selection condition. \uff08\u5047\u5b9a\u6570\u636e\u5757\u90fd\u662f\u8fde\u7eed\u5b58\u653e\u7684\uff09</p> <ul> <li>worst cost = \\(b_r*t_T+t_S\\) \\(b_r\\) \u662f\u8981\u627e\u7684\u5757\u7684\u6570\u91cf</li> <li>average cost = \\(b_r/2*t_T+t_S\\) \u8fd9\u91cc\u5982\u679c\u641c\u7d22\u7684\u662f key, \u90a3\u6211\u4eec\u626b\u5230\u8fd9\u4e2a\u8bb0\u5f55\u5c31\u53ef\u4ee5\u505c\u6b62\u3002</li> </ul> <p>Linear search can be applied regardless of - selection condition or - ordering of records in the file, or - availability of indices</p> <p>binary search generally does not make sense since data is not stored consecutively</p>"},{"location":"note/courses/database%20system/Chapter%2011/#32-index-scan","title":"3.2 Index scan","text":"<p>A2 (primary B+-tree index / clustering B+-tree index, equality on key).   \u5728\u4e3b\u952e\u4e0a\u67e5\u627e</p> <p>cost = \\((h_i+1)* (t_T+t_S)\\)</p> \u4e3b\u7d22\u5f15, key \u4e0a\u7684\u7b49\u503c\u67e5\u627e <p> </p> <p>\u8fd9\u91cc\u7684\u9ad8\u5ea6\u4ece 1 \u5f00\u59cb\uff08+1 \u8868\u793a\u6700\u540e\u5230\u53f6\u5b50\u8282\u70b9\uff0c\u9700\u8981\u4ece\u78c1\u76d8\u4e2d\u8bfb\uff09</p> <p>A3 (primary B+-tree index/ clustering B+-tree index, equality on nonkey). Records will be on consecutive blocks \u6b64\u65f6\u7d22\u5f15\u7684\u503c\u4e0d\u662f\u4e3b\u952e. b \u8868\u793a\u641c\u7d22\u7801\u5bf9\u5e94\u7684\u8bb0\u5f55\u6570\u91cf\u3002</p> <p>cost = \\(h_i *(t_T+t_S) + t_S + t_T *b\\)</p> \u4e3b\u7d22\u5f15, nonkey \u4e0a\u7684\u7b49\u503c\u67e5\u627e <p> </p> <p>A4 (secondary B+-tree index , equality on key).    </p> <p>cost = \\((h_i + 1) * (t_T + t_S)\\)</p> \u8f85\u52a9\u7d22\u5f15, key \u4e0a\u7684\u7b49\u503c\u67e5\u627e <p> </p> <p>A4\u2019 (secondary B+-index on nonkey, equality).</p> <p>Cost = \\((h_i + m+ n) * (t_T + t_S)\\) \u8fd9\u91cc m \u8868\u793a\u653e\u6307\u9488\u7684\u5757\u7684\u6570\u91cf, n \u8868\u793a\u5bf9\u5e94\u78c1\u76d8\u91cc\u7684\u8bb0\u5f55\u7684\u6570\u91cf\u3002</p> \u8f85\u52a9\u7d22\u5f15, nonkey \u4e0a\u7684\u7b49\u503c\u67e5\u627e <p> </p>"},{"location":"note/courses/database%20system/Chapter%2011/#33-selections-involving-comparisons","title":"3.3 Selections Involving Comparisons","text":"<p>\u67e5\u8be2 \\(\\sigma_{A\\leq V}(r)\\) (or \\(\\sigma_{A\\geq V}(r)\\))</p> <p>A5 (primary B+-index / clustering B+-index index, comparison). (Relation is sorted on A) </p> <ul> <li>\u9996\u5148\u627e\u5230\u7b2c\u4e00\u4e2a \\(\\geq v\\). \u7684\u503c</li> <li>\u628a\u540e\u9762\u7684\u5757\u987a\u5e8f\u8bfb\u8fdb\u53bb Cost = \\(h_i * (t_T + t_S) + t_S + t_T * b\\) (\u540c\u60c5\u51b5 3)</li> </ul> \u4e3b\u7d22\u5f15, key \u4e0a\u7684\u6bd4\u8f83 <p> </p> <p>A6 (secondary B+-tree index, comparison). \u60c5\u51b5\u7c7b\u4f3c A4</p> \u8f85\u52a9\u7d22\u5f15, nonkey \u4e0a\u7684\u6bd4\u8f83 <p> </p>"},{"location":"note/courses/database%20system/Chapter%2011/#34-implementation-of-complex-selections","title":"3.4 Implementation of Complex Selections","text":"<p>Conjunction \\(\\sigma_{\\theta_1} \\wedge \\ldots \\wedge_{\\theta_n}(r)\\) \u53ef\u4ee5\u7ebf\u6027\u626b\u63cf\uff0c\u6216\u8005\u5229\u7528\u67d0\u4e2a\u5c5e\u6027\u7684 index \u5148\u67e5\u8be2\uff0c\u628a\u7b26\u5408\u7684\u8bfb\u5230\u5185\u5b58\u4e2d\uff0c\u518d\u68c0\u67e5\u5176\u4ed6\u5c5e\u6027\u3002 \u5982\u679c\u6709\u5f88\u591a\u4e2a\u5c5e\u6027\u90fd\u6709\u7d22\u5f15\uff0c\u6211\u4eec\u9009\u62e9\u4e2d\u95f4\u7ed3\u679c\u5c11\u7684\u3002</p> <p>A7 (conjunctive selection using one index). </p> <ul> <li>Select a combination of \\(\\theta_i\\) and algorithms A1 through A6 that results in the least cost for \\(\\sigma_{\\theta_i}(r)\\).</li> <li>Test other conditions on tuple after fetching it into memory buffer.</li> </ul> <p>A8 (conjunctive selection using composite index).  Use appropriate composite (multiple-key) index if available. \u5229\u7528\u590d\u5408\u7d22\u5f15</p> <p>A9 (conjunctive selection by intersection of identifiers). \u5bf9\u6bcf\u4e2a\u7d22\u5f15\u90fd\u8fdb\u884c\u67e5\u8be2\uff0c\u5c06\u7ed3\u679c\u62fc\u8d77\u6765</p>"},{"location":"note/courses/database%20system/Chapter%2011/#35-algorithms-for-complex-selections","title":"3.5 Algorithms for Complex Selections","text":"<ul> <li>Disjunction: \\(\\sigma_{\\theta_1} \\vee \\ldots \\vee_{\\theta_n}(r)\\) A10 (disjunctive selection by union of identifiers). <ul> <li>Applicable if all  conditions have available indices.  </li> <li>Otherwise use linear scan.</li> <li>Use corresponding index for each condition, and take union of all the obtained sets of record pointers. </li> <li>Then fetch records from file</li> </ul> </li> <li>Negation: \\(\\sigma_{\\neg \\theta}(r)\\)<ul> <li>Use linear scan on file   </li> <li>If very few records satisfy \\(\\neg \\theta\\), and an index is applicable to \\(\\theta\\)  Find satisfying records using index and fetch from file</li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2011/#36-bitmap-index-scan","title":"3.6 Bitmap Index Scan","text":""},{"location":"note/courses/database%20system/Chapter%2011/#4-sorting","title":"4 Sorting","text":"<p>For relations that don\u2019t fit in memory, external sort-merge is a good choice. </p> <p>Example</p> <p> </p> <p>\u521d\u59cb\u5185\u5b58\u653e\u4e0d\u4e0b\uff0c\u53ea\u80fd\u653e \\(M\\) pages. \u4e00\u6b21\u6027\u8bfb \\(M\\) \u5757\uff0c\u5728\u5185\u5b58\u5185\u6392\u5e8f\uff0c\u6392\u597d\u540e\u5148\u5199\u56de\uff0c\u5f62\u6210\u4e00\u4e2a\u5f52\u5e76\u6bb5\u3002\u518d\u8bfb\u5165\u7b2c\u4e8c\u6bb5\u5230\u5185\u5b58\u4e2d\uff0c\u6392\u5e8f\u540e\u518d\u5199\u56de\uff0c\u5f97\u5230\u82e5\u5e72\u5f52\u5e76\u6bb5(\\(\\dfrac{b_r}{M}\\)) \u4f1a\u6709 \\(2*\\dfrac{b_r}{M}\\) \u6b21 seek, \\(2*b_r\\) \u6b21 transfer. </p>"},{"location":"note/courses/database%20system/Chapter%2011/#41-procedure","title":"4.1 Procedure","text":"<p>Let \\(M\\) denote memory size (in pages). </p> <ul> <li>Create sorted runs(\u5f52\u5e76\u6bb5) Repeatedly do the following till the end of the relation:<ul> <li>Read M blocks of relation into memory     </li> <li>Sort the in-memory blocks</li> <li>Write sorted data to run \\(R_i\\); increment i. \u5047\u8bbe\u751f\u6210\u4e86 \\(N\\) \u4e2a\u5f52\u5e76\u6bb5</li> </ul> </li> <li> <p>Merge the runs </p> <ul> <li> <p>\\(N&lt;M\\) \u5982\u679c\u5f52\u5e76\u6bb5\u5c11\u4e8e\u53ef\u7528\u5185\u5b58\u9875 N \u8def\u5f52\u5e76  \u5f52\u5e76\u65f6\u6bcf\u4e00\u6bb5\u53ea\u9700\u8981\u4e00\u5757\u7f13\u51b2\u533a\uff08\u8f93\u51fa\u5757\u4e5f\u9700\u8981\u4e00\u5757\u7f13\u51b2\u533a\uff09 </p> </li> <li> <p>\\(N\\geq M\\) \u6bcf\u6b21 pass, \u6211\u4eec\u4e0d\u505c\u5730\u628a M-1 \u4e2a\u6bb5\u53d8\u6210\u4e86\u4e00\u4e2a\u5927\u7684\u5f52\u5e76\u6bb5\uff0c\u6b64\u65f6\u6570\u91cf\u51cf\u5c11\u4e3a\u539f\u6765\u7684 \\(\\dfrac{1}{M-1}\\). \u5982\u679c\u4ecd\u7136\u6570\u91cf\u8d85\u8fc7 M, \u7ee7\u7eed pass.  e.g. If M=11, and there are 90 runs, one pass reduces the number of runs to 9, each 10 times the size of the initial runs.  </p> </li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2011/#42-cost-analysis","title":"4.2 Cost analysis","text":"<ul> <li> <p>transfer      </p> <p>\u6211\u4eec\u4e0d\u8003\u8651\u6700\u540e\u4e00\u6b21\u5199\u78c1\u76d8\u7684 cost, \u56e0\u4e3a\u53ef\u80fd\u6d41\u6c34\u7ebf\u4f1a\u76f4\u63a5\u628a\u7ed3\u679c\u4ea4\u7ed9\u4e0b\u4e00\u6b65\u64cd\u4f5c\u3002 * seek  </p> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2011/#43-advanced-version","title":"4.3 Advanced version","text":"<p>\u6bcf\u4e00\u6b21\u8bfb\u8fdb\u53bb\u90fd\u8981 seek, \u53ef\u4ee5\u6539\u8fdb\u3002\u4e3a\u6bcf\u4e00\u4e2a\u5f52\u5e76\u6bb5\u5206\u914d\u591a\u4e2a\u7f13\u51b2\u533a\u3002\u8fd9\u6837\u6211\u4eec\u5b9a\u4f4d\u4e00\u6b21\u4e4b\u540e\u53ef\u4ee5\u8bfb\u5165\u591a\u5757\u8fdb\u5165\u7f13\u51b2\u533a\u3002 \u51cf\u5c11\u4e86 seek \u6b21\u6570\uff0c\u4f46\u8fd9\u6837\u8f6e\u6b21\u53ef\u80fd\u4f1a\u589e\u52a0\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2011/#5-join-operation","title":"5 Join Operation","text":"<p>Several different algorithms to implement joins</p> <ul> <li>Nested-loop join</li> <li>Block nested-loop join</li> <li>Indexed nested-loop join</li> <li>Merge-join</li> <li>Hash-join</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2011/#51-nested-loop-join","title":"5.1 Nested-Loop Join","text":"<p>\u4e24\u91cd\u5faa\u73af</p> <ul> <li>\\(r\\) is called the outer relation and \\(s\\) the inner relation of the join.  </li> </ul> <p>\\(n_r * b_s + b_r\\) block transfers, plus \\(n_r + b_r\\) seeks \u5bf9\u5916\u5faa\u73af\u6bcf\u4e2a\u8bb0\u5f55\uff0c\u5185\u5faa\u73af\u7684\u6240\u6709\u5757\u90fd\u8981\u8fdb\u53bb. seek \u65f6\u6bcf\u6b21\u5916\u5faa\u73af\u90fd\u9700\u8981 seek, \u5185\u5faa\u73af\u6bcf\u8f6e\u53ea\u9700\u8981\u4e00\u6b21 seek. </p> <p>\u5982\u679c\u5185\u5b58\u80fd\u5bb9\u7eb3\u6240\u6709\u7684\u5173\u7cfb\uff0c\u90a3\u6211\u4eec\u53ea\u9700\u8981 \\(b_r  + b_s\\) block transfers and 2 seeks.  </p>"},{"location":"note/courses/database%20system/Chapter%2011/#52-block-nested-loop-join","title":"5.2 Block Nested-Loop Join","text":"<ul> <li>Worst case estimate:  \\(b_r * b_s + b_r\\)  block transfers + \\(2 * b_r\\) seeks Each block in the inner relation \\(s\\) is read once for each block in the outer relation</li> <li>Best case: \\(b_r + b_s\\) block transfers + 2 seeks.</li> </ul> <p>\u8981\u628a\u5c0f\u7684\u4f5c\u4e3a\u5916\u5173\u7cfb\u3002</p> <p>Improvements to block nested loop algorithms: \u5047\u8bbe\u5185\u5b58\u6709 M \u5757\uff0c\u6709\u4e00\u5757\u4f5c\u4e3a output \u7684\u7f13\u51b2\uff0c\u5269\u4e0b M-1 \u5757\u4e2d M-2 \u5757\u5747\u7ed9\u5916\u5173\u7cfb\uff0c\u5185\u5173\u7cfb\u7ed9\u4e00\u5757\u3002</p> <p>Cost = \\(\\lceil b_r  / (M-2) \\rceil * b_s + b_r\\) block transfers + \\(2 \\lceil b_r  / (M-2)\\rceil\\) seeks</p> <ul> <li>If equi-join attribute forms a key on the inner relation, stop inner loop on first match \u5982\u679c\u8fde\u63a5\u7684\u5c5e\u6027\u662f key, \u90a3\u4e48\u5f53\u6211\u4eec\u5339\u914d\u4e0a\u4e4b\u540e\u5c31\u53ef\u4ee5\u505c\u6b62\u5185\u5faa\u73af\u3002</li> <li>Scan inner loop forward and backward alternately, to make use of the blocks remaining in buffer (with LRU replacement) \u5229\u7528 LRU \u7b56\u7565\u7684\u7279\u70b9\uff0cinner \u6b63\u5411\u626b\u63cf\u540e\u518d\u53cd\u8fc7\u6765\uff0c\u8fd9\u6837\u6700\u8fd1\u7684\u5757\u5f88\u53ef\u80fd\u8fd8\u5728\u5185\u5b58\u4e2d\uff0c\u63d0\u9ad8\u7f13\u51b2\u547d\u4e2d\u7387\u3002</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2011/#53-indexed-nested-loop-join","title":"5.3 Indexed Nested-Loop Join","text":"<p>\u5982\u679c\u5185\u5faa\u73af\u6709\u7d22\u5f15\uff0c\u6211\u4eec\u5c31\u6ca1\u5fc5\u8981\u626b\u63cf\u5185\u5faa\u73af\u6240\u6709\u5757\u4e86\u3002  </p> <p>Index lookups can replace file scans if</p> <ul> <li>join is an equi-join or natural join and</li> <li>an index is available on the inner relation\u2019s join attribute \u8fde\u63a5\u5c5e\u6027\u6709\u7d22\u5f15</li> </ul> <p>Cost of the join: \\(b_r (t_T + t_S) + n_r * c\\) \u8fd9\u91cc\u5047\u5b9a\u7ed9\u5916\u5173\u7cfb\u4e00\u5757\u5185\u5b58. \\(c\\) \u8868\u793a\u904d\u5386\u7d22\u5f15\u5e76\u53d6\u51fa\u6240\u6709\u5339\u914d\u7684\u5143\u7ec4\u7684\u65f6\u95f4\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2011/#54-merge-join","title":"5.4 Merge Join","text":"<p>\u5047\u8bbe\u4e24\u4e2a\u5173\u7cfb\u5df2\u7ecf\u57fa\u4e8e\u8fde\u63a5\u5c5e\u6027\u6392\u597d\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u7528\u5f52\u5e76\u7684\u601d\u60f3\u8fde\u63a5\u3002  </p> <ul> <li>Sort both relations on their join attribute (if not already sorted on the join attributes).  </li> <li>Merge the sorted relations to join them<ul> <li>Join step is similar to the merge stage of the sort-merge algorithm.  </li> <li>Main difference is handling of duplicate values in join attribute \u2014 every pair with same value on join attribute must be matched</li> </ul> </li> </ul> <p>\\(b_r + b_s\\) block transfers + \\(\\lceil b_r / b_b\\rceil + \\lceil b_s / b_b\\rceil\\) seeks  </p> <p>If the buffer memory size is M pages, in order to minimize the cost of merge join, how to assign M blocks to r and s respectively? </p> <p>The estimated cost is \\(b_r + b_s\\) block transfers + \\(\\lceil b_r / x_r\\rceil + \\lceil b_s / x_s\\rceil\\) seeks (\\(x_r+x_s=M\\))  </p> <p>\u5982\u679c\u4e24\u4e2a\u8868\u90fd\u65e0\u5e8f\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6392\u5e8f\u518d Merge-join, \u8fd9\u65f6\u8fd8\u8981\u7b97\u4e0a\u6392\u5e8f\u7684\u4ee3\u4ef7\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2011/#55-hash-join","title":"5.5 Hash Join","text":"<p>\u7528\u4e00\u4e2a Hash \u51fd\u6570\u628a\u4e24\u4e2a\u5173\u7cfb\u8fdb\u884c\u5206\u7247\u3002\u80fd\u591f\u8fde\u63a5\u4e0a\u7684\u8bb0\u5f55\uff0c\u4e00\u5b9a\u5904\u4e8e\u540c\u4e00\u4e2a partition \u91cc\u9762\uff08\u53cd\u4e4b\u4e0d\u4e00\u5b9a\uff09 \u8fd9\u6837\u5927\u5173\u7cfb\u53d8\u6210\u4e86\u5c0f\u5173\u7cfb\u3002 \u6211\u4eec\u8981\u6c42\u5176\u4e2d\u67d0\u4e2a\u7684\u5c0f\u5173\u7cfb\u8981\u80fd\u4e00\u6b21\u653e\u5230\u5185\u5b58\u4e2d\u3002</p> <p>Applicable for equi-joins and natural joins.   the value \\(n\\)(partition \u7684\u4e2a\u6570) and the hash function \\(h\\) is chosen such that each si should fit in memory. \\(n  \\geq  \\lceil b_s / M\\rceil\\)  \u8981\u6c42\u6bcf\u4e2a partition \u7684\u5927\u5c0f\u90fd\u8981\u5c0f\u4e8e M, \u4e0d\u7136\u4e0d\u80fd\u4e00\u6b21\u6027\u653e\u8fdb\u53bb\u3002  </p> <p>\u5982\u679c\u6211\u4eec\u7684 \\(n\\) \u5f88\u5927\uff0c\u8981\u5206\u51fa\u6765\u7684 partition \u5f88\u5927\uff0c\u4f46\u662f\u5185\u5b58\u4e0d\u591f\uff0c\u5173\u7cfb\u5206\u533a\u4e0d\u80fd\u4e00\u6b21\u751f\u6210\u6240\u6709\u7684 partition, \u8981\u7ecf\u8fc7\u591a\u6b21\u5206\u533a\u3002 \u6bcf\u6b21\u8f93\u5165\u5148\u88ab\u5212\u5206\uff0c\u968f\u540e\u8fdb\u884c\u7ec6\u5206\u3002</p> <p>\u6ce8\u610f\u5206\u7247\u7684\u65f6\u5019\uff0c\u8fd8\u8981\u5199\u51fa\u53bb\u3002 \u5339\u914d\u65f6\u6211\u4eec\u6709\u54c8\u5e0c\u7d22\u5f15\u3002</p> <p>Typically n is chosen as \\(\\lceil b_s/M\\rceil * f\\)  where \\(f\\) is a \u201cfudge factor(\u4fee\u6b63\u56e0\u5b50)\u201d, typically around 1.2 \u5206\u4e0d\u5300\uff0c\u6211\u4eec\u6709\u610f\u653e\u5927\u3002 The probe input relation partitions \\(r_i\\) need not fit in memory</p>"},{"location":"note/courses/database%20system/Chapter%2011/#551-recursive-partitioning","title":"5.5.1 Recursive partitioning","text":"<p>Recursive partitioning required if number of partitions n is greater than number of pages M of memory.</p> <p>A relation does not need recursive partitioning if \\(M &gt; n_h + 1\\), or equivalently \\(M &gt; (b_s/M) + 1\\), which simplifies (approximately) to \\(M &gt; \\sqrt{b_s}\\). </p> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%2011/#552-cost-of-hash-join","title":"5.5.2 Cost of Hash-Join","text":""},{"location":"note/courses/database%20system/Chapter%2011/#6-other-operations","title":"6 Other Operations","text":"<ul> <li>Duplicate elimination can be implemented via hashing or sorting.  On sorting duplicates will come adjacent to each other, and all but one set of duplicates can be deleted. \u5728\u6392\u5e8f\u7684\u8fc7\u7a0b\uff08\u751f\u6210\u3001\u5408\u5e76\u5f52\u5e76\u6bb5\u5c31\u8fdb\u884c\u53bb\u91cd\uff09 Hashing is similar </li> <li>Aggregation Sorting or hashing can be used to bring tuples in the same group together, and then the aggregate functions can be applied on each group.  \u751f\u6210\u5f52\u5e76\u6bb5\u7684\u65f6\u5019\uff0c\u540c\u4e00\u6bb5\u7684\u5c31\u53ef\u4ee5\u7edf\u8ba1\u7edf\u4e00\u7ed3\u679c</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2012/","title":"Query Optimization","text":"Abstract <ul> <li>Introduction </li> <li>Transformation of Relational Expressions</li> <li>Statistical Information for Cost Estimation</li> <li>Cost-based Optimization</li> <li>Dynamic Programming for Choosing Evaluation Plans</li> <li>Nested Subqueries</li> <li>Materialized Views </li> <li>Advanced Topics in Query Optimization</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2012/#1-introduction","title":"1 Introduction","text":"<p>Alternative ways of evaluating a given query</p> <ul> <li>Equivalent expressions \u903b\u8f91\u4f18\u5316\uff1a\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f\uff08\u5c3d\u91cf\u5148\u505a\u9009\u62e9\uff0c\u6295\u5f71\uff09</li> <li>Different algorithms for each operation \u7269\u7406\u5c42\u9762\uff1a\u6bcf\u4e2a\u7b97\u5b50\u9009\u62e9\u4e0d\u540c\u7684\u7b97\u6cd5</li> </ul> Example <p> </p> <p>Estimation of plan cost based on:</p> <ul> <li>Statistical information about relations. Examples: number of tuples, number of distinct values for an attribute</li> <li>Statistics estimation for intermediate results\uff08Cardinality Estimation\uff09 to compute cost of complex expressions \u4f30\u8ba1\u4e2d\u95f4\u7ed3\u679c\u7684\u5927\u5c0f \u73b0\u5728\u6709\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u4f30\u8ba1\u65b9\u6cd5</li> <li>Cost formulae for algorithms, computed using statistics</li> </ul> <p>\u5173\u7cfb\u6570\u636e\u5e93\u91cc\u53ef\u4ee5\u7528\u67e5\u770b\u6267\u884c\u8ba1\u5212\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2012/#2-generating-equivalent-expressions","title":"2 Generating Equivalent Expressions","text":"<p>Two relational algebra expressions are said to be equivalent if the two expressions generate the same set of tuples on every legal database instance \u5f62\u5f0f\u4e0a\u4e0d\u4e00\u6837\uff0c\u4f46\u662f\u7ed3\u679c\uff08\u8f93\u51fa\uff09\u662f\u4e00\u6837\u7684\uff0c\u4ea7\u751f\u4e86\u76f8\u540c\u7684\u96c6\u5408\u3002  </p>"},{"location":"note/courses/database%20system/Chapter%2012/#21-equivalence-rules","title":"2.1 Equivalence Rules","text":"<ul> <li> <p>selection      </p> <ol> <li>\u53ef\u4ee5\u628a\u7b97\u5b50\u62c6\u5206 \u5982\u679c\u67d0\u4e9b\u5c5e\u6027\u6709\u7d22\u5f15\uff0c\u90a3\u4e48\u53ef\u4ee5\u5148\u62c6\u5206\uff0c\u5728\u7d22\u5f15 select \u4e4b\u540e\u518d\u6267\u884c\u5176\u4ed6\u7b97\u5b50\uff0c\u5426\u5219\u4e0d\u5982\u4e0d\u62c6\u5206\u3002</li> <li>\u7b97\u5b50\u53ef\u4ea4\u6362 \u5148\u6267\u884c\u6709\u7d22\u5f15\u7684\u7b97\u5b50\u3002  </li> <li>\u6295\u5f71\u7684\u5c5e\u6027\u53ef\u4ee5\u53ea\u4fdd\u7559\u6700\u540e\u4e00\u6b21\u7684  </li> <li>\u9009\u62e9\u7b97\u5b50\u53ef\u4ee5\u548c\u5408\u5e76\u7ed3\u5408  </li> </ol> </li> <li> <p>join </p> <p>\u81ea\u7136\u8fde\u63a5\u662f\u7ed3\u5408\u7684\uff08\u5148\u8fde\u63a5\u4e2d\u95f4\u7ed3\u679c\u5c0f\u7684\uff09 </p> <p>\u5982\u679c\u9009\u62e9\u7b97\u5b50\u53ea\u548c\u4e00\u4e2a\u5173\u7cfb\u6709\u5173\uff0c\u90a3\u4e48\u6211\u4eec\u53ef\u4ee5\u5148\u6267\u884c\u9009\u62e9\u3002\uff08\u9009\u62e9\u7b97\u5b50\u8981\u65e9\u8fdb\u884c\uff0c\u63a8\u5230\u53f6\u5b50\u4e0a\uff09  </p> </li> <li> <p>projection      </p> <p>\u540c\u7406\u6295\u5f71\u4e5f\u8981\u65e9\u505a\u3002 \u5982\u679c\u8fde\u63a5\u8981\u7528\u5230\u6295\u5f71\u540e\u4e0d\u4fdd\u7559\u7684\u5c5e\u6027\uff0c\u6211\u4eec\u5728\u7b2c\u4e00\u6b21\u6295\u5f71\u65f6\u8981\u628a\u8fde\u63a5\u7528\u7684\u5c5e\u6027\u4e5f\u4fdd\u7559\u4e0b\u6765\u3002</p> </li> <li> <p>set operation      </p> <p>\u8fd9\u91cc\u7684\u51cf\u6cd5\uff0c\u51cf\u6570\u5173\u7cfb\u5c31\u4e0d\u7528\u505a\u9009\u62e9\u4e86\uff08\u51cf\u53bb\u591a\u7684\u603b\u662f\u6ca1\u95ee\u9898\u7684\uff09\u5bf9\u4ea4\u96c6\u4e5f\u9002\u7528</p> </li> <li> <p>other      </p> </li> </ul> <p>\u8bb8\u591a\u7b49\u4ef7\u5173\u7cfb\u5bf9\u4e8e outer joins \u5e76\u4e0d\u6ee1\u8db3</p>"},{"location":"note/courses/database%20system/Chapter%2012/#22-enumeration-of-equivalent-expressions","title":"2.2 Enumeration of Equivalent Expressions","text":"<ul> <li>Repeat<ul> <li>apply all applicable equivalence rules on every subexpression of every equivalent expression found so far</li> <li>add newly generated expressions to the set of equivalent expressions </li> </ul> </li> <li>Until no new equivalent expressions are generated above</li> </ul> <p>\u53ef\u4ee5\u8fd9\u6837\u627e\u5230\u6240\u6709\u7684\u7b49\u4ef7\u8868\u8fbe\u5f0f\u3002</p> <p>\u4f46\u662f\u5b9e\u9645\u4e2d\u6211\u4eec\u57fa\u4e8e\u4e00\u4e9b\u7ecf\u9a8c\u89c4\u5219\u8fdb\u884c\u542f\u53d1\u5f0f\u7684\u4f18\u5316</p>"},{"location":"note/courses/database%20system/Chapter%2012/#23-implementing-transformation-based-optimization","title":"2.3 Implementing Transformation Based Optimization","text":"<ul> <li>Space requirements reduced by sharing common sub-expressions</li> <li>Time requirements are reduced by not generating all expressions</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2012/#3-statistics-for-cost-estimation","title":"3 Statistics for Cost Estimation","text":"<p>\u4ee3\u4ef7\u4f30\u7b97\u9700\u8981\u7edf\u8ba1\u4fe1\u606f</p> <ul> <li>\\(n_r\\): number of tuples in a relation r.</li> <li>\\(b_r\\): number of blocks containing tuples of r.</li> <li>\\(l_r\\): size of a tuple of r.</li> <li>\\(f_r\\): blocking factor of r \u2014 i.e., the number of tuples of r that fit into one block. \u4e00\u4e2a\u5757\u53ef\u4ee5\u653e\u591a\u5c11\u4e2a\u5143\u7ec4</li> <li>\\(V(A, r)\\): number of distinct values that appear in r for attribute A; same as the size of \\(\\Pi(r)\\).</li> <li>If tuples of r are stored together physically in a file, then: \\(b_r = \\lceil \\dfrac{n_r}{f_r}\\rceil\\)</li> <li>Histograms</li> </ul> attribute age of relation person <p> </p>"},{"location":"note/courses/database%20system/Chapter%2012/#31-selection-size-estimation","title":"3.1 Selection Size Estimation","text":"<p>\u4e2d\u95f4\u7ed3\u679c</p> <ul> <li>\\(\\sigma_{A=v}(r)\\) \\(n_r / V(A,r)\\) : number of records that will satisfy the selection.  \u8fd9\u6837\u7684\u4f30\u7b97\u57fa\u4e8e\u503c\u662f\u5e73\u5747\u5206\u5e03\u7684 \u5982\u679c\u8981\u627e\u7684\u662f\u4e00\u4e2a key, \u90a3\u4e48 size estimate=1</li> <li>\\(\\sigma_{A\\leq v}(r)\\) <ul> <li>Let \\(c\\) denote the estimated number of tuples satisfying the condition.   </li> <li>\\(c = 0\\) if \\(v &lt; \\min(A,r)\\) v \u6bd4\u5c5e\u6027 A \u7684\u6700\u5c0f\u503c\u8fd8\u8981\u5c0f</li> <li>\\(c = n_r\\cdot \\dfrac{v-\\min(A,r)}{\\max(A,r) - \\min A(A,r)}\\) </li> <li>In absence of statistical information c is assumed to be \\(n_r / 2\\) (\u6ca1\u6709\u6700\u5927\u3001\u6700\u5c0f\u7edf\u8ba1\u4fe1\u606f\u65f6).</li> </ul> </li> </ul> <p>\u6982\u7387\u8bba\u3002 \u6ce8\u610f\u8fd9\u4e9b\u516c\u5f0f\u7684\u8981\u6c42\u662f\u6761\u4ef6\u662f\u76f8\u4e92\u72ec\u7acb\u7684\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2012/#32-joins","title":"3.2 Joins","text":"<p>The Cartesian product \\(r  \\times s\\) contains \\(n_r\\cdot n_s\\) tuples; each tuple occupies \\(s_r + s_s\\) bytes.</p> <ul> <li>\\(R \\cap S = \\emptyset\\) \u6ca1\u6709\u516c\u5171\u5c5e\u6027\uff0c\u7b49\u4ef7\u4e8e \\(r\\times s\\)</li> <li> <p>\\(R \\cap S\\) is a key for \\(R\\), then a tuple of \\(s\\) will join with at most one tuple from \\(r\\)</p> Example <p> </p> </li> <li> <p>If \\(R \\cap S\\) in S is a foreign key in S referencing R, then the number of tuples in \\(r\\bowtie s\\) = the number of tuples in s.</p> </li> <li> <p>If \\(R \\cap S = \\{A\\}\\) is not a key for R or S. \\(n_r * \\dfrac{n_s}{V(A,s)}, n_s * \\dfrac{n_r}{V(A,r)}\\).  \u4ee5\u7b2c\u4e8c\u4e2a\u4e3a\u4f8b\u5b50\uff0c\u7ad9\u5728 s \u7684\u89d2\u5ea6\uff0c\u6bcf\u4e00\u4e2a s \u53ef\u4ee5\u548c\u8fd9\u4e48\u591a\u4e2a\u5143\u7d20\u8fde\u63a5\u3002 \u901a\u5e38\u6211\u4eec\u53d6\u4e8c\u8005\u4e2d\u7684\u8f83\u5c0f\u503c\u3002  </p> Example <p> </p> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2012/#33-size-estimation-for-other-operations","title":"3.3 Size Estimation for Other Operations","text":"<p>\u5916\u90e8\u8fde\u63a5 r, s \u8ba4\u4e3a\u662f r s \u81ea\u7136\u8fde\u63a5\u7684\u7ed3\u679c\u52a0\u4e0a r \u7684\u5927\u5c0f\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2012/#34-estimation-of-number-of-distinct-values","title":"3.4 Estimation of Number of Distinct Values","text":"<p>\u4f30\u7b97 V(A,r).  </p> <p>Selections \\(\\sigma_\\theta(r)\\), estimate \\(V(A,\\sigma_\\theta(r))\\)</p> <ul> <li>If \\(\\theta\\) forces A to take a specified value, \\(V(A,\\sigma_\\theta(r))=1\\) e.g., A = 3</li> <li>If \\(\\theta\\) forces A to take on one of a specified set of values: \\(V(A,\\sigma_\\theta(r))=\\) number of specified values e.g., (A = 1 V A = 3 V A = 4)</li> <li>If the selection condition \\(\\theta\\) is of the form A op v, \\(V(A,\\sigma_\\theta(r))=V(A,r)*s\\) \u5229\u7528\u9009\u62e9\u7387 s \u8ba1\u7b97</li> <li>In all the other cases, use approx1imate estimate: \\(V(A,\\sigma_\\theta(r))=\\min(V(A,r), n_{\\sigma_\\theta(r)})\\)</li> </ul> <p>joins \\(r\\bowtie s\\), estimate \\(V(A,r\\bowtie s)\\)</p> <ul> <li>If all attributes in A are from r, the estimated \\(V(A,r\\bowtie s)=\\min(V(A,r), n_{r\\bowtie s})\\)</li> <li>If A contains attributes A1 from r and A2 from s, then estimated \\(V(A,r\\bowtie s)=\\min(V(A1,r)*V(A2-A1,s), V(A1-A2,r)*V(A2,s), n_{r\\bowtie s})\\)</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2012/#4-choice-of-evaluation-plans","title":"4 Choice of Evaluation Plans","text":"<p>Must consider the interaction of evaluation techniques when choosing evaluation plans</p> <p>choosing the cheapest algorithm for each operation independently may not yield best overall algorithm   e.g. merge-join may be costlier than hash-join, but may provide a sorted output which reduces the cost for an outer level aggregation. Mergejoin \u4ee3\u4ef7\u9ad8\uff0c\u4f46\u662f\u6709\u4e2a\u597d\u5904\u662f join \u540e\u662f\u6709\u6b21\u5e8f\u7684\uff0c\u5bf9\u4e0a\u5c42\u64cd\u4f5c\u6709\u5229\u3002</p> <p>\u5982\u679c\u8981\u627e\u6700\u4f18\u7684\u6267\u884c\u8ba1\u5212\uff0c\u53ef\u80fd\u9700\u8981\u5f88\u957f\u65f6\u95f4\u3002\u901a\u5e38\u6309\u7167\u7ecf\u9a8c\u89c4\u5219\u3002 \u6211\u4eec\u4e3b\u8981\u8003\u8651\u8fde\u63a5\u64cd\u4f5c\u7684\u4f18\u5316\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2012/#35-cost-based-join-order-selection","title":"3.5 Cost-Based Join-Order Selection","text":"<p>Consider finding the best join-order for \\(r_1\\bowtie    r_2\\bowtie  \\ldots r_n\\). There are \\((2(n \u2013 1))!/(n \u2013 1)!\\) different join orders for above expression.</p> Example <p> </p> <p>Using dynamic programming, the least-cost join order for any subset of \\(\\{r_1, r_2, \\ldots r_n\\}\\) is computed only once and stored for future use. </p> <p>Join Order Optimization Algorithm</p> <p>\u5148\u5206\u89e3\u6210\u4e24\u4e2a\u5c0f\u7684\u96c6\u5408 \\(S_1, S-S_1\\). \u9012\u5f52\u5730\u7ec6\u5206\u3002 \u9012\u5f52\u5230\u6700\u5e95\u5c42\u5c31\u53d8\u4e3a\u4e86\u5bf9\u5355\u4e2a\u8868\u7684\u9009\u62e9\u65b9\u6cd5\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2012/#351-left-deep-join-trees","title":"3.5.1 Left Deep Join Trees","text":"<p>In left-deep join trees, the right-hand-side input for each join is a relation, not the result of an intermediate join.</p> <p>\u5de6\u8fb9\u53ef\u4ee5\u662f\u4e2d\u95f4\u7ed3\u679c\uff0c\u53f3\u8fb9\u5fc5\u987b\u662f\u4e00\u4e2a\u5173\u7cfb\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2012/#352-cost-of-optimization","title":"3.5.2 Cost of Optimization","text":"<ul> <li>With dynamic programming <ul> <li>time complexity of optimization with bushy trees is \\(O(3^n)\\).  </li> <li>Space complexity is \\(O(2^n)\\) </li> </ul> </li> <li>left-deep join tree <ul> <li>Time complexity of finding best join order is \\(O(n 2^n)\\)</li> <li>Space complexity remains at \\(O(2^n)\\) </li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2012/#36-heuristic-optimization","title":"3.6 Heuristic Optimization","text":"<p>Cost-based optimization is expensive. \u53ef\u4ee5\u7528\u542f\u53d1\u5f0f\u4f18\u5316</p> <p>Heuristic optimization transforms the query-tree by using a set of rules that typically (but not in all cases) improve execution performance:</p> <ul> <li>Perform selection early (reduces the number of tuples)</li> <li>Perform projection early (reduces the number of attributes)</li> <li>Perform most restrictive selection and join operations (i.e. with smallest result size) before other similar operations.</li> <li>Perform left-deep join order</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2012/#4-additional-optimization-techniques","title":"4 Additional Optimization Techniques","text":""},{"location":"note/courses/database%20system/Chapter%2012/#41-nested-subqueries","title":"4.1 Nested Subqueries","text":"<p>Nested query example: <pre><code>select name from instructor \nwhere exists \n    (select * from teaches\n    where instructor.ID = teaches.ID and teaches.year = 2022)\n</code></pre> \u627e\u51fa 2022 \u5f00\u8bfe\u7684\u8001\u5e08\u7684\u540d\u5b57\u3002</p> <p>\u4e24\u91cd\u5faa\u73af\uff0c\u4f46\u662f\u4f4e\u6548\u3002</p> <p>Parameters are variables from outer level query that are used in the  nested subquery; such variables are called correlation variables\uff08\u76f8\u5173\u53d8\u91cf\uff09 \u5373\u6765\u81ea\u5916\u5faa\u73af\u7684\u53d8\u91cf\u3002\u5982\u679c\u6ca1\u6709\u76f8\u5173\u53d8\u91cf\uff0c\u6211\u4eec\u53ef\u4ee5\u5148\u6267\u884c\u5185\u90e8\uff0c\u7136\u540e\u518d\u6267\u884c\u5916\u90e8\u3002</p> <p>\u628a\u521a\u521a\u90a3\u4e2a\u4f8b\u5b50\u6539\u4e3a\u4e00\u4e2a select \u8bed\u53e5\uff0c\u90a3\u4e48\u4e00\u4e2a\u8001\u5e08\u5982\u679c\u5f00\u4e86\u5f88\u591a\u95e8\u8bfe\u5c31\u4f1a\u51fa\u73b0\u5f88\u591a\u4e2a\u540d\u5b57\u3002\u4f46\u662f\u52a0\u4e0a <code>distinct</code> \u5173\u952e\u8bcd\u540e\u53c8\u65e0\u6cd5\u533a\u5206\u540c\u540d\u60c5\u51b5\u3002</p> <p>\u534a\u8fde\u63a5 \\(\u22c9\\)_\\theta s\\(\uff0c\u68c0\u9a8c r \u662f\u5426\u6ee1\u8db3\u67d0\u4e2a\u5173\u7cfb\u3002   If a tuple \\(r_i\\) appears n times in r, it appears n times in  the result of_\\)r \\(\u22c9\\)\\theta s$ , if there is at least one tuple \\(s_i\\) in s matching with \\(r_i\\).</p> Example <p> </p> <p>The process of replacing a nested query by a query with a join/semijoin (possibly with a temporary relation) is called decorrelation(\u53bb\u9664\u76f8\u5173)</p> <p>Decorrelation of scalar aggregate subqueries can be done using groupby/aggregation in some cases</p> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%2012/#42-materialized-views","title":"4.2 Materialized Views","text":"<p>A materialized view is a view whose contents are computed and stored.  </p> <p>\u6709\u4e9b\u6570\u636e\u5e93\u91cc\u628a view \u5b9e\u4f8b\u5316\u4e86\uff0c\u771f\u6b63\u5b58\u50a8\u5728\u5185\u90e8\u7684\u4e34\u65f6\u8868\u3002</p> <pre><code>create view department_total_salary(dept_name, total_salary) \nas select dept_name, sum(salary) from instructor group by dept_name\n</code></pre> <p>Saves the effort of finding multiple tuples and adding up their amounts. \u4f46\u662f\u9700\u8981\u65f6\u523b\u4fdd\u6301\u8fd9\u4e2a\u89c6\u56fe\u548c\u539f\u8868\u4e00\u81f4\u3002</p> <p>use incremental view maintenance(\u589e\u91cf\u89c6\u56fe\u7ef4\u62a4) The changes (inserts and deletes) to a relation or expressions are referred to as its differential(\u5dee\u5206)</p> <ul> <li> <p>join: \\(V^{new}=V^{old}\\cup (i_r\\bowtie s), V^{new} = V^{old}-(d_r\\bowtie s)\\)</p> join <p> </p> </li> <li> <p>select: \\(V^{new}=V^{old}\\cup \\sigma_\\theta(i_r), V^{new} = V^{old}-\\sigma_\\theta(d_r)\\)</p> </li> <li> <p>projection: For each tuple in a projection \\(\\Pi_A(r)\\), we will keep a count of how many times it was derived.  </p> <ul> <li>On insert of a tuple to r, if the resultant tuple is already in \\(\\Pi_A(r)\\) we increment its count, else we add a new tuple with count = 1</li> <li>On delete of a tuple from r, we decrement the count of the corresponding tuple in \\(\\Pi_A(r)\\)  if the count becomes 0, we delete the tuple from \\(\\Pi_A(r)\\)</li> </ul> Projection <p> </p> </li> <li> <p>count \\(v= _Ag_{count(B)}\\)</p> <ul> <li>insert: For each tuple r in \\(i_r\\), if the corresponding group is already present in v, we increment its count, else we add a new tuple with count = 1</li> <li>delete: for each tuple t in \\(i_r\\).we look for the group t.A in v, and subtract 1 from the count for the group.  If the count becomes 0, we delete from v the tuple for the group t.A</li> </ul> </li> <li> <p>sum \\(v= _Ag_{sum(B)}\\)</p> </li> <li>min, max</li> </ul> <p>\u600e\u4e48\u5229\u7528\u8fd9\u4e9b view? </p> <ul> <li> <p>Rewriting queries to use materialized views:</p> Example <p> </p> </li> <li> <p>Replacing a use of a materialized view by the view definition</p> </li> </ul> <p>Materialized View Selection \u6709\u54ea\u4e9b\u67e5\u8be2\uff1f\u5404\u79cd\u67e5\u8be2\u7684\u6bd4\u4f8b\uff1f</p>"},{"location":"note/courses/database%20system/Chapter%2013/","title":"Transactions","text":"Abstract <ul> <li>Transaction Concept</li> <li>A Simple Transaction Model</li> <li>Concurrent Executions</li> <li>Serializability</li> <li>Recoverability</li> <li>Transaction Isolation Levels </li> <li>Transaction Definition in SQL</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2013/#1-transaction-concept","title":"1 Transaction Concept","text":"<p>A transaction is a unit of program execution that accesses and  possibly updates various data items. \u4e00\u6bb5\u539f\u5b50\u6027\u7684\u64cd\u4f5c  </p> <p>e.g. transaction to transfer $50 from account A to account B <pre><code>update  account  set  balance=balance-50  where account_number=A;\nupdate  account  set  balance=balance+50  where account_number=B;\ncommit;\n</code></pre></p> <p>Two main issues to deal with: - Failures of various kinds, \u4f8b\u5982\u786c\u4ef6\u6545\u969c\u548c\u7cfb\u7edf\u5d29\u6e83 - \u591a\u79cd\u4e8b\u52a1\u540c\u65f6\u53d1\u751f\u6267\u884c</p>"},{"location":"note/courses/database%20system/Chapter%2013/#11-acid-properties","title":"1.1 ACID Properties","text":"<ul> <li>Atomicity\uff08\u539f\u5b50\u6027\uff09 \u5168\u6709\u6216\u5168\u65e0 \u7531\u6570\u636e\u5e93\u6062\u590d\u529f\u80fd\u4fdd\u8bc1</li> <li>Consistency\uff08\u4e00\u81f4\u6027\uff09 \u4fdd\u8bc1\u6570\u636e\u5e93\u5185\u7684\u5185\u5bb9\u6b63\u786e\u6027\uff0c\u4e0e\u5b9e\u9645\u4e1a\u52a1\u76f8\u7b26\u3002\u5982\u8f6c\u8d26\u662f\u4e00\u4e2a\u4eba\u4f59\u989d\u51cf\u5c11\u4e00\u4e2a\u4eba\u589e\u52a0\u3002 consistency \u4e0e\u5f00\u53d1\u4eba\u5458\u6709\u5173\u7cfb\uff08\u4e8b\u52a1\u8bbe\u8ba1\u662f\u5426\u5408\u7406\uff09</li> <li>Isolation\uff08\u9694\u79bb\u6027\uff09 \u4e8b\u52a1\u5e76\u53d1\u6267\u884c\uff0c\u4f46\u662f\u76f8\u4e92\u9694\u79bb\uff0c\u597d\u50cf\u662f\u4e32\u884c\u6267\u884c\u4e00\u6837\u3002 \u7531\u6570\u636e\u5e93\u7684\u5e76\u53d1\u6267\u884c\u6765\u5b9e\u73b0</li> <li>Durability\uff08\u6301\u4e45\u6027\uff09 \u4e8b\u52a1\u63d0\u4ea4\u540e\u88ab\u7f13\u5b58\uff0c\u6389\u7535\u4e0d\u80fd\u5931\u53bb buffer \u91cc\u7684\u5185\u5bb9\u3002  </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2013/#2-a-simple-transaction-model","title":"2 A Simple Transaction Model","text":"<p>\u8fd9\u4e2a\u6a21\u578b\u4e2d\uff0c\u628a\u4e8b\u52a1\u5bf9\u6570\u636e\u5e93\u7684\u4fee\u6539\u7b80\u5316\u4e3a\u8bfb\u5199\u4e24\u79cd\u64cd\u4f5c\u3002 Transactions access data using two operations:  </p> <ul> <li> <p>read(X), which transfers the data item X from the database to a variable, also called X\uff0c in  a work area  in  main  memory  belonging to the transaction that  executed the read  operation.  </p> </li> <li> <p>write(X), which transfers the value in the variable X  in the main memory work area of the transaction that executed the write operation to the datat item X in database.   </p> </li> </ul> <p></p> <p>\u5728\u8fd9\u4e2a\u7b80\u5355\u7684\u6a21\u578b\u4e2d\uff0c\u6211\u4eec\u4e0d\u8003\u8651\u6570\u636e\u8bfb\u5230\u5de5\u4f5c\u533a\u57df\u540e\u53d1\u751f\u4e86\u4ec0\u4e48\u64cd\u4f5c\uff0c\u53ea\u8003\u8651\u8bfb\u5199\u3002</p> <p>Example of Fund Transfer</p> <p></p> <ul> <li>Atomicity requirement  \u5982\u679c\u6267\u884c\u7ed3\u675f\u4e4b\u540e\u51fa\u73b0\u4e86\u95ee\u9898\uff0c\u6570\u636e\u5e93\u5e94\u8be5\u8981\u64a4\u9500\u4e4b\u524d\u7684\u64cd\u4f5c</li> <li>Durability requirement \u5982\u679c\u4e8b\u52a1\u7ed3\u675f\u4e86\uff0c\u6211\u4eec\u5c31\u628a\u66f4\u65b0\u540c\u6b65</li> <li>Consistency requirement  <ul> <li>Explicitly\uff08\u663e\u5f0f\uff09 specified integrity constraints e.g. primary keys , foreign keys \u6570\u636e\u5e93\u628a\u8fd9\u4e2a\u5b9a\u4e49\u653e\u5728\u5185\u90e8\uff0c\u4f1a\u81ea\u5df1\u7ef4\u62a4</li> <li>Implicit \uff08\u9690\u5f0f\uff09 integrity constraints e.g. sum of balances of all accounts minus sum of loan amounts must equal value of cash-in-hand \u4e0d\u5728\u6570\u636e\u5e93\u4e2d\u5b9a\u4e49\uff0c\u4f46\u662f\u5728\u4e8b\u52a1\u7684\u64cd\u4f5c\u6765\u5b9a\u4e49</li> </ul> </li> <li>Isolation requirement \u5728 step 3 6 \u4e4b\u95f4\uff0c\u53e6\u4e00\u4e2a\u4e8b\u52a1\u53ef\u4ee5\u8bbf\u95ee\u8fd9\u4e2a\u88ab\u90e8\u5206\u66f4\u65b0\u7684\u6570\u636e\u5e93\uff0cA+B \u4f1a\u5c0f\u4e8e\u6b63\u786e\u7b54\u6848\u3002\u8fd9\u662f\u56e0\u4e3a\u7834\u574f\u4e86\u9694\u79bb\u6027\u3002</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2013/#21-transaction-state","title":"2.1 Transaction State","text":"<ul> <li>Active \u2013 the initial state; the transaction stays in this state while it is executing,\u4e8b\u52a1\u6267\u884c\u4e2d\u7684\u72b6\u6001</li> <li>Partially committed \u2013 after the final statement has been executed. \u8bed\u53e5\u6267\u884c\u5b8c\u4e86\uff0c\u51c6\u5907\u63d0\u4ea4\u3002\u80fd\u5426\u63d0\u4ea4\u53d6\u51b3\u4e8e\u5177\u4f53\u7684\u6267\u884c\u3002</li> <li>Failed -- after the discovery that normal execution can no longer proceed. \u4e0d\u80fd\u6b63\u5e38\u63d0\u4ea4\u3002\u6216\u8005\u662f\u6267\u884c\u8fc7\u7a0b\u4e2d\u53d1\u73b0\u95ee\u9898\u3002</li> <li>Aborted \u2013 after the transaction has been rolled back and the database restored to its state prior to the start of the transaction.  Two options after it has been aborted:<ul> <li>restart the transaction</li> <li>kill the transaction</li> </ul> </li> <li>Committed \u2013 after successful completion.</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2013/#3-concurrent-executions","title":"3 Concurrent Executions","text":"<ul> <li>increased processor and disk utilization \u63d0\u9ad8CPU\u548c\u78c1\u76d8\u7684\u5229\u7528\u7387</li> <li>reduced average response time \u964d\u4f4e\u5e73\u5747\u54cd\u5e94\u65f6\u95f4</li> </ul> <p>\u4e8b\u52a1\u662f\u5e76\u53d1\u6267\u884c\u7684\uff0c\u5982\u679c\u4e0d\u52a0\u4ee5\u63a7\u5236\u53ef\u80fd\u4f1a\u6709\u4ee5\u4e0b\u95ee\u9898 Anomalies in Concurrent Executions</p> <ul> <li> <p>Lost Update\uff08\u4e22\u5931\u4fee\u6539\uff09 </p> Lost Update Example <p></p> <p>\u4e00\u4e2a\u4eba\u8ba2\u7968\u540e\uff0c\u53e6\u4e00\u4e2a\u4eba\u8bfb\u5230\u8fd9\u91cc\u7b2c\u4e00\u4e2a\u4eba\u8fd8\u6ca1\u6709\u4fee\u6539\u7684\u4f59\u91cf\u3002\u5bfc\u81f4\u4e22\u5931\u4e86\u4e00\u6b21\u4fee\u6539\u3002</p> </li> <li> <p>Dirty Read\uff08\u8bfb\u810f\u6570\u636e\uff09</p> Dirty Read <p></p> <p>\u4e00\u4e2a\u4eba\u8ba2\u7968\u540e\uff0c\u53e6\u4e00\u4e2a\u4eba\u8bfb\u6570\u636e\u540e\uff0c\u4f46\u662f\u7b2c\u4e00\u4e2a\u4eba\u653e\u5f03\u4e86\uff0c\u4f46\u662f\u7b2c\u4e8c\u4e2a\u4eba\u4ecd\u7136\u662f\u7528\u7684\u810f\u6570\u636e\u3002 \u8bfb\u4e86\u53e6\u5916\u4e00\u4e2a\u4e8b\u52a1\u6b63\u5728\u4fee\u6539\u7684\u6570\u636e</p> </li> <li> <p>Unrepeatable Read \uff08\u4e0d\u53ef\u91cd\u590d\u8bfb\uff09</p> Unrepeatable Read <p></p> <p>Isolation \u8981\u6c42\u6211\u4eec\u8bfb\u5230\u7684\u6570\u636e\u5e94\u8be5\u662f\u4e00\u6837\u7684\u3002\u4e0d\u7b26\u5408\u9694\u79bb\u6027\u3002</p> </li> <li> <p>Phantom Problem\uff08\u5e7d\u7075\u95ee\u9898\uff09</p> Phantom Problem <p></p> <p>unrepeatable \u662f\u9488\u5bf9\u5df2\u7ecf\u5b58\u5728\u7684\u6570\u636e\uff0c\u4f46\u662f\u6570\u636e\u7684\u503c\u4e0d\u540c. Phantom \u662f\u6307\u6570\u636e\u6570\u91cf\u4f1a\u53d8\u591a/\u51cf\u5c11\u3002\u6bd4\u5982\u63d2\u5165\u7684\u6570\u636e\u672c\u6765\u4e0d\u5b58\u5728</p> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2013/#31-schedules","title":"3.1 Schedules","text":"<p>Schedule \u8c03\u5ea6 \u2013 a sequences of instructions that specify the chronological order in which instructions of concurrent transactions are executed. \u4e8b\u52a1\u7684\u6267\u987a\u5e8f\uff0c\u53ef\u4ee5\u662f\u4ea4\u53c9\u6267\u884c\u3002</p> Schedule Example <ul> <li> <p>\u4e32\u884c\u8c03\u5ea6 \u4e32\u884c\u8c03\u5ea6\u4e00\u5b9a\u662f\u6ee1\u8db3\u9694\u79bb\u6027\u7684     </p> </li> <li> <p>\u975e\u4e32\u884c\u8c03\u5ea6\uff0c\u4f46\u7b49\u4ef7\u4e8e\u4e0a\u9762\u7684\u4e32\u884c\u8c03\u5ea6      </p> <p>\u8fd9\u91cc T2 \u7684 readA \u548c T1 \u7684 readB \u53ef\u4ee5\u8c03\u6362\u65f6\u95f4\u6b21\u5e8f\uff0c\u5c31\u5f97\u5230\u4e86\u521a\u521a\u7684\u4e32\u884c\u8c03\u5ea6\u3002 \u4e0b\u9762\u8fd9\u6837\u7684\u8c03\u5ea6\u5c31\u4e0d\u7b49\u4ef7\uff0c\u7834\u574f\u4e86\u9694\u79bb\u6027\u3002  </p> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2013/#32-serializability","title":"3.2 Serializability \u53ef\u4e32\u884c\u5316","text":"<p>\u8fd9\u91cc\u8ba8\u8bba\u7684\u53ef\u4e32\u884c\u5316\u53ea\u662f\u4ece\u9694\u79bb\u7684\u89d2\u5ea6\u6765\u8ba8\u8bba\u7684\u3002</p> <p>A (possibly concurrent) schedule is serializable if it is equivalent to a serial schedule.  \u7b49\u4ef7\u4e8e\u4e00\u4e2a\u4e32\u884c\u8c03\u5ea6</p> <ul> <li>conflict serializability(\u51b2\u7a81\u53ef\u4e32\u884c\u5316)\uff0csame order of the conflict operation pairs</li> <li>view serializability(\u89c6\u56fe\u53ef\u4e32\u884c\u5316)<ul> <li>same data content of the corresponding read(Q) operations</li> <li>same data content(Q) of the write(Q) operations</li> </ul> </li> </ul> <p>\u4e32\u884c\u8c03\u5ea6\u4e00\u5b9a\u662f\u53ef\u4e32\u884c\u5316\u7684\uff0c\u4ea4\u9519\u6267\u884c\u4e0d\u4e00\u5b9a\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2013/#321-conflict-serializability","title":"3.2.1 Conflict Serializability","text":"<p>\u4e00\u5bf9\u51b2\u7a81\u7684\u64cd\u4f5c\uff0c\u51b3\u5b9a\u4e86\u4e32\u884c\u5316\u7684\u987a\u5e8f\u3002 * conflicting operations \u2013 two operations that belong to different transactions and access the same data item, and at least one of them is a write operation.     * \u8bfb\u548c\u5199\u51b2\u7a81     * \u5199\u548c\u8bfb\u51b2\u7a81     * \u5199\u548c\u5199\u51b2\u7a81</p> <p>\u6ce8\u610f\u8fd9\u91cc\u9488\u5bf9\u7684\u662f\u540c\u4e00\u4e2a\u6570\u636e\u9879 Q. </p> <p>a conflict between \\(l_i\\) and \\(l_j\\) forces a (logical) temporal order between them.   </p> <p>If a schedule S can be transformed into a schedule S\u00b4  by a series of swaps of non-conflicting instructions, we say that S and S\u00b4 are conflict equivalent. \u4ea4\u6362\u4e0d\u51b2\u7a81\u7684\u6307\u4ee4\uff0c\u5f97\u5230\u7684\u662f\u51b2\u7a81\u7b49\u4ef7\u7684\u8c03\u5ea6\u3002 We say that a schedule S is conflict serializable if it is conflict equivalent to a serial schedule. \u51b2\u7a81\u7b49\u4ef7\u4e8e\u4e00\u4e2a\u4e32\u884c\u8c03\u5ea6\uff0c\u90a3\u4e48\u8fd9\u4e2a\u8c03\u5ea6\u662f\u53ef\u4e32\u884c\u7684\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2013/#322-testing-for-serializability","title":"3.2.2 Testing for Serializability","text":"<p>Consider some schedule of a set of transactions \\(T_1, T_2, \\ldots, T_n\\) Precedence graph\uff08\u524d\u9a71\u56fe\uff09 \u2014 a directed graph where the vertices are the transactions (names).  </p> <p>\u5982\u679c T1 \u8981\u5728 T2 \u524d\u9762\uff08\u5373\u627e\u51fa\u6240\u6709\u51b2\u7a81\u7684\u64cd\u4f5c\u5bf9\uff0c\u627e\u5230\u4e00\u6761 T1 \u7684\u6307\u4ee4\u8981\u6c42\u6bd4 T2 \u4e2d\u7684\u4e00\u6761\u6307\u4ee4\u5148\u6267\u884c\uff09\uff0c\u90a3\u6211\u4eec\u753b\u4e00\u6761\u4ece T1-&gt;T2 \u7684\u8fb9\u3002 \u5982\u679c\u627e\u5230\u73af\uff0c\u8bf4\u660e\u662f\u4e0d\u53ef\u4e32\u884c\u5316\u7684\u3002\u5426\u5219\u53ef\u4ee5\u5229\u7528\u62d3\u6251\u6392\u5e8f\u3002</p> <p>Example</p> <p> T1 \u7684 readY \u548c T2 \u7684 writeY \u51b2\u7a81\uff0c\u6240\u4ee5\u8981\u753b\u4e00\u6761\u8fb9\uff0c\u5982\u6b64\u3002 \u6700\u540e\u6709 10 \u79cd\u8c03\u5ea6\u65b9\u5f0f\u3002</p> <p>\u53ea\u7528\u4e8e\u7406\u8bba\u7814\u7a76\uff0c\u6570\u636e\u5e93\u5185\u4e0d\u4f1a\u8fd9\u6837\u5b9e\u73b0\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2013/#323-view-serializability","title":"3.2.3 View Serializability","text":"<p>Example</p> <p> \u521d\u59cb\u503c\u7531\u540c\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u5230\u3002\u4e2d\u95f4\u7ed3\u679c\u662f\u7531\u540c\u4e00\u4e2a\u4e8b\u52a1\u5f97\u5230\u518d\u7531\u53e6\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u51fa\u3002\u6700\u7ec8\u5199\u56de\u6570\u636e\u5e93\u4e5f\u662f\u7531\u540c\u4e00\u4e2a\u4e8b\u52a1\u5199\u3002</p> <p></p> <p>A schedule S is view serializable if it is view equivalent to a serial schedule.</p> <p>Every conflict serializable schedule is also view serializable. </p> <p>Below is a schedule which is view-serializable but not conflict serializable.  \u51b2\u7a81\u53ef\u4e32\u884c\u5316\u7684\u90fd\u662f\u89c6\u56fe\u53ef\u4e32\u884c\u5316\u7684\uff0c\u53cd\u4e4b\u4e0d\u4e00\u5b9a\u3002</p> Example <p> \u7b49\u4ef7\u4e8e T27-28-29. (\u90fd\u662f 27 \u8bfb\u521d\u503c\uff0c\u4e2d\u95f4\u6ca1\u6709\u5176\u4ed6\u8bfb\uff0c\u6700\u540e\u662f 29 \u5199)</p>"},{"location":"note/courses/database%20system/Chapter%2013/#324-other-notions-of-serializability","title":"3.2.4 Other Notions of Serializability","text":"<p>\u6709\u7684\u8c03\u5ea6\u65e2\u4e0d\u662f\u51b2\u7a81\u53ef\u4e32\u884c\u5316\u53c8\u4e0d\u662f\u89c6\u56fe\u53ef\u4e32\u884c\u5316\uff0c\u4f46\u5b83\u662f\u53ef\u4e32\u884c\u5316\u7684\u3002</p> <p>Example</p> <p> \u7b49\u4ef7\u4e8e T1-T5(T1\u5148\u505a\uff0cT2\u540e\u505a) \u52a0\u51cf\u64cd\u4f5c\u662f\u53ef\u7ed3\u5408\u7684\uff0c\u8fd9\u91cc\u9700\u8981\u4e86\u89e3\u4e8b\u52a1\u91cc\u5177\u4f53\u662f\u4ec0\u4e48\u64cd\u4f5c\u3002\u4f46\u6211\u4eec\u7684\u7b80\u5355\u6a21\u578b\u5bf9\u6b64\u4e0d\u52a0\u4ee5\u533a\u5206\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2013/#4-recoverable-schedules","title":"4 Recoverable Schedules","text":"<p>Recoverable schedule(\u53ef\u6062\u590d\u8c03\u5ea6) \u2014 if a transaction \\(T_j\\) reads a data item previously written by a transaction \\(T_i\\) , then the commit operation of \\(T_i\\)  appears before the commit operation of \\(T_j\\).</p> <p>Example</p> <p>The following schedule (Schedule 11) is not recoverable if T9 commits immediately after the read. \u53ef\u80fd\u4f1a\u8bfb\u810f\u6570\u636e      \u5982\u679c T8 \u540e\u7eed\u56de\u6eda, \u4f46 T9 \u5df2\u7ecf\u57fa\u4e8e\u810f\u6570\u636e\u505a\u4e86\u540e\u7eed\u64cd\u4f5c\uff0c\u800c\u4e14\u5df2\u7ecf\u63d0\u4ea4\u4e86\uff0c\u4e0d\u53ef\u6062\u590d\u3002  </p> <p>\u5982\u679c\u4e00\u4e2a\u4e8b\u52a1\u8bfb\u4e86\u53e6\u4e00\u4e2a\u4e8b\u52a1\u7684\u810f\u6570\u636e\uff0c\u63d0\u4ea4\u6b21\u5e8f\u9700\u8981\u6709\u7ea6\u675f\uff0c\u8981\u5728\u88ab\u8bfb\u4e8b\u52a1\u7684\u540e\u9762\u63d0\u4ea4\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2013/#41-cascading-rollbacks","title":"4.1 Cascading Rollbacks","text":"<p>Cascading rollback \u2013 a single transaction failure leads to a series of transaction rollbacks.  Consider the following schedule where none of the transactions has yet committed (so the schedule is recoverable)</p> <p>Example</p> <p>If T10 fails, T11 and T12 must also be rolled back. </p> <p>\u8981\u6709\u7ea7\u8054\u56de\u6eda\u7684\u6062\u590d\u3002 Can lead to the undoing of a significant amount of work. \u6211\u4eec\u66f4\u5e0c\u671b\u7528\u975e\u7ea7\u8054\u7684\u6062\u590d\uff0c\u5426\u5219\u5f00\u9500\u592a\u5927\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2013/#5-transaction-isolation-levels","title":"5 Transaction Isolation Levels","text":"<p>A database must provide a mechanism that will ensure that all possible schedules are </p> <ul> <li>either conflict or view serializable, and  \u4fdd\u8bc1\u53ef\u4e32\u884c\u7684</li> <li>are recoverable and preferably cascadeless \u4fdd\u8bc1\u53ef\u6062\u590d\u7684\uff08\u6700\u597d\u662f\u975e\u7ea7\u8054\uff09</li> </ul> <p>\u6570\u636e\u5e93\u91cc\u63d0\u4f9b\u4e00\u79cd\u534f\u8bae\uff0c\u6bcf\u4e2a\u4e8b\u52a1\u8981\u9075\u4ece\u534f\u8bae\uff0c\u9075\u4ece\u534f\u8bae\u4e0b\u4ea7\u751f\u7684\u8c03\u5ea6\u4e00\u5b9a\u662f\u53ef\u4e32\u884c\u3001\u53ef\u6062\u590d\u7684\u3002 \u8fd9\u662f\u5b8c\u5168\u7684\u9694\u79bb\uff0c\u4ee3\u4ef7\u6bd4\u8f83\u9ad8\u3002</p> <p>In SQL <code>set transaction isolation level serializable</code> In JDBC <code>connection.setTransactionIsolation(Connection.TRANSACTION_SERIALIZABLE)</code> \u6211\u4eec\u53ef\u4ee5\u8bbe\u7f6e\u6570\u636e\u5e93\u7684\u9694\u79bb\u7ea7\u522b\u3002</p> <ul> <li>Serializable \u2014 default \u56db\u79cd\u95ee\u9898\u90fd\u8981\u907f\u514d\uff0c\u4ee3\u4ef7\u6700\u9ad8\u3002</li> <li>Repeatable read \u2014 only committed records to be read, repeated reads of same record must return same value.  However, a transaction may not be serializable \u2013 it may find some records inserted by a transaction but not find others. \u4e0d\u7ba1\u5e7d\u7075\u95ee\u9898\u3002</li> <li>Read committed \u2014 only committed records can be read, but successive reads of record may return different (but committed) values. \u4fdd\u8bc1\u4e0d\u8bfb\u810f\u6570\u636e\u3002</li> <li>Read uncommitted \u2014 even uncommitted records may be read. \u6700\u4f4e\u7684\u9694\u79bb\u7ea7\u522b\uff0c\u6709\u4e9b\u6570\u636e\u5e93\u53ea\u662f\u505a\u7edf\u8ba1\u4efb\u52a1\u3002</li> </ul> <p>Lower degrees of consistency useful for gathering approximate information about the database </p> <p>Example</p> <ul> <li>Transaction Boundaries: \u80fd\u8ba2\u591a\u5f20\u7968\u8fd8\u662f\u4e0d\u80fd\u8ba2\u591a\u5f20\u7968</li> <li>\u6267\u884c\u987a\u5e8f</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2013/#6-concurrency-control-protocols","title":"6 Concurrency Control Protocols","text":"<p>\u9501\u534f\u8bae\u662f\u7528\u6765\u8fdb\u884c\u5e76\u53d1\u63a7\u5236\u7684\u534f\u8bae\uff0c\u53c8\u4e24\u79cd\u9501\uff1a\u6392\u4ed6\u9501\u548c\u5171\u4eab\u9501\u3002</p> <p>\u5982\u679c\u5f53\u524d\u6570\u636e\u9879\u83b7\u5f97\u4e86\u6392\u4ed6\u9501\uff0c\u5219\u5f53\u524d\u6307\u4ee4\u65e2\u53ef\u4ee5\u5bf9\u6570\u636e\u9879\u8fdb\u884c\u8bfb\u64cd\u4f5c\u4e5f\u53ef\u4ee5\u8fdb\u884c\u5199\u64cd\u4f5c</p> <p>\u5982\u679c\u5f53\u524d\u6570\u636e\u9879\u83b7\u5f97\u4e86\u5171\u4eab\u9501\uff0c\u5219\u5f53\u524d\u6307\u4ee4\u53ea\u80fd\u5bf9\u6570\u636e\u9879\u8fdb\u884c\u8bfb\u64cd\u4f5c\uff0c\u4e0d\u80fd\u8fdb\u884c\u5199\u64cd\u4f5c</p> <p>\u5982\u679c\u7533\u8bf7\u7684\u662f\u5171\u4eab\u9501\uff0c\u5176\u4ed6\u4e8b\u52a1\u4ecd\u7136\u53ef\u4ee5\u7533\u8bf7\u5171\u4eab\u9501\u3002\u4f46\u662f\u5982\u679c\u7533\u8bf7\u7684\u662f\u6392\u4ed6\u9501\uff0c\u5176\u4ed6\u6240\u6709\u4e8b\u52a1\u4e0d\u80fd\u7533\u8bf7\u4efb\u4f55\u9501 </p> <ul> <li>Lock-Based Protocols<ul> <li>Lock on whole database vs lock on items \u8bfb\u4e4b\u524d\u8981\u8bbf\u95ee\u4e00\u4e2a\u5171\u4eab\u9501\uff0c\u5199\u4e4b\u524d\u8981\u8bbf\u95ee\u4e00\u4e2a\u6392\u4ed6\u9501\uff0c\u51b2\u7a81\u4e86\u5c31\u8981\u7b49\u5f85\u3002\u901a\u8fc7\u9501\u5c31\u89c4\u5b9a\u4e86\u4e00\u4e2a\u6267\u884c\u7684\u6b21\u5e8f\u3002</li> <li>How long to hold lock?</li> <li>Shared vs exclusive locks</li> </ul> </li> <li>Timestamp-Based  Protocols<ul> <li>Transaction timestamp assigned e.g. when a transaction begins  \u4e8b\u52a1\u6267\u884c\u65f6\u5206\u914d\u4e00\u4e2a\u65f6\u95f4\u6233\u3002\u6267\u884c\u6b21\u5e8f\u6309\u7167\u65f6\u95f4\u6233\u6392\u5e8f\u3002</li> <li>Data items store two timestamps<ul> <li>Read timestamp</li> <li>Write timestamp</li> </ul> </li> <li>Timestamps are used to detect out of order accesses</li> </ul> </li> <li>Validation-Based  Protocols<ul> <li>Optimistic concurrency control </li> <li>Low rate of conflicts among transactions</li> <li>Each transaction must go through 3 phases: Read phase -&gt; Validation phase -&gt; Write phase     \u4e8b\u52a1\u63d0\u4ea4\u7684\u65f6\u5019\u5148\u53bb\u9a8c\u8bc1\u662f\u5426\u6709\u51b2\u7a81\uff0c\u5982\u679c\u6ca1\u6709\u51b2\u7a81\u5c31\u63d0\u4ea4\uff0c\u5982\u679c\u51b2\u7a81\u5c31\u8003\u8651\u653e\u5f03\u67d0\u4e2a\u3002</li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2014/","title":"Concurrency Control","text":"Abstract <ul> <li>Lock-Based Protocols\uff08\u57fa\u4e8e\u9501\u7684\u534f\u8bae\uff09</li> <li>Deadlock Handling \uff08\u6b7b\u9501\u5904\u7406\uff09</li> <li>Multiple Granularity \uff08\u591a\u7c92\u5ea6\uff09</li> <li>Insert and Delete Operations</li> <li>Multiversion Schemes \uff08\u591a\u7248\u672c\u673a\u5236\uff09</li> <li>Timestamp-Based Protocols \uff08\u57fa\u4e8e\u65f6\u95f4\u6233\u7684\u534f\u8bae\uff09</li> <li>Validation-Based Protocols \uff08\u57fa\u4e8e\u6709\u6548\u6027\u7684\u534f\u8bae\uff09</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2014/#1-lock-based-protocols","title":"1 Lock-Based Protocols","text":"<p>A lock is a mechanism to control concurrent access to a data item</p> <ul> <li>exclusive(X)\u6392\u4ed6\u9501 Data item can be both read as well as written. X-lock is requested using lock-X instruction.</li> <li>shared(X)\u5171\u4eab\u9501 Data item can only be read. S-lock is requested using lock-S instruction.</li> </ul> <p>\u8981\u5199\u4e00\u4e2a\u6570\u636e\uff0c\u5148\u7533\u8bf7\u83b7\u5f97 X \u9501\uff1b\u8981\u8bfb\u4e00\u4e2a\u6570\u636e\uff0c\u5148\u7533\u8bf7\u83b7\u5f97 S \u9501\u3002 \u8bbf\u95ee\u7ed3\u675f\u540e\u91ca\u653e\u8fd9\u4e2a\u9501\u3002</p> <p>\u8bbf\u95ee\u6570\u636e\u4e4b\u524d\u5fc5\u987b\u83b7\u5f97\u5bf9\u5e94\u7684\u9501\uff0c\u5426\u5219\u9700\u8981\u7b49\u5f85\u3002</p> <p>lock-compatibility matrix: </p> <p>A transaction may be grantd a lock on an item if  the requested lock is compatible with locks alreaady held onn the item by other transactions.</p> <p>\u5982\u679c\u8bf7\u6c42\u7684\u9501\u4e0e\u5176\u4ed6\u4e8b\u52a1\u5df2\u6301\u6709\u7684\u9501\u517c\u5bb9\uff0c\u5219\u53ef\u4ee5\u6388\u4e88\u4e8b\u52a1\u5bf9\u67d0\u4e2a\u6570\u636e\u9879\u7684\u9501\u3002</p> <p>Any number of transactions can hold shared locks on the same data item.</p> <p>But is any transaction holds an exlusive on the item no other transaction may hold any lock on the item.</p> <p>\u5982\u679c\u4e00\u4e2a\u4e8b\u52a1\u6301\u6709\u5bf9\u6570\u636e\u9879\u7684\u6392\u4ed6\u9501\uff0c\u5219\u6ca1\u6709\u5176\u4ed6\u4e8b\u52a1\u53ef\u4ee5\u5728\u8be5\u6570\u636e\u9879\u4e0a\u6301\u6709\u4efb\u4f55\u9501\u3002</p> <p>if a lock cannot be granted , the requesting transaction is made to wait until all incompatible locks held by other transactions have been released. The lock is then granted.</p> <p>\u5982\u679c\u9501\u65e0\u6cd5\u6388\u4e88\uff0c\u5219\u8bf7\u6c42\u7684\u4e8b\u52a1\u5c06\u88ab\u8feb\u7b49\u5f85\uff0c\u76f4\u5230\u5176\u4ed6\u4e8b\u52a1\u91ca\u653e\u6240\u6709\u4e0d\u517c\u5bb9\u7684\u9501\u3002\u7136\u540e\u6388\u4e88\u9501\u3002</p> <p>A locking protocol is a set of rules following by all transactions while requesting and releasing locks.</p> <p>Locking protocols enforce serializability by restricting the set of possible schedules.</p> <p>pitfalls of lock-based protocols:</p> <p></p> <p>T3\u6216T4\u90fd\u4e0d\u80fd\u8fdb\u884c\u5de5\u4f5c - <code>lock-S(B)</code>\u5bfc\u81f4T4\u5fc5\u987b\u7b49T3\u91ca\u653e\u9501\uff0c<code>lock-x(A)</code>\u5bfc\u81f4T3\u5fc5\u987b\u7b49T4\u91ca\u653e\u9501</p> <p>\u8fd9\u79cd\u60c5\u51b5\u53eb\u505a\u6b7b\u9501\uff08deadlock\uff09\uff0c\u5fc5\u987b\u56de\u6eda\u4f7f\u9501\u91ca\u653e</p> <p>Starvation: </p> <ul> <li>A transaction may be waiting for  an X-lcok on an item, while a sequence of other transactions request and are granted an S-lock on the same item .</li> <li>The same transaction is repeatedly rolled back due to deadlocks</li> <li>Concurrency control manager can be designed to prevent starvation.</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2014/#11-the-two-phase-locking-protocol","title":"1.1 The Two-Phase Locking Protocol","text":"<p>\u4e8b\u52a1\u7684\u52a0\u9501\u548c\u51cf\u9501\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\u3002  </p> <ul> <li>Phase 1: Growing Phase (\u589e\u957f\u9636\u6bb5)<ul> <li>transaction may obtain locks </li> <li>transaction may not release locks</li> <li>\u53ea\u80fd\u7533\u8bf7\u9501\u4e0d\u80fd\u91ca\u653e\u9501</li> </ul> </li> <li>Phase 2: Shrinking Phase(\u7f29\u51cf\u9636\u6bb5)<ul> <li>transaction may release locks</li> <li>transaction may not obtain locks \u4e00\u4e2a\u4e8b\u52a1\u4e00\u65e6\u5f00\u59cb\u91ca\u653e\u9501\uff0c\u5c31\u4e0d\u80fd\u518d\u52a0\u9501\u4e86\u3002</li> </ul> </li> </ul> <p>\u4e8b\u52a1\u4e24\u4e2a\u9636\u6bb5\u7684\u5206\u754c\u7ebf(lock point), \u5373\u83b7\u5f97\u4e86\u6700\u540e\u4e00\u4e2a\u9501\uff08\u5b8c\u6210\u83b7\u5f97\u8fd9\u4e2a\u52a8\u4f5c\uff09\u7684\u65f6\u95f4\u70b9\u3002 \u8fd9\u6837\u6bcf\u4e2a\u4e8b\u52a1\u90fd\u6709\u4e00\u4e2a lock point, \u6309\u7167\u8fd9\u4e2a\u65f6\u95f4\u6392\u5e8f\u5373\u53ef\u5f97\u5230\u4e32\u884c\u5316\u7684\u6267\u884c\u987a\u5e8f\u3002</p> <p></p> Example <pre><code>lock-S(A);\nread (A);\nlock-S(B); &lt;- lock point\nread(B)\uff1b\nunlock(A);\nunlock(B);\ndisplay(A+B);\n</code></pre> <p>Two-Phase Locking Protocol assures serializability. </p> <p>It can be proved that the transactions can be serialized in the order of their lock points. (\u5728lockpoint \u5904\u8fdb\u884c\u6700\u540e\u7684\u4e0a\u9501) \u53ef\u4ee5\u6309 lock points \u4e32\u884c\u5316\uff0c\u4f46\u4e0d\u662f\u53ea\u80fd\u6309\u7167\u8fd9\u4e48\u4e32\u884c\u5316\u3002</p> <p>\u4e0a\u9762\u57fa\u672c\u7684\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\u65e0\u6cd5\u4fdd\u8bc1\u4e8b\u52a1\u7684\u53ef\u6062\u590d\u6027\uff08\u4e0d\u80fd\u8bfb\u810f\u6570\u636e\uff09\u3002</p> <p>Extensions to basic two-phase locking\uff08\u57fa\u672c\u4e24\u9636\u6bb5\u5c01\u9501\uff09 needed to ensure recoverability of freedom from cascading roll-back</p> <ul> <li>Strict two-phase locking\uff08\u4e25\u683c\u4e24\u9636\u6bb5\u5c01\u9501\uff09: a transaction must hold all its exclusive locks till it commits/aborts. Ensures recoverability and avoids cascading roll-backs. S \u9501\u53ef\u4ee5\u7528\u5b8c\u5c31\u653e\uff0c\u4f46 X \u9501\u5fc5\u987b\u5230\u63d0\u4ea4\u7684\u65f6\u5019\u624d\u80fd\u91ca\u653e\uff08\u8fd9\u6837\u522b\u4eba\u5c31\u4e0d\u80fd\u8bbf\u95ee\u4e86\uff0c\u65e0\u6cd5\u8bfb\u810f\u6570\u636e\uff09\u3002\u4ee3\u4ef7\u662f\u964d\u4f4e\u5e76\u53d1\u5ea6\u3002</li> <li>Rigorous two-phase locking\uff08\u5f3a\u4e24\u9636\u6bb5\u5c01\u9501\uff09: a transaction must hold all locks till commit/abort.  Transactions can be serialized in the order in which they commit. \u6240\u6709\u7684\u9501\u90fd\u8981\u7b49\u5230\u63d0\u4ea4\u624d\u80fd\u91ca\u653e\u3002</li> </ul> <p>Two-phase locking is not a necessary condition for serializability. \u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\u4e0d\u662f\u53ef\u4e32\u884c\u5316\u7684\u5fc5\u8981\u6761\u4ef6\u3002\uff08\u53ea\u8981\u8bbf\u95ee\u7684item\u5168\u662f\u72ec\u7acb\u7684\uff09</p> Example <p> </p> <p>\u8fd9\u91cc\u653e\u9501\u4e86\u4e4b\u540e\u8fd8\u83b7\u5f97\u9501\u4e86\uff0c\u8fdd\u80cc\u4e86\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\u3002 \u4e24\u4e2a\u51b2\u7a81\u7684\u64cd\u4f5c\u4e4b\u95f4\u80af\u5b9a\u6709\u4e00\u7ec4unlock\u548clock\u64cd\u4f5c\u3002 \u6240\u4ee5\u4e0d\u9075\u4ece\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\uff0c\u4e5f\u53ef\u4ee5\u83b7\u5f97\u51b2\u7a81\u53ef\u4e32\u884c\u7684\u8c03\u5ea6\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2014/#12-2pl-proof","title":"1.2 2PL - Proof","text":"<ul> <li> <p>Proof by Contradiction \u5982\u679c\u6709 Ti-&gt;Tj \u7684\u6709\u5411\u8fb9\uff0c\u90a3 Ti \u7684 lockpoint \u4e00\u5b9a\u5c0f\u4e8e Tj. Ti-&gt;Tj \u80af\u5b9a\u6709\u4e00\u4e2a\u51b2\u7a81\u7684\u8bbf\u95ee\uff08\u5bf9\u540c\u4e00\u4e2a\u6570\u636e\uff09\u90a3 Tj \u5728\u83b7\u5f97\u9501\u7684\u65f6\u5019 Ti \u5df2\u7ecf\u653e\u9501\u4e86\uff0c\u5f97\u8bc1\u3002 </p> </li> <li> <p>Proof by Induction \u53ea\u9700\u8bc1\u660e: Lock point \u6700\u5c0f\u7684\u4e8b\u52a1\uff0c\u53ef\u4ee5\u65e0\u969c\u788d\u5730\u4ea4\u6362\u5230\u8c03\u5ea6\u6700\u524d\u3002 \u5047\u5982\u6709\u4e8b\u52a1\u62e6\u4f4f\u4ed6\u4e86\uff0c\u8bc1\u660e\u8fd9\u662f\u4e0d\u53ef\u80fd\u53d1\u751f\u7684\u3002\uff08\u4e0e lockpoint \u6700\u5c0f\u77db\u76fe\uff09 </p> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2014/#13-lock-conversions","title":"1.3 Lock Conversions","text":"<p>\u901a\u5e38\u662f\u5148\u8bfb\u540e\u4fee\u6539\u3002\u4f46\u6211\u4eec\u4e0d\u80fd\u5148\u5f97 S \u9501\u518d\u91ca\u653e\u540e\u5f97 X \u9501\uff08\u8fdd\u80cc\u4e86\u4e24\u9636\u6bb5\u534f\u8bae\uff09\uff0c\u4e5f\u4e0d\u80fd\u76f4\u63a5\u7528 X \u9501\uff08\u964d\u4f4e\u5e76\u53d1\u5ea6\uff09\u3002</p> <p>Two-phase locking with lock conversions:</p> <ul> <li>First Phase:        <ul> <li>can acquire a lock-S or lock-X on a data item</li> <li>can convert a lock-S to a lock-X (lock-upgrade)</li> </ul> </li> <li>Second Phase:<ul> <li>can release a lock-S or lock-X</li> <li>can convert a lock-X to a lock-S (lock-downgrade)</li> </ul> </li> </ul> <p></p> <p>lockpoint \u7531\u653e\u9501\u6216\u8005\u964d\u7ea7\u51b3\u5b9a</p> <p>This protocol assures serializability.</p> <p>\u7533\u8bf7\u54ea\u4e2a\u9501\u662f\u7531\u6570\u636e\u5e93\u5185\u90e8\u7ba1\u7406\u51b3\u5b9a\uff0c\u4e0d\u662f\u7531\u7a0b\u5e8f\u5458\u663e\u793a\u8c03\u7528\u3002\uff08\u81ea\u52a8\u52a0\u9501\uff09  </p> <p>\u5982\u679c\u5df2\u7ecf\u6709\u9501\u4e86\uff0c\u76f4\u63a5\u8bfb\uff1b\u5426\u5219\u7533\u8bf7\u8bfb\u9501\u3002</p> <p>All locks are released after commit or abort</p>"},{"location":"note/courses/database%20system/Chapter%2014/#2-implementation-of-locking","title":"2 Implementation of Locking","text":"<p>A lock manager can be implemented as a separate process to which transactions send lock and unlock requests. \u4e00\u4e2a\u72ec\u7acb\u7684\u8fdb\u7a0b\u7ba1\u7406\u4e00\u4e2a\u72ec\u7acb\u7684\u6570\u636e\u7ed3\u6784</p> <p>The lock manager replies to a lock request by sending a lock grant message</p> <p>\u53d1\u51fa\u8bf7\u6c42\u7684\u4e8b\u52a1\u7b49\u5230\u8bf7\u6c42\u88ab\u56de\u590d</p> <p>The  lock manage maintains a data-structure called a lock table to record granted locks and pending requests.</p> <p>The lock table \u901a\u5e38\u7531\u5185\u5b58\u4e2d\u7684\u4e00\u4e2a\u54c8\u5e0c\u8868\u5b9e\u73b0\uff0c\u4ee5\u88ab\u9501\u7684 item \u7684\u540d\u5b57\u4f5c\u4e3a\u7d22\u5f15</p>"},{"location":"note/courses/database%20system/Chapter%2014/#21-lock-table","title":"2.1 Lock Table","text":"<p>Lock table records granted locks and waiting requests. </p> <p>\u6bcf\u4e2a\u8bb0\u5f55\u7684 id \u53ef\u4ee5\u653e\u8fdb\u54c8\u5e0c\u8868\u3002 \u5982\u8fd9\u91cc\u8bb0\u5f55 123, T1\u3001T8 \u83b7\u5f97\u4e86 S \u9501\uff0c\u4f46 T2 \u5728\u7b49\u5f85\u83b7\u5f97 X \u9501\u3002  </p> <p>T1: lock-X(D) \u901a\u8fc7 D \u7684 id \u627e\u5230\u54c8\u5e0c\u8868\u4e0a\u7684\u9879\uff0c\u5728\u5bf9\u5e94\u9879\u4e0a\u589e\u52a0\u3002\u6839\u636e\u662f\u5426\u76f8\u5bb9\u51b3\u5b9a\u662f\u83b7\u5f97\u9501\u8fd8\u662f\u7b49\u5f85\u3002 unlock \u7c7b\u4f3c\uff0c\u5148\u627e\u5230\u5bf9\u5e94\u7684\u6570\u636e\uff0c\u62ff\u6389\u5bf9\u5e94\u7684\u9879\u3002\u540c\u65f6\u770b\u540e\u7eed\u7684\u9879\u662f\u5426\u53ef\u4ee5\u83b7\u5f97\u9501\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u4e8b\u52a1 commit, \u9700\u8981\u653e\u6389\u6240\u6709\u7684\u9501\uff0c\u6211\u4eec\u9700\u8981\u53bb\u627e\u3002\u56e0\u6b64\u6211\u4eec\u8fd8\u9700\u8981\u4e00\u4e2a\u4e8b\u52a1\u7684\u8868\uff0c\u6807\u660e\u6bcf\u4e2a\u4e8b\u52a1\u6240\u7528\u7684\u9501\u3002</p> <p>if transaction aborts, all waiting or granted requests of the transactioin are deleted.</p> <p>lock manager may keep a  list of locks held by each transaction, to implement this efficiently.</p>"},{"location":"note/courses/database%20system/Chapter%2014/#22-deadlock-handling","title":"2.2 Deadlock Handling","text":"<p>System is deadlocked if there is a set of transactions such that every transaction in the set is waiting for another transaction in the set.</p> <p>\u90fd\u5728\u4e92\u76f8\u7b49\u5bf9\u65b9\u5b8c\u6210</p> <p>Two-phase locking does not ensure freedom from deadlocks.</p> <p>Deadlock prevention protocols ensure that the system will never enter into a deadlock state. Some prevention strategies:</p> <ul> <li>Require that each transaction locks all its data items before it begins execution (predeclaration). \u4e00\u4e2a\u4e8b\u52a1\u6267\u884c\u524d\u4e00\u6b21\u6027\u83b7\u5f97\u6240\u6709\u9501\u3002</li> <li>Impose partial ordering of all data items and require that a transaction can lock data items only in the order specified by the partial order (graph-based protocol). \u5bf9\u6570\u636e\u8bbf\u95ee\u89c4\u5b9a\u4e00\u79cd\u6b21\u5e8f\u3002\u6bd4\u5982\u89c4\u5b9a\u5fc5\u987b\u5148\u62ff\u5496\u5561\u518d\u62ff\u5496\u5561\u4f34\u4fa3\u3002 e.g. T1: A-50, B+50. T2: B-10, A+10. \u6211\u4eec\u53ef\u4ee5\u628a\u7b2c\u4e8c\u4e2a\u4e8b\u52a1\u8c03\u6362\u987a\u5e8f\uff0c\u53d8\u4e3a A+10, B-10. \u8fd9\u6837\u6309\u7167 partial order \u80fd\u964d\u4f4e\u6b7b\u9501\u6982\u7387\u3002</li> <li>Timeout-Based Schemes:  <ul> <li>a transaction waits for a lock only for a specified amount of time. After that, the wait times out and the transaction is rolled back.  \u7b49\u5f85\u4e00\u4f1a\uff0c\u5982\u679c\u8fd8\u662f\u7b49\u4e0d\u5230\u5c31\u653e\u5f03\u3002</li> <li>thus deadlocks are not possible.  </li> <li>simple to implement; but starvation is possible. Also difficult to determine good value of the timeout interval. \u65f6\u957f\u4e0d\u597d\u89c4\u5b9a\u3002\u4f46\u53ef\u80fd\u6709\u4e8b\u52a1\u8001\u662f\u7533\u8bf7\u4e0d\u5230\u81ea\u5df1\u7684\u9501\u3002</li> </ul> </li> <li>Following Schemes use timestamps for the sake of deadlock prevention alone:<ul> <li>Wait-Die:  (non-preemptive)<ul> <li>Older transaction may wait for younger transaction to release its lock. \u65e7\u7684\u4e8b\u52a1\u7b49\u5f85\u65b0\u7684\u4e8b\u52a1\u91ca\u653e\u9501\u3002\u65b0\u4e8b\u52a1\u6c38\u8fdc\u4e0d\u7b49\u5f85\u8001\u7684\u3002 </li> <li>Younger transaction is aborted (killed) if it requests a lock held by an older transaction.\u4e0d\u5141\u8bb8\u8fd9\u79cd\u60c5\u51b5\u7684\u5b58\u5728  </li> <li>Older transaction is not aborted.  </li> <li>Older transactions are given priority over younger transactions.  </li> </ul> </li> <li>Wound-Wait:  (preemptive) \u53ea\u6709younger\u4e8b\u52a1\u7b49\u5f85older,\u5426\u5219\u76f4\u63a5\u593a\u53d6younger\u7684\u9501(\u5f3a\u5236younger \u56de\u6eda)<ul> <li>Younger transaction may wait for older transaction to release its lock.  </li> <li>Older transaction is aborted (wounded) if it requests a lock held by a younger transaction.  </li> <li>Younger transaction is not aborted.  </li> <li>Younger transactions are given priority over older transactions.</li> </ul> </li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2014/#23-deadlock-detection","title":"2.3 Deadlock Detection","text":"<p>\u5b9a\u671f\u68c0\u67e5\u6570\u636e\u5e93\u5185\u662f\u5426\u6709\u6b7b\u9501\uff0c\u5982\u679c\u6709\u5c31\u9009\u62e9\u4e00\u4e2a\u4e8b\u52a1\u5c06\u5176\u56de\u6eda\u3002  </p> <p>wait-for graph </p> <p>\u8fd9\u91cc\u7684\u7bad\u5934\u8868\u793a\u5728\u7b49\u5f85\u9501\u3002\u5982 T17-&gt;T18 \u8868\u793a T17 \u5728\u7b49\u5f85 T18 \u7684\u9501\u3002 \u5982\u679c\u5f62\u6210\u4e86\u73af\uff0c\u5c31\u8bf4\u660e\u51fa\u73b0\u4e86\u6b7b\u9501\u3002</p> <p>\u901a\u8fc7\u521a\u521a\u7684 Lock Table, \u6211\u4eec\u53ef\u4ee5\u5f97\u5230\u7b49\u5f85\u5173\u7cfb\u3002\uff08\u540e\u9762\u7684 waited \u7b49\u5f85\u524d\u9762\u7684 granted\uff09</p> <p>When deadlock is  detected :</p> <ul> <li> <p>Some transaction will have to rolled back (made a victim) to break deadlock.  Select that transaction as victim that will incur minimum cost.  </p> </li> <li> <p>Rollback -- determine how far to roll back transaction</p> <ul> <li>Total rollback: Abort the transaction and then restart it.</li> <li>More effective to roll back transaction only as far as necessary to break deadlock.\u53ea\u8981\u80fd\u591f\u6253\u7834\u6b7b\u9501\u5c31\u8db3\u591f\u4e86 Starvation happens if same transaction is always chosen as victim. Include the number of rollbacks in the cost factor to avoid starvation</li> </ul> </li> </ul> Example <p> T1 \u7b49 T2, T2 \u7b49 T6, T6 \u7b49 T1.(\u6ce8\u610f\u8fd9\u91cc T5 \u662f\u7b49\u5f85 T6 \u800c\u4e0d\u662f T2)</p>"},{"location":"note/courses/database%20system/Chapter%2014/#24-graph-based-protocols","title":"2.4 Graph-Based Protocols","text":"<p>\u5047\u8bbe\u6211\u4eec\u77e5\u9053\u6570\u636e\u662f\u6309\u504f\u5e8f\u8bbf\u95ee\u7684\uff0c\u53ef\u4ee5\u6709\u66f4\u9ad8\u7ea7\u7684\u534f\u8bae\u3002 \u6570\u636e\u6309\u7167\u67d0\u79cd\u504f\u5e8f\u5173\u7cfb\u8bbf\u95ee\u3002 </p> <p>The tree-protocol is a simple kind of graph protocol. </p> <ul> <li>Only exclusive locks are allowed.  \u53ea\u6709\u6392\u4ed6\u9501</li> <li>The first lock by Ti may be on any data item. Subsequently, a data Q can be locked by Ti only if the parent of Q is currently locked by Ti. \u7b2c\u4e00\u4e2a\u9501\u53ef\u4ee5\u653e\u4efb\u610f\u5730\u65b9\uff0c\u540e\u9762\u7684\u9501\u53ea\u80fd\u5728\u7236\u8282\u70b9\u9501\u4f4f\u65f6\u624d\u80fd\u5f80\u4e0b\u9501\u3002</li> <li>Data items may be unlocked at any time.  </li> <li>A data item that has been locked and unlocked by Ti  cannot subsequently be relocked by Ti  \u653e\u4e86\u4e4b\u540e\u4e0d\u80fd\u518d\u52a0\u9501\u4e86\u3002  </li> </ul> Example <p> \u6bd4\u5982\u8fd9\u91cc\u6211\u4eec\u5148\u9501 D, \u968f\u540e\u9501 G, \u653e\u6389, \u9501 H, \u8fd9\u65f6 D \u5df2\u7ecf\u6ca1\u7528\u4e86\u53ef\u4ee5\u653e\u6389\u3002\u968f\u540e\u6211\u4eec\u9501 J, H \u4e5f\u5c31\u6ca1\u7528\u4e86\u4e5f\u53ef\u4ee5\u653e\u6389\u3002\u6700\u540e\u653e\u6389  J. </p> <p>The tree protocol ensures conflict serializability as well as freedom from deadlock. </p> <ul> <li>Advantages<ul> <li>Unlocking may occur earlier in the tree-locking protocol than in the two-phase locking protocol. shorter waiting times, and increase in concurrency \u9501\u53ef\u4ee5\u66f4\u65e9\u91ca\u653e\uff0c\u4e0d\u7528\u7b49\u5f85\u7b2c\u4e8c\u9636\u6bb5\u3002\u7528\u5b8c\u5c31\u53ef\u4ee5\u653e\uff0c\u63d0\u9ad8\u4e86\u5e76\u53d1\u5ea6\u3002</li> <li>protocol is deadlock-free no rollbacks are required</li> </ul> </li> <li>Disadvantages<ul> <li>Protocol does not guarantee recoverability or cascade freedom Need to introduce commit dependencies to ensure recoverability \u65e9\u653e\u9501\uff0c\u610f\u5473\u7740\u53ef\u80fd\u4f1a\u8bfb\u810f\u6570\u636e\uff0c\u4e0d\u53ef\u6062\u590d\u3002\u8fd9\u5c31\u5bf9 commit \u987a\u5e8f\u6709\u8981\u6c42\u3002</li> <li>Transactions may have to lock more data items than needed.<ul> <li>increased locking overhead, and additional waiting time \u6bd4\u5982\u521a\u521a\u7684\u56fe\u4e2d\uff0c\u6211\u4eec\u8bbf\u95ee G, J, \u9700\u8981\u4ece D \u5f00\u59cb\u8bbf\u95ee\u3002\u4f1a\u9501\u4e0a\u66f4\u591a\u6570\u636e\u3002  </li> <li>potential decrease in concurrency \u964d\u4f4e\u4e86\u5e76\u53d1\u5ea6</li> </ul> </li> <li>\u5fc5\u987b\u77e5\u9053\u6570\u636e\u6709\u504f\u5e8f\u5173\u7cfb\uff0c\u624d\u80fd\u6784\u5efa\u6811\u3002</li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2014/#3-multiple-granularity","title":"3 Multiple Granularity","text":"<p>\u53ef\u4ee5\u9501\u5728\u8bb0\u5f55\u4e0a(\u5982 <code>update table set ...;</code>)\uff0c\u4e5f\u53ef\u4ee5\u9501\u5728\u6574\u4e2a\u8868\u4e0a(\u5982 <code>select * from table;</code>)\u3002  </p> <p>Granularity of locking (level in tree where locking is done):</p> <ul> <li>fine granularity\uff08\u7ec6\u7c92\u5ea6\uff09 (lower in tree): high concurrency, high locking overhead\uff08\u9501\u5f00\u9500\uff09</li> <li>coarse granularity\uff08\u7c97\u7c92\u5ea6\uff09 (higher in tree): low locking overhead, low concurrency\uff0c\u9700\u8981\u66f4\u591a\u7c7b\u578b\u7684\u9501</li> </ul> <p>S\u9501\u548cX\u9501\u53ef\u4ee5\u52a0\u5728\u4e0d\u540c\u7684\u7c92\u5ea6\u4e0a,\u4f46\u662f\u8bdd\u4e0d\u591f\uff0c\u9700\u8981\u5f15\u5165\u4e00\u4e9b\u610f\u5411\u9501</p> <p>\u5982\u679c\u6709\u4e8b\u52a1\u5e0c\u671b\u5728\u7ec6\u7c92\u5ea6\u4e0a\u52a0S\u9501\uff0c\u5fc5\u987b\u5728\u7c97\u7c92\u5ea6\u4e0a\u52a0\u610f\u5411\u9501\u3002</p> Example of Granularity Hierarchy <p></p> <p>The levels, starting from the coarsest (top) level are</p> <ul> <li>database</li> <li>area </li> <li>File(table)</li> <li>record   </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2014/#31-intention-lock-modes","title":"3.1 Intention Lock Modes","text":"<p>\u8bb0\u5f55\u548c\u8868\u4e0a\u90fd\u53ef\u4ee5\u52a0 S/X \u9501\u3002\u4f46\u662f\u5f53\u4e8b\u52a1\u6d89\u53ca\u5230\u591a\u4e2a\u7c92\u5ea6\uff0c\u5982\u4f55\u5224\u65ad\u662f\u5426\u51b2\u7a81\uff0c\u5982\u4e00\u4e2a\u8868\u7684 S \u9501\u548c\u4e00\u4e2a\u8bb0\u5f55\u7684 X \u9501\u662f\u51b2\u7a81\u7684\u3002 \u6211\u4eec\u5f15\u5165\u4e86\u5176\u4ed6\u9501\uff0c\u610f\u5411\u9501(IS, IX, SIX)</p> <ul> <li>\u5982\u679c\u4e00\u4e2a\u4e8b\u52a1\u8981\u7ed9\u4e00\u4e2a\u8bb0\u5f55\u52a0 S \u9501\uff0c\u90a3\u4e5f\u8981\u5728\u8868\u4e0a\u52a0 IS \u9501\u3002\uff08\u610f\u5411\u5171\u4eab\u9501\uff09</li> <li>\u5982\u679c\u4e00\u4e2a\u4e8b\u52a1\u8981\u7ed9\u4e00\u4e2a\u8bb0\u5f55\u52a0 X \u9501\uff0c\u90a3\u4e5f\u8981\u5728\u8868\u4e0a\u52a0 IX \u9501\u3002\uff08\u610f\u5411\u6392\u4ed6\u9501\uff09</li> <li>SIX \u9501\u662f S \u548c IX \u9501\u7684\u7ed3\u5408\u3002\u8981\u8bfb\u6574\u4e2a\u8868\uff0c\u4f46\u53ef\u80fd\u5bf9\u5176\u4e2d\u67d0\u4e9b\u8bb0\u5f55\u8fdb\u884c\u4fee\u6539\u3002\uff08\u5171\u4eab\u610f\u5411\u6392\u4ed6\uff09  </li> </ul> <p>\u8fd9\u6837\u5f53\u6211\u4eec\u60f3\u5411\u4e00\u4e2a\u8868\u4e0a S \u9501\u65f6\uff0c\u53d1\u73b0\u8868\u4e0a\u6709 IX \u9501\uff0c\u8fd9\u6837\u6211\u4eec\u5f88\u5feb\u5c31\u53d1\u73b0\u4e86\u51b2\u7a81\uff0c\u9700\u8981\u7b49\u5f85\u3002 IS \u548c IX \u662f\u4e0d\u51b2\u7a81\u7684\u3002\u5728\u8868\u4e0a\u662f\u4e0d\u51b2\u7a81\u7684\uff0c\u53ef\u80fd\u5728\u8bb0\u5f55\u4e0a\u51b2\u7a81\uff08\u5373\u5bf9\u4e00\u4e2a\u8bb0\u5f55\u53c8\u8bfb\u53c8\u5199\uff0c\u51b2\u7a81\u53d1\u751f\u5728\u8bb0\u5f55\u5c42\u9762\u800c\u975e\u8868\uff09\u3002</p> <ul> <li>intention-shared (IS): indicates explicit locking at a lower level of the tree but only with shared locks. \u5728\u4e0b\u9762\u4f1a\u52a0 S \u9501\u3002</li> <li>intention-exclusive (IX): indicates explicit locking at a lower level with exclusive or shared locks \u5728\u4e0b\u9762\u4f1a\u52a0 X \u9501\u3002</li> <li>shared and intention-exclusive (SIX): the subtree rooted by that node is locked explicitly in shared mode and explicit locking is being done at a lower level with exclusive-mode locks.</li> </ul> <p>\u8981\u7b26\u5408\u76f8\u5bb9\u77e9\u9635\u3002\u4ece\u6700\u7c97\u7684\u7c92\u5ea6\u5f00\u59cb\u8bbf\u95ee\u3002\u8981\u52a0\u9501\u7684\u65f6\u5019\u6ce8\u610f\uff0c\u5bf9\u7236\u4eb2\u7684\u9501\u6709\u8981\u6c42\u3002</p> <p></p> <p>\u8bbe\u6709\u4e8b\u52a1A B,\u90fd\u5bf9\u540c\u4e00\u6570\u636e\u5bf9\u8c61r\u52a0\u9501</p> <ul> <li>X\u9501\u6392\u4ed6\uff0c\u6545\u53ea\u8981A\u5bf9r\u52a0X\u9501\uff0cB\u5c31\u4e0d\u80fd\u5bf9r\u52a0\u4efb\u4f55\u9501</li> </ul> Example <p></p> <p>\u52a0\u9501\u662f\u4ece\u4e0a\u5f80\u4e0b\uff0c\u653e\u9501\u662f\u4ece\u4e0b\u5f80\u4e0a\u3002 \u5148\u5bf9 DB \u52a0 IX, \u5bf9 A1 \u52a0 IX, \u5bf9 Fa \u52a0 SIX, \u5bf9\u67d0\u4e9b\u8bb0\u5f55\u52a0 X. \u5176\u4ed6\u8bb0\u5f55\u5c31\u4e0d\u7528\u518d\u52a0 S \u9501\u4e86(\u56e0\u4e3a\u8868\u662f SIX).  </p>"},{"location":"note/courses/database%20system/Chapter%2014/#4-insert-and-delete-operations","title":"4 Insert and Delete Operations","text":"<p>\u6570\u636e\u5e93\u91cc\u9664\u4e86 R/W \u8fd8\u6709\u63d2\u5165\u3001\u5220\u9664\u7b49\u64cd\u4f5c\u3002 \u9700\u8981\u5b9a\u4e49 R/W \u548c\u63d2\u5165/\u5220\u9664\u662f\u5426\u51b2\u7a81\u3002</p> <p>If two-phase locking is used :</p> <ul> <li>A delete operation may be performed only if the transaction deleting the tuple has an exclusive lock on the tuple to be deleted. \u5220\u9664\u524d\u9700\u8981\u52a0 X \u9501\u3002</li> <li>A transaction that inserts a new tuple into the database is given an X-mode lock on the tuple \u63d2\u5165\u4e4b\u524d\u662f\u6ca1\u6709\u8fd9\u4e2a\u6570\u636e\u7684\uff0c\u65e0\u6cd5\u5148\u52a0\u9501\u3002\u5e94\u8be5\u63d2\u5165\u4e4b\u540e\u9a6c\u4e0a\u52a0\u4e0a X \u9501\u3002</li> </ul> <p>Insertions and deletions can lead to the phantom phenomenon. \u56e0\u6b64\u53ea\u662f\u52a0\u9501\u4e0d\u80fd\u4fdd\u8bc1\u4e32\u884c\u5316\u3002  (If only tuple locks are used , non-serializable  schedules can result)</p> <p>One solution:</p> <ul> <li>Associate a data item with the relation, to represent the information about what tuples the relation contains</li> <li>\u4e8b\u52a1\u626b\u63cf\u5728data item\u4e0a\u83b7\u5f97\u5171\u4eab\u9501\u7684relatoiin</li> <li>\u4e8b\u52a1\u63d2\u5165\u6216\u8005\u5220\u9664\u4e00\u4e2atuple\u65f6\uff0c\u5728data item\u4e0a\u83b7\u5f97\u6392\u4ed6\u9501</li> <li>\u8fd9\u79cd\u534f\u8bae\u4f1a\u5bfc\u81f4\u63d2\u5165\u5220\u9664\u65f6\u975e\u5e38\u4f4e\u7684\u5e76\u53d1\u5ea6</li> <li>Index Locking Protocols\u63d0\u4f9b\u66f4\u9ad8\u7684\u5e76\u53d1\u5ea6\u540c\u65f6\u653e\u7f6e\u4e86\u5e7d\u7075\u73b0\u8c61\uff0cby requiring locks on certain index buckets</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2014/#41-index-locking-protocol","title":"4.1 Index Locking Protocol","text":"<ul> <li>Every relation must have at least one index</li> <li>A transaction can access tuples in a relation only after finding them through one or more indices on the relation</li> </ul> <p>\u5176\u5b9e\u63d2\u5165/\u5220\u9664\u64cd\u4f5c\u9690\u542b\u5730\u4fee\u6539\u4e86\u4fe1\u606f\uff0c\u53ea\u662f\u6ca1\u6709\u88ab\u8868\u793a\u51fa\u6765\u3002\u6211\u4eec\u53ef\u4ee5\u8fd9\u4e2a\u4fe1\u606f\u663e\u793a\u5316\uff0c\u52a0\u9501\u3002 \u5982\u679c\u8868\u4e0a\u6709\u7d22\u5f15\uff0c\u6211\u4eec\u5728\u626b\u63cf\u7d22\u5f15\u7684\u65f6\u5019\u4f1a\u5728\u53f6\u5b50\u4fee\u6539\uff0c\u6211\u4eec\u5728\u8fd9\u91cc\u8fdb\u884c\u68c0\u6d4b\u3002</p> Index Locking on a B+ -Tree <p> </p> <p>\u5148\u5728\u53f6\u5b50\u9875\u52a0\u9501\uff0c\u518d\u5728\u8bb0\u5f55\u4e0a\u52a0\u9501\u3002 \u5982\u679c\u6211\u4eec\u8981\u63d2\u5165\uff0c\u6bd4\u5982 18. \u8fd9\u65f6\u63d2\u5165\u5230\u4e86 10 \u8fd9\u9875\uff0c\u53d1\u73b0\u8fd9\u9875\u88ab\u9501\u4f4f\u4e86\uff0c\u65e0\u6cd5\u63d2\u5165\uff0c\u8fd9\u6837\u5c31\u786e\u4fdd\u4e86\u8fd9\u4e2a\u8303\u56f4\u5185\u65e0\u6cd5\u88ab\u63d2\u5165\uff0c\u4e0d\u4f1a\u6709\u5e7d\u7075\u95ee\u9898\u3002  </p> <p>\u4e5f\u53ef\u4ee5\u4f7f\u7528\u8c13\u8bcd\u9501\u3002\u628a\u8fd9\u4e2a\u4f4d\u7f6e\u9501\u4e0a\uff08\u6bd4\u5982\u521a\u521a 11 \u5230 50 \u8fd9\u4e2a\u533a\u95f4\uff09\uff0c\u540e\u7eed\u5982\u679c\u8981\u63d2\u5165 18 \u843d\u5165\u8fd9\u4e2a\u533a\u95f4\uff0c\u6211\u4eec\u5c31\u80fd\u68c0\u67e5\u51fa\u6765\u3002\u4f46\u8fd9\u6837\u5b9e\u73b0\u662f\u6bd4\u8f83\u590d\u6742\u7684\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2014/#42-multiversion-concurrency-control-schemes","title":"4.2 Multiversion Concurrency Control Schemes","text":"<p>\u4e0d\u8003</p>"},{"location":"note/courses/database%20system/Chapter%2014/#43-next-key-locking-to-prevent-phantoms","title":"4.3 Next-Key Locking To Prevent Phantoms","text":"<p>\u521a\u521a\u7684\u4f8b\u5b50\u4e2d, 10 \u4e0d\u5728\u8303\u56f4\u5185\uff0c\u4f46\u6211\u4eec\u628a\u8fd9\u9875\u90fd\u9501\u4f4f\u4e86\uff0c\u4ecd\u7136\u63d2\u4e0d\u8fdb\u53bb\uff0c\u5f71\u54cd\u4e86\u5e76\u53d1\u5ea6\u3002 </p> <p>Next-key locking protocol: provides higher concurrency</p> <ul> <li>Lock all values that satisfy index lookup (match lookup value, or fall in lookup range)</li> <li>Also lock next key value in index even for inserts/deletes</li> <li>Lock mode: S for lookups, X for insert/delete/update</li> </ul> <p>Next-Key Locking</p> <p> </p> <p>\u67e5\u8be2 7 \u5230 16, \u6211\u4eec\u628a\u7d22\u5f15\u9879\u9501\u8d77\u6765\uff0c\u628a\u4e0b\u4e00\u4e2a\u7d22\u5f15\u503c 18 \u4e5f\u9501\u8d77\u6765\u3002\u63d2\u5165\u7684\u65f6\u5019\u8981\u7533\u8bf7\u8fd9\u4e2a\u9501\u548c\u6bd4\u63d2\u5165\u503c\u5927\u7684\u4e0b\u4e00\u4e2a\u503c\u7684\u9501\uff0c\u8fd9\u91cc\u63d2\u5165 15 \u65f6\u5c31\u8981\u7533\u8bf7 15 \u548c 18 \u7684\u9501\uff0c\u51b2\u7a81\u65e0\u6cd5\u63d2\u5165\u3002\u63d2\u5165 7 \u540c\u7406\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2015/","title":"Recovery System","text":""},{"location":"note/courses/database%20system/Chapter%2015/#counter-true","title":"counter: True","text":""},{"location":"note/courses/database%20system/Chapter%2015/#recovery-system_1","title":"Recovery System","text":""},{"location":"note/courses/database%20system/Chapter%2015/#failure-classification","title":"Failure Classification","text":"<ul> <li>Database application \u903b\u8f91\u9519\u8bef\uff1a\u6bd4\u5982\u4e0d\u6ee1\u8db3\u6570\u636e\u5e93\u7ea6\u675f\u6761\u4ef6\uff08\u4e3b\u952e\uff09 \u7cfb\u7edf\u9519\u8bef\uff1a\u6b7b\u9501\u3002 \u5e38\u7528\u65b9\u6cd5\u662f\u64a4\u9500 undo, \u628a\u8fd9\u4e2a\u4e8b\u4ef6\u62b9\u6389\u3002\uff08\u57fa\u4e8e\u65e5\u5fd7\uff0c\u5728\u4ea7\u751f\u4fee\u6539\u4e4b\u524d\u5148\u8bb0\u65e5\u5fd7\uff0c\u6545\u969c\u540e\u53ef\u4ee5\u6839\u636e\u65e5\u5fd7\u8fdb\u884c\u64a4\u9500\uff09 \u8bb0\u65e5\u5fd7\u6bd4\u8f83\u5feb\uff08\u987a\u5e8f\u8bbf\u95ee\uff09</li> <li>DBMS \u6389\u7535\u3001\u786c\u4ef6\u6545\u969c\u3001\u8f6f\u4ef6\u6545\u969c system crash \u662f\u5168\u5c40\u6027\u7684\uff0c\u6240\u6709\u8fd0\u884c\u7684\u7a0b\u5e8f\u90fd\u4f1a\u53d7\u5230\u5f71\u54cd\u3002\u5206\u4e3a\u4e24\u7c7b\uff1a\u4e00\u7c7b\u662f\u4e8b\u52a1\u5df2\u7ecf\u63d0\u4ea4\uff08\u4f46\u662f\u6570\u636e\u8fd8\u5728\u7f13\u51b2\u533a\uff09\uff0c\u53e6\u4e00\u7c7b\u662f\u6b63\u5728\u6267\u884c\u7684\u4e8b\u52a1\uff08\u8fd8\u6ca1\u6709\u63d0\u4ea4\uff09\u3002 \u5df2\u7ecf\u63d0\u4ea4\u7684\u4e8b\u52a1\u8981 redo(\u6570\u636e\u53ef\u80fd\u6ca1\u5199\u56de\u53bb), \u6ca1\u6709\u5b8c\u6210\u7684\u4e8b\u52a1\u8981 undo.  \u5148\u8bb0\u65e5\u5fd7\uff0c\u73b0\u5728\u7684\u6570\u636e\u5e93\u91c7\u7528 repeating history \u7684\u65b9\u6cd5\u3002</li> <li>Database \u4ecb\u8d28\u6545\u969c  \u8981\u9632\u6b62\u4ecb\u8d28\u6545\u969c\uff0c\u9700\u8981\u505a\u5907\u4efd\uff08\u62f7\u8d1d\u6216\u8005\u8fdc\u7a0b\uff09  </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2015/#storage-structure","title":"Storage Structure","text":"<p>\u65e5\u5fd7\u53ef\u80fd\u4e5f\u4f1a\u51fa\u6545\u969c\uff1f\u6211\u4eec\u5047\u8bbe\u65e5\u5fd7\u5b58\u50a8\u5728 Stable storage \u91cc\u3002</p> <ul> <li>Volatile storage  </li> <li>Nonvolatile storage survives system crashes</li> <li>Stable storage:<ul> <li>a mythical(\u865a\u62df\u7684) form of storage that survives all failures</li> <li>approximated by maintaining multiple copies on distinct nonvolatile media \u53ef\u4ee5\u8fd1\u4f3c\u5b9e\u73b0\uff0c\u5728\u975e\u6613\u5931\u6027\u4ecb\u8d28\u7ef4\u6301\u591a\u4e2a\u5907\u4efd</li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2015/#implementation","title":"Implementation","text":"<ul> <li>Maintain multiple copies of each block on separate disks</li> <li>Failure during data transfer can still result in inconsistent copies \u4fee\u6539\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u53d1\u751f\u6545\u969c</li> <li>Protecting storage media from failure during data transfer <ul> <li>Execute output operation as follows (assuming two copies of each block):<ul> <li>write the info onto the first physical block</li> <li>when the first write successfully completes, write the same info onto the second one</li> <li>\u53ea\u6709\u5728\u7b2c\u4e8c\u4e2a\u5199\u4e5f\u6210\u529f\u5b8c\u6210\u65f6\uff0c\u8f93\u51fa\u624d\u7ed3\u675f</li> </ul> </li> </ul> </li> </ul> <p>Copies of a block may differ \u7531\u4e8e\u8f93\u51fa\u8fc7\u7a0b\u4e2d\u53d1\u751f\u7684\u9519\u8bef\uff0c\u4e3a\u4e86\u6062\u590d\uff1a</p> <ul> <li>\u9996\u5148\u627e\u5230\u4e0d\u5bf9\u7684blocks<ul> <li>expensive solution: \u4e24\u4e2acopies\u4e00\u4e2a\u4e00\u4e2a\u6bd4\u8fc7\u53bb</li> <li>better solution \uff1a <ul> <li>record in-progress disk writes on \u975e\u6613\u5931\u6027\u5b58\u50a8</li> <li>Use this information during recovery  to find blocks that may be inconsistent, and only compare copies of these \u5728\u6062\u590d\u8fc7\u7a0b\u4e2d\u5229\u7528\u8fd9\u4e2a\u4fe1\u606f\u6765\u4e2d\u5c9b\u4e0d\u6b63\u786e\u7684block</li> <li>used in hardware RAID system</li> </ul> </li> </ul> </li> <li>If either copy of an inconsistent block is detected to have an error (bad checksum), overwrite it by the other copy.  If both have no error, but are different, overwrite the second block by the first block. </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2015/#data-access","title":"Data Access","text":"<ul> <li>Physical blocks: blocks residing on the disk(\u5b58\u5728\u786c\u76d8\u4e0a\u7684block)</li> <li>Buffer blocks: \u6682\u65f6\u5b58\u50a8\u5728\u4e3b\u5b58\u4e2d\u7684blocks</li> <li>input(B) transfers the physical block B  to main memory.</li> <li>output(B) transfers the buffer block B to the disk, and replaces the appropriate physical block there.</li> </ul> <p>\u6bcf\u4e2a\u4e8b\u52a1 $ T_i $ \u90fd\u6709\u4e00\u4e2a\u79c1\u6709\u7684\u5de5\u4f5c\u533a\uff0c\u7528\u4e8e\u5b58\u653e\u5176\u8bbf\u95ee\u548c\u66f4\u65b0\u7684\u6240\u6709\u6570\u636e\u9879\u7684\u672c\u5730\u526f\u672c\u3002  </p> <ul> <li>$ T_i $ \u7684\u6570\u636e\u9879 $ X $ \u7684\u672c\u5730\u526f\u672c\u79f0\u4e3a $ x_i $\u3002  </li> </ul> <p>\u6570\u636e\u9879\u5728\u7cfb\u7edf\u7f13\u51b2\u533a\u5757\u548c\u79c1\u6709\u5de5\u4f5c\u533a\u4e4b\u95f4\u7684\u4f20\u8f93\u901a\u8fc7\u4ee5\u4e0b\u64cd\u4f5c\u5b8c\u6210\uff1a  </p> <ul> <li> <p>read(X)\uff1a\u5c06\u6570\u636e\u9879 $ X $ \u7684\u503c\u8d4b\u7ed9\u5c40\u90e8\u53d8\u91cf $ x_i $\u3002  </p> </li> <li> <p>write(X)\uff1a\u5c06\u5c40\u90e8\u53d8\u91cf $ x_i $ \u7684\u503c\u8d4b\u7ed9\u7f13\u51b2\u533a\u5757\u4e2d\u7684\u6570\u636e\u9879 $ {X} $\u3002  </p> </li> <li> <p>\u6ce8\u610f\uff1aoutput($ B_X $) \u64cd\u4f5c\u4e0d\u5fc5\u7d27\u8ddf\u5728 write(X) \u4e4b\u540e\u6267\u884c\u3002\u7cfb\u7edf\u53ef\u4ee5\u5728\u8ba4\u4e3a\u5408\u9002\u7684\u65f6\u5019\u6267\u884c output \u64cd\u4f5c\u3002  </p> </li> </ul> <p>\u4e8b\u52a1\u7684\u89c4\u5219\uff1a  </p> <ul> <li> <p>\u9996\u6b21\u8bbf\u95ee\u6570\u636e\u9879 $ X $ \u65f6\u5fc5\u987b\u5148\u6267\u884c read(X)\uff08\u540e\u7eed\u7684\u8bfb\u53d6\u53ef\u4ee5\u76f4\u63a5\u4ece\u672c\u5730\u526f\u672c\u4e2d\u83b7\u53d6\uff09\u3002  </p> </li> <li> <p>write(X) \u53ef\u4ee5\u5728\u4e8b\u52a1\u63d0\u4ea4\u4e4b\u524d\u7684\u4efb\u4f55\u65f6\u95f4\u6267\u884c\u3002  </p> </li> </ul> <p></p>"},{"location":"note/courses/database%20system/Chapter%2015/#database-recovery","title":"Database Recovery","text":"<p>Recovery algorithms are techniques to ensure database consistency and transaction atomicity and durability despite failures.  </p> <p>Recovery algorithms have two parts</p> <ul> <li>Actions taken during normal transaction processing to ensure enough information exists to recover from failures \u5148\u8bb0\u65e5\u5fd7</li> <li>Actions taken after a failure to recover the database contents to a state that ensures atomicity, consistency and durability  </li> </ul> <p>\u7406\u60f3\u7684\u7b97\u6cd5\uff1a\u6062\u590d\u5f97\u5f88\u5feb\uff0c\u5bf9\u4e8b\u52a1\u6b63\u5e38\u64cd\u4f5c\u6ca1\u6709\u5f71\u54cd\uff08\u8bb0\u5f55\u4fe1\u606f\u7684\u65f6\u5019\u4e0d\u80fd\u6d88\u8017\u592a\u591a\u6027\u80fd\uff09\uff0c\u5373\u517c\u987e\u4e0a\u9762\u4e24\u4e2a\u90e8\u5206\u3002\u6062\u590d\u7684\u8fc7\u7a0b\u548c\u5e76\u884c\u63a7\u5236\u662f\u76f8\u5173\u7684\u3002</p> <p>We assume that strict two-phase locking ensures no dirty read. \u4f7f\u7528\u4e25\u683c\u4e24\u9636\u6bb5\u5c01\u9501\u534f\u8bae\u4fdd\u8bc1\u6ca1\u6709\u810f\u6570\u636e\u3002</p> <p>Idempotent(\u5e42\u7b49\u6027): An recovery algorithm is said to be idempotent if executing it several times gives the same result as executing it once. \u7b97\u6cd5\u6062\u590d\u591a\u6b21\u7684\u6548\u679c\u662f\u4e00\u6837\u7684\u3002\uff08\u6062\u590d\u8fc7\u7a0b\u4e2d\u53ef\u80fd\u4e5f\u53d1\u751f crash\uff09</p>"},{"location":"note/courses/database%20system/Chapter%2015/#log-based-recovery","title":"Log-Based Recovery","text":""},{"location":"note/courses/database%20system/Chapter%2015/#log-records","title":"Log Records","text":"<p>\u4e3a\u4e86\u786e\u4fdd\u5373\u4f7f\u5728\u6545\u969c\u53d1\u751f\u65f6\u4e5f\u80fd\u4fdd\u6301\u539f\u5b50\u6027\uff0c\u6211\u4eec\u9996\u5148\u5c06\u63cf\u8ff0\u4fee\u6539\u64cd\u4f5c\u7684\u4fe1\u606f\uff08\u65e5\u5fd7\uff09\u8f93\u51fa\u5230\u7a33\u5b9a\u5b58\u50a8\u5668\uff0c\u800c\u4e0d\u4f1a\u76f4\u63a5\u4fee\u6539\u6570\u636e\u5e93\u672c\u8eab\u3002</p> <p></p> <p>A log is kept on stable storage(\u7a33\u5b9a\u5b58\u50a8\u5668).  The log is a sequence of log records, and maintains a record of update activities on the database.</p> <ul> <li>When transaction Ti starts, it registers itself by writing a \u201cstart\u201d log record: \\(&lt;T_i\\  start&gt;\\) \u4e8b\u52a1\u5f00\u59cb. Ti \u8868\u793a\u4e8b\u52a1\u7684 id. </li> <li>Before Ti executes write(X), writing \u201cupdate\u201d log record \\(&lt;T_i, X,  V_1,  V_2&gt;\\)  \u4e8b\u52a1\u628a X \u6570\u636e\u9879\u7684\u503c\u4ece V1(old value) \u6539\u4e3a V2(new value). \u8fd9\u4e2a\u5c31\u662f\u6062\u590d\u7684\u57fa\u7840. undo \u5c31\u7528 old value, redo \u7528 new value. Insert \u5c31\u662f old \u4e3a\u7a7a, Delete \u5c31\u662f new \u4e3a\u7a7a\u3002</li> <li>When Ti finishes it last statement, writing \u201ccommit\u201d log record: \\(&lt;T_i\\  commit&gt;\\) </li> <li>When Ti  complete rollback\uff08\u5b8c\u6210\u56de\u6eda\u65f6\uff09, writing \u201cabort\u201d log record: \\(&lt;T_i\\  abort&gt;\\) </li> </ul> <p>\u4e8b\u52a1\u4f1a\u5bf9\u5e94\u8bb0\u5f55\u81ea\u5df1\u7684\u524d\u4e00\u4e2a\u65e5\u5fd7\u9879</p> <p>Log Example</p> <p> \u8fd9\u91cc\u5f53\u6267\u884c\u5230 T2 \u56de\u6eda\u7684\u65f6\u5019\u6211\u4eec\u4f1a\u8fdb\u884c\u6062\u590d\uff08\u7eff\u8272\u7684\u884c\u8868\u793a\u8865\u507f\u65e5\u5fd7\uff09\u6bd4\u5982 T2 \u628a C \u6062\u590d\u4e3a 500, T3 \u628a B \u6062\u590d\u4e3a 300, \u6700\u540e T2 abort. (undo \u64cd\u4f5c\u4e5f\u4f1a\u8bb0\u5f55\u5230\u65e5\u5fd7\u4e2d) \u53d1\u751f crash \u7684\u65f6\u5019 repeat history(undo \u6b63\u5e38\u7684\u64cd\u4f5c\u4e5f\u4f1a\u91cd\u590d), \u968f\u540e\u5f97\u5230\u5e76\u6267\u884c undo list.(\u4e8b\u52a1\u5f00\u59cb\u540e\u5148\u628a\u4e8b\u52a1\u653e\u8fdb\u53bb\uff0c\u5982\u679c\u63d0\u4ea4\u6216\u8005\u56de\u6eda\u4e86\u5c31\u628a\u4e8b\u52a1\u79fb\u9664) \u53ea\u9700\u8981\u628a T4 undo.(\u5047\u8bbe\u6545\u969c\u524d\u53ea\u6267\u884c\u5230 15 \u884c) </p>"},{"location":"note/courses/database%20system/Chapter%2015/#write-ahead-logging","title":"Write-Ahead Logging","text":"<p>Before a data in main memory is output to the database, the log records pertaining to data must have been output to stable storage. \u5148\u5199\u65e5\u5fd7\u539f\u5219\u3002 \u6570\u636e\u4fee\u6539\u4e4b\u524d\uff0c\u548c\u6570\u636e\u6709\u5173\u7684\u8bb0\u5f55\u8981\u5148\u5199\u5165\u65e5\u5fd7\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2015/#_1","title":"\u5e76\u53d1\u63a7\u5236\u4e0e\u6062\u590d","text":"<ul> <li>\u5728\u5e76\u53d1\u4e8b\u52a1\u73af\u5883\u4e0b\uff0c\u6240\u6709\u4e8b\u52a1\u5171\u4eab\u540c\u4e00\u4e2a\u78c1\u76d8\u7f13\u51b2\u533a\u548c\u4e00\u4e2a\u65e5\u5fd7\u6587\u4ef6\u3002  </li> <li>\u4e00\u4e2a\u7f13\u51b2\u533a\u5757\u53ef\u80fd\u5305\u542b\u88ab\u4e00\u4e2a\u6216\u591a\u4e2a\u4e8b\u52a1\u4fee\u6539\u8fc7\u7684\u6570\u636e\u9879\u3002  </li> <li>\u6211\u4eec\u5047\u8bbe\uff1a\u5982\u679c\u4e8b\u52a1 $ T_i $ \u4fee\u6539\u4e86\u67d0\u4e2a\u6570\u636e\u9879\uff0c\u90a3\u4e48\u5728 $ T_i $ \u63d0\u4ea4\u6216\u4e2d\u6b62\u4e4b\u524d\uff0c\u5176\u4ed6\u4e8b\u52a1\u4e0d\u80fd\u4fee\u6539\u540c\u4e00\u6570\u636e\u9879\u3002  </li> <li>\u5373\u672a\u63d0\u4ea4\u4e8b\u52a1\u7684\u66f4\u65b0\u64cd\u4f5c\u5bf9\u5176\u4ed6\u4e8b\u52a1\u4e0d\u53ef\u89c1\u3002  <ul> <li>\u5426\u5219\uff0c\u5982\u679c $ T_1 $ \u66f4\u65b0\u4e86 $ A $\uff0c\u63a5\u7740 $ T_2 $ \u66f4\u65b0 $ A $ \u5e76\u63d0\u4ea4\uff0c\u6700\u540e $ T_1 $ \u9700\u8981\u4e2d\u6b62\uff0c\u8be5\u5982\u4f55\u64a4\u9500 $ T_1 $ \u7684\u4fee\u6539\uff1f  </li> </ul> </li> <li>\u53ef\u4ee5\u901a\u8fc7\u5bf9\u66f4\u65b0\u7684\u6570\u636e\u9879\u52a0\u6392\u4ed6\u9501\uff0c\u5e76\u6301\u6709\u9501\u76f4\u81f3\u4e8b\u52a1\u7ed3\u675f\u6765\u786e\u4fdd\u8fd9\u4e00\u70b9\uff08\u4e25\u683c\u4e24\u9636\u6bb5\u9501\u534f\u8bae\uff09\u3002  </li> <li>\u652f\u6301\u903b\u8f91\u64a4\u9500\u7684\u65e5\u5fd7\u6062\u590d\u673a\u5236\u5141\u8bb8\u63d0\u524d\u91ca\u653e\u9501\u3002  </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2015/#_2","title":"\u6570\u636e\u5e93\u4fee\u6539\u673a\u5236","text":"<ul> <li>\u7acb\u5373\u4fee\u6539\u673a\u5236\u5141\u8bb8\u672a\u63d0\u4ea4\u4e8b\u52a1\u7684\u66f4\u65b0\u64cd\u4f5c\u5728\u4e8b\u52a1\u63d0\u4ea4\u524d\u5c31\u5199\u5165\u7f13\u51b2\u533a\u6216\u78c1\u76d8  </li> <li>\u66f4\u65b0\u65e5\u5fd7\u8bb0\u5f55\u5fc5\u987b\u5728\u6570\u636e\u9879\u5199\u5165\u6570\u636e\u5e93\u4e4b\u524d\u8bb0\u5f55  <ul> <li>\u6211\u4eec\u5047\u8bbe\u65e5\u5fd7\u8bb0\u5f55\u4f1a\u76f4\u63a5\u8f93\u51fa\u5230\u7a33\u5b9a\u5b58\u50a8\u5668  </li> </ul> </li> <li>\u5df2\u66f4\u65b0\u6570\u636e\u5757\u7684\u8f93\u51fa\u53ef\u4ee5\u5728\u4e8b\u52a1\u63d0\u4ea4\u524d\u540e\u7684\u4efb\u610f\u65f6\u523b\u8fdb\u884c  </li> <li> <p>\u6570\u636e\u5757\u8f93\u51fa\u7684\u987a\u5e8f\u53ef\u4ee5\u4e0e\u5199\u5165\u987a\u5e8f\u4e0d\u540c  </p> </li> <li> <p>\u5ef6\u8fdf\u4fee\u6539\u673a\u5236\u4ec5\u5728\u4e8b\u52a1\u63d0\u4ea4\u65f6\u624d\u5c06\u66f4\u65b0\u64cd\u4f5c\u5199\u5165\u7f13\u51b2\u533a/\u78c1\u76d8  </p> </li> <li>\u7b80\u5316\u4e86\u90e8\u5206\u6062\u590d\u6d41\u7a0b  </li> <li>\u4f46\u9700\u8981\u989d\u5916\u5f00\u9500\u6765\u7ef4\u62a4\u672c\u5730\u526f\u672c  </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2015/#transaction-commit","title":"Transaction Commit","text":"<p>A transaction is said to have committed when its commit log record is output to stable storage \u65e5\u5fd7\u5df2\u7ecf\u8bb0\u5f55 commit, \u8bf4\u660e\u4e8b\u52a1\u5df2\u7ecf\u63d0\u4ea4\u3002\uff08\u56e0\u4e3a\u540e\u7eed\u53ef\u4ee5\u6839\u636e\u8fd9\u4e2a\u6062\u590d\u72b6\u6001\u4e86\uff09 \u4f46\u6b64\u65f6\u6570\u636e\u4e0d\u4e00\u5b9a\u5df2\u7ecf\u5199\u56de\u5230\u6570\u636e\u5e93\u91cc\uff08\u4e0d\u4e00\u5b9a\u9ad8\u6548\uff09 all previous log records of the transaction must have been output already  \u6240\u6709\u4e4b\u524d\u7684log records\u5fc5\u987b\u5df2\u7ecf\u5168\u90e8\u8f93\u51fa</p> <p>Writes performed by a transaction may still be in the buffer when the transaction commits, and may be output later.   \u4e0d\u4e00\u5b9a\u5728\u78c1\u76d8\u3002\u5982\u679c\u7acb\u523b\u5c06 block \u5199\u56de\u78c1\u76d8\u53ef\u80fd\u5f15\u8d77\u5927\u91cf I/O \u64cd\u4f5c</p> <p></p>"},{"location":"note/courses/database%20system/Chapter%2015/#undo-and-redo-operations","title":"Undo(\u64a4\u9500) and Redo\uff08\u91cd\u505a\uff09 Operations","text":"<ul> <li>\u65e5\u5fd7\u8bb0\u5f55 \u64a4\u9500\uff08Undo\uff09\u64cd\u4f5c\uff1a\u5bf9\u8bb0\u5f55 $  $ \u5c06\u65e7\u503c $ V_1 $ \u5199\u56de $ X $   <li> <p>\u65e5\u5fd7\u8bb0\u5f55 \u91cd\u505a\uff08Redo\uff09\u64cd\u4f5c\uff1a\u5bf9\u8bb0\u5f55 $  $ \u5c06\u65b0\u503c $ V_2 $ \u5199\u5165 $ X $   <li> <p>\u4e8b\u52a1\u7684\u64a4\u9500\u4e0e\u91cd\u505a\u673a\u5236 </p> </li> <li> <p>\u64a4\u9500($ T_i $)\uff1a\u5c06 $ T_i $ \u66f4\u65b0\u7684\u6240\u6709\u6570\u636e\u9879\u6062\u590d\u4e3a\u65e7\u503c\uff0c\u4ece\u8be5\u4e8b\u52a1\u7684\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u8bb0\u5f55\u5f00\u59cb\u9006\u5411\u5904\u7406  </p> <ul> <li>\u6bcf\u6b21\u5c06\u6570\u636e\u9879 $ X $ \u6062\u590d\u4e3a\u65e7\u503c $ V $ \u65f6\uff0c\u4f1a\u5199\u5165\u4e00\u6761\u7279\u6b8a\u7684 \u8865\u507f\u65e5\u5fd7\u8bb0\u5f55 $  $   <li>\u5f53\u4e8b\u52a1\u64a4\u9500\u5b8c\u6210\u65f6\uff0c\u4f1a\u5199\u5165\u4e00\u6761\u4e2d\u6b62\u65e5\u5fd7\u8bb0\u5f55 $  $   <li> <p>\u91cd\u505a($ T_i $)\uff1a\u5c06 $ T_i $ \u66f4\u65b0\u7684\u6240\u6709\u6570\u636e\u9879\u8bbe\u7f6e\u4e3a\u65b0\u503c\uff0c\u4ece\u8be5\u4e8b\u52a1\u7684\u7b2c\u4e00\u6761\u65e5\u5fd7\u8bb0\u5f55\u5f00\u59cb\u987a\u5e8f\u5904\u7406  </p> <ul> <li>\u6b64\u8fc7\u7a0b\u65e0\u9700\u989d\u5916\u8bb0\u5f55\u65e5\u5fd7  </li> </ul> </li>"},{"location":"note/courses/database%20system/Chapter%2015/#_3","title":"\u6545\u969c\u6062\u590d\u673a\u5236","text":"<ul> <li>\u7cfb\u7edf\u6545\u969c\u540e\u6062\u590d\u65f6\uff1a  </li> <li> <p>\u9700\u5bf9\u4e8b\u52a1 $ T_i $ \u6267\u884c\u64a4\u9500\u64cd\u4f5c(undo)\u7684\u60c5\u51b5\uff1a  </p> <ul> <li>\u65e5\u5fd7\u4e2d\u5305\u542b $  $ \u8bb0\u5f55   <li>\u4f46\u65e2\u65e0 $  $ \u4e5f\u65e0 $  $ \u8bb0\u5f55   <li> <p>\u9700\u5bf9\u4e8b\u52a1 $ T_i $ \u6267\u884c\u91cd\u505a\u64cd\u4f5c(redo)\u7684\u60c5\u51b5\uff1a  </p> <ul> <li>\u65e5\u5fd7\u4e2d\u5305\u542b $  $ \u8bb0\u5f55   <li>\u4e14\u5305\u542b $  $ \u6216 $  $ \u8bb0\u5f55"},{"location":"note/courses/database%20system/Chapter%2015/#-repeating-history","title":"\u6545\u969c\u6062\u590d\u673a\u5236 - \u5386\u53f2\u91cd\u6f14(Repeating History)","text":"<ul> <li>\u5173\u952e\u8bf4\u660e\uff1a\u82e5\u4e8b\u52a1 $ T_i $ \u5148\u524d\u5df2\u88ab\u64a4\u9500\u4e14\u65e5\u5fd7\u4e2d\u8bb0\u5f55\u4e86&lt;$ T_i $ abort&gt;\uff0c\u4e4b\u540e\u7cfb\u7edf\u53d1\u751f\u6545\u969c\uff0c\u5219\u5728\u6545\u969c\u6062\u590d\u65f6\u4f1a\u5bf9 $ T_i $ \u6267\u884c\u91cd\u505a\u64cd\u4f5c  </li> <li>\u6b64\u7c7b\u91cd\u505a\u64cd\u4f5c\u4f1a\u91cd\u65b0\u6267\u884c\u6240\u6709\u539f\u59cb\u52a8\u4f5c\uff0c\u5305\u62ec\u6062\u590d\u65e7\u503c\u7684\u64cd\u4f5c\u6b65\u9aa4 </li> <li>\u8be5\u673a\u5236\u79f0\u4e3a\u5386\u53f2\u91cd\u6f14 </li> <li>\u770b\u4f3c\u8d44\u6e90\u6d6a\u8d39\uff0c\u4f46\u80fd\u6781\u5927\u7b80\u5316\u6062\u590d\u6d41\u7a0b  </li> </ul>"},{"location":"note/courses/database%20system/Chapter%2015/#checkpoints","title":"Checkpoints","text":"<p>Redoing/undoing all transactions recorded in the log can be very slow. Streamline recovery procedure by periodically performing checkpointing. \u91cd\u6f14\u5386\u53f2\u53ef\u80fd\u5f88\u957f\u3002checkpoint \u662f\u786e\u8ba4\u4e4b\u524d\u7684\u64cd\u4f5c\u90fd\u5df2\u7ecf\u53cd\u6620\u5230\u6570\u636e\u5e93\u91cc\u53bb\u4e86\uff0c\u8fd9\u6837\u91cd\u6f14\u7684\u65f6\u5019\u5c31\u53ef\u4ee5\u76f4\u63a5\u4ece checkpoint \u5f00\u59cb\u3002</p> <p>Streamline recovery procedure by periodically performing checkpointing :</p> <ul> <li>Output all log records currently residing in main memory onto stable storage. \u65e5\u5fd7\u4e0d\u662f\u751f\u6210\u5c31\u5f80\u5185\u5b58\u5199\uff0c\u800c\u662f\u6709\u4e00\u4e2a\u65e5\u5fd7\u7f13\u51b2\u533a\u3002 \u786e\u4fdd\u628a\u65e5\u5fd7\u9879\u5199\u5230\u65e5\u5fd7\u4e2d\u53bb\u4e86\u3002</li> <li>Output all modified buffer blocks to the disk. \u628a buffer \u91cc\u6240\u6709\u6570\u636e\u90fd\u5237\u5199\u4e00\u904d\u3002</li> <li>Write a log record \\(&lt;checkpoint\\ L&gt;\\) onto stable storage where L is a list of all transactions active at the time of checkpoint.  \u5199\u4e00\u4e2a\u65e5\u5fd7\u7684\u6807\u8bb0\uff08\u65b0\u7684\u65e5\u5fd7\u7c7b\u578b\uff09. L \u662f\u5f53\u524d\u6b63\u5728\u5de5\u4f5c\u7684\u4e8b\u52a1\u7684\u8868\u3002\uff08\u7528\u6765\u505a undo list \u7684\u521d\u59cb\u5316\u5217\u8868\uff09</li> <li> <p>All updates are stopped while doing checkpointing!!! \u505a checkpoint \u7684\u65f6\u5019\u5176\u4ed6\u6d3b\u8dc3\u4e8b\u52a1\u90fd\u8981\u505c\u4e0b\u6765\u3002</p> </li> <li> <p>\u6062\u590d\u65f6\u53ea\u9700\u8003\u8651\u4e24\u7c7b\u4e8b\u52a1\uff1a   1. \u68c0\u67e5\u70b9\u524d\u6700\u8fd1\u4e00\u4e2a\u542f\u52a8\u7684\u4e8b\u52a1 $ T_i $   2. \u5728 $ T_i $\u4e4b\u540e\u542f\u52a8\u7684\u6240\u6709\u4e8b\u52a1  </p> </li> <li> <p>\u5177\u4f53\u64cd\u4f5c\u6d41\u7a0b\uff1a     a) \u4ece\u65e5\u5fd7\u672b\u5c3e\u53cd\u5411\u626b\u63cf\uff0c\u5b9a\u4f4d\u6700\u8fd1\u7684\u8bb0\u5f55     b) \u4ec5\u9700\u5bf9\u68c0\u67e5\u70b9\u8bb0\u5f55 $ L $\u4e2d\u7684\u4e8b\u52a1\uff0c\u4ee5\u53ca\u68c0\u67e5\u70b9\u540e\u542f\u52a8\u7684\u4e8b\u52a1\u6267\u884c\u91cd\u505a/\u64a4\u9500     c) \u5728\u68c0\u67e5\u70b9\u524d\u5df2\u5b8c\u6210\u63d0\u4ea4\u6216\u4e2d\u6b62\u7684\u4e8b\u52a1\uff0c\u5176\u6240\u6709\u66f4\u65b0\u5df2\u6301\u4e45\u5316\u5230\u7a33\u5b9a\u5b58\u50a8\u5668   <li> <p>\u64a4\u9500\u64cd\u4f5c\u53ef\u80fd\u9700\u8981\u66f4\u65e9\u7684\u65e5\u5fd7\u8bb0\u5f55\uff1a  </p> </li> <li>\u7ee7\u7eed\u53cd\u5411\u626b\u63cf\uff0c\u76f4\u5230\u4e3a $ L $\u4e2d\u7684\u6bcf\u4e2a\u4e8b\u52a1 $ T_i $\u627e\u5230\u5bf9\u5e94\u7684 $  \u8bb0\u5f55   <li>\u65e9\u4e8e\u4e0a\u8ff0\u6240\u6709 $  \u8bb0\u5f55\u7684\u65e5\u5fd7\u6bb5\u4e0e\u6062\u590d\u65e0\u5173\uff0c\u53ef\u968f\u65f6\u6e05\u9664   <p>Log File with Checkpoint : Example</p> <p> \u91cd\u6f14\u5386\u53f2\u4ece\u6700\u8fd1\u7684 checkpoint \u91cd\u6f14. {T2 T4} \u4f5c\u4e3a undo list \u7684\u521d\u59cb\u5316\u503c\u3002   </p> <p>checkpoint \u4e4b\u95f4\u7684\u95f4\u9694\u5e94\u8be5\u5982\u4f55\u786e\u5b9a\uff1f \u6839\u636e\u65e5\u5fd7\u91cf\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2015/#recovery-algorithm","title":"Recovery Algorithm","text":"<ul> <li> <p>\u65e5\u5fd7\u8bb0\u5f55\uff08\u6b63\u5e38\u64cd\u4f5c\u671f\u95f4\uff09\uff1a   $  $ \u4e8b\u52a1\u5f00\u59cb\u65f6\u8bb0\u5f55   $  $ \u6bcf\u6b21\u6570\u636e\u66f4\u65b0\u65f6\u8bb0\u5f55   $  $ \u4e8b\u52a1\u7ed3\u675f\u65f6\u8bb0\u5f55   <li> <p>\u4e8b\u52a1\u56de\u6eda\uff08\u6b63\u5e38\u64cd\u4f5c\u671f\u95f4\uff09\uff1a  </p> </li> <li>\u8bbe\u9700\u56de\u6eda\u7684\u4e8b\u52a1\u4e3a $ T_i $  </li> <li>\u4ece\u65e5\u5fd7\u672b\u5c3e\u53cd\u5411\u626b\u63cf\uff0c\u5bf9\u6bcf\u4e00\u6761 $ T_i $ \u7684\u66f4\u65b0\u8bb0\u5f55 $  $\uff1a     a) \u6267\u884c\u64a4\u9500\u64cd\u4f5c\uff1a\u5c06 $ V_1 $ \u5199\u56de $ X_i $     b) \u8bb0\u5f55\u8865\u507f\u65e5\u5fd7\uff1a$  $   <li> <p>\u5f53\u626b\u63cf\u5230 $  $ \u8bb0\u5f55\u65f6\u505c\u6b62\uff0c\u5e76\u5199\u5165\u4e2d\u6b62\u8bb0\u5f55\uff1a     $  $   <li> <p>\u6545\u969c\u6062\u590d\uff1a\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5  </p> </li> <li>\u91cd\u505a\u9636\u6bb5\uff1a\u91cd\u653e\\(\u6240\u6709\\)\u4e8b\u52a1\u7684\u66f4\u65b0\u64cd\u4f5c\uff08\u65e0\u8bba\u5df2\u63d0\u4ea4\u3001\u5df2\u4e2d\u6b62\u8fd8\u662f\u672a\u5b8c\u6210\uff09\u2014\u2014\\(\u5386\u53f2\u91cd\u6f14!!!\\) </li> <li> <p>\u64a4\u9500\u9636\u6bb5\uff1a\u56de\u6eda\u6240\u6709\u672a\u5b8c\u6210\u4e8b\u52a1  </p> </li> <li> <p>\u91cd\u505a\u9636\u6bb5\u64cd\u4f5c\u6d41\u7a0b\uff1a   1. \u5b9a\u4f4d\u6700\u540e\u4e00\u6761\\(&lt;\\)checkpoint L\\(&gt;\\)\u8bb0\u5f55\uff0c\u521d\u59cb\u5316\u64a4\u9500\u5217\u8868\u4e3a\\(L\\)   2. \u4ece\u8be5\u68c0\u67e5\u70b9\u5f00\u59cb\u6b63\u5411\u626b\u63cf\u65e5\u5fd7\uff1a     a) \u9047\u5230\\(&lt;T_i, X_j, V_1, V_2&gt;\\)\u65f6\uff0c\u5c06\\(V_2\\)\u5199\u5165\\(X_j\\)\u6267\u884c\u91cd\u505a     b) \u9047\u5230\\(\u8865\u507f\u65e5\u5fd7\\)\u8bb0\u5f55\\(&lt;T_i, X_j, V_2&gt;\\)\u65f6\uff0c\u540c\u6837\u5c06\\(V_2\\)\u5199\u5165\\(X_j\\)     c) \u9047\u5230\\(&lt;T_i\\) start\\(&gt;\\)\u65f6\uff0c\u5c06\\(T_i\\)\u52a0\u5165\u64a4\u9500\u5217\u8868     d) \u9047\u5230\\(&lt;T_i\\) commit\\(&gt;\\)\u6216\\(&lt;T_i\\) abort\\(&gt;\\)\u65f6\uff0c\u4ece\u64a4\u9500\u5217\u8868\u79fb\u9664\\(T_i\\) </p> </li> <p>undo-list\uff1a\u5728checkpoint\u4e4b\u540e\u542f\u52a8\u7684\u6240\u6709\u6ca1\u6709commit/abort\u7684\u4e8b\u52a1\u7684\u5217\u8868\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2015/#_4","title":"\u64a4\u9500\u9636\u6bb5\u64cd\u4f5c\u6d41\u7a0b","text":"<ol> <li> <p>\u53cd\u5411\u626b\u63cf\u65e5\u5fd7    \u5f53\u9047\u5230\u65e5\u5fd7\u8bb0\u5f55\\(&lt;T_i, X_j, V_1, V_2&gt;\\)\u4e14\\(T_i\\)\u5728\u64a4\u9500\u5217\u8868\u4e2d\u65f6\uff0c\u6267\u884c\u4e0e\u4e8b\u52a1\u56de\u6eda\u76f8\u540c\u7684\u64cd\u4f5c\uff1a    - \u5c06\\(V_1\\)\u5199\u5165\\(X_j\\)\u6267\u884c\u64a4\u9500  </p> </li> <li> <p>\u8bb0\u5f55\u8865\u507f\u65e5\u5fd7    - \u5199\u5165\u8865\u507f\u65e5\u5fd7\u8bb0\u5f55\\(&lt;T_i, X_j, V_1&gt;\\) </p> </li> <li> <p>\u5904\u7406\u4e8b\u52a1\u5f00\u59cb\u8bb0\u5f55    \u5f53\u9047\u5230\\(&lt;T_i\\) start\\(&gt;\\)\u8bb0\u5f55\u4e14\\(T_i\\)\u5728\u64a4\u9500\u5217\u8868\u4e2d\u65f6\uff1a    - \u5199\u5165\u4e2d\u6b62\u8bb0\u5f55\\(&lt;T_i\\) abort\\(&gt;\\)    - \u5c06\\(T_i\\)\u4ece\u64a4\u9500\u5217\u8868\u79fb\u9664  </p> </li> <li> <p>\u7ec8\u6b62\u6761\u4ef6    - \u5f53\u64a4\u9500\u5217\u8868\u4e3a\u7a7a\u65f6\u505c\u6b62    \uff08\u5373\u5df2\u4e3a\u64a4\u9500\u5217\u8868\u4e2d\u6bcf\u4e2a\u4e8b\u52a1\u627e\u5230\u5bf9\u5e94\u7684\\(&lt;T_i\\) start\\(&gt;\\)\u8bb0\u5f55\uff09</p> </li> </ol> <ul> <li>\u64a4\u9500\u9636\u6bb5\u5b8c\u6210\u540e\uff0c\u7cfb\u7edf\u53ef\u6062\u590d\u6b63\u5e38\u4e8b\u52a1\u5904\u7406 </li> </ul> <p>\u5148redo,\u786e\u5b9aundo list, \u518dundo\u3002</p> Example of Recovery <p></p>"},{"location":"note/courses/database%20system/Chapter%2015/#log-record-buffering","title":"Log Record Buffering","text":"<ul> <li>\u65e5\u5fd7\u8bb0\u5f55\u7f13\u51b2\u673a\u5236 </li> <li>\u65e5\u5fd7\u8bb0\u5f55\u5148\u7f13\u51b2\u5728\u5185\u5b58\u4e2d\uff0c\u800c\u975e\u76f4\u63a5\u5199\u5165\u7a33\u5b9a\u5b58\u50a8\u5668  </li> <li> <p>\u4ee5\u4e0b\u4e24\u79cd\u60c5\u51b5\u4f1a\u5c06\u7f13\u51b2\u533a\u7684\u65e5\u5fd7\u8bb0\u5f55\u5199\u5165\u7a33\u5b9a\u5b58\u50a8\u5668\uff1a  </p> <ol> <li>\u7f13\u51b2\u533a\u4e2d\u7684\u65e5\u5fd7\u8bb0\u5f55\u5757\u5df2\u6ee1  </li> <li>\u6267\u884c\u65e5\u5fd7\u5f3a\u5236\u5199\u5165(log force)\u64cd\u4f5c  </li> </ol> </li> <li> <p>\u65e5\u5fd7\u5f3a\u5236\u5199\u5165(log force)  </p> </li> <li> <p>\u5728\u4e8b\u52a1\u63d0\u4ea4\u65f6\u5f3a\u5236\u6267\u884c\uff1a\u5c06\u8be5\u4e8b\u52a1\u6240\u6709\u65e5\u5fd7\u8bb0\u5f55\uff08\u542b\u63d0\u4ea4\u8bb0\u5f55\uff09\u5199\u5165\u7a33\u5b9a\u5b58\u50a8\u5668  </p> </li> <li> <p>\u7ec4\u63d0\u4ea4\u4f18\u5316(Group commit)  </p> </li> <li>\u901a\u8fc7\u5355\u6b21I/O\u64cd\u4f5c\u6279\u91cf\u8f93\u51fa\u591a\u4e2a\u65e5\u5fd7\u8bb0\u5f55  </li> <li>\u663e\u8457\u964d\u4f4eI/O\u5f00\u9500  </li> </ul> <p>\u6211\u4eec\u5728\u628a\u6570\u636e buffer \u4e2d\u7684\u5757\u5199\u5230\u6570\u636e\u5e93\u65f6\uff0c\u8981\u5148\u628a\u5757\u5bf9\u5e94\u7684\u65e5\u5fd7\u5148\u5199\u5230\u65e5\u5fd7\u6587\u4ef6\uff08\u76f4\u63a5\u628a\u65e5\u5fd7\u5168\u90e8\u5237\u5199\u4e00\u904d\uff09\u3002 \u4e8b\u52a1\u63d0\u4ea4\u4e4b\u540e\u6709\u4e00\u4e2a\u5bf9\u65e5\u5fd7\u7684\u5f3a\u5236\u5237\u5199\u3002</p> <p>Group commit: several log records can be output using a single output operation, reducing the I/O cost.  commit \u53ef\u80fd\u5728\u65e5\u5fd7\u91cc\u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4, \u7b49\u5230 buffer \u91cc\u6709\u8db3\u591f\u591a\u7684\u65e5\u5fd7\u8bb0\u5f55\u518d\u5199\u51fa\u53bb\u3002 </p> <p>\u65e5\u5fd7\u7f13\u51b2\u987b\u9075\u5faa\u7684\u89c4\u5219\uff1a</p> <ol> <li> <p>\u987a\u5e8f\u5199\u5165\u539f\u5219    - \u65e5\u5fd7\u8bb0\u5f55\u5fc5\u987b\u6309\u7167\u751f\u6210\u987a\u5e8f\u5199\u5165\u7a33\u5b9a\u5b58\u50a8\u5668</p> </li> <li> <p>\u4e8b\u52a1\u63d0\u4ea4\u6761\u4ef6    - \u4ec5\u5f53\u65e5\u5fd7\u8bb0\u5f55\\(&lt;T_i\\) commit\\(&gt;\\)\u5199\u5165\u7a33\u5b9a\u5b58\u50a8\u5668\u540e\uff0c\u4e8b\u52a1\\(T_i\\)\u624d\u80fd\u8fdb\u5165\u63d0\u4ea4\u72b6\u6001</p> </li> <li> <p>\u5148\u5199\u65e5\u5fd7\u89c4\u5219(Write-Ahead Logging, WAL)    - \u5185\u5b58\u4e2d\u7684\u6570\u636e\u5757\u5199\u5165\u6570\u636e\u5e93\u524d\uff0c\u5fc5\u987b\u5148\u5c06\u5176\u5173\u8054\u7684\u6240\u6709\u65e5\u5fd7\u8bb0\u5f55\u5199\u5165\u7a33\u5b9a\u5b58\u50a8\u5668    - \u6ce8\uff1a\u4e25\u683c\u6765\u8bf4\uff0cWAL\u4ec5\u8981\u6c42\u64a4\u9500(undo)\u4fe1\u606f\u5fc5\u987b\u5148\u5199\u5165</p> </li> </ol> <ul> <li>The recovery algorithm supports the no-force policy(\u975e\u5f3a\u5236): i.e., updated blocks need not be written to disk when transaction commits. \u597d\u7684\u6062\u590d\u7b97\u6cd5\uff1a\u6211\u4e8b\u52a1 commit \u4e86\u4f46\u4e0d\u5f3a\u5236\u65e5\u5fd7\u5237\u5199\u51fa\u53bb\u3002</li> <li>The recovery algorithm supports the steal policy(\u7a83\u53d6\u7b56\u7565):i.e., blocks containing updates of uncommitted transactions can be written to disk, even before the transaction commits.  \u4e8b\u52a1\u63d0\u4ea4\u4e4b\u524d\u810f\u6570\u636e\u80fd\u4e0d\u80fd\u88ab\u5199\u5230\u78c1\u76d8\u91cc\u53bb\uff1f\uff08\u540c\u6837\u5730\u9700\u8981\u5148\u628a\u65e5\u5fd7\u5199\u51fa\u53bb\uff09</li> </ul> <p>\u5982\u679c\u5c06\u5305\u542b\u672a\u63d0\u4ea4\u66f4\u65b0\u7684\u5757\u8f93\u51fa\u5230\u78c1\u76d8\uff0c\u5219\u5305\u542b\u66f4\u65b0\u7684\u64a4\u9500\u4fe1\u606f\u7684\u65e5\u5fd7\u8bb0\u5f55\u5c06\u9996\u5148\u8f93\u51fa\u5230\u7a33\u5b9a\u5b58\u50a8\u7684\u4ecb\u8d28\u4e0a</p> <p>\u5f53\u5757\u8f93\u51fa\u5230\u78c1\u76d8\u662f\uff0c\u4e0d\u5e94\u5bf9\u5757\u8fdb\u884c\u4fee\u6539\u3002   - \u5728\u5199\u5165\u6570\u636e\u9879\u4e4b\u524d\uff0c\u4e8b\u52a1\u5728\u5305\u542b\u6570\u636e\u9879\u7684\u5757\u4e0a\u83b7\u53d6\u72ec\u5360\u9501   - \u5728\u5757\u88ab\u8f93\u51fa\u5230\u78c1\u76d8\u4e4b\u524d\uff0c\u4e8b\u52a1\u4e0d\u80fd\u91ca\u653e\u9501\uff08such locks for short duration are called latches\uff09</p> <p>to output a block to disk</p> <ul> <li>\u9996\u5148\u83b7\u53d6\u8be5\u5757\u7684\u72ec\u5360\u9501\uff0c\u786e\u4fdd\u6ca1\u6709\u6b63\u5728\u8fdb\u884c\u7684\u66f4\u65b0</li> <li>\u6267\u884c\u65e5\u5fd7\u5237\u65b0</li> <li>\u5c06\u5757\u8f93\u51fa\u5230\u78c1\u76d8</li> <li>\u677e\u5f00latch </li> </ul> <p>Database buffers are generally implemented in virtual memory, which is managed by the operating system.</p> <p>\u7f3a\u70b9\uff1a\uff08\u53cc\u5206\u9875\u95ee\u9898\uff09 - \u5f53\u4f5c\u7cfb\u7edf\u9700\u8981\u9010\u51fa\u5df2\u4fee\u6539\u7684\u9875\u9762\u65f6\uff0c\u8be5\u9875\u9762\u5c06\u5199\u5165\u78c1\u76d8\u4e0a\u7684\u4ea4\u6362\u7a7a\u95f4\u3002 - \u5f53\u6570\u636e\u5e93\u51b3\u5b9a\u5c06\u7f13\u51b2\u533a\u9875\u5199\u5165\u78c1\u76d8\u65f6\uff0c\u7f13\u51b2\u533a\u9875\u53ef\u80fd\u4f4d\u4e8e\u4ea4\u6362\u7a7a\u95f4\u4e2d\uff0c\u5e76\u4e14\u53ef\u80fd\u5fc5\u987b\u4ece\u78c1\u76d8\u4e0a\u7684\u4ea4\u6362\u7a7a\u95f4\u8bfb\u53d6\u5e76\u8f93\u51fa\u5230\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u5e93\uff0c\u4ece\u800c\u5bfc\u81f4\u989d\u5916\u7684 I/O\uff01</p> <p>\u7406\u60f3\u60c5\u51b5\u4e0b\uff0c\u5f53 OS \u9700\u8981\u4ece\u7f13\u51b2\u533a\u4e2d\u9010\u51fa\u9875\u9762\u65f6\uff0c\u5b83\u5e94\u8be5\u5c06\u63a7\u5236\u6743\u4f20\u9012\u7ed9\u6570\u636e\u5e93\uff0c\u800c\u6570\u636e\u5e93\u53c8\u5e94\u8be5</p> <ul> <li>\u5c06\u9875\u9762\u8f93\u51fa\u5230\u6570\u636e\u5e93\u800c\u4e0d\u662f\u4ea4\u6362\u7a7a\u95f4</li> <li>\u4ece\u7f13\u51b2\u533a\u4e2d\u91ca\u653e\u9875\u9762\uff0c\u4f9b\u4f5c\u7cfb\u7edf\u4f7f\u7528</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2015/#fuzzy-checkpointing","title":"Fuzzy Checkpointing","text":"<p>Fuzzy \u6a21\u7cca</p> <p>\u505a checkpoint \u7684\u65f6\u5019\u6211\u4eec\u5982\u679c\u8981\u6c42\u5176\u4ed6\u6d3b\u8dc3\u4e8b\u52a1\u90fd\u505c\u4e0b\u6765\uff0c\u4e00\u6b21\u6027\u628a\u810f\u6570\u636e\u90fd\u5237\u5199\u51fa\u53bb\uff0c\u541e\u5410\u7387\u4f1a\u5ffd\u9ad8\u5ffd\u4f4e\uff0c\u7cfb\u7edf\u7684\u53ef\u7528\u6027\u5c31\u6bd4\u8f83\u5dee\u3002 \u8bb0\u5f55\u810f\u6570\u636e\uff0c\u5728\u540e\u9762\u4e0d check \u7684\u65f6\u5019\u6162\u6162\u5199\u3002</p> <ul> <li>Temporarily stop all updates by transactions</li> <li>Write a \\(&lt;checkpoint\\ L&gt;\\) log record and force log to stable storage</li> <li>Note list M of modified buffer blocks</li> <li>Now permit transactions to proceed with their actions</li> <li> <p>Output to disk all modified buffer blocks in list M</p> </li> <li> <p>Store a pointer to the checkpoint record in a fixed position last_checkpoint on disk</p> </li> </ul> <p></p> <p>\u5728\u628a\u6240\u6709\u810f\u6570\u636e\u90fd\u5199\u56de\u78c1\u76d8\u540e\uff0c\u6211\u4eec\u4f1a\u8ba4\u5b9a\u8fd9\u4e2a checkpoint. \u6709\u4e00\u4e2a\u6307\u9488\u6307\u5411\u6700\u8fd1\u4e00\u6b21\u6210\u529f\u7684 checkpoint. \u8fd9\u6837 checkpoint \u7684\u65f6\u5019\u5c31\u53ea\u9700\u8981\u8bb0\u5f55\u4e00\u4e0b\uff0c\u4e0d\u7528\u4e00\u4e0b\u5b50\u5199\u810f\u6570\u636e\u4e86\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2015/#failure-with-loss-of-nonvolatile-storage","title":"Failure with Loss of Nonvolatile Storage","text":"<p>\u5230\u76ee\u524d\u4e3a\u6b62\uff0c\u6211\u4eec\u5047\u8bbe\u6ca1\u6709\u4e22\u5931\u975e\u6613\u5931\u6027\u5b58\u50a8</p> <p>\u7c7b\u4f3c\u4e8e checkpointing \u7684\u6280\u672f\uff0c\u7528\u4e8e\u5904\u7406\u975e\u6613\u5931\u6027\u5b58\u50a8\u7684\u4e22\u5931</p> <ul> <li>\u5b9a\u671f\u5c06\u6570\u636e\u5e93\u7684\u5168\u90e8\u5185\u5bb9\u8f6c\u50a8\u5230\u7a33\u5b9astable storage\u4e2d</li> <li>\u5728\u8f6c\u50a8\u8fc7\u7a0b\u4e2d\uff0c\u4e0d\u80fd\u6709\u4e8b\u52a1\u5904\u4e8e\u6d3b\u52a8\u72b6\u6001;\u5fc5\u987b\u6267\u884c\u7c7b\u4f3c\u4e8e\u68c0\u67e5\u70b9\u7684\u8fc7\u7a0b</li> <li>\u8f93\u51fa\u5f53\u524d\u9a7b\u7559\u5728\u4e3b\u5b58\u4e2d\u7684\u6240\u6709\u65e5\u5fd7\u8bb0\u5f55\u5230stable storage</li> <li>\u5c06\u6240\u6709\u7f13\u51b2\u5757\u8f93\u51fa\u5230\u78c1\u76d8\u4e0a</li> <li>\u5c06\u6570\u636e\u5e93\u7684\u5185\u5bb9\u590d\u5236\u5230stable storage</li> <li>\u8f93\u51fa\u4e00\u6761\u8bb0\u5f55 \u4ee5\u5728stable storage\u4e2d\u6807\u8bb0\u8f6c\u50a8\u7684\u7ed3\u675f <p>to cover from disk failure:</p> <ul> <li>restore the database from the most recent dump</li> <li>consult the log and redo all transactions that committed after the dump was taken</li> </ul> <p>Can be extended to allow transactions to be active during dump; known as fuzzy dump or online dump. \u7c7b\u4f3c\u4e8e checkpoint, \u4e0d\u662f\u5b8c\u5168\u5907\u4efd\uff0c\u800c\u662f\u8bb0\u5f55\u4e00\u4e0b\uff0c\u968f\u540e\u6162\u6162\u5907\u4efd\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2015/#remote-backup-systems","title":"Remote Backup Systems","text":""},{"location":"note/courses/database%20system/Chapter%2015/#_5","title":"\u4e00\u3001\u8fdc\u7a0b\u5907\u4efd\u7cfb\u7edf\u7684\u6838\u5fc3\u76ee\u6807\u4e0e\u67b6\u6784","text":"<p>\u8fdc\u7a0b\u5907\u4efd\u7cfb\u7edf\u901a\u8fc7\u5728\u8fdc\u7a0b\u7ad9\u70b9\u7ef4\u62a4\u6570\u636e\u5e93\u526f\u672c\uff0c\u786e\u4fdd\u4e3b\u7ad9\u70b9\u6545\u969c\u65f6\u4ecd\u80fd\u7ee7\u7eed\u5904\u7406\u4e8b\u52a1\uff0c\u5b9e\u73b0\u9ad8\u53ef\u7528\u6027\u3002\u4e3b\u7ad9\u70b9\u5411\u5907\u4efd\u7ad9\u70b9\u4f20\u8f93\u65e5\u5fd7\u8bb0\u5f55\uff0c\u5907\u4efd\u7ad9\u70b9\u5229\u7528\u65e5\u5fd7\u6062\u590d\u6570\u636e\u5e93\u72b6\u6001\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2015/#_6","title":"\u4e8c\u3001\u6545\u969c\u68c0\u6d4b\u4e0e\u63a7\u5236\u6743\u8f6c\u79fb","text":"<ol> <li>\u6545\u969c\u68c0\u6d4b\uff1a    - \u5907\u4efd\u7ad9\u70b9\u901a\u8fc7\u591a\u6761\u901a\u4fe1\u94fe\u8def\u548c\u5fc3\u8df3\u6d88\u606f\uff08Heart-beat messages\uff09\u68c0\u6d4b\u4e3b\u7ad9\u70b9\u6545\u969c\uff0c\u533a\u5206\u4e3b\u7ad9\u70b9\u6545\u969c\u4e0e\u94fe\u8def\u6545\u969c\u3002  </li> <li>\u63a7\u5236\u6743\u8f6c\u79fb\uff1a    - \u5907\u4efd\u7ad9\u70b9\u63a5\u7ba1\u65f6\uff0c\u9700\u57fa\u4e8e\u672c\u5730\u6570\u636e\u5e93\u526f\u672c\u548c\u5df2\u63a5\u6536\u7684\u65e5\u5fd7\u8bb0\u5f55\u6267\u884c\u6062\u590d\uff0c\u91cd\u505a\u5df2\u5b8c\u6210\u4e8b\u52a1\uff0c\u64a4\u9500\u672a\u5b8c\u6210\u4e8b\u52a1\uff0c\u968f\u540e\u6210\u4e3a\u65b0\u4e3b\u7ad9\u70b9\u3002    - \u539f\u4e3b\u7ad9\u70b9\u6062\u590d\u540e\uff0c\u9700\u4ece\u5907\u4efd\u7ad9\u70b9\u83b7\u53d6\u91cd\u505a\u65e5\u5fd7\uff0c\u5e94\u7528\u66f4\u65b0\u540e\u624d\u80fd\u91cd\u65b0\u63a5\u7ba1\u3002</li> </ol>"},{"location":"note/courses/database%20system/Chapter%2015/#_7","title":"\u4e09\u3001\u6062\u590d\u6548\u7387\u4f18\u5316","text":"<ol> <li>\u5b9a\u671f\u9884\u5904\u7406\uff1a    - \u5907\u4efd\u7ad9\u70b9\u5b9a\u671f\u5904\u7406\u91cd\u505a\u65e5\u5fd7\u5e76\u6267\u884c\u68c0\u67e5\u70b9\uff0c\u5220\u9664\u65e7\u65e5\u5fd7\u4ee5\u51cf\u5c11\u6545\u969c\u65f6\u7684\u6062\u590d\u65f6\u95f4\u3002  </li> <li>\u70ed\u5907\u4efd\uff08Hot-Spare\uff09\u914d\u7f6e\uff1a    - \u5907\u4efd\u7ad9\u70b9\u5b9e\u65f6\u5e94\u7528\u63a5\u6536\u7684\u65e5\u5fd7\u8bb0\u5f55\uff0c\u4e3b\u7ad9\u70b9\u6545\u969c\u65f6\u4ec5\u9700\u56de\u6eda\u672a\u5b8c\u6210\u4e8b\u52a1\uff0c\u5373\u53ef\u5feb\u901f\u63a5\u7ba1\u3002  </li> </ol>"},{"location":"note/courses/database%20system/Chapter%2015/#_8","title":"\u56db\u3001\u6570\u636e\u8010\u4e45\u6027\u4e0e\u4e00\u81f4\u6027\u7b56\u7565","text":"<ol> <li>\u4e8b\u52a1\u63d0\u4ea4\u7b56\u7565\uff1a    - \u4e00\u5b89\u5168\uff08One-safe\uff09\uff1a\u4e3b\u7ad9\u70b9\u5199\u5165\u4e8b\u52a1\u63d0\u4ea4\u65e5\u5fd7\u5373\u89c6\u4e3a\u63d0\u4ea4\uff0c\u53ef\u80fd\u56e0\u5907\u4efd\u672a\u540c\u6b65\u5bfc\u81f4\u6570\u636e\u4e22\u5931\u3002    - \u4e24\u5b89\u5168\uff08Two-safe\uff09\uff1a  <ul> <li>\u4e24-\u975e\u5e38\u5b89\u5168\uff08Two-very-safe\uff09\uff1a\u4e3b\u5907\u5747\u5199\u5165\u63d0\u4ea4\u65e5\u5fd7\u624d\u89c6\u4e3a\u63d0\u4ea4\uff0c\u6545\u969c\u65f6\u53ef\u7528\u6027\u8f83\u4f4e\u3002  </li> <li>\u4f18\u5316\u7248\u4e24\u5b89\u5168\uff1a\u4e3b\u5907\u5747\u53ef\u7528\u65f6\u9700\u4e24\u8005\u786e\u8ba4\uff1b\u4ec5\u4e3b\u7ad9\u70b9\u53ef\u7528\u65f6\u5141\u8bb8\u5355\u72ec\u63d0\u4ea4\uff0c\u5e73\u8861\u53ef\u7528\u6027\u4e0e\u6570\u636e\u5b89\u5168\u3002  </li> </ul> </li> <li>\u4e0e\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u7684\u5bf9\u6bd4\uff1a    - \u8fdc\u7a0b\u5907\u4efd\u6bd4\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u590d\u5236\u66f4\u5feb\u901f\u3001\u6210\u672c\u66f4\u4f4e\uff0c\u4f46\u5bf9\u6545\u969c\u7684\u5bb9\u5fcd\u5ea6\u8f83\u5dee\u3002</li> </ol>"},{"location":"note/courses/database%20system/Chapter%2015/#_9","title":"\u4e94\u3001\u5173\u952e\u7279\u6027\u603b\u7ed3","text":"\u7279\u6027 \u63cf\u8ff0 \u6838\u5fc3\u4f18\u52bf \u9ad8\u53ef\u7528\u6027\uff0c\u4e3b\u7ad9\u70b9\u6545\u969c\u65f6\u901a\u8fc7\u8fdc\u7a0b\u526f\u672c\u5feb\u901f\u6062\u590d\u4e1a\u52a1\u3002 \u65e5\u5fd7\u4f9d\u8d56 \u4e3b\u7ad9\u70b9\u9700\u6301\u7eed\u5411\u5907\u4efd\u7ad9\u70b9\u4f20\u8f93\u65e5\u5fd7\uff0c\u5907\u4efd\u7ad9\u70b9\u901a\u8fc7\u65e5\u5fd7\u7ef4\u6301\u6570\u636e\u4e00\u81f4\u6027\u3002 \u5207\u6362\u6210\u672c \u70ed\u5907\u4efd\u914d\u7f6e\u53ef\u5927\u5e45\u964d\u4f4e\u63a5\u7ba1\u5ef6\u8fdf\uff0c\u975e\u70ed\u5907\u4efd\u9700\u7b49\u5f85\u65e5\u5fd7\u5e94\u7528\u3002 \u5c40\u9650\u6027 \u4f9d\u8d56\u7f51\u7edc\u8fde\u63a5\uff0c\u4f20\u8f93\u5ef6\u8fdf\u53ef\u80fd\u5f71\u54cd\u6027\u80fd\uff1b\u591a\u7ad9\u70b9\u4e00\u81f4\u6027\u7b56\u7565\u9700\u6743\u8861\u53ef\u7528\u6027\u4e0e\u5b89\u5168\u3002"},{"location":"note/courses/database%20system/Chapter%2015/#recovery-with-early-lock-release-and-logical-undo-operations","title":"Recovery with Early Lock Release and Logical Undo Operations","text":""},{"location":"note/courses/database%20system/Chapter%2015/#logical-undo-logging","title":"Logical Undo Logging","text":"<p>B+ \u6811insertions and deletions\u64cd\u4f5c\u4f1a\u63d0\u524d\u91ca\u653e\u9501</p> <ul> <li>\u4ed6\u4eec\u4e0d\u80fd\u901a\u8fc7\u6062\u590d\u65e7\u503cphsical undo\u6765\u64a4\u9500\uff0c\u56e0\u4e3a\u4e00\u65e6\u91ca\u653e\u4e86\u9501\uff0c\u5176\u4ed6\u4e8b\u52a1\u53ef\u80fd\u5df2\u7ecf\u66f4\u65b0\u4e86b+\u6811\u7684\u503c\u3002</li> <li>\u901a\u8fc7logical undo\u6765\u64a4\u9500\u64cd\u4f5c\uff0c\u5373\u8bb0\u5f55\u64cd\u4f5c\u7684\u903b\u8f91\u9006\u64cd\u4f5c\u3002</li> </ul> <p>\u5bf9\u4e8e\u8fd9\u7c7b\u64cd\u4f5c\uff0cundo log records\u9700\u8981\u8bb0\u5f55\u903b\u8f91\u64a4\u9500\u64cd\u4f5c\uff0c\u800c\u4e0d\u662f\u7269\u7406\u64a4\u9500\u64cd\u4f5c\u3002</p> <p>redo information is logged physically even for operations with logical undo.     - loggical redo \u975e\u5e38\u798f\u5927\uff0c\u56e0\u4e3a\u6062\u590d\u5f00\u59cb\u65f6\u78c1\u76d8\u4e0a\u7684\u6570\u636e\u5e93\u72b6\u6001\u53ef\u80fd\u4e0d\u662f\"recovery consistent\"\u7684\u3002     - physical redo \u548cearly lock release \u4e0d\u51b2\u7a81</p> <p>\u5982\u679c\u65e9\u653e\u9501\uff0c\u540e\u7eed\u6062\u590d\u4e3a old value \u53ef\u80fd\u6ca1\u6709\u610f\u4e49\u3002\u6bd4\u5982\u5b58\u6b3e 100, \u8f6c\u5165 100. \u90a3\u4e48\u6211\u4eec\u6062\u590d\u4e3a 100(\u7269\u7406\u64a4\u9500) \u5c31\u6ca1\u6709\u610f\u4e49\u3002\u8fd9\u4e2a\u65f6\u5019\u5e94\u8be5\u91c7\u7528\u903b\u8f91\u64a4\u9500\uff0c\u5373\u5982\u679c <code>a+=100</code>, \u6062\u590d\u65f6\u5c31\u5e94\u8be5 <code>a-=100</code>. </p> <p>\u5982 B+ \u6811\u7684\u63d2\u5165\u548c\u5220\u9664\u64cd\u4f5c\u3002 \u6211\u4eec\u9700\u8981\u5bf9\u903b\u8f91\u64cd\u4f5c\u8bb0\u65e5\u5fd7\u3002</p> <p>operation logging is done as follows - \u5f53\u64cd\u4f5c\u5f00\u59cb\u65f6\uff0c\u8bb0\u5f55\\(T_i,O_j,operation-begin\\),\\(O_j\\)\u662f\u64cd\u4f5c\u5b9e\u4f8b\u7684\u552f\u4e00\u6807\u8bc6\u7b26 - \u6267\u884c\u64cd\u4f5c\u65f6\uff0c\u6b63\u5e38\u8bb0\u5f55\u7269\u7406\u91cd\u505a\u4fe1\u606f\u548c\u7269\u7406\u64a4\u9500\u4fe1\u606f - \u5f53\u64cd\u4f5c\u7ed3\u675f\u65f6\uff0c\u8bb0\u5f55\\(T_i,O_j,operation-end\uff0cU\\)\uff0c\u5176\u4e2dU\u5305\u62ec\u4e86\u8bb8\u54df\u554a\u8fdb\u884c\u903b\u8f91\u64a4\u9500\u7684\u4fe1\u606f</p> <p></p> <p>\u5982\u679c\u5728\u64cd\u4f5c\u5b8c\u6210\u4e4b\u524d\u53d1\u751fcrash/rollback - the operation-end log record is not found,and the physical undo is performed</p> <p>\u5982\u679c\u5728\u64cd\u4f5c\u5b8c\u6210\u4e4b\u540e\u53d1\u751fcrash/rollback - the operation-end log record is found, and the logical undo is performed\uff0cthe physical undo information for the operation is ignored.</p> <p>Redo of operation (after crash) still uses physical redo information.</p>"},{"location":"note/courses/database%20system/Chapter%2015/#transaction-rollback-with-logical-undo","title":"Transaction Rollback with Logical Undo","text":"<ol> <li> <p>\u65e5\u5fd7\u53cd\u5411\u626b\u63cf\u5904\u7406    - \u903b\u8f91\u64cd\u4f5c\u56de\u6eda\uff1a      \u9047\u5230\\(&lt;T_i, O_j\\) operation-end, \\(U&gt;\\)\u8bb0\u5f55\u65f6\uff1a  </p> <ul> <li>\u5229\u7528\u64a4\u9500\u4fe1\u606f\\(U\\)\u6267\u884c\u903b\u8f91\u56de\u6eda  </li> <li>\u56de\u6eda\u64cd\u4f5c\u4ea7\u751f\u7684\u66f4\u65b0\u6309\u6b63\u5e38\u64cd\u4f5c\u65b9\u5f0f\u8bb0\u5f55\u65e5\u5fd7  </li> <li>\u6700\u7ec8\u751f\u6210\\(&lt;T_i, O_j\\) operation-abort&gt;$\u66ff\u4ee3\u5e38\u89c4\u7ed3\u675f\u8bb0\u5f55  </li> <li>if a &lt;\\(T_i,O_j,operation-abort\\)&gt;is found, skip all preceding log records for \\(T_i\\) until the &lt;\\(T_i, O_j, operation-begin&gt;\\) record is found  </li> <li>\u8df3\u8fc7\u5904\u7406\uff1a  \u5ffd\u7565\u6240\u6709redo-only\u8bb0\u5f55  </li> </ul> </li> <li> <p>\u626b\u63cf\u7ec8\u6b62\u6761\u4ef6    - \u53d1\u73b0\\(&lt;T_i\\) start&gt;\\(\u8bb0\u5f55\u65f6\u505c\u6b62      - \u8ffd\u52a0\\)$\u65e5\u5fd7\u8bb0\u5f55"},{"location":"note/courses/database%20system/Chapter%2015/#_10","title":"\u5173\u952e\u6280\u672f\u8bf4\u660e","text":"<ol> <li>\u5f02\u5e38\u5904\u7406\u573a\u666f    - \u4ec5\u5f53\u6570\u636e\u5e93\u5728\u56de\u6eda\u8fc7\u7a0b\u4e2d\u5d29\u6e83\u65f6\u4f1a\u51fa\u73b0\u64cd\u4f5c\u4e2d\u6b62\u8bb0\u5f55  </li> <li>\u9632\u91cd\u590d\u56de\u6eda\u673a\u5236    - \u901a\u8fc7\u8df3\u8fc7\u5df2\u5904\u7406\u7684\u64cd\u4f5c\u5f00\u59cb\u8bb0\u5f55\uff08\\(&lt;T_i, O_j\\) operation-begin&gt;$\uff09    - \u786e\u4fdd\u540c\u4e00\u64cd\u4f5c\u4e0d\u4f1a\u88ab\u591a\u6b21\u56de\u6eda  </li> </ol> <p>Transaction Rollback with Logical Undo</p> <p></p> <p>\u9700\u8981\u628a\u6bcf\u4e2a\u64cd\u4f5c\u7684\u65e5\u5fd7\u9879\u8bb0\u5f55\u4e0b\u6765\uff08\u5f00\u59cb\u548c\u7ed3\u675f\uff09. C \u8868\u793a\u81ea\u52a0\u64cd\u4f5c\u3002\u8fd9\u91cc\u5728 end \u65f6\u4f1a\u8bb0\u5f55 logical undo \u7684\u64cd\u4f5c(\u51cf\u6cd5\u64a4\u9500\u5bf9\u5e94\u52a0\u6cd5) \u6ce8\u610f\u6211\u4eec\u662f\u5728 end \u7684\u65f6\u5019\u8bb0\u5f55\u903b\u8f91\u64a4\u9500\u7684\u65b9\u6cd5\uff0c\u5982\u679c\u8fd9\u4e2a\u64cd\u4f5c\u8fd8\u6ca1\u6709\u7ed3\u675f\uff0c\u90a3\u4e48\u6211\u4eec\u53ea\u80fd\u7269\u7406\u64a4\u9500\u3002 \u8fd9\u91cc\u6211\u4eec\u65e9\u653e\u9501\u4e86\uff0c\u6ca1\u6709\u9075\u5faa\u4e25\u683c\u4e24\u9636\u6bb5\u653e\u9501\u534f\u8bae\u3002\u5728 T0 \u8fd8\u6ca1\u6709\u63d0\u4ea4\u7684\u65f6\u5019 T1 \u5c31\u5bf9\u6570\u636e\u8fdb\u884c\u4e86\u4fee\u6539. \u6062\u590d\u4e2d\u505a\u7684\u662f\u7269\u7406\u64a4\u9500(old+new), begin/end \u8fd9\u4e9b\u65e5\u5fd7\u5c31\u4e0d\u9700\u8981\u8bb0\u5f55\u4e86\u3002</p> <p>Failure Recovery with Logical Undo</p> <p>     \u8fd9\u91cc\u8fd8\u6ca1\u6709 T2 end, \u56e0\u6b64\u7269\u7406\u64a4\u9500\u3002</p>"},{"location":"note/courses/database%20system/Chapter%2015/#aries-recovery-algorithm","title":"ARIES Recovery Algorithm","text":"<p>ARIES is a state of the art recovery method. </p> <p>unlike the recovery algorithm described earlier, ARIES</p> <ul> <li>uses log sequence number LSN to identify log records. Stores LSNs in pages to identify what updates have already been applie to a database page</li> <li>Physiological redo</li> <li>Dirty page table to avoid unnecessary redos during recovery</li> <li>Fuzzy checkPointing that only records inforation about dirty pages,a and doesnot require dirty pages to be written out at checkpoint time</li> </ul> <p>\u6bcf\u4e2a\u65e5\u5fd7\u90fd\u6709\u4e00\u4e2a\u65e5\u5fd7\u7f16\u53f7 log sequence number (LSN) \u6bcf\u4e2a\u6570\u636e\u5757\u91cc\u90fd\u4f1a\u8bb0\u4e00\u4e2a LSN, \u8868\u793a\u8fd9\u4e2a\u5757\u53cd\u5e94\u4e86\u6700\u8fd1\u54ea\u4e2a\u65e5\u5fd7\u7684\u64cd\u4f5c\u3002</p> <p>physiological redo:</p> <ul> <li>affected page is physically identified, action within page can be logical</li> <li>\u7528\u4e8e\u964d\u4f4e\u65e5\u5fd7\u5f00\u9500<ul> <li>e.g. when a record is deleted and all other records have to be moved to fill hole\uff1a Physiological redo can log just the record deletion, but Physical redo would have to log the old and new values for much of the page</li> </ul> </li> <li>\u8981\u6c42\u4ee5\u539f\u5b50\u65b9\u5f0f\u5c06\u9875\u9762\u8f93\u51fa\u5230\u78c1\u76d8:\u53ef\u4ee5\u901a\u8fc7RAID\u8f7b\u677e\u5b9e\u73b0</li> </ul> <p>ARIES uses several data structures to support recovery:   - Log Sequence Number (LSN) identifies each log record     - \u5fc5\u987b\u662f\u987a\u5e8f\u9012\u589e\u7684     - \u901a\u5e38\u662f\u65e5\u5fd7\u6587\u4ef6\u5f00\u5934\u7684\u504f\u79fb\u91cf\uff0c\u4ee5\u5141\u8bb8\u5feb\u901f\u8bbf\u95ee\u3002\u6613\u4e8e\u6269\u5c55\u4ee5\u5904\u7406\u591a\u4e2a\u65e5\u5fd7\u6587\u4ef6   - Page LSN: \u6bcf\u4e2a\u9875(\u5757\u7684 LSN)   - Log records of several different types   - Dirty page table: \u810f\u9875\u8868\u8981\u8bb0\u5f55\u5728\u65e5\u5fd7\u4e2d\u3002     - \u8bb0\u5f55\u54ea\u4e9b\u9875\u662f\u810f\u7684\uff0c\u54ea\u4e9b\u65e5\u5fd7\u5df2\u7ecf\u88ab\u5e94\u7528\u5230\u8fd9\u4e9b\u9875\u4e0a</p>"},{"location":"note/courses/database%20system/Chapter%2015/#aries-data-structures","title":"ARIES Data Structures","text":"<ul> <li>Log sequence number (LSN) identifies each log record  <ul> <li>Must be sequentially increasing</li> </ul> </li> <li>Page LSN \u6bcf\u4e2a\u9875(\u5757\u7684 LSN)</li> <li>Log records of several different types</li> <li>Dirty page table \u810f\u9875\u8868\u8981\u8bb0\u5f55\u5728\u65e5\u5fd7\u4e2d\u3002</li> </ul> <p>\u6bcf\u4e2apage\u90fd\u8981\u5305\u542b\u4e00\u4e2aPageLSN, \u8868\u793a\u8fd9\u4e2a\u9875\u7684\u6700\u65b0\u7684\u65e5\u5fd7\u8bb0\u5f55\u3002   - to update a page:     - x-latch the page , and write the log record     - update the page     - record the lsn of the log record in the page's PageLSN     - unlock page   - to flush page to disk, must first S-latch the page     - \u56e0\u6b64\uff0c\u78c1\u76d8\u4e0a\u7684\u9875\u9762\u72b6\u6001\u662f\u4e00\u81f4\u7684\uff1arequired to support physiological redo   - pageLSN \u7528\u4e8e\u9632\u6b62repeated redoo, \u4ece\u800c\u4fdd\u8bc1idempotence</p> <p>Log Record</p> <p></p> <p>\u65e5\u5fd7\u8bb0\u5f55\u901a\u8fc7 UndoNextLSN \u4e32\u8d77\u6765\uff0c\u63d0\u9ad8\u6062\u590d\u6548\u7387\u3002</p> <p>DirtyPage Table </p> <ul> <li>list of pages in the buffer that have been updated</li> <li>PageLSN of the page</li> <li>RecLSN is an LSN such that log records before this LSN have already been applied to the page version on disk \u6bcf\u4e00\u9875\u90fd\u6709 PageLSN \u548c RecLSN, Rec \u53cd\u5e94\u7684\u662f\u6700\u8fd1\u7684\u88ab\u53cd\u6620\u5230\u6570\u636e\u5e93\u7684\u65e5\u5fd7\u3002</li> </ul> <p>ARIES Data Structures</p> <p></p> <p>\u8fd9\u91cc 4894.1 \u8868\u793a\u8fd9\u4e2a\u5757\u91cc\u7684\u7b2c\u4e00\u4e2a\u6570\u636e\u3002 RecLSN \u8868\u793a 7564 \u5f00\u59cb\u6570\u636e\u5c31\u6ca1\u6709\u53cd\u6620\u5230\u6570\u636e\u5e93\u4e2d\u53bb\u4e86\u3002</p> <ul> <li>Checkpoint log record<ul> <li>Contains: <ul> <li>DirtyPageTable and list of active transactions  </li> <li>For each active transaction, LastLSN, the LSN of the last log record written by the transaction \u8981\u8bb0\u6700\u8fd1\u7684\u4e8b\u52a1\u9879\uff08\u4ece\u54ea\u91cc\u5f00\u59cb\u6062\u590d\uff09</li> </ul> </li> <li>Fixed position on disk notes LSN of last completed checkpoint log record \u4e0a\u6b21checkpoint \u5b8c\u6210\u4f4d\u7f6e\u7684lsn</li> </ul> </li> <li>Dirty pages are not written out at checkpoint time Instead, they are flushed out continuously, in the background \u810f\u9875\u4e0d\u4f1a\u5728 check \u7684\u65f6\u5019\u5199\u51fa\u53bb\u3002\u5728\u540e\u53f0\u4e0d\u65ad\u5237\u65b0</li> <li>Checkpoint is thus very low overhead can be done frequently</li> </ul>"},{"location":"note/courses/database%20system/Chapter%2015/#aries-recovery-algorithm_1","title":"ARIES Recovery Algorithm","text":"<p>ARIES recovery algorithm consists of three passes:</p> <ul> <li>Analysis pass: \u786e\u5b9a  <ul> <li>Which transactions to undo (undo-list)  </li> <li>Which pages were dirty (disk version not up to date) at time of crash \u5f97\u5230 dirty page table. </li> <li>RedoLSN: LSN from which redo should start \u771f\u6b63\u7684 redo \u8981\u4ece\u54ea\u91cc\u5f00\u59cb(RecLSN \u7684\u6700\u5c0f\u503c\u5c31\u662f redo \u7684\u8d77\u70b9)</li> </ul> </li> <li>Redo pass \u4ece RedoLSN \u5f00\u59cb\u91cd\u6f14 RecLSN and PageLSNs are used to avoid redoing actions already reflected on page. \u7528\u6765\u4f18\u5316\uff0c\u6709\u4e9b\u65e5\u5fd7\u4e0d\u7528 redo(\u6ca1\u6709\u610f\u4e49)</li> <li>Undo pass \u628a undolist \u8fdb\u884c\u64a4\u9500\u64cd\u4f5c\u3002\u56de\u6eda\u6240\u6709\u672a\u5b8c\u6210\u7684\u4e8b\u52a1</li> <li>\u4e4b\u524d\u5b8c\u6210abort\u7684\u4e8b\u52a1\u4e0d\u4f1a\u88ab\u64a4\u9500\u3002</li> </ul> <p>Example</p> <p></p> <p>     crash \u4e4b\u540e\uff0c\u5f97\u5230\u4e0a\u9875\u7684 Dirty Page Table \u548c Active TXN Table \u4ee5\u53ca\u78c1\u76d8\u91cc\u7684\u65e5\u5fd7\u3002</p> <ul> <li>Analysis \u786e\u5b9a\u4e86redo\u5e94\u8be5\u4ece\u54ea\u91cc\u5f00\u59cb</li> <li>Undo \u5fc5\u987b\u56de\u9000till start of earliest transaction in undolist</li> </ul> <p></p> <p>Analysis Pass - \u4ece\u6700\u540e\u4e00\u4e2acheckpoint\u5f00\u59cb\uff0c\u5411\u540e\u626b\u63cf\u65e5\u5fd7   - \u4ece\u65e5\u5fd7\u8bb0\u5f55\u4e2d\u8bfb\u53d6dirty page table   - \u8bbe\u7f6e RedoLSN = min of RecLSNs of all pages in dirty page table. \u5982\u679c\u6ca1\u6709 dirty page, RedoLSN =  checkpoint record's LSN   - \u8bbe\u7f6e undolist = active transactions at the time of crash   - \u4ece\u68c0\u67e5\u70b9\u65e5\u5fd7\u8bb0\u5f55\u4e2d\u8bfb\u53d6undolist\u4e2d\u7684\u6bcf\u4e2a\u4e8b\u52a1\u7684\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u7684lsn - \u4ececheckpoint\u8bb0\u5f55\u5f00\u59cb\uff0c\u5411\u524d\u626b\u63cf\u65e5\u5fd7   - \u5bf9\u4e8e\u6bcf\u4e2a\u4e0d\u5728 undolist \u4e2d\u7684\u4e8b\u52a1,\u5982\u679c\u627e\u4e0d\u5230\u65e5\u5fd7\uff0c\u6dfb\u52a0\u5230undo-list   - \u6bcf\u5f53\u627e\u5230update log record ,\u5982\u679cpage\u4e0d\u5728\u810f\u9875\u4e2d\uff0c\u5219\u6dfb\u52a0\u5e76\u8bbe\u7f6eRecLSN\u4e3a\u8be5\u65e5\u5fd7\u8bb0\u5f55\u7684LSN   - \u5982\u679c\u627e\u5230\u4e8b\u52a1\u7ed3\u675f\u65e5\u5fd7\u8bb0\u5f55\uff0c\u5219\u4ece\u64a4\u9500\u5217\u8868\u4e2d\u5220\u9664\u4e8b\u52a1   - \u8ddf\u8e2a\u64a4\u9500\u5217\u8868\u4e2d\u6bcf\u4e2a\u4e8b\u52a1\u6700\u540e\u7684\u65e5\u5fd7\u8bb0\u5f55\u7684LSN\uff0c\u53ef\u80fd\u9700\u8981\u64a4\u9500 - at the end of analysis pass,   - RedoLSN\u786e\u5b9a\u4ece\u4f55\u5904\u5f00\u59cb\u91cd\u505a\u4f20\u9012   - \u6bcf\u4e2a\u810f\u9875\u7684RecLSN\u786e\u5b9a\u4e86\u91cd\u505a\u4f20\u9012\u4e2d\u6bcf\u4e2a\u810f\u9875\u7684\u91cd\u505a\u8d77\u70b9,\u6700\u5c0f\u5316\u4e86\u91cd\u505a\u4f20\u9012\u7684\u5de5\u4f5c\u91cf   - \u64a4\u9500\u5217\u8868\u4e2d\u7684\u4e8b\u52a1\u9700\u8981\u56de\u6eda</p> <p>Redo Pass - \u4eceRedoLSN\u5f00\u59cb\uff0c\u5411\u524d\u626b\u63cf\u65e5\u5fd7   - \u5bf9\u4e8e\u6bcf\u4e2a\u65e5\u5fd7\u8bb0\u5f55\uff0c\u5982\u679cpage\u4e0d\u5728\u810f\u9875\u8868\u4e2d\uff0c\u6216\u8005LSN\u5c0f\u4e8eRecLSN\uff0c\u8df3\u8fc7   - \u5426\u5219\uff0c\u4ece\u78c1\u76d8\u83b7\u53d6\u9875\u9762\uff0c\u5982\u679cPageLSN\u5c0f\u4e8eLSN\uff0c\u5219\u6267\u884c\u91cd\u505a\u64cd\u4f5c</p> <ul> <li>\u25a0 \u5bf9\u64a4\u9500\u5217\u8868 (undo-list) \u4e2d\u7684\u6240\u6709\u4e8b\u52a1\uff0c\u5728\u65e5\u5fd7\u4e0a\u6267\u884c\u53cd\u5411\u626b\u63cf\u8fdb\u884c\u64a4\u9500\u3002<ul> <li>\u25cf \u901a\u8fc7\u5982\u4e0b\u65b9\u5f0f\u8df3\u8fc7\u4e0d\u9700\u8981\u7684\u65e5\u5fd7\u8bb0\u5f55\u6765\u4f18\u5316\u53cd\u5411\u626b\u63cf\uff1a<ul> <li>\u25ba \u5206\u6790\u9636\u6bb5 (analysis pass) \u4f1a\u4e3a\u6bcf\u4e2a\u4e8b\u52a1\u627e\u5230\u5176\u6700\u540e\u4e00\u6761\u65e5\u5fd7\u8bb0\u5f55\u7684 LSN\uff08\u65e5\u5fd7\u5e8f\u5217\u53f7\uff09\uff0c\u5e76\u5c06\u8be5 LSN \u8bbe\u7f6e\u4e3a\u8fd9\u4e2a\u4e8b\u52a1\u7684\u4e0b\u4e00\u4e2a\u5f85\u64a4\u9500 LSN\u3002</li> <li>\u25ba \u5728\u6bcf\u4e00\u6b65\u4e2d\uff0c\u9009\u62e9\u8fd9\u4e9b\u5f85\u64a4\u9500 LSN \u4e2d\u6700\u5927\u7684\u4e00\u4e2a\u8fdb\u884c\u64a4\u9500\uff0c\u8df3\u8f6c\u56de\u8be5\u8bb0\u5f55\u5e76\u6267\u884c\u64a4\u9500\u64cd\u4f5c\u3002</li> <li>\u25ba \u5728\u64a4\u9500\u4e00\u6761\u65e5\u5fd7\u8bb0\u5f55\u540e\uff1a<ul> <li>\u2014 \u5bf9\u4e8e\u666e\u901a\u65e5\u5fd7\u8bb0\u5f55\uff0c\u5c06\u8be5\u4e8b\u52a1\u7684\u4e0b\u4e00\u4e2a\u5f85\u64a4\u9500 LSN \u8bbe\u7f6e\u4e3a\u8be5\u65e5\u5fd7\u8bb0\u5f55\u4e2d\u8bb0\u8f7d\u7684 PrevLSN (\u524d\u4e00\u4e2a\u65e5\u5fd7\u5e8f\u5217\u53f7)\u3002</li> <li>\u2014 \u5bf9\u4e8e\u8865\u507f\u65e5\u5fd7\u8bb0\u5f55 (CLRs)\uff0c\u5c06\u4e0b\u4e00\u4e2a\u5f85\u64a4\u9500 LSN \u8bbe\u7f6e\u4e3a\u8be5\u65e5\u5fd7\u8bb0\u5f55\u4e2d\u8bb0\u8f7d\u7684 UndoNextLSN (\u4e0b\u4e00\u4e2a\u64a4\u9500\u65e5\u5fd7\u5e8f\u5217\u53f7)\u3002<ul> <li>\u00bb \u6240\u6709\u4e2d\u95f4\u7684\u8bb0\u5f55\u90fd\u4f1a\u88ab\u8df3\u8fc7\uff0c\u56e0\u4e3a\u5b83\u4eec\u5e94\u8be5\u5df2\u7ecf\u88ab\u64a4\u9500\u4e86\u3002</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> <li>\u25a0 \u64a4\u9500\u64cd\u4f5c\u5982\u524d\u6240\u8ff0\u6267\u884c\u3002</li> </ul> <p>Undo Pass </p> <p>Example</p> <p>     \u8981\u628a 2390 \u52a0\u5230\u8868\u91cc\u53bb\u3002</p> <p>\u597d\u7684\uff0c\u8fd9\u662f\u56fe\u7247\u5185\u5bb9\u7684\u4e2d\u6587\u7ffb\u8bd1\uff1a</p> <p>ARIES \u7684\u5176\u4ed6\u7279\u6027</p> <ul> <li> <p>\u25a0 \u6062\u590d\u72ec\u7acb\u6027 (Recovery Independence)</p> <ul> <li>\u25cf \u9875\u9762\u53ef\u4ee5\u72ec\u7acb\u4e8e\u5176\u4ed6\u9875\u9762\u8fdb\u884c\u6062\u590d<ul> <li>\u4f8b\u5982\uff0c\u5982\u679c\u67d0\u4e9b\u78c1\u76d8\u9875\u9762\u635f\u574f\uff0c\u5b83\u4eec\u53ef\u4ee5\u4ece\u5907\u4efd\u4e2d\u6062\u590d\uff0c\u800c\u5176\u4ed6\u9875\u9762\u4ecd\u5728\u4f7f\u7528\u4e2d\u3002</li> </ul> </li> </ul> </li> <li> <p>\u25a0 \u4fdd\u5b58\u70b9 (Savepoints)</p> <ul> <li>\u25cf \u4e8b\u52a1\u53ef\u4ee5\u8bb0\u5f55\u4fdd\u5b58\u70b9\u5e76\u56de\u6eda\u5230\u67d0\u4e2a\u4fdd\u5b58\u70b9<ul> <li>\u25ba \u5bf9\u4e8e\u590d\u6742\u4e8b\u52a1\u5f88\u6709\u7528</li> <li>\u25ba \u4e5f\u7528\u4e8e\u5728\u53d1\u751f\u6b7b\u9501\u65f6\u56de\u6eda\u521a\u597d\u8db3\u591f\u91ca\u653e\u9501\u7684\u64cd\u4f5c</li> </ul> </li> </ul> </li> <li> <p>\u25a0 \u7ec6\u7c92\u5ea6\u9501\u5b9a (Fine-grained locking):</p> <ul> <li>\u25cf \u7d22\u5f15\u5e76\u53d1\u7b97\u6cd5\u5141\u8bb8\u5728\u7d22\u5f15\u4e0a\u4f7f\u7528\u5143\u7ec4\u7ea7\u522b (tuple level) \u7684\u9501\u5b9a<ul> <li>\u25ba \u8fd9\u4e9b\u7b97\u6cd5\u9700\u8981\u903b\u8f91\u64a4\u9500 (logical undo)\uff0c\u800c\u4e0d\u662f\u50cf\u65e9\u671f\u6062\u590d\u7b97\u6cd5\u4e2d\u90a3\u6837\u7684\u7269\u7406\u64a4\u9500 (physical undo)\u3002</li> </ul> </li> </ul> </li> <li> <p>\u25a0 \u6062\u590d\u4f18\u5316 (Recovery optimizations): \u4f8b\u5982\uff1a</p> <ul> <li>\u25cf \u810f\u9875\u8868 (Dirty page table) \u53ef\u7528\u4e8e\u5728\u91cd\u505a (redo) \u671f\u95f4\u9884\u53d6 (prefetch) \u9875\u9762</li> <li>\u25cf \u4e71\u5e8f\u91cd\u505a (Out of order redo) \u662f\u53ef\u80fd\u7684\uff1a<ul> <li>\u25ba \u5bf9\u6b63\u5728\u4ece\u78c1\u76d8\u83b7\u53d6\u7684\u9875\u9762\uff0c\u5176\u91cd\u505a\u64cd\u4f5c\u53ef\u4ee5\u88ab\u63a8\u8fdf\uff0c\u5e76\u5728\u9875\u9762\u88ab\u53d6\u56de\u540e\u6267\u884c</li> <li>\u25ba \u4e0e\u6b64\u540c\u65f6\uff0c\u5176\u4ed6\u65e5\u5fd7\u8bb0\u5f55\u53ef\u4ee5\u7ee7\u7eed\u88ab\u5904\u7406</li> </ul> </li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/","title":"Relational Modeling","text":"<p>Basic Structure: Formally, given sets \\(D_1,D_2,\\cdots,D_n\\) a relation r is a subset of \\(D_1\\times D_2\\times \\cdots \\times D_n\\). Thus a relation is a\u00a0set\u00a0of n-tuple\u00a0\\((a_1,a_2,\u2026,a_n)\\)\u00a0where each\u00a0\\(a_i\u2208D_i\\).</p> <p>\\(A_1,A_2,\u2026,A_n\\)\u00a0are\u00a0attributes.\u00a0\\(R=(A_1,A_2,\u2026,A_n)\\)\u00a0is a\u00a0relation schema(\u6709\u5e8f\u7684). e.g.\u00a0instructor = (ID, name, dept_name, salary).</p> <p>A\u00a0relation instance\u00a0\u5173\u7cfb\u5b9e\u4f8b r\u00a0defined over schema R is denoted by\u00a0\\(r(R)\\).</p> <p>\u56e0\u4e3a\u5173\u7cfb\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u6240\u4ee5\u5173\u7cfb\u90fd\u662f\u65e0\u5e8f\u7684</p> <p>Attributes</p> <ul> <li>The set of allowed values for each attribute is called the domain of the attribute \u503c\u57df</li> <li>Attribute values are (normally) required to be\u00a0atomic\u00a0(\u539f\u5b50\u7684); that is, indivisible</li> <li>the special value null is a member of every domain \u7a7a\u503c\u662f\u4efb\u610f\u4e00\u4e2a\u503c\u57df\u7684\u5143\u7d20</li> <li>\u7a7a\u503c\u4f1a\u5bfc\u81f4\u8bb8\u591a\u64cd\u4f5c\u7684\u5b9a\u4e49\u7684complications</li> </ul>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#1-database-schema","title":"1 Database Schema","text":"<ul> <li>Database schema\u00a0-- is the logical structure of the database.</li> <li>Database instance\u00a0-- is a snapshot of the data in the database at a given instant in time.</li> </ul>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#2-keys","title":"2 Keys","text":"<ul> <li>\\(K \\nsubseteq R\\)</li> <li>K \u00a0is a\u00a0superkey (\u8d85\u952e)\u00a0of\u00a0R\u00a0if values for K are sufficient to identify (\u552f\u4e00\u786e\u5b9a) a unique tuple of each possible relation\u00a0r(R)   <p>e.g.\u00a0{ID}\u00a0or{ID,name}</p> </li> <li>Superkey\u00a0K\u00a0is a\u00a0candidate key (\u5019\u9009\u952e)\u00a0if\u00a0K\u00a0is minimal.   <p>\u5373\u00a0K\u00a0\u4e2d\u6ca1\u6709\u5197\u4f59\u5c5e\u6027</p> </li> <li>primary key \u662f\u4ececandidaate key \u4e2d\u6311\u9009\u51fa\u6765\u7684\u4e00\u4e2a\u3002\u4e0d\u80fd\u4e3a\u7a7a\uff0c\u4e0d\u80fd\u91cd\u590d</li> <li>Foreign key\u00a0(\u5916\u952e) Relation\u00a0r1\u00a0may include among its attributes the primary key of another relation\u00a0r2. This attribute is called a\u00a0foreign key\u00a0from\u00a0r1, referencing\u00a0r2.   <p>\u7c7b\u4f3c\u4e8e\u6307\u9488\uff0c\u5916\u952e\u9650\u5236\u5c31\u662f\u5173\u7cfb\u00a0r1\u00a0\u5f15\u7528\u7684\u4e3b\u952e\u5fc5\u987b\u5728\u5173\u7cfb\u00a0r2\u00a0\u4e2d\u51fa\u73b0\u3002</p> </li> <li>Referential integrity (\u53c2\u7167\u5b8c\u6574\u6027)   <p>\u7c7b\u4f3c\u4e8e\u5916\u952e\u9650\u5236\uff0c\u4f46\u4e0d\u5c40\u9650\u4e8e\u4e3b\u952e\u3002</p> </li> </ul> <p>Example</p> <p> - course \u6307\u8bfe\u7a0b\u4fe1\u606f\uff0c\u65e0\u8bba\u662f\u5426\u5f00\u8bfe\uff0c\u90fd\u4f1a\u6709\u5176\u5b9a\u4e49\u3002 - section \u8868\u793a\u6559\u5b66\u73ed\uff0c\u771f\u6b63\u5f00\u8bfe\u65f6\u5c31\u6709\u76f8\u5e94\u7684\u5b9e\u4f8b\u3002\uff08\u7c7b\u6bd4\u4e8e\u9ad8\u94c1\u7684\u5217\u8f66\u53f7\uff0c\u548c\u6bcf\u5929\u5bf9\u5e94\u7684\u73ed\u6b21\uff09 - teachers \u5177\u4f53\u6559\u54ea\u4e2a\u6559\u5b66\u73ed\u7684\u8001\u5e08 - takes \u8868\u793a\u5b66\u751f\u6ce8\u518c\u8bfe\u7a0b - time_slot \u8868\u793a\u4e00\u95e8\u8bfe\u7684\u5177\u4f53\u4e0a\u8bfe\u65f6\u95f4\u6bb5\uff0c\u5982\u6570\u636e\u5e93\u5728\u5468\u4e00 3, 4, 5 \u8282; \u5468\u4e00 7, 8 \u8282\u3002 - \u4e0a\u56fe\u4e2d\u7ea2\u7ebf\u8868\u793a\u5f15\u7528\u5b8c\u6574\u6027\u7684\u7ea6\u675f\uff1b\u9ed1\u7ebf\u8868\u793a\u5916\u952e\u7ea6\u675f\u3002</p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#3-relational-query-language","title":"3 Relational Query Language","text":"<p>\"Pure\" Langueges \u4e09\u8005\u7b49\u4ef7 - Relational algebra \u5173\u7cfb\u4ee3\u6570 - Tuple relational calculus \u5143\u7ec4\u5173\u7cfb\u6f14\u7b97 - Domain relational calculus \u57df\u5173\u7cfb\u6f14\u7b97</p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#31-relational-algebra","title":"3.1 Relational Algebra","text":"<p>6 basic operators: - select: \\(\\sigma\\) \u6a2a\u5411\u9009\u62e9 - project: \\(\\Pi\\) \u7eb5\u5411\u9009\u62e9 - union:\u00a0\u222a \u96c6\u5408\u5e76 - set difference:\u00a0\u2212 \u96c6\u5408\u5dee - Cartesian product(\u7b1b\u5361\u5c14\u79ef):\u00a0\u00d7 - rename:\\(\\rho\\)</p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#311-select","title":"3.1.1 Select","text":"<p>Example</p> <p></p> <p>\u5bf9\u5173\u7cfb\u8fdb\u884c\u64cd\u4f5c\uff0c\u7ed3\u679c\u4ecd\u7136\u662f\u4e2a\u5173\u7cfb</p> <p>\\(\\sigma_p(r)= {t|t\\in r ~and ~ p(t)}\\)\uff0cwhere \\(p\\) is called selection predict</p> <p>\u4ece\u4e25\u683c\u7684\u5143\u7ec4\u7684\u89d2\u5ea6\u6765\u8bb2\uff0c\u9700\u8981\u8fdb\u884c\u53bb\u91cd\u64cd\u4f5c</p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#312-project","title":"3.1.2 Project","text":"<p>The\u00a0project\u00a0operation is a unary operation that returns its argument relation, with certain attributes left out.  </p> <p>\\(\\Pi_{A_1,A_2,\u2026,A_k}(r)\\)\u00a0where\u00a0\\(A_i\\)\u00a0are attribute names and\u00a0r\u00a0is a relation name.</p> <p>The result is defined as the relation of k columns obtained by erasing the columns that are not listed. \u4f1a\u5bf9\u7ed3\u679c\u8fdb\u884c\u53bb\u91cd\u3002</p> <p>Example</p> <p></p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#313-union","title":"3.1.3 Union","text":"<p>The union operation allows us to combine two relations. \\(r\\cup s = \\{t| t\\in r \\ or \\ t\\in s\\}\\) </p> <ul> <li>\\(r\\) and \\(s\\) must have the same arity (\u5143\u6570) (same number f attributes)  </li> <li>The attribute domains must be compatible  \u5f53\u5c5e\u6027\u6709\u5173\u8054\u7c7b\u578b\u65f6\uff0c\u5bf9\u4e8e\u6bcf\u4e2a\u8f93\u5165 \\(i\\), \u4e24\u4e2a\u8f93\u5165\u5173\u7cfb\u7684\u7b2c \\(i\\) \u4e2a\u5c5e\u6027\u7684\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\u3002  </li> </ul> Projection Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#314-set-difference","title":"3.1.4 Set Difference","text":"<p>The set-difference operation allows us to find tuples that are in one relation but are not in another.  \\(r-s=\\{t|t\\in r\\ and\\ t\\notin s\\}\\) </p> <p>Set differences must be taken between compatible relations.</p> Projection Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#315-cartesian-product","title":"3.1.5 Cartesian-Product","text":"<p>The Cartesian-product operation (denoted by \\(\\times\\))  allows us to combine information from any two relations.   \\(r\\times s  =\\{t\\ q|t\\in r\\ and\\ q\\in s\\}\\) </p> Projection Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#316-renamen","title":"3.1.6 Rename=n","text":"<p>Allows us to refer to a relation by more than one name. \\(\\rho_X(E)\\)</p> Composition of Operations 1 <p>Find the names of all instructors in the Physics department, along with the course_id of all courses they have taught.  </p> <p> </p> <p>\u8fd9\u4e24\u6761\u8bed\u53e5\u542b\u4e49\u4e00\u6837\uff0c\u4f46\u7b2c\u4e8c\u6761\u6211\u4eec\u5148\u8fdb\u884c\u4e86\u4e00\u6b21 select, \u6761\u76ee\u5c11\u4e86\u66f4\u9ad8\u6548\u3002  </p> Composition of Operations 2 <p>Find the largest salary in the university.  </p> <ul> <li>find instructor salaries that are less than some other instructor salary (i.e. not maximum) using a copy of instructor under a new name \\(d\\).  \\(\\prod_{instructor.salary}(\\sigma_{instructor.salary&lt;d.salary}(instructor \\times \\rho_d(instructor)))\\) </li> <li>find the largest salary \\(\\prod_{instructor}-\\prod_{instructor.salary}(\\sigma_{instructor.salary}&lt;d.salary(instructor\\times \\rho_d(instructor)))\\) </li> </ul> <p>\u6211\u4eec\u7b2c\u4e00\u6b65\u5c06\u4e24\u4e2a\u5173\u7cfb\u62fc\u8d77\u6765\u4e4b\u540e,\u627e\u51fa\u4e0d\u662f\u6700\u5927\u5de5\u8d44\u7684\uff08\u627e\u51fa\u6240\u6709\u524d\u4e00\u4e2a\u5de5\u8d44\u5c0f\u4e8e\u540e\u4e00\u4e2a\u5de5\u8d44\u7684\uff09,\u6700\u540e\u7528\u5168\u96c6\u51cf\u6389\u5373\u53ef\u3002</p> <p>\u4e0d\u662f\u6240\u6709\u7684\u67e5\u8be2\u90fd\u53ef\u4ee5\u7528\u5173\u7cfb\u4ee3\u6570\u8868\u8fbe\u5f0f\u8868\u8fbe\u51fa\u6765\u7684</p> <p>!!! note Formal Definition </p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#32-additional-operations","title":"3.2 Additional Operations","text":"<ul> <li>Set intersection: \\(r \\cap s\\) </li> <li>Natural join:  \\(r\\bowtie s\\)</li> <li>Assignment: \\(\\leftarrow\\)</li> <li>Outer join : \\(r \\rtimes       s\\),  \\(r  \\ltimes    s\\), \\(r\\)\u27d7\\(s\\)</li> <li>Division Operator: \\(r \\div s\\) </li> </ul>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#321-set-intersection","title":"3.2.1 Set-Intersection","text":"<p>The set-intersection operation allows us to find tuples that are in both the input relations. \\(r\\cap s=\\{t| t\\in r\\ and\\ t\\in s\\}\\) </p> <ul> <li>\\(r, s\\) have the same arity </li> <li>attributes of \\(r\\) and s are compatible</li> </ul> Set-Intersection Operation Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#322-natural-join-operation","title":"3.2.2 Natural-Join Operation","text":"<p>Let r and s be relations on schemas R and S respectively.  Then,  \\(r\\bowtie     s\\) is a relation on schema \\(R \\cup S\\) obtained as follows:</p> <ul> <li>Consider each pair of tuples \\(t_r\\) from \\(r\\) and \\(t_s\\) from \\(s\\).  </li> <li>If \\(t_r\\) and \\(t_s\\) have the same value on each of the attributes in \\(R \\cap S\\), add a tuple $t $ to the result, where<ul> <li>\\(t\\) has the same value as \\(t_r\\) on \\(r\\)</li> <li>\\(t\\) has the same value as \\(t_s\\) on \\(s\\)</li> </ul> </li> </ul> <p>\u5373\u5171\u540c\u5c5e\u6027\u8981\u6709\u76f8\u540c\u7684\u503c\uff0c\u624d\u80fd\u5728\u7b1b\u5361\u5c14\u79ef\u540e\u7684\u7ed3\u679c\u4e2d\u4fdd\u7559\u3002 \u5bf9\u4e58\u6cd5\u7684\u6269\u5c55\uff0c\u76f8\u5f53\u4e8e\u5148 \\(\\times\\) \u518d select, \u6700\u540e project.  </p> <p>Natural join is associatve \u7ec4\u5408\uff0ccommutative\u4ea4\u6362</p> Natural Join Example <p> </p> <ul> <li>Theta Join \\(r\\bowtie_\\theta s=\\sigma_\\theta (r\\times s)\\) \u6761\u4ef6\u8fde\u63a5</li> </ul>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#323-outer-join","title":"3.2.3 Outer Join","text":"<p>Computes the join and then adds tuples form one relation that does not match tuples in the other relation to the result of the join.   </p> <p>Uses null values:  </p> <ul> <li>null signifies that the value is unknown or does not exist </li> <li>All comparisons involving null are (roughly speaking) false by definition</li> </ul> <p>Outer join can be expressed using basic operations.  </p> <ul> <li>\\(r\\rtimes s=(r\\bowtie s)\\cup (r-\\cap_R(r\\bowtie s)\\times \\{null,\\ldots,null\\})\\)</li> <li>\\(r\\ltimes s=(r\\bowtie s)\\cup \\{null,\\ldots,null\\}\\times (s-\\cap_R(r\\bowtie s))\\)</li> <li>\\(r\\)\u27d7\\(s\\) \\(=(r\\bowtie s)\\cup (r-\\cap_R(r\\bowtie  s))\\times \\{(null, \\ldots)\\}\\cup\\{(null,\\ldots,null)\\}\\times (s-\\cap_s(r\\bowtie s))\\)</li> </ul> Outer Join Example <p>   Left Outer Join:\u5de6\u8fb9\u7684\u5173\u7cfb\u4e2d\u7684\u4e1c\u897f\u90fd\u4fdd\u7559\u4e0b\u6765\uff0c\u5bf9\u5e94\u7b2c\u4e8c\u5f20\u8868\u683c\u4e2d\u6ca1\u6709\u7684\u5185\u5bb9\u662fNULL Right Outer Join: \u540c\u7406 Full Outer Join: \u4e24\u8fb9\u7684\u5173\u7cfb\u90fd\u4fdd\u7559\u4e0b\u6765\uff0c\u5de6\u53f3\u5916\u90e8\u8fde\u63a5\u7684\u5e76\u96c6  </p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#324-assignment-operation","title":"3.2.4 Assignment Operation","text":"<p>The assignment operation(\\(\\leftarrow\\)),\u63d0\u4f9b\u4e86\u4e00\u4e2a\u8868\u8fbe\u590d\u6742\u67e5\u8be2\u7684\u65b9\u5f0f</p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#325-semijoin","title":"3.2.5 Semijoin  \u534a\u8fde\u63a5","text":"<p>\\(r\\ltimes_\\theta s\\) \u4fdd\u7559 \\(r\\) \u4e2d\u80fd\u4e0e \\(s\\) \u76f8\u8fde\u7684\u5143\u7ec4\u3002\u76f8\u5f53\u4e8e\u5bf9\\(r\\)\u8fdb\u884c\u7b5b\u9009</p> Semijoin Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#326-division","title":"3.2.6 Division","text":"<p>Given relations \\(r(R)\\) and \\(s(S)\\), such that \\(S \\subset R\\), \\(r\\div s\\) is the largest relation \\(t(R-S)\\) such that \\(t\\times s \\subsetneqq  r\\) </p> <p>We can write \\(r\\div s\\) as  </p> \\[ \\begin{align*}     temp1 &amp; \\leftarrow \\Pi_{R-S}(r)\\\\     temp2 &amp; \\leftarrow \\Pi_{R-S}((temp1 \\times s)- \\Pi_{R-S,S}(r))\\\\     result &amp; = temp1 - temp2 \\end{align*} \\] Division Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#33-generalized-projection","title":"3.3 Generalized Projection","text":"<p>\u901a\u8fc7\u5f15\u5165\u6570\u5b66\u51fd\u6570\u6765\u6269\u5c55\u6295\u5f71\u64cd\u4f5c</p> \\[\\Pi_{F_1,F_2,\\cdots,F_n}(E)\\] <ul> <li>E\u662f\u4ee3\u6570\u5173\u7cfb\u8868\u8fbe\u5f0f</li> <li>\u6bcf\u4e00\u4e2aF\u90fd\u662f\u5305\u62ec\u5e38\u6570\u548c\u5c5e\u6027\u7684\u6570\u5b66\u8868\u8fbe\u5f0f</li> </ul> <p>Example</p> <p></p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#34-aggregate-functions-and-operations","title":"3.4 Aggregate Functions and Operations","text":"<ul> <li> <p>Aggregation function\uff08\u805a\u5408\u51fd\u6570\uff09takes a collection of values and returns a single value as a result.  </p> <ul> <li>avg: average value</li> <li>min: minimum value</li> <li>max: maximum value</li> <li>sum: sum of values</li> <li>count: number of values</li> </ul> </li> <li> <p>Aggregate operation in relational algebra \\(G_1,G_2,\\ldots,G_n \\mathcal{G}_{F_1(A_1),\\ldots F_n(A_n)}(E)\\) </p> </li> </ul> <p>Aggregate Operation Example</p> <p> </p> <p>\u5206\u7ec4\u7ed3\u679c\u6ca1\u6709\u540d\u5b57\uff0c\u53ef\u4ee5\u7528 rename \u6216\u8005 as \u8fdb\u884c\u6539\u540d\u3002  </p> <p>e.g. <code>dept_name G avg(salary) as avg_sal (instructor)</code></p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#35-modification-of-the-database","title":"3.5 Modification of the Database","text":"<ul> <li>Deletion</li> <li>Insertion</li> <li>Updating</li> </ul> <p>\u6240\u6709\u8fd9\u4e9b\u64cd\u4f5c\u53ef\u4ee5\u7528assignment operator\u6765\u8868\u793a</p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#36-multiset-relational-algebra","title":"3.6 Multiset Relational Algebra","text":"<p>\u5173\u7cfb\u4ee3\u6570\u4e2d\uff0c\u6211\u4eec\u8981\u6c42\u5173\u7cfb\u8981\u662f\u4e00\u4e2a\u4e25\u683c\u7684\u96c6\u5408\u3002 \u4f46\u5b9e\u9645\u6570\u636e\u5e93\u4e2d\u5e76\u4e0d\u662f\uff0c\u800c\u662f\u4e00\u4e2a\u591a\u91cd\u96c6\uff0c\u5141\u8bb8\u6709\u91cd\u590d\u5143\u7d20\u5b58\u5728\u3002 \u56e0\u4e3a\u4e00\u4e9b\u64cd\u4f5c\u7684\u4e2d\u95f4\u7ed3\u679c\u4f1a\u5e26\u6765\u91cd\u590d\u5143\u7d20\uff0c\u8981\u4fdd\u6301\u96c6\u5408\u7279\u6027\u5f00\u9500\u5f88\u5927\uff0c\u56e0\u6b64\u5b9e\u9645\u64cd\u4f5c\u4e2d\u4e0d\u4f1a\u53bb\u91cd \u3002 </p>"},{"location":"note/courses/database%20system/Chapter%202%20Relational%20Modeling/#4-sql-and-relational-algebra","title":"4 SQL and Relational Algebra","text":"<ul> <li><code>select A1, A2, ... An from r1, r2, ... rm where P</code> is equivalent to \\(\\Pi_{A_1,\\ldots, A_n}(\\sigma_P(r_1\\times r_2\\ldots r_m))\\) </li> <li><code>select A1, A2, sum(A3) from r1, r2, ... rm where P group by A1, A2</code> is equivalent to \\(A_1, A_2, \\mathcal{G} sum(A_3)(\\sigma_P(r_1\\times r_2\\times\\ldots r_m))\\) \u8fd9\u91cc\u6309 \\(A_1,A_2\\) \u5206\u7ec4\uff0c\u90a3\u4e48\u7ed3\u679c\u7684\u8868\u4e2d\u4f1a\u6709 \\(A_1,A_2,sum(A_3)\\) \u4e09\u5217\uff08\u5206\u7ec4\u4f9d\u636e+\u5206\u7ec4\u540e\u7684\u805a\u5408\u7ed3\u679c\uff09\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7684\u5c31\u662f\u8fd9\u4e09\u5217\uff0c\u6240\u4ee5\u5206\u7ec4\u5373\u53ef\u3002\u4f46\u662f\u5047\u8bbe\u6211\u4eec\u53ea\u9700\u8981 \\(A_1, sumA3\\) \u90a3\u4e48\u6700\u540e\u8fd8\u9700\u8981\u6295\u5f71\u3002</li> </ul>"},{"location":"note/courses/database%20system/Chapter%203/","title":"Introduction to SQL","text":"Abstract <ul> <li>Data Definition</li> <li>Basic Query Structure</li> <li>Additional Basic Operations</li> <li>Set Operations</li> <li>Null Values</li> <li>Aggregate Functions</li> <li>Nested Subqueries</li> <li>Modification of the Database </li> </ul>"},{"location":"note/courses/database%20system/Chapter%203/#1-data-definition","title":"1 Data Definition","text":""},{"location":"note/courses/database%20system/Chapter%203/#11-domain-types-in-sql","title":"1.1 Domain Types in SQL","text":"<ul> <li><code>char(n).</code> Fixed length character string, with user-specified length n.  \u5b9a\u957f\u5b57\u7b26\u4e32. C \u8bed\u8a00\u91cc\u5b57\u7b26\u4e32\u7ed3\u5c3e\u6709 <code>\\0</code>, \u4f46\u6570\u636e\u5e93\u91cc\u6ca1\u6709\uff0c\u957f\u5ea6\u7531\u5b9a\u4e49\u800c\u5f97\u3002  </li> <li><code>varchar(n).</code> Variable length character strings, with user-specified maximum length n. \u4e0d\u5b9a\u957f\u5b57\u7b26\u4e32\u3002\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u6bd4\u8f83\u53ef\u80fd\u6709\u95ee\u9898\uff08\u6bd4\u5982\u5b9a\u957f\u548c\u4e0d\u5b9a\u957f\u7684\u5b57\u7b26\u4e32\uff09</li> <li><code>int.</code> Integer (a finite subset of the integers that is machine-dependent).</li> <li><code>smallint.</code> Small integer (a machine-dependent subset of the integer domain type).</li> <li><code>numeric(p,d).</code> Fixed point number, with user-specified precision of p digits, with d digits to the right of decimal point.    p \u8868\u793a\u6709\u6548\u6570\u5b57\u4f4d\u6570, d \u8868\u793a\u5c0f\u6570\u70b9\u540e\u591a\u5c11\u4f4d\u3002 e.g. <code>number(3,1)</code> allows 44.5 to be store exactly,  but neither 444.5 or 0.32</li> <li><code>real, double precision</code>.  Floating point and double-precision floating point numbers, with machine-dependent precision.</li> <li><code>float(n).</code> Floating point number, with user-specified precision of at least n digits.</li> </ul>"},{"location":"note/courses/database%20system/Chapter%203/#12-built-in-data-types-in-sql","title":"1.2 Built-in Data Types in SQL","text":"<ul> <li>date: Dates, containing a (4 digit) year, month and date e.g. date \u20182005-7-27\u2019</li> <li>time: Time of day, in hours, minutes and seconds. e.g. time \u201809:00:30\u2019         time \u201809:00:30.75\u2019</li> <li>timestamp: date plus time of day \u7ed3\u5408\u4e86\u65e5\u671f\u548c\u65f6\u95f4 e.g. timestamp  \u20182005-7-27 09:00:30.75\u2019</li> <li>interval: period of time e.g. interval  \u20181\u2019 day   \u65f6\u95f4\u95f4\u9694<ul> <li>Subtracting a date/time/timestamp value from another gives an interval value.  </li> <li>Interval values can be added to date/time/timestamp values</li> <li>built-in date, time functions: <code>current_date(), current_time(), year(x), month(x), day(x), hour(x), minute(x), second(x)</code></li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%203/#13-create-table-construct","title":"1.3 Create Table Construct","text":"<p>An SQL relation is defined using the create table command: <pre><code>create table r (A1 D1, A2 D2, ..., An Dn,           (integrity-constraint1),            \n..,         \n(integrity-constraintk))\n</code></pre></p> <ul> <li>\\(r\\) is the name of the relation</li> <li>each \\(Ai\\) is an attribute name in the schema of relation \\(r\\)</li> <li>\\(Di\\) is the data type of values in the domain of attribute \\(Ai\\) </li> </ul> <p>Integrity Constraints in Create Table</p> <ul> <li><code>not null</code></li> <li>primary key \\((A_1,\\ldots,A_n)\\) \u4e0d\u80fd\u4e3a\u7a7a; \u8868\u5185\u4e0d\u80fd\u6709\u76f8\u540c\u7684 keys. \u5426\u5219\u8fd9\u6837\u7684\u6570\u636e\u662f\u63d2\u5165\u4e0d\u8fdb\u53bb\u7684\u3002</li> <li>foreign key \\((A_m,\\ldots,A_n)\\) references r \u9690\u542b\uff1a\u5f15\u7528\u5bf9\u5e94\u8868\u7684\u4e3b\u952e\u3002    </li> </ul> <p>\u5982\u679c\u4e0d\u7b26\u5408\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\uff0c\u63d2\u5165\u53ef\u80fd\u4f1a\u5931\u8d25\u3002</p> Example <p> </p> <p>\u53ef\u4ee5\u7ed9\u4e00\u4e2a\u7f3a\u7701\u503c e.g. <code>default 0</code></p> Example <p> </p> <p><code>sec_id</code> can be dropped from primary key above, to ensure a student cannot be registered for two sections of the same course in the same semester</p> <p>\u5982\u679c\u5f15\u7528\u7684\u8868\u4e2d\u6709\u6761\u76ee\u88ab\u5220\u9664\uff0c\u53ef\u80fd\u4f1a\u7834\u574f\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\u3002\u6709\u4e0b\u9762\u7684\u65b9\u6cd5\uff1a  </p> <ul> <li>restrict: \u5982\u679c\u6709\u6761\u76ee\u662f\u88ab\u5f15\u7528\u7684\uff0c\u90a3\u4e48\u4e0d\u5141\u8bb8\u5220\u9664\u3002</li> <li>cascade: \u5f15\u7528\u7684\u6761\u76ee\u88ab\u5220\u4e86\u4e4b\u540e\uff0c\u5f15\u7528\u8005\u4e5f\u4e00\u5e76\u5220\u9664</li> <li>set null: \u5f15\u7528\u8005\u7684\u6307\u9488\u8bbe\u4e3a <code>null</code>. </li> <li>set default  \u7ed9\u4e00\u4e2a\u7f3a\u7701\u503c</li> </ul> <p>\u5982\u679c\u5f15\u7528\u7684\u8868\u4e2d\u6709\u66f4\u65b0\uff0c\u4e5f\u6709\u7c7b\u4f3c\u4e0a\u9762\u7684\u56db\u79cd\u65b9\u6cd5\u3002 \u5728 <code>create table</code> \u4e2d\u5b9a\u4e49  </p> <ul> <li><code>on delete cascade  |set null |restrict |set default</code></li> <li><code>on update cascade  |set null |restrict |set default</code></li> </ul>"},{"location":"note/courses/database%20system/Chapter%203/#14-drop-and-alter-table-constructs","title":"1.4 Drop and Alter Table Constructs","text":"<ul> <li>drop table student Deletes the table and its contents  \u628a\u5185\u5bb9\u548c\u8868\u5168\u5220\u4e86\uff0c\u4e4b\u540e\u4e0d\u80fd\u518d\u5f80\u8868\u91cc\u63d2\u5165\u3002</li> <li>delete from student Deletes all contents of table, but retains table</li> <li>alter table  \u53ef\u4ee5\u52a8\u6001\u4fee\u6539\u8868\u7684\u5b9a\u4e49 <ul> <li><code>alter table r add A D</code><ul> <li>where A is the name of the attribute to be added to relation r  and D is the domain of A.</li> <li>All tuples in the relation are assigned null as the value for the new attribute. e.g. <code>alter table student add resume varchar(256);</code></li> <li>\u8fd8\u53ef\u4ee5\u589e\u52a0\u5916\u952e\u7ea6\u675f\u6761\u4ef6\uff0c\u4e5f\u53ef\u4ee5\u5220\u6389</li> </ul> </li> <li><code>alter table r drop A</code> <ul> <li>where A is the name of an attribute of relation r</li> <li>Dropping of attributes not supported by many databases  \u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u65b0\u7684\u8868\uff0c\u7136\u540e\u628a\u9664\u4e86\u8981\u5220\u7684\u5217\u4ee5\u5916\u7684\u5217\u642c\u79fb\u8fc7\u53bb\u3002  </li> </ul> </li> </ul> </li> </ul> \u5173\u7cfb\u6570\u636e\u5e93\u7684\u4e09\u5c42\u62bd\u8c61 <ul> <li>\u7528\u6237\u5c42\uff1a\u7531 DML \u5b9a\u4e49\u64cd\u4f5c, \u5982 <code>select</code> \u8bed\u53e5\u3002</li> <li>\u903b\u8f91\u5c42\uff1a\u7531 <code>create table</code> \u51b3\u5b9a\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u8868\u7684\u5143\u7d20\uff0c\u4ee5\u53ca\u5404\u79cd\u952e\uff0c\u6784\u6210\u4e86\u6a21\u5f0f\u56fe\u3002</li> </ul>"},{"location":"note/courses/database%20system/Chapter%203/#2-basic-query-structure","title":"2 Basic Query Structure","text":""},{"location":"note/courses/database%20system/Chapter%203/#21-the-select-clause","title":"2.1 The <code>select</code> Clause  \u6295\u5f71\u64cd\u4f5c","text":"<p>The <code>select</code> clause list the attributes desired in the result of a query.  </p> <p>SQL names are case insensitive  \u5927\u5c0f\u5199\u4e0d\u654f\u611f\u3002\uff08\u5c5e\u6027\u540d\u5b57\u3001\u8868\u7684\u540d\u5b57\u7b49\uff09</p> <ul> <li>To force the elimination of duplicates, insert the keyword <code>distinct</code> after select.\u53bb\u91cd e.g. <code>select distinct dept_name from instructor</code> \u53ef\u4ee5\u52a0 all \u8868\u793a\u4e0d\u53bb\u91cd\uff0c\u52a0\u4e0d\u52a0\u65e0\u6240\u8c13</li> <li>An asterisk in the select clause denotes \u201call attributes\u201d e.g. <code>select * from instructor</code> * \u8868\u793a\u6240\u6709\u5c5e\u6027</li> <li>The select clause can contain arithmetic expressions involving the operation, +, \u2013, \\(\\div\\), and /, and operating on constants or attributes of tuples. \u53ef\u4ee5\u6709\u52a0\u51cf\u4e58\u9664\u8fd0\u7b97 e.g. <code>select ID, name, salary/12 from instructor</code></li> </ul>"},{"location":"note/courses/database%20system/Chapter%203/#22-the-where-clause","title":"2.2 The <code>where</code> Clause \u9009\u62e9\u64cd\u4f5c","text":"<p>The <code>where</code> clause specifies conditions that the result must satisfy.  Corresponds to the selection predicate of the relational algebra.  </p> <ul> <li>SQL includes a <code>between</code> comparison operator e.g. <code>select name from instructor where salary between 90000 and 100000</code></li> <li>Tuple comparison \u5143\u7ec4\u76f8\u7b49\u7b49\u4ef7\u4e8e\u5404\u4e2a\u5143\u7d20\u90fd\u76f8\u7b49\u3002 e.g. <pre><code>select name, course_id \nfrom instructor, teaches \nwhere (instructor.ID, dept_name) = (teaches.ID, \u2019Biology\u2019);\n</code></pre></li> </ul>"},{"location":"note/courses/database%20system/Chapter%203/#23-the-from-clause","title":"2.3 The <code>from</code> clause","text":"<p>The <code>from</code> clause lists the relations involved in the query. Corresponds to the Cartesian product operation of the relational algebra.  </p>"},{"location":"note/courses/database%20system/Chapter%203/#24-natural-join","title":"2.4 Natural Join","text":"<p>e.g. <code>select * from instructor natural join teaches;</code></p> <p>e.g. <code>select name, course_id from instructor, teaches where instructor.ID = teaches.ID;</code> <code>select name, course_id from instructor natural join teaches;</code>  \u4e0a\u9762\u4e24\u6761\u8bed\u53e5\u662f\u7b49\u4ef7\u7684\u3002</p> <p>Unrelated attributes with same name which get equated incorrectly! </p> <p>Example</p> <p><code>course(course_id,title, dept_name,credits\uff09</code>, <code>teaches(ID, course_id,sec_id,semester, year)</code>, <code>instructor(ID, name, dept_name,salary\uff09</code> \u8fd9\u91cc\u7684 department \u542b\u4e49\u5404\u6709\u4e0d\u540c\uff0c\u4e0d\u80fd\u76f4\u63a5\u81ea\u7136\u8fde\u63a5\u3002 \u53ef\u4ee5\u5199\u6210 <code>select name, title from (instructor natural join teaches\uff09join course using(course_id);</code> \u5373\u89c4\u5b9a\u8fde\u63a5\u7684\u5c5e\u6027\uff0c\u5bf9\u5e94\u4e8e \\(\\sigma_\\theta\\) </p> <p>Find students who takes courses across his/her department. \u53ef\u5199\u4f5c </p> <pre><code>select distinct student.id\n    from (student natural join takes) \n           join course using (course_id\uff09 \n    where student.dept_name &lt;&gt; course.dept_name\n</code></pre>"},{"location":"note/courses/database%20system/Chapter%203/#25-the-rename-operation","title":"2.5 The Rename Operation","text":"<p>The SQL allows renaming relations and attributes using the <code>as</code> clause. <code>old-name as new-name</code></p> <p>e.g. <code>select distinct T. name from instructor as T, instructor as S where T.salary &gt; S.salary and S.dept_name = \u2018Comp. Sci.\u2019</code></p> <ul> <li>Keyword <code>as</code> is optional and may be omitted.  </li> </ul>"},{"location":"note/courses/database%20system/Chapter%203/#26-string-operations","title":"2.6 String Operations","text":"<p>SQL includes a string-matching operator for comparisons on character strings.  The operator <code>like</code> uses patterns that are described using two special characters. </p> <p>\u6ce8\u610f\u5355\u5f15\u53f7\u8868\u793a\u5b57\u7b26\u4e32\u3002</p> <ul> <li>percent (%).  The % character matches any substring. e.g. <code>select name from instructor where name like '%dar%';</code> \u627e\u540d\u5b57\u91cc\u9762\u542b\u6709 <code>dar</code> \u7684\u5b57\u7b26\u4e32\u3002 </li> <li>underscore (_).  The _ character matches any character.  \u5339\u914d\u4e00\u4e2a\u5b57\u7b26</li> </ul> <p>Match the string</p> <p>\u5339\u914d\u5b57\u7b26\u4e32 <code>'100 %'</code> \u4f46\u662f <code>%</code> \u7b26\u53f7\u88ab\u6211\u4eec\u4f5c\u4e3a\u4e86\u901a\u914d\u7b26\uff0c\u8fd9\u91cc\u6211\u4eec\u9700\u8981\u7528\u5230\u8f6c\u4e49\u7b26 <code>\\</code>. <code>\\%</code> \u5373\u5c06 <code>%</code> \u4f5c\u4e3a\u6b63\u5e38\u5b57\u7b26\u5339\u914d\u3002 <code>\\</code> \u4e5f\u53ef\u4ee5\u662f\u4e00\u4e2a\u57fa\u672c\u7b26\u53f7\uff0c\u6211\u4eec\u9700\u8981\u5728\u540e\u9762\u5199\u51fa <code>escape</code> \u8868\u793a\u5176\u5728\u8fd9\u91cc\u4f5c\u4e3a\u8f6c\u4e49\u7b26\u3002\u7c7b\u4f3c\u5730\u6211\u4eec\u8fd8\u53ef\u4ee5\u5c06\u8f6c\u4e49\u7b26\u5b9a\u4e49\u4e3a <code>#</code>.  <pre><code>like \u2018100 \\%'  escape  '\\' \nlike \u2018100 \\%'  \nlike \u2018100  #%'  escape  \u2018#' \n</code></pre></p> <p>SQL supports a variety of string operations such as</p> <ul> <li>concatenation (using <code>||</code>)</li> <li>converting from upper to lower case (and vice versa)</li> <li>finding string length, extracting substrings, etc.  </li> </ul>"},{"location":"note/courses/database%20system/Chapter%203/#27-ordering-the-display-of-tuples","title":"2.7 Ordering the Display of Tuples","text":"<p>\u5173\u7cfb\u662f\u65e0\u5e8f\u7684\uff0c\u4f46\u6211\u4eec\u53ef\u80fd\u89c4\u5b9a\u663e\u793a\u51fa\u6765\u7684\u987a\u5e8f\u3002</p> <ul> <li>We may specify desc for descending order or asc for ascending order, for each attribute; ascending order is the default. e.g. <code>order by name desc</code> \u53ef\u4ee5\u6392\u5e8f\u7684\u7c7b\u578b\uff0c\u5982\u5b57\u7b26\u4e32\u3001\u6570\u5b57\u3002</li> <li>Can sort on multiple attributes e.g. <code>order by  dept_name, name</code> \u5148\u6309\u7b2c\u4e00\u4e2a\u6392\uff0c\u5982\u679c\u7b2c\u4e00\u4e2a\u5143\u7d20\u76f8\u540c\u518d\u6309\u7b2c\u4e8c\u4e2a\u6392\u3002</li> </ul> <p>\u4e0d\u6307\u5b9a\u7684\u8bdd\u5c31\u662f\u5347\u5e8f</p>"},{"location":"note/courses/database%20system/Chapter%203/#28-the-limit-clause","title":"2.8 The <code>limit</code> Clause","text":"<p>The <code>limit</code> clause can be used to constrain the number of rows returned by the select statement.  limit clause takes one or two numeric arguments, which must both be nonnegative integer constants: </p> <ul> <li><code>limit offset, row_count</code> offset\u4ece\u4ec0\u4e48\u5730\u65b9\u5f00\u59cb\uff0crow_count\u622a\u51e0\u884c</li> <li><code>limit row_count == limit 0, row_count</code></li> </ul> <p>e.g. <code>select  name from instructor order by salary desc limit 3\uff1b   //  limit 0,3</code></p>"},{"location":"note/courses/database%20system/Chapter%203/#29-duplicates","title":"2.9 Duplicates","text":""},{"location":"note/courses/database%20system/Chapter%203/#210-set-operations","title":"2.10 Set Operations","text":"<ul> <li><code>union, intersect, except</code> \u662f\u4e25\u683c\u7684\u96c6\u5408\u64cd\u4f5c\uff0c\u4f1a\u5bf9\u7ed3\u679c\u53bb\u91cd.</li> <li><code>union all</code>, <code>intersect all</code> and <code>except all</code>. \u4fdd\u6301\u591a\u91cd\u96c6\u3002</li> </ul> Example"},{"location":"note/courses/database%20system/Chapter%203/#211-null-values","title":"2.11 Null Values","text":"<p>null signifies an unknown value or that a value does not exist.</p> <ul> <li>The result of any arithmetic expression involving null is null. e.g. <code>5 + null</code> returns null</li> <li>The predicate is null can be used to check for null values. e.g. Find all instructors whose salary is null.  <code>select name from instructor where salary is null</code></li> <li>Comparisons with null values return the special truth value: unknown.  </li> </ul> <ul> <li>Result of select predicate is treated as false if it evaluates to unknown</li> </ul>"},{"location":"note/courses/database%20system/Chapter%203/#212-aggregate-functions","title":"2.12 Aggregate Functions","text":"Example <p>\u6ce8\u610f\u5728 <code>select</code> \u91cc\u51fa\u73b0\u7684\u5c5e\u6027\uff0c\u9664\u4e86\u7edf\u8ba1\u51fd\u6570\u4ee5\u5916\uff0c\u4e00\u5b9a\u8981\u662f\u5206\u7ec4\u5c5e\u6027\u91cc\u51fa\u73b0\u8fc7\u7684\u3002</p> <p><code>select count(distinct ID)</code>\u4e0d\u540c\u7684ID\u6709\u51e0\u4e2a</p> <p><code>select count(*)</code> \u7edf\u8ba1\u8868\u4e2d\u6240\u6709\u884c\u7684\u6570\u91cf</p>"},{"location":"note/courses/database%20system/Chapter%203/#2121-having-clause","title":"2.12.1 Having Clause","text":"<p>\u5bf9\u5206\u7ec4\u540e\u7684\u7ec4\u8fdb\u884c\u7b5b\u9009\u3002  </p> <p>e.g. <pre><code>select dept_name, count (*) as cnt\nfrom instructor\nwhere  salary &gt;=100000\ngroup by dept_name\nhaving  count (*) &gt; 10\norder by cnt;\n</code></pre></p> <p>predicates in the <code>having</code> clause are applied after the formation of groups whereas predicates in the <code>where</code> clause are applied before forming groups.  </p>"},{"location":"note/courses/database%20system/Chapter%203/#2122-null-values-and-aggregates","title":"2.12.2 Null Values and Aggregates","text":"<p><code>select sum (salary) from instructor</code> </p> <ul> <li>Above statement ignores null amounts</li> <li>Result is null if there is no non-null amount</li> <li>All aggregate operations except <code>count(*)</code> ignore tuples with null values on the aggregated attributes</li> </ul> Arithmetric expression with Aggregate functions <p> </p> <p>\u7b2c\u4e8c\u4e2a\u8868\u793a\u91cd\u540d\u7387\u5c0f\u4e8e\u5343\u5206\u4e4b\u4e00\u7684\u7cfb\u3002</p>"},{"location":"note/courses/database%20system/Chapter%203/#213-nested-subqueries","title":"2.13 Nested Subqueries","text":"<p>A subquery is a select-from-where expression that is nested within another query.</p>"},{"location":"note/courses/database%20system/Chapter%203/#2131-set-membership","title":"2.13.1 Set Membership","text":"<p><code>in, not in</code></p> Example <p> </p> <p>\u9664\u4e86\u5355\u4e2a\u5143\u7d20\u5916\uff0c\u5143\u7ec4\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>in, not in</code> </p>"},{"location":"note/courses/database%20system/Chapter%203/#2132-set-comparison","title":"2.13.2 Set Comparison","text":"<ul> <li><code>some</code> \u67d0\u4e9b\u6210\u5458   </li> <li><code>all</code> \u6240\u6709\u6210\u5458</li> </ul> <p>Example</p> <p>\u5de5\u8d44\u5927\u4e8e\u751f\u7269\u7cfb\u4e2d\u7684\u67d0\u4e9b\u8001\u5e08\u7684\u8001\u5e08. <pre><code>select name\nfrom instructor\nwhere salary &gt; some (select salary\n                                    from instructor\n                                    where dept_name = \u2019Biology\u2019);\n</code></pre></p>"},{"location":"note/courses/database%20system/Chapter%203/#2133-scalar-subquery","title":"2.13.3 Scalar Subquery","text":"<p>Scalar (\u6807\u91cf) subquery is one which is used where a single value is expected.  </p> <p>Example</p> <pre><code>select name\nfrom instructor\nwhere  salary * 10 &gt; \n    (select budget  from department \n    where department.dept_name = instructor.dept_name)\n</code></pre> <p>\u8fd9\u91cc <code>dept_name</code> \u662f\u8fd9\u4e2a\u8868\u7684\u4e3b\u952e\uff0c\u53ea\u8fd4\u56de\u4e00\u4e2a\u5143\u7ec4\uff0c\u8fd9\u79cd\u60c5\u51b5\u4e0b\u662f\u53ef\u4ee5\u4e0d\u7528 <code>some, all</code> \u7684\u3002</p> <p>Runtime error if subquery returns more than one result tuple.  </p>"},{"location":"note/courses/database%20system/Chapter%203/#2134-test-for-empty-relations","title":"2.13.4 Test for Empty Relations","text":"<p>The exists construct returns the value true if the argument subquery is nonempty.</p> <ul> <li><code>exists r</code> \\(\\Leftrightarrow r \\neq \\emptyset\\)</li> <li><code>not exists r</code> \\(\\Leftrightarrow r = \\emptyset\\)</li> </ul> <p>Example</p> <p>09FALL \u5f00\u7684\u8bfe\uff0c\u800c\u4e14 10SPRING \u4e5f\u5f00\u4e86\u8bfe\u3002 <pre><code>select course_id\nfrom section as S\nwhere semester = \u2019Fall\u2019 and year= 2009 and                exists (select *                            \nfrom section as T                      \n    where semester = \u2019Spring\u2019 and year= 2010 and S.course_id= T.course_id);\n</code></pre></p> <p>Example</p> <p>Find all students who have taken all courses offered in the Biology department. SQL \u8bed\u53e5\u5f80\u5f80\u9700\u8981\u9006\u5411\u8003\u8651\uff0c\u5373\u627e\u5230\u8fd9\u6837\u7684\u5b66\u751f\uff0c\u4e0d\u5b58\u5728\u4ed6\u6ca1\u9009\u8fc7\u7684\u751f\u7269\u7cfb\u7684\u8bfe\u3002 <pre><code>select distinct S.ID, S.name\nfrom student as S\nwhere not exists ( (select course_id\n                        from course\n                        where dept_name = \u2019Biology\u2019)\n                except\n                    (select T.course_id\n                        from takes as T\n                        where S.ID = T.ID));\n</code></pre></p>"},{"location":"note/courses/database%20system/Chapter%203/#2135-test-for-absence-of-duplicate-tuples","title":"2.13.5 Test for Absence of Duplicate Tuples","text":"<p>The <code>unique</code> construct tests whether a subquery has any duplicate tuples in its result. \u9a8c\u8bc1\u662f\u5426\u662f\u4e00\u4e2a\u96c6\u5408\uff0c\u800c\u975e\u591a\u91cd\u96c6\u3002  </p> <ul> <li>Evaluates to \u201ctrue\u201d on an empty set.  \u53ef\u4ee5\u5c06 unique \u7406\u89e3\u4e3a at most once. </li> </ul> <p>Example</p> <p> </p> <p>\u5982\u679c\u4e0d\u52a0 exist, \u53ef\u80fd\u6709\u6ca1\u5f00\u8fc7\u7684\u8bfe\u4e5f\u88ab\u7b97\u8fdb\u53bb\u3002\u6211\u4eec\u8fd9\u91cc\u6c42\u5f97\u662f\u6070\u597d\u53ea\u5f00\u8fc7\u4e00\u6b21\u7684\u3002</p> Example <p> </p> <p>\u4e5f\u53ef\u4ee5\u7528 <code>group by count(*) &gt; 1</code> \u5b9e\u73b0\u3002</p>"},{"location":"note/courses/database%20system/Chapter%203/#214-with-clause","title":"2.14 With Clause","text":"<p>The <code>with</code> clause provides a way of defining a temporary view whose definition is available only to the query in which the with clause occurs. \u6784\u9020\u4e00\u4e2a\u4e34\u65f6\u8868  </p> <p>Example</p> <p>Find all departments with the maximum budget. <pre><code>with max_budget (value) as \n    (select max(budget)\n    from department)\nselect dept_name\nfrom department, max_budget\nwhere department.budget = max_budget.value;\n</code></pre></p> Complex Queries using With Clause <p> </p>"},{"location":"note/courses/database%20system/Chapter%203/#3-modification-of-the-database","title":"3 Modification of the Database","text":""},{"location":"note/courses/database%20system/Chapter%203/#31-deletion","title":"3.1 Deletion","text":"Example"},{"location":"note/courses/database%20system/Chapter%203/#32-insertion","title":"3.2 Insertion","text":"Example <p>\u7b2c\u4e8c\u79cd\u5199\u6cd5\uff0c\u53ef\u4ee5\u4e0d\u7528\u4e25\u683c\u6309\u7167\u5b9a\u4e49\u7684\u5143\u7d20\u987a\u5e8f\uff0c\u53ea\u8981\u548c\u81ea\u5df1\u5199\u7684\u5bf9\u5e94\u5373\u53ef\u3002</p> <p>\u9664\u4e86\u57fa\u672c\u5199\u6cd5\uff0c\u6211\u4eec\u8fd8\u53ef\u4ee5\u5728 <code>insert</code> \u540e\u8ddf\u67e5\u8be2\u8bed\u53e5\uff0c\u628a\u67e5\u8be2\u7ed3\u679c\u63d2\u5165\u5230\u8868\u91cc\u53bb\u3002</p> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%203/#33-updates","title":"3.3 Updates","text":"<p><code>update ... set ...</code></p> <p>The order is important. So it can be done better using the <code>case</code> statement.  </p> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%204/","title":"Intermediate SQL","text":"Abstract <ul> <li>Joined Relation</li> <li>SQL Data Types and Schemas</li> <li>Integrity Constraints</li> <li>Views</li> <li>Indexes</li> <li>Transactions</li> <li>Authorization</li> </ul>"},{"location":"note/courses/database%20system/Chapter%204/#1-joined-relations","title":"1 Joined Relations","text":"<ul> <li>Join operations take two relations and return as a result another relation.</li> <li>Join operations are typically used as subquery expressions in the from clause</li> <li>Join condition \u2013 defines which tuples in the two relations match, and what attributes are present in the result of the join.</li> <li>Join type \u2013 defines how tuples in each relation that do not match any tuple in the other relation (based on the join condition) are treated.  </li> </ul> <ul> <li> <p>using \u662f\u4e00\u4e2a\u7b49\u503c\u8fde\u63a5\uff0c\u7c7b\u4f3c\u4e8e\u81ea\u7136\u8fde\u63a5\uff0c\u8fd9\u4e9b\u5c5e\u6027\u76f8\u540c\u624d\u80fd\u8fde\u63a5</p> </li> <li> <p>[ ]\u548cprimary key\u4e4b\u95f4\u7684\u5173\u7cfb\uff1f</p> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%204/#2-sql-data-types-and-schemas","title":"2 SQL Data Types and Schemas","text":""},{"location":"note/courses/database%20system/Chapter%204/#21-user-defined-types","title":"2.1 User-Defined Types","text":"<p><code>create type</code> construct in SQL creates user-defined type.  </p> <p>Example</p> <p><code>create type Dollars as numeric (12,2) final</code> \u5b9a\u4e49\u4e86 <code>Dollars</code> \u8fd9\u4e2a\u7c7b\u578b\u540e\uff0c\u6211\u4eec\u5c31\u53ef\u4ee5\u628a\u5b83\u5f53\u4f5c\u5143\u7c7b\u578b\u4f7f\u7528\u3002  <code>final</code>\u6307\u6700\u57fa\u672c\u7684\u7c7b\u578b\uff0c\u53ef\u4ee5\u88ab\u7ee7\u627f <pre><code>create table department\n    (dept_name varchar (20),\n    building varchar (15),\n    budget Dollars);\n</code></pre></p> <p>\u8fd9\u6837\u53ef\u4ee5\u652f\u6301\u5f3a\u7c7b\u578b\u68c0\u67e5\uff0c\u53ef\u4ee5\u9632\u6b62\u5982 200 \u7f8e\u5143 + 300 RMB \u5f97\u5230 500 \u5143\u7684\u9519\u8bef\u3002</p> <p>\u81ea\u5b9a\u4e49\u7c7b\u578b\u5c3d\u91cf\u5728\u7f16\u8bd1\u65f6\u53d1\u73b0\u9519\u8bef\uff0c\u907f\u514d\u5728\u8fd0\u884c\u65f6\u624d\u53d1\u73b0\u9519\u8bef\u3002</p>"},{"location":"note/courses/database%20system/Chapter%204/#22-domains","title":"2.2 Domains","text":"<p>type\u76f8\u5f53\u4e8e\u7ed9\u57fa\u7840\u7c7b\u578b\u6362\u4e2a\u540d\u5b57\uff0c\u800cdomain\u8fd8\u53ef\u4ee5\u52a0\u4e0a\u7ea6\u675f\u6761\u4ef6\u3002</p> <p><code>create domain</code> construct in SQL-92 creates user-defined domain types.  </p> <p>Domains can have constraints, such as <code>not null</code>, specified on them.</p> <p>Example</p> <p><code>create domain person_name char(20) not null</code> <pre><code>create domain degree_level varchar(10)\n    constraint degree_level_test\n    check (value in (\u2019Bachelors\u2019, \u2019Masters\u2019, \u2019Doctorate\u2019));\n</code></pre> \u8fd9\u91cc\u7684 constraint \u53ef\u4ee5\u5bf9 domain \u7684\u53d6\u503c\u8fdb\u884c\u9650\u5236\u3002</p> <p>\u4e0d\u540c type \u7684\u53d8\u91cf\uff0c\u5373\u4f7f\u5b9a\u4e49\u76f8\u540c\uff0c\u4e5f\u4e0d\u80fd\u8fdb\u884c\u8fd0\u7b97\u3002\u4e0d\u540c domain \u7684\u53d8\u91cf\uff08\u57fa\u7840\u7c7b\u578b\u76f8\u540c\uff09\u53ef\u4ee5\u8fd0\u7b97\u3002</p>"},{"location":"note/courses/database%20system/Chapter%204/#23-large-object-types","title":"2.3 Large-Object Types","text":"<p>Large objects (photos, videos, CAD files, etc.) are stored as a large object:  </p> <ul> <li>blob: binary large object -- object is a large collection of uninterpreted binary data (whose interpretation is left to an application outside of the database system)  </li> </ul> <p>\u5b58\u50a8\u5927\u5bf9\u8c61\u6570\u636e\u7c7b\u578b\uff0c\u5b9e\u9645\u4e0a\u53ea\u662f\u5b58\u653e\u6307\u9488\u3002</p> <pre><code>??? Example \"BLOB in MySQL\"\n    * TinyBlob \uff1a  0 ~ 255 bytes.\n    * Blob\uff1a 0 ~ 64K bytes.\n    * MediumBlob \uff1a 0 ~ 16M bytes.\n    * LargeBlob : 0 ~ 4G  bytes.\n</code></pre> <ul> <li>clob: character large object -- object is a large collection of character data \u6587\u672c\u5927\u5bf9\u8c61  </li> </ul>"},{"location":"note/courses/database%20system/Chapter%204/#3-integrity-constraints","title":"3 Integrity Constraints","text":"<ul> <li><code>not null</code></li> <li><code>primary key</code> \u4e0d\u80fd\u4e3a\u7a7a\uff0c\u540c\u4e00\u8868\u4e2d\u4e0d\u80fd\u91cd\u590d</li> <li><code>unique</code> <code>unique(A1, A2, ..., Am)</code> The unique specification states that the attributes <code>A1, A2, ..., Am</code> form a super key \uff08\u4e0d\u4e00\u5b9a\u662f candidate key) \u6bd4\u5982\u5b66\u751f\u4e2a\u4eba\u4fe1\u606f\uff0c\u6211\u4eec\u77e5\u9053 ID \u662f\u4e3b\u952e\uff0c\u4f46\u5b9e\u9645\u4e0a\u90ae\u7bb1\u3001\u7535\u8bdd\u53f7\u7801\u7b49\u4e5f\u4e0d\u80fd\u76f8\u540c\u7684\uff0c\u6240\u4ee5\u6211\u4eec\u8981\u901a\u8fc7\u8bed\u53e5\u544a\u8bc9\u6570\u636e\u5e93\uff0c\u6570\u636e\u5e93\u4f1a\u4e3a\u6211\u4eec\u7ef4\u62a4\u8fd9\u4e9b\u7ea6\u675f\u6761\u4ef6\u3002   Candidate keys are permitted to be null (in contrast to primary keys).  </li> <li> <p><code>check (P)</code>, where P is a predicate  </p> Example <p> </p> <p>\u53ef\u4ee5\u6709\u590d\u6742\u67e5\u8be2\uff0c\u4f46\u8bb8\u591a\u6570\u636e\u5e93\u4e0d\u652f\u6301\u3002e.g. <code>check ((course_id, sec_id, semester, year)  in (select course_id, sec_id, semester, year from teaches))</code> * <code>foreign key</code></p> <p>Integrity Constraint Violation During Transactions</p> <p> </p> <p>\u5728\u4e00\u4e2a\u4eba\u7684\u7236\u6bcd\u8fd8\u6ca1\u63d2\u5165\u7684\u65f6\u5019\uff0c\u65e0\u6cd5\u63d2\u5165\u8fd9\u4e2a\u4eba\uff0c\u4f9d\u6b21\u7c7b\u63a8\u3002 \u5148\u7f6e\u7a7a\uff0c\u540e\u9762\u518dupdate \u53ef\u4ee5\u89c4\u5b9a\uff0c\u5728\u8fd9\u4e2a\u4e8b\u52a1\u7ed3\u675f\u65f6\u518d\u68c0\u67e5\u5b8c\u6574\u6027\u7ea6\u675f\u6761\u4ef6\uff0c\u4e2d\u95f4\u72b6\u6001\u53ef\u4ee5\u4e0d\u6ee1\u8db3\u3002</p> </li> <li> <p><code>assertion</code> <code>create assertion &lt;assertion-name&gt; check &lt;predicate&gt;;</code> </p> Example <p>\u9a8c\u8bc1\u4e00\u4e2a\u5b66\u751f\u83b7\u5f97\u7684\u603b\u5b66\u5206\uff0c\u8981\u7b49\u4e8e\u83b7\u5f97\u7684\u6bcf\u95e8\u8bfe\u7684\u5b66\u5206\u7684\u603b\u548c\u3002  </p> <p>\u4f46\u4f7f\u7528 <code>assert</code> \u540e\uff0c\u6bcf\u4e2a\u5143\u7ec4\u7684\u6bcf\u6b21\u72b6\u6001\u66f4\u65b0\u65f6\u90fd\u8981\u8fdb\u884c\u68c0\u67e5\uff0c\u5f00\u9500\u8fc7\u5927\uff0c\u6570\u636e\u5e93\u4e00\u822c\u4e0d\u652f\u6301\u3002</p> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%204/#4-views","title":"4 Views \u89c6\u56fe","text":"<p>A view provides a mechanism to hide certain data from the view of certain users.   </p> <p>\u6bcf\u4e2a\u7528\u6237\u770b\u5230\u7684\u6570\u636e\u90fd\u4e0d\u4e00\u6837</p>"},{"location":"note/courses/database%20system/Chapter%204/#41-view-definition","title":"4.1 View Definition","text":"<p>A view is defined using the create view statement which has the form <code>create view v as &lt; query expression &gt;</code> </p> Example <p> </p> <p>view \u53ef\u4ee5\u9690\u6389\u4e00\u4e9b\u7ec6\u8282\uff0c\u6216\u8005\u52a0\u4e0a\u4e00\u4e9b\u7edf\u8ba1\u6570\u636e\u3002\u53ef\u4ee5\u628a view \u5f53\u4f5c\u8868\u8fdb\u884c\u67e5\u8be2\u3002</p> <ul> <li>\u9690\u85cf\u4e0d\u5fc5\u8981\u7684\u7ec6\u8282\uff0c\u7b80\u5316\u7528\u6237\u89c6\u91ce</li> <li>\u65b9\u4fbf\u67e5\u8be2\u4e66\u5199</li> <li>\u6709\u5229\u4e8e\u6743\u9650\u63a7\u5236\uff08\u5982\u7528\u6237\u53ef\u4ee5\u770b\u5230\u5de5\u8d44\u603b\u548c\uff0c\u4f46\u4e0d\u80fd\u770b\u5230\u6bcf\u4e2a\u4eba\u7684\u5de5\u8d44\uff09</li> <li>\u6709\u72ec\u7acb\u6027\uff0c\u4f7f\u5f97\u6570\u636e\u5e93\u5e94\u7528\u5177\u6709\u8f83\u5f3a\u7684\u9002\u5e94\u6027\u3002</li> </ul> <p>\u53ef\u4ee5\u57fa\u4e8e\u89c6\u56fe\u518d\u5b9a\u4e49\u89c6\u56fe\u3002</p> Views Defined Using Other Views <p> </p>"},{"location":"note/courses/database%20system/Chapter%204/#42-update-of-a-view","title":"4.2 Update of a View","text":"<p>\u5bf9\u4e00\u4e2a view \u8fdb\u884c\u4fee\u6539\uff0c\u76f8\u5f53\u4e8e\u901a\u8fc7\u8fd9\u4e2a\u7a97\u53e3\u5bf9\u539f\u8868\u7ee7\u7eed\u4fee\u6539\u3002  </p> <p>Example</p> <p> </p> <p>\u63d2\u5165\u540e\uff0c\u539f\u8868\u4e5f\u4f1a\u6709\u8fd9\u6761\u6570\u636e\uff0c\u5bf9\u4e8e\u5176\u7f3a\u5c11\u7684 <code>salary</code> \u5c5e\u6027\uff0c\u6211\u4eec\u8bbe\u5b9a\u4e3a <code>NULL</code>. \u5982\u679c\u8fd9\u4e2a\u5c5e\u6027\u7684\u7ea6\u675f\u662f <code>not NULL</code> \u7684\uff0c\u90a3\u4e48\u6211\u4eec\u65e0\u6cd5\u6267\u884c\u8fd9\u6b21\u63d2\u5165\u3002</p> <p>\u5982\u679c\u89c6\u56fe\u4e2d\u6709\u7edf\u8ba1\u7684\u5c5e\u6027\uff0c\u90a3\u4e48\u662f\u4e0d\u53ef\u4fee\u6539\u7684\u3002 \u6d89\u53ca\u5230\u5355\u4e2a\u8868\uff0c\u53ea\u662f\u9009\u51fa\u4e86\u90e8\u5206\u5c5e\u6027\uff08\u53bb\u6389\u975e\u4e3b\u5c5e\u6027\uff09\u7684\u884c\u5217\u89c6\u56fe\u662f\u53ef\u66f4\u65b0\u7684\u3002</p>"},{"location":"note/courses/database%20system/Chapter%204/#43-view-and-logical-data-indepencence","title":"4.3 View and Logical Data Indepencence","text":"<p>If relation \\(S(a, b, c)\\) is split into two sub relations \\(S1(a,b)\\) and \\(S2(a,c)\\) How to realize the logical data independence?   </p> <ol> <li><code>create table S1...;</code> <code>create table S2...;</code></li> <li><code>insert into S1 select a, b from S;</code> <code>insert into S2 select a, c from S;</code></li> <li><code>drop table S;</code></li> <li><code>create view S(a, b, c) as select a, b, c from S1 natural join S2;</code> </li> </ol> <p><code>select * from S where...</code> \u5b9e\u9645\u4e0a\u662f\u5728\u505a <code>select * from S1 natural join S2 where ...</code> \uff08\u7cfb\u7edf\u4f1a\u5e2e\u6211\u8fd9\u6837\u505a\uff0c\u7a0b\u5e8f\u4e0d\u7528\u6539\uff0c\u53ea\u662f\u6267\u884c\u6539\u53d8\u4e86\uff09 <code>insert into S values (1,2,3)</code> \u5b9e\u9645\u4e0a\u662f\u5728\u505a <code>insert into S1 values (1,2)</code> \u548c <code>insert into S2 values (1,3)</code> </p>"},{"location":"note/courses/database%20system/Chapter%204/#44-materialized-views","title":"4.4 *Materialized Views","text":"<p>\u7269\u5316\u89c6\u56fe</p> <p>Materializing a view: create a physical table containing all the tuples in the result of the query defining the view. \u672c\u6765\u7684\u89c6\u56fe\u662f\u4e00\u4e2a\u865a\u7684\u8868\uff0c\u4e3a\u4e86\u67e5\u8be2\u6267\u884c\u6548\u7387\uff0c\u6211\u4eec\u53ef\u4ee5\u628a view \u5b9a\u4e49\u4e3a Materializing view, \u5373\u751f\u6210\u4e00\u5f20\u4e34\u65f6\u8868\u4e0e\u5176\u5bf9\u5e94\u3002  </p> <p>If relations used in the query are updated, the materialized view result becomes out of date.     * Need to maintain the view, by updating the view whenever the underlying relations are updated.   </p> <p>\u53ef\u4ee5\u52a0\u5feb\u67e5\u8be2\u7684\u901f\u5ea6\uff0c\u4e0d\u7528\u518d\u5230\u539f\u6765\u7684\u8868\u91cc\u53bb\u67e5\u8be2\u3002</p> <p>\u4f46\u662f\u9700\u8981\u65f6\u65f6\u523b\u523b\u8fdb\u884c\u7ef4\u62a4</p>"},{"location":"note/courses/database%20system/Chapter%204/#45-view-and-logical-data-independence","title":"4.5 View and Logical Data Independence","text":""},{"location":"note/courses/database%20system/Chapter%204/#5-indexes","title":"5 Indexes","text":"<p>Indices are data structures used to speed up access to records with specified values for index attributes.  </p> <p>Index \u76f8\u5f53\u4e8e\u5728\u6570\u636e\u4e0a\u5efa\u7acb\u4e86 B+ \u6811\u7d22\u5f15\u3002\uff08\u7269\u7406\u5c42\u9762\uff09</p> Example <p><pre><code>create table student    \n(   ID varchar (5),\n    name varchar (20) not null,\n        dept_name varchar (20),\n            tot_cred numeric (3,0) default 0,\n                primary key (ID) )\ncreate index studentID_index on student(ID)\n</code></pre> <code>select * from student where ID = \u201812345\u2019</code> \u5728\u6570\u636e\u5e93\u5185\u4e0d\u540c\u7684\u7269\u7406\u5b9e\u73b0\u6709\u4e0d\u540c\u7684\u67e5\u627e\u65b9\u6cd5\u3002 \u5982\u679c\u6ca1\u6709\u5b9a\u4e49\u7d22\u5f15\uff0c\u53ea\u80fd\u987a\u5e8f\u67e5\u627e\u3002\u5982\u679c\u6709\u7d22\u5f15\uff0c\u7cfb\u7edf\u5185\u4f1a\u5229\u7528\u7d22\u5f15\u67e5\u627e\u3002  </p>"},{"location":"note/courses/database%20system/Chapter%204/#6-transactions","title":"6 Transactions \u4e8b\u52a1","text":"<ul> <li>work\u7684\u5355\u5143</li> <li>Transactions begin implicitly \uff0cEnded by commit work or rollback work  </li> <li>By default on most databases: each SQL statement commits automatically  <ul> <li>Can turn off auto commit for a session e.g. in MySQL, <code>SET AUTOCOMMIT=0;</code> </li> </ul> </li> </ul> <p>\u4e8b\u52a1\u7684\u5f00\u59cb\u662f\u9690\u542b\u7684\uff0cCOMMIT\u5c31\u6807\u5fd7\u7740\u4e0a\u4e00\u4e2a\u4e8b\u52a1\u7684\u7ed3\u675f\u548c\u4e0b\u4e00\u4e2a\u4e8b\u52a1\u7684\u5f00\u59cb</p> Transaction examplex <pre><code>SET AUTOCOMMIT=0\n\nUPDATE account SET balance=balance-100 WHERE ano=\u20181001\u2019;\nUPDATE account SETbalance=balance+100 WHERE ano=\u20181002\u2019;\nCOMMIT;\n\nUPDATE account SET balance=balance -200 WHERE ano=\u20181003\u2019;\nUPDATE account SET balance=balance+200 WHERE ano=\u20181004\u2019;      COMMIT;\n\nUPDATE account SET balance=balance+balance*2.5%;\nCOMMIT;\n</code></pre> <p>\u4e8b\u52a1\u7684\u8fb9\u754c\u5f88\u91cd\u8981</p>"},{"location":"note/courses/database%20system/Chapter%204/#61-acid-properties","title":"6.1 ACID Properties","text":"<p>A  transaction  is a unit of program execution that accesses and possibly updates various data items.To preserve the integrity of data the database system must ensure: (\u539f\u5b50\u6027\u3001\u4e00\u81f4\u6027\u3001\u72ec\u7acb\u6027\u3001\u6301\u7eed\u6027)</p> <ul> <li>Atomicity. Either all operations of the transaction are properly reflected in the database or none are.</li> <li>Consistency. Execution of a transaction in isolation preserves the consistency of the database. \u6570\u636e\u5e93\u6267\u884c\u4e8b\u52a1\u524d\u540e\u90fd\u662f\u4e00\u81f4\u7684\u3002</li> <li>Isolation. Although multiple transactions may execute concurrently, each transaction must be unaware of other concurrently executing transactions.  Intermediate transaction results must be hidden from other concurrently executed transactions.   \u5f88\u591a\u4e8b\u60c5\u5171\u540c\u6267\u884c\uff0c\u4ed6\u4eec\u4e0d\u80fd\u4e92\u76f8\u5f71\u54cd\u3002<ul> <li>That is, for every pair of transactions \\(T_i\\) and \\(T_j\\), it appears to \\(T_i\\) that either \\(T_j\\), finished execution before \\(T_i\\) started, or \\(T_j\\) started execution after \\(T_i\\) finished.</li> </ul> </li> <li>Durability. After a transaction completes successfully, the changes it has made to the database persist, even if there are system failures.  \u6570\u636e\u5e93\u7684\u4e8b\u52a1\u4e00\u65e6\u63d0\u4ea4\uff0c\u8fd9\u4e2a\u4fee\u6539\u5c31\u8981\u6301\u7eed\u5730\u4fdd\u5b58\u5230\u6570\u636e\u5e93\u4e2d\u53bb\uff0c\u4e0d\u80fd\u4e22\u5931\u3002\u5982\u78c1\u76d8\u51fa\u95ee\u9898\u4e86\uff0c\u65ad\u7535\u4e86\u7b49\u4f1a\u5f15\u53d1\u8fd9\u4e2a\u95ee\u9898\u3002 \u901a\u5e38\u4f7f\u7528\u65e5\u5fd7\u3002</li> </ul>"},{"location":"note/courses/database%20system/Chapter%204/#7-authorization","title":"7 Authorization","text":"<ul> <li>Forms of authorization on parts of the database \u6570\u636e\u5c42\u9762\uff0c\u5373\u8868\u5df2\u7ecf\u5b58\u5728\u6211\u4eec\u53ef\u4ee5\u5bf9\u5176\u8fdb\u884c\u7684\u64cd\u4f5c  <ul> <li>Select - allows reading, but not modification of data.</li> <li>Insert - allows insertion of new data, but not modification of existing data.</li> <li>Update - allows modification, but not deletion of data.</li> <li>Delete - allows deletion of data.</li> </ul> </li> <li>Forms of authorization to modify the database schema \u80fd\u5426\u5b9a\u4e49\u8868\uff0c\u7d22\u5f15\u7b49  <ul> <li>Index - allows creation and deletion of indices.</li> <li>Resources - allows creation of new relations.</li> <li>Alteration - allows addition or deletion of attributes in a relation.</li> <li>Drop - allows deletion of relations.</li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%204/#71-authorization-specification-in-sql","title":"7.1 Authorization Specification in SQL","text":"<p><code>grant &lt;privilege list&gt; on &lt;relation name or view name&gt; to &lt;user list&gt;</code> \u628a\u67d0\u4e2a\u8868\u6216\u8005\u89c6\u56fe\u4e0a\u7684\u6743\u9650\u6388\u6743\u7ed9\u7528\u6237  </p> <p><code>&lt;user list&gt;</code> is:  </p> <ul> <li>a user-id</li> <li><code>public</code>, which allows all valid users the privilege granted</li> <li>A role (more on this later)</li> </ul> Example <p> </p> <p>update \u53ef\u4ee5\u7ec6\u5316\u5230\u5177\u4f53\u53ef\u4ee5\u5bf9\u54ea\u5217\u8fdb\u884c\u4fee\u6539\u3002  </p>"},{"location":"note/courses/database%20system/Chapter%204/#72-revoking-authorization-in-sql","title":"7.2 Revoking Authorization in SQL","text":"<p>The revoke statement is used to revoke authorization. <code>revoke &lt;privilege list&gt; on &lt;relation name or view name&gt; from &lt;user list&gt;</code> </p>"},{"location":"note/courses/database%20system/Chapter%204/#73-roles","title":"7.3 Roles","text":"<p>Privileges can be granted to roles. \u89d2\u8272\u53ef\u4ee5\u7406\u89e3\u4e3a\u4e00\u7ec4\u6743\u9650\u7684\u96c6\u5408\uff0c\u5982\u5b66\u6821\u7684\u6559\u52a1\u7ba1\u7406\u5458\u3001\u8001\u5e08\u3002  </p> <p><code>create role &lt;role-name&gt;</code> \u521b\u9020\u89d2\u8272\uff0c\u968f\u540e\u53ef\u4ee5\u628a\u6743\u9650\u6388\u4e88\u7ed9\u4ed6\u3002 \u7136\u540e\u6211\u4eec\u53ef\u4ee5\u628a\u89d2\u8272\u7684\u6743\u9650\u6388\u4e88\u7ed9\u7528\u6237/\u5176\u4ed6\u89d2\u8272\u3002  </p> Example <pre><code>create role instructor;\ngrant select on takes to instructor;  // \u6388\u4e88\u6743\u9650\u7ed9\u89d2\u8272\ngrant instructor to Amit;   //\u5c06\u89d2\u8272\u7684\u6743\u9650\u6388\u4e88\u7ed9\u7528\u6237\n\ncreate role teaching_assistant;\ngrant teaching_assistant to instructor;  // \u53ef\u4ee5\u5c06\u89d2\u8272\u7684\u6743\u9650\u6388\u4e88\u7ed9\u5176\u4ed6\u89d2\u8272   \n</code></pre>"},{"location":"note/courses/database%20system/Chapter%204/#74-other-authorization-features","title":"7.4 Other Authorization Features","text":"<p>\u5f15\u7528\u7684\u6743\u9650\u6bd4\u8f83\u7279\u6b8a</p> <p><code>references privilege to create foreign key</code></p> <p>Example</p> <p><code>grant reference (dept_name) on department to Mariano;</code> </p> <p>\u5982\u679c\u4e0d\u4f5c\u4e3a\u6743\u9650\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u95f4\u63a5\u7684\u5916\u952e\u7ea6\u675f\u548c cascade \u5220\u6389\u88ab\u5f15\u7528\u7684\u6570\u636e\u3002\uff08\u5220\u6389\u996e\u7528\u8005\uff0c\u5219\u88ab\u5f15\u7528\u8005\u4e5f\u8981\u88ab\u5220\u9664\uff09\u56e0\u6b64\u8fd9\u4e5f\u662f\u4e2a\u6743\u9650</p> <ul> <li>transfer of privileges<ul> <li><code>grant select on department to Amit with grant option;</code>  \u52a0\u4e0a <code>with grant option</code> \u540e\uff0c\u7528\u6237\u53ef\u4ee5\u628a\u83b7\u5f97\u7684\u6743\u9650\u4f20\u9012\u4e0b\u53bb\u3002  </li> <li><code>revoke select on department from Amit, Satoshi cascade;</code> <code>cascade</code> \u628a\u8be5\u7528\u6237\u53ca\u5176\u6388\u4e88\u7684\u6743\u9650\u5168\u90e8\u6536\u56de\uff0c\u7ea7\u8054\u53cd\u5e94\u3002  </li> <li><code>revoke select on department from Amit, Satoshi restrict;</code> <code>restrict</code> \u53ea\u6536\u56de\u8be5\u7528\u6237\u7684\u6743\u9650\u3002  </li> <li><code>revoke grant option  for select on department from Amit;</code> \u6536\u56de\u7528\u6237\u8f6c\u6388\u7684\u6743\u529b\u3002  </li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%205/","title":"Advanced SQL","text":""},{"location":"note/courses/database%20system/Chapter%205/#1-accessing-sql-from-a-programming-language","title":"1 Accessing SQL from a Programming Language","text":"<ul> <li>\u4e0d\u662f\u6240\u6709\u7684 \u67e5\u8be2\u90fd\u80fd\u591f\u7528SQL\u8bed\u8a00\u8868\u8fbe</li> <li>Non-declarative actions: \u4f8b\u5982\u6253\u5370\u62a5\u544a\uff0c\u4e0e\u7528\u6237\u4ea4\u4e92\uff0c\u53d1\u9001\u67e5\u8be2\u7ed3\u679c\u81f3\u56fe\u5f62\u7528\u6237\u754c\u9762\u7b49\u4e0d\u80fd\u518dSQL\u4e2d\u5b8c\u6210</li> </ul> <p>\u4ece\u9ad8\u7ea7\u8bed\u8a00\u8bbf\u95ee\u6570\u636e\u5e93\uff0c\u4e3b\u8981\u662f\u4ee5\u4e0b\u4e24\u79cd\u65b9\u5f0f\uff1a - API(Application Program Interface) -- A general-purpose program can connect to and communicate with a database server using a collection of functions.     \u51fd\u6570\u5e93 - Embedded SQL\u00a0-- provides a means by which a program can interact with a database server.     \u628a SQL \u8bed\u53e5\u5d4c\u5165\u5230\u8bed\u8a00\u5185     - The SQL statements are translated at\u00a0compile time\u00a0into function calls.     - At runtime, these function calls connect to the database using an API that provides dynamic SQL facilities</p>"},{"location":"note/courses/database%20system/Chapter%205/#11-jdbc-and-odbc","title":"1.1 JDBC and ODBC","text":"<p>API \u4f7f\u7a0b\u5e8f\u80fd\u591f\u4e0e\u6570\u636e\u5e93\u670d\u52a1\u5668\u6c9f\u901a</p> <p>\u5e94\u7528\u7a0b\u5e8f\u8c03\u7528\uff1a     - \u548c\u6570\u636e\u5e93\u670d\u52a1\u5668\u5efa\u7acb\u8fde\u63a5     - \u5c06SQL\u547d\u4ee4\u53d1\u9001\u5230\u670d\u52a1\u5668     - \u4e00\u4e2a\u4e00\u4e2a\u53d6\u56de\u7ed3\u679c\u5143\u7ec4\u81f3\u7a0b\u5e8f\u53d8\u91cf\u4e2d</p> <p>SQL \u4e0e C \u8bed\u8a00\u5b58\u5728\u9e3f\u6c9f\uff08\u5982 select \u5f97\u5230\u7684\u662f\u96c6\u5408\uff0c\u4f46\u662f C \u8bed\u8a00\u6ca1\u6709\u8fd9\u79cd\u7c7b\u578b\uff09\u4f1a\u8fd4\u56de\u6307\u9488/\u8fed\u4ee3\u5668</p> <ul> <li>ODBC\u00a0(Open Database Connectivity) works with C, C++, C#</li> <li>JDBC\u00a0(Java Database Connectivity) works with Java     \u901a\u8fc7\u7c7b\u5b9a\u4e49\uff0c\u5c06\u6570\u636e\u5e93\u64cd\u4f5c\u5c01\u88c5\u5230 Java \u5185</li> <li>Embedded SQL in C</li> <li>SQLJ\u00a0- embedded SQL in Java</li> <li>JPA(Java Persistence API) - OR mapping of Java</li> </ul>"},{"location":"note/courses/database%20system/Chapter%205/#111-jdbc","title":"1.1.1 JDBC","text":"<p>JDBC\u00a0is a Java API for communicating with database systems supporting SQL.</p> <pre><code>public static void JDBCexample(String dbid, String userid, String passwd) \n        { \n     try { \n   Connection conn = DriverManager.getConnection(\"jdbc:oracle:thin:@db.yale.edu:2000:univdb\", userid, passwd); \n          Statement stmt = conn.createStatement(); \n              \u2026 Do Actual Work \u2026.\n          stmt.close(); \n          conn.close(); \n     }      \n     catch (SQLException sqle) {        \n          System.out.println(\"SQLException : \" + sqle);     \n     }      \n        }\n</code></pre> <ul> <li>Open a connection</li> <li>Create a \u201cstatement\u201d object</li> <li>Execute queries using the Statement object to send queries and fetch results</li> <li>Exception mechanism to handle errors</li> </ul> Example <ul> <li>Update to database <pre><code>Update to database \ntry {\n    stmt.executeUpdate(\n        \"insert into instructor values(\u201977987\u2019, \u2019Kim\u2019, \u2019Physics\u2019, 98000)\");\n        } catch (SQLException sqle)\n        {\n            System.out.println(\"Could not insert tuple. \" + sqle);\n        }\n</code></pre></li> <li>Execute query and fetch and print results <pre><code>ResultSet rset = stmt.executeQuery(\n        \"select dept_name, avg (salary)\n        from instructor\n        group by dept_name\");\n        while (rset.next()) {\n            System.out.println(rset.getString(\"dept_name\") + \" \" + rset.getFloat(2));\n        }\n</code></pre></li> <li>Getting result fields: <pre><code>rset.getString(\u201cdept_name\u201d) and rset.getString(1) equivalent if dept_name is the first argument of select result.\n</code></pre></li> <li>Dealing with Null values <pre><code>int a = rset.getInt(\u201ca\u201d);\n    if (rset.wasNull()) Systems.out.println(\u201cGot null value\u201d);\n</code></pre></li> </ul> <p>Prepared Statement</p> Prepared Statement <p><pre><code>PreparedStatement pStmt = conn.prepareStatement(\n        \"insert into instructor values(?,?,?,?)\");\npStmt.setString(1, \"88877\");      \npStmt.setString(2, \"Perry\");\npStmt.setString(3, \"Finance\");   \npStmt.setInt(4, 125000);\npStmt.executeUpdate();    \npStmt.setString(1, \"88878\");\npStmt.executeUpdate();\n</code></pre> \u8fd9\u91cc\u7a7a\u683c\u662f\u5360\u4f4d\u7b26\uff0c\u8868\u793a\u6267\u884c\u65f6\u9700\u8981\u63d0\u4f9b\u56db\u4e2a\u53c2\u6570\u3002 <code>setString, setInt</code> \u5c31\u662f\u628a\u7b2c\u51e0\u4e2a\u5360\u4f4d\u7b26\u8bbe\u7f6e\u4e3a\u53c2\u6570\uff0c\u5e76 <code>executeUpdate</code> \u8fdb\u884c\u63d2\u5165\u3002</p> <p>SQL Injection</p> <p>Always use prepared statements when taking an input from the user and adding it to a query. NEVER create a query by concatenating strings which you get as inputs.  \u5f53\u4ece\u7528\u6237\u5904\u83b7\u53d6\u8f93\u5165\u5e76\u5c06\u5176\u6dfb\u52a0\u5230\u67e5\u8be2\u4e2d\u65f6\uff0c\u59cb\u7ec8\u4f7f\u7528prepared statement\u3002\u6c38\u8fdc\u4e0d\u8981\u901a\u8fc7connnectioin\u4f5c\u4e3a\u8f93\u5165\u7684\u5b57\u7b26\u4e32\u6765\u521b\u5efa\u67e5\u8be2\u3002</p> <p>SQL \u6ce8\u5165\u653b\u51fb\u3002</p> <p>Suppose query is constructed using <code>select * from instructor where name = \u2019\" + name + \u201c \u2019</code> Suppose the user, instead of entering a name, enters: <code>X\u2019 or \u2019Y\u2019 = \u2019Y</code> then the resulting string of the statement becomes: <code>select * from instructor where name = \u2019\" + \"X\u2019 or \u2019Y\u2019 = \u2019Y\" + \u201c\u2019</code> which is: <code>select * from instructor where name = \u2019X\u2019 or \u2019Y\u2019 = \u2019Y\u2019</code>  User could have even used <code>X\u2019; update instructor set salary = salary + 10000;</code> then <code>select * from instructor where name = \u2019X\u2019; update instructor set salary = salary + 10000;</code> \u603b\u662f\u4f7f\u7528prepared statements,\u7528\u6237\u8f93\u5165\u4f5c\u4e3a\u53c2\u6570</p> <p>Metadata Features </p> <ul> <li> <p>ResultSet metadata </p> Example <p>after executing query to get a ResultSet rs: <pre><code>ResultSetMetaData rsmd = rs.getMetaData();\nfor(int i = 1; i &lt;= rsmd.getColumnCount(); i++) {\n    System.out.println(rsmd.getColumnName(i));\n            System.out.println(rsmd.getColumnTypeName(i));\n    }\n</code></pre></p> </li> <li> <p>Database metadata</p> Example <pre><code>DatabaseMetaData dbmd = conn.getMetaData();\nResultSet rs = dbmd.getColumns(null, \"univdb\", \"department\", \"%\");\n// Arguments to getColumns: Catalog, Schema-pattern, Table-pattern,\n// and Column-Pattern\n// Returns: One row for each column; row has a number of attributes\n// such as COLUMN_NAME, TYPE_NAME\nwhile( rs.next()) {\n    System.out.println(rs.getString(\"COLUMN_NAME\"),\n                                                    rs.getString(\"TYPE_NAME\");\n</code></pre> </li> </ul> <p>Transaction Control in JDBC </p> <ul> <li>Can turn off automatic commit on a connection <code>conn.setAutoCommit(false);</code></li> <li>Transactions must then be committed or rolled back explicitly <code>conn.commit();</code> or <code>conn.rollback();</code></li> <li><code>conn.setAutoCommit(true)</code> turns on automatic commit.</li> </ul> <p>\u6240\u6709\u7684\u6570\u636e\u5e93\u529f\u80fd\u90fd\u662f\u901a\u8fc7 Java \u5c01\u88c5\u597d\u7684\u7c7b\u6765\u5b9e\u73b0\u7684\u3002</p> <p>other JDBC features</p> <ul> <li>\u8c03\u7528\u51fd\u6570\u548cprocedure     <pre><code>CallableStatement cStmt1 = conn.prepareCall(\"{? = call some function(?)}\");\nCallableStatement cStmt2 = conn.prepareCall(\"{call some procedure(?,?)}\");\n</code></pre></li> <li>\u5904\u7406large\u7684\u6570\u636e\u7c7b\u578b<ul> <li>getBlob() and getClob() that are similar to the getString() method, but return objects of type Blob and Clob, respectively</li> <li>get data from these objects by getBytes()</li> <li>associate an open stream with Java Blob or Clob object to update large objects\u3002\u5c06\u5f00\u653e\u6d41\u4e0eJava Blob\u6216Clob\u5bf9\u8c61\u5173\u8054\u4ee5\u66f4\u65b0\u5927\u578b\u5bf9\u8c61 <pre><code>blob.setBlob(int parameterIndex, InputStream inputStream).\n</code></pre></li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%205/#112-sqlj","title":"1.1.2 SQLJ","text":"<p>JDBC is overly dynamic, errors cannot be caught by compiler</p> <p>SQLJ: embedded SQL in Java <pre><code>#sql iterator deptInfoIter ( String dept name, int avgSal);\n    deptInfoIter iter = null;\n    #sql iter = { select dept_name, avg(salary) as avgSal from instructor\n             group by dept name };\n    while (iter.next()) {\n           String deptName = iter.dept_name();\n          int avgSal = iter.avgSal();\n          System.out.println(deptName + \" \" + avgSal);\n    }\n    iter.close();\n</code></pre> \u5d4c\u5165\u90fd\u8981 <code>#sql</code> \u6807\u8bc6\uff0c\u6700\u540e\u4f1a\u88ab\u7f16\u8bd1\u5668\u8f6c\u5316\u4e3a Java \u7684\u7c7b\u3002</p>"},{"location":"note/courses/database%20system/Chapter%205/#113-odbc","title":"1.1.3 ODBC","text":"<p>Open database conectivity -  standard for application program to communicate with a database server. - application program interface (API) to      - open a connection with a database,      - send queries and updates,      - get back results.</p> <p>Each database system supporting ODBC provides a \"driver\" library that must be linked with the client program.</p> <p>\u5f53client program \u53d1\u8d77\u4e00\u4e2aODBC API \u8c03\u7528\uff0c\u5e93\u4e2d\u7684\u4ee3\u7801\u4e0e\u6570\u636e\u5e93\u5efa\u7acb\u8054\u7cfb\u5e76\u6267\u884c\u64cd\u4f5c\u83b7\u5f97\u7ed3\u679c</p> <p>Opens database connection using SQLConnect().  Parameters for SQLConnect: - connection handle, - the server to which to connect - the user identifier,  - password </p> <p>SQL_NTS denotes previous argument is a null-terminated string. \u7528\u4e8e\u6307\u793a\u67d0\u4e2a\u53c2\u6570\u662f\u4e00\u4e2a\u4ee5\u7a7a\u5b57\u7b26\uff08<code>\\0</code>\uff09\u7ed3\u5c3e\u7684\u5b57\u7b26\u4e32\uff08\u5373 C \u8bed\u8a00\u4e2d\u7684 null-terminated string\uff09</p> Example <pre><code>int ODBCexample()\n{\n    RETCODE error;\n    HENV    env;     /* environment */ \n    HDBC    conn;  /* database connection */ \n    SQLAllocEnv(&amp;env);\n    SQLAllocConnect(env, &amp;conn);\n    SQLConnect(conn, \u201cdb.yale.edu\", SQL_NTS, \"avi\", SQL_NTS, \"avipasswd\", SQL_NTS); \n    { ... Do actual work ... }\n\n    SQLDisconnect(conn); \n    SQLFreeConnect(conn); \n    SQLFreeEnv(env); \n}\n</code></pre> <p>\u540c\u4e00\u4e2a\u6570\u636e\u5e93\u53ef\u80fd\u670d\u52a1\u4e8e\u591a\u4e2a\u7528\u6237\uff0c\u800c\u4e14\u4f7f\u7528\u7684\u7f16\u7a0b\u8bed\u8a00\u53ef\u80fd\u4e0d\u540c\uff0c\u5982\u5b57\u7b26\u4e32\u7684\u7ed3\u675f\u6807\u5fd7\u53ef\u80fd\u4e5f\u4e0d\u540c\uff0c\u56e0\u6b64\u9700\u8981\u7528 <code>SQL_NTS</code> \u6807\u8bc6\u3002</p> <ul> <li>Program sends SQL commands to database by using <code>SQLExecDirect</code></li> <li>Result tuples are fetched using <code>SQLFetch()</code></li> <li><code>SQLBindCol()</code> binds C language variables to attributes of the query result <ul> <li>When a tuple is fetched, its attribute values are automatically stored in corresponding C variables.  </li> <li>Arguments to SQLBindCol()<ul> <li>ODBC stmt variable, attribute position in query result</li> <li>The type conversion from SQL to C.  </li> <li>The address of the variable. </li> <li>For variable-length types like character arrays,   <ul> <li>The maximum length of the variable  </li> <li>Location to store actual length when a tuple is fetched.</li> <li>Note: A negative value returned for the length field indicates null value</li> </ul> </li> </ul> </li> </ul> </li> </ul> Example <p><pre><code>Main body of program\nchar deptname[80];\nfloat salary;\nint lenOut1, lenOut2;\nHSTMT stmt;\nchar * sqlquery = \"select dept_name, sum (salary) from instructor group by dept_name\";\nSQLAllocStmt(conn, &amp;stmt);\nerror = SQLExecDirect(stmt, sqlquery, SQL_NTS);\nif (error == SQL SUCCESS) {\n    SQLBindCol(stmt, 1, SQL_C_CHAR, deptname , 80, &amp;lenOut1);\n    SQLBindCol(stmt, 2, SQL_C_FLOAT, &amp;salary, 0 , &amp;lenOut2);\n    while (SQLFetch(stmt) == SQL_SUCCESS) {\n        printf (\" %s %g\\n\", deptname, salary);\n    }\n}\nSQLFreeStmt(stmt, SQL_DROP);\n</code></pre> \u5b9a\u4e49\u6570\u7ec4\u9700\u8981\u591a\u4e00\u4e2a\uff0c\u5426\u5219\u4f1a\u6709\u622a\u65ad\u3002\u5982 <code>char deptname[11];</code> \u624d\u80fd\u5b9a\u4e49\u5341\u4e2a\u5143\u7ec4\u3002 \u5982\u679c\u7ed3\u679c\u4e3a\u7a7a\uff0c\u5219 <code>lenOut</code> \u4e3a -1. </p> <p>ODBC Prepared Statements</p> <ul> <li>SQL statement prepared: compiled at the database<ul> <li>To prepare a statement <code>SQLPrepare(stmt, &lt;SQL String&gt;);</code> </li> <li>To bind parameters <code>SQLBindParameter(stmt, &lt;parameter#&gt;,  ... type information and value omitted for simplicity..)</code></li> <li>To execute the statement <code>retcode = SQLExecute(stmt);</code></li> </ul> </li> <li>Can have placeholders: e.g. <code>insert into account values(?,?,?)</code></li> <li>Repeatedly executed with actual values for the placeholders</li> </ul> <p>SQL injection </p> <p>More ODBC Features </p> <ul> <li>Metadata features  <ul> <li>finding all the relations in the database and</li> <li>finding the names and types of columns of a query result or a relation in the database.</li> </ul> </li> <li>By default, each SQL statement is treated as a separate transaction that is committed automatically.<ul> <li>Can turn off automatic commit on a connection <code>SQLSetConnectOption(conn, SQL_AUTOCOMMIT, 0)}</code></li> <li>Transactions must then be committed or rolled back explicitly by <code>SQLTransact(conn, SQL_COMMIT)</code> or <code>SQLTransact(conn, SQL_ROLLBACK)</code></li> </ul> </li> </ul> <p>ODBC Conformance Levels</p> <p>Conformance levels specify subsets of the functionality defined by the standard. - Core - Level 1 requires support for metadata querying - Level 2 requires ability to send and retrieve arrays of parameter values and more detailed catalog information.</p> <p>SQL Call Level Interface (CLI) standard similar to ODBC interface, but with some minor differences.</p>"},{"location":"note/courses/database%20system/Chapter%205/#114-embedded-sql","title":"1.1.4 Embedded SQL","text":"<p>A language to which SQL queries are embedded is referred to as a host language, and the SQL structures permitted in the host language comprise embedded SQL. \u5982\u628a SQL \u5d4c\u5165\u5230 C \u8bed\u8a00\uff0c\u90a3\u4e48 C \u8bed\u8a00\u662f host.  </p> <p>\u5728\u7f16\u8bd1\u524d\uff0c\u6709\u4e00\u4e2a\u9884\u7f16\u8bd1\u5668\uff0c\u5c06 SQL \u8bed\u53e5\u7ffb\u8bd1\u3002</p> <p>EXEC SQL statement is used in the host language to identify embedded SQL request to the preprocessor (in Java, <code># SQL { ... };</code>)</p> <p>\u5728\u6267\u884cSQL statement\u4e4b\u524d\uff0c\u7a0b\u5e8f\u5fc5\u987b\u9996\u5148\u8fde\u63a5\u5230\u6570\u636e\u5e93 <pre><code>    EXEC-SQL connect to  server  user user-name using password;\n    ```\n\nVariables of the host language can be used within embedded SQL statements.They are preceded  by a colon  (:) to distinguish from SQL variables (e.g.,  :credit_amount )\n\nHost Variables used as above must be declared within DECLARE section, as illustrated below. The syntax for declaring the variables, however, follows the usual host language syntax.\n\n```c\nEXEC-SQL BEGIN DECLARE SECTION\n                      int  credit-amount ;\n              EXEC-SQL END DECLARE SECTION;\n</code></pre></p> <p>To write an embedded SQL query, we use the               <code>declare c cursor for  &lt;SQL query&gt;</code>       statement.  The  variable c  is used to identify the query</p> <p>Example</p> <p>From within a host language, find the ID and name of students who  have completed more than the number of credits stored in variable credit_amount in the host langue</p> <pre><code>EXEC SQL\n           declare c cursor for          \n           select ID, name           \n           from student           \n           where tot_cred &gt; :credit_amount;\n</code></pre> <p>The open statement for our example is as follows: <pre><code>EXEC SQL open c ;\n</code></pre> \u8be5\u8bed\u53e5\u4f7f\u6570\u636e\u5e93\u7cfb\u7edf\u6267\u884c\u67e5\u8be2\u5e76\u5c06\u7ed3\u679c\u4fdd\u5b58\u5728\u4e00\u4e2a\u4e34\u65f6\u5173\u7cfb\u4e2d\u3002\u67e5\u8be2\u5728\u6267\u884copen\u8bed\u53e5\u65f6\u4f7f\u7528host language \u53d8\u91cf credit-amount\u7684\u503c\u3002</p> <p>The fetch statement causes the values of one tuple in the query result to be placed on host language variables. <pre><code>EXEC SQL fetch c into :si, :sn\uff1b\n</code></pre></p> <p>A variable called SQLSTATE in the SQL communication area (SQLCA) gets set to '02000' to indicate no more data is available</p> <p>The close statement causes the database system to delete the temporary relation that holds the result of the query <pre><code>EXEC SQL close c;\n</code></pre></p> <p>updates through embedded SQL Embedded SQL expressions for database modification (update, insert, and delete)</p> <p>Can update tuples fetched by cursor by declaring that the cursor is for update <pre><code>EXEC SQL \ndeclare c cursor for\n    select *\n    from instructor          \n    where dept_name = 'Music'             \n    for update\n</code></pre></p> <p>\u7136\u540e\u901a\u8fc7\u5728\u6e38\u6807\u4e0a\u6267\u884c\u53d6\u64cd\u4f5c\u6765\u904d\u5386\u5143\u7ec4\uff0c\u53d6\u5b8c\u6bcf\u4e2a\u5143\u7ec4\u540e\u6267\u884c\u4ee5\u4e0b\u4ee3\u7801 <pre><code>update instructor             \nset salary = salary + 1000\nwhere current of c\n</code></pre></p> <p>Issues with Embedded SQL</p> <ul> <li>Mark the start point and end point of Embedded SQL <code>EXEC  SQL  &lt;statement&gt;\uff1b  //C</code></li> <li>Communication between database and programming language e.g. SQLCA\u3001SQLDA</li> <li>Address the mismatching issue between SQL and host lanugage. Handle result (set) with cursor Mapping of basic data types e.g. SQL:  Date \\(\\rightarrow\\) C: char(12)</li> </ul> Example <p><pre><code>insert\u3001delete\u3001update\u3001select(single record)\nmain( )\n{  EXEC SQL INCLUDE SQLCA; //\u58f0\u660e\u6bb5\u5f00\u59cb\n    EXEC SQL BEGIN DECLARE SECTION;\n    char account_no [11];    //host variables(\u5bbf\u4e3b\u53d8\u91cf)\u58f0\u660e\n    char branch_name [16];\n    int  balance;  \nEXEC SQL END DECLARE SECTION;//\u58f0\u660e\u6bb5\u7ed3\u675f\nEXEC SQL CONNECT  TO  bank_db  USER Adam Using Eve; \nscanf (\u201c%s  %s  %d\u201d, account_no, branch_name, balance);\nEXEC SQL insert into account \n                values (:account_no, :branch_name, :balance);\nIf (SQLCA.sqlcode ! = 0)    printf ( \u201cError!\\n\u201d);\nelse       printf (\u201cSuccess!\\n\u201d);\n}\n</code></pre> \u6700\u5f00\u59cb\u58f0\u660e\u6bb5\u4e2d\u7684 host \u8bed\u53e5\uff0c\u53ef\u4ee5\u7528\u5728 SQL \u8bed\u53e5\u91cc\u3002</p> <p>\u4e24\u70b9\u4e0d\u5e73\u8861\uff1a\u6ca1\u6709\u96c6\u5408\uff1b\u6ca1\u6709 NULL\uff1b\u6ca1\u6709\u65e5\u671f\u7c7b\u578b</p> <p>\u53ef\u4ee5\u5728\u7f16\u8bd1\u65f6\u8fdb\u884c\u7c7b\u578b\u68c0\u67e5\uff0c\u4f46 ODBC \u53ea\u6709\u5728\u8fd0\u884c\u65f6\u624d\u6709\u3002</p> <ul> <li>Static\uff1a Embedded SQL statements( include relation names and attribute names) are hard coded in program.</li> <li>Dynamic\uff1aEmbedded SQL statements are built at run time</li> </ul>"},{"location":"note/courses/database%20system/Chapter%205/#2-procedural-constructs-in-sql","title":"2 Procedural Constructs in SQL","text":"<p>SQL provides a module language  Permits definition of procedures in SQL, with if-then-else statements, for and while loops, etc.</p> <p>Stored Procedures  </p> <ul> <li>Can store procedures in the database </li> <li>then execute them using the call statement</li> <li>permit external applications to operate on the database without knowing about internal </li> </ul>"},{"location":"note/courses/database%20system/Chapter%205/#21-procedures-and-functions","title":"2.1 Procedures and  Functions","text":"<p>\u51fd\u6570\u548c\u5b58\u50a8\u8fc7\u7a0b\u5141\u8bb8\u5c06 \u201c\u4e1a\u52a1\u903b\u8f91\u201d \u5b58\u50a8\u5728\u6570\u636e\u5e93\u4e2d\uff0c\u5e76\u901a\u8fc7 SQL \u8bed\u53e5\u6267\u884c\u3002 \u8fd9\u4e9b\u53ef\u4ee5\u901a\u8fc7 SQL \u7684\u8fc7\u7a0b\u7ec4\u4ef6\u6216\u5916\u90e8\u7f16\u7a0b\u8bed\u8a00\uff08\u5982 Java\u3001C \u6216 C++\uff09\u6765\u5b9a\u4e49\u3002\u8fd9\u91cc\u4ecb\u7ecd\u7684\u8bed\u6cd5\u662f\u7531 SQL \u6807\u51c6\u5b9a\u4e49\u7684\uff0c\u5927\u591a\u6570\u6570\u636e\u5e93\u5b9e\u73b0\u7684\u662f\u8be5\u8bed\u6cd5\u7684\u975e\u6807\u51c6\u7248\u672c\u3002</p>"},{"location":"note/courses/database%20system/Chapter%205/#22-sql-functions","title":"2.2 SQL Functions","text":"Example <p>SQL \u51fd\u6570\u7684\u8fd4\u56de\u503c\u53ef\u4ee5\u662f\u4e00\u4e2a table. </p> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%205/#23-sql-procedures","title":"2.3 SQL Procedures","text":"<p><code>dept_count</code>\u00a0\u51fd\u6570\u4e5f\u53ef\u4ee5\u5199\u6210\u5b58\u50a8\u8fc7\u7a0b\u7684\u5f62\u5f0f\uff1a</p> <p>\u6709\u8f93\u5165\u53c2\u6570(<code>in</code>)\u548c\u8f93\u51fa\u53c2\u6570(<code>out</code>)</p> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%205/#24-procedural-constructs","title":"2.4 Procedural Constructs","text":"<p>Compound statement: <code>begin ... end</code>, </p> <ul> <li>May contain multiple SQL statements between <code>begin</code> and <code>end</code>.</li> <li> <p>Local variables can be declared within a compound statements</p> </li> <li> <p><code>While</code> and <code>repeat</code> statements e.g. <pre><code>declare n integer default 0;\nwhile n &lt; 10 do\n    set n = n + 1\nend while                           \n        repeat\n    set n = n  \u2013 1\n        until n = 0\nend repeat\n</code></pre></p> </li> <li> <p><code>For</code> loop Permits iteration over all results of a query     e.g. <pre><code>declare n  integer default 0;\nfor r as\n    select budget from department \n    where dept_name = \u2018Music\u2019 \n    do \n        set n = n - r.budget \nend for\n</code></pre>     r \u8868\u793a\u8fd4\u56de\u7684\u6bcf\u4e00\u884c</p> </li> <li> <p>Conditional statements <pre><code>if boolean expression \nthen statement or compound statement \nelseif boolean expression \nthen statement or compound statement \nelse statement or compound statement \nend if\n</code></pre></p> </li> </ul> Example procedure <p> </p>"},{"location":"note/courses/database%20system/Chapter%205/#25-external-language-functionsprocedures","title":"2.5 External Language Functions/Procedures","text":"<p>SQL \u53ef\u4ee5\u8bbf\u95ee\u7531 C \u8bed\u8a00\u5b9a\u4e49\u7684\u51fd\u6570\uff08\u8fc7\u7a0b\uff09</p> Example <pre><code>create procedure dept_count_proc(in dept_name varchar(20),  count integer)\nlanguage C \nexternal name \u2019 /usr/avi/bin/dept_count_proc\u2019 \ncreate function dept_count(dept_name varchar(20))\nreturns integer\nlanguage C\nexternal name \u2018/usr/avi/bin/dept_count\u2019\n</code></pre> <p>\u53ef\u80fd\u6bd4\u8f83\u5371\u9669\uff0c\u653e\u5728\u865a\u62df\u673a\uff08Java\uff09\u6216\u8005\u72ec\u7acb\u7684\u7ebf\u7a0b</p>"},{"location":"note/courses/database%20system/Chapter%205/#251-external-language-routines","title":"2.5.1 External language Routines","text":"<p>\u5916\u90e8\u8bed\u8a00\u51fd\u6570 / \u8fc7\u7a0b\u7684\u4f18\u70b9\uff1a</p> <p>\u5728\u8bb8\u591a\u64cd\u4f5c\u4e2d\u66f4\u9ad8\u6548\uff0c\u4e14\u5177\u6709\u66f4\u5f3a\u7684\u8868\u8fbe\u80fd\u529b\u3002  </p> <p>\u7f3a\u70b9\uff1a</p> <p>\u5b9e\u73b0\u51fd\u6570\u7684\u4ee3\u7801\u53ef\u80fd\u9700\u8981\u52a0\u8f7d\u5230\u6570\u636e\u5e93\u7cfb\u7edf\u4e2d\uff0c\u5e76\u5728\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u5730\u5740\u7a7a\u95f4\u4e2d\u6267\u884c\u3002</p> <p>\u5b58\u5728\u610f\u5916\u635f\u574f\u6570\u636e\u5e93\u7ed3\u6784\u7684\u98ce\u9669\u4ee5\u53ca\u5b89\u5168\u98ce\u9669\uff0c\u53ef\u80fd\u4f1a\u8ba9\u7528\u6237\u8bbf\u95ee\u5230\u672a\u7ecf\u6388\u6743\u7684\u6570\u636e\u3002</p> <p>\u4e5f\u6709\u4e00\u4e9b\u66ff\u4ee3\u65b9\u6848\uff0c\u5b83\u4eec\u80fd\u63d0\u4f9b\u826f\u597d\u7684\u5b89\u5168\u6027\uff0c\u4f46\u53ef\u80fd\u4f1a\u5bfc\u81f4\u6027\u80fd\u7a0d\u5dee\u3002</p> <p>\u5f53\u6548\u7387\u6bd4\u5b89\u5168\u6027\u66f4\u91cd\u8981\u65f6\uff0c\u4f1a\u5728\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u7a7a\u95f4\u4e2d\u76f4\u63a5\u6267\u884c\u3002</p>"},{"location":"note/courses/database%20system/Chapter%205/#252-security-with-external","title":"2.5.2 Security with External","text":""},{"location":"note/courses/database%20system/Chapter%205/#-to-deal-with-security-problems","title":"- To deal with security problems","text":"<pre><code>\u4f7f\u7528\u6c99\u76d2\u6280\u672f\u5373\u4f7f\u7528\u50cf Java \u8fd9\u6837\u7684\u5b89\u5168\u8bed\u8a00\uff0c\u5b83\u65e0\u6cd5\u7528\u4e8e\u8bbf\u95ee\u6216\u7834\u574f\u6570\u636e\u5e93\u4ee3\u7801\u7684\u5176\u4ed6\u90e8\u5206\u3002\u6216\u8005\uff0c\u5728\u5355\u72ec\u7684\u8fdb\u7a0b\u4e2d\u8fd0\u884c\u5916\u90e8\u8bed\u8a00\u51fd\u6570 / \u8fc7\u7a0b\uff0c\u4e14\u65e0\u6cd5\u8bbf\u95ee\u6570\u636e\u5e93\u8fdb\u7a0b\u7684\u5185\u5b58\u3002\u901a\u8fc7\u8fdb\u7a0b\u95f4\u901a\u4fe1\u6765\u4f20\u9012\u53c2\u6570\u548c\u7ed3\u679c\u3002\u8fd9\u4e24\u79cd\u65b9\u6cd5\u90fd\u4f1a\u4ea7\u751f\u6027\u80fd\u5f00\u9500\u3002\u8bb8\u591a\u6570\u636e\u5e93\u7cfb\u7edf\u652f\u6301\u4e0a\u8ff0\u4e24\u79cd\u65b9\u6cd5\uff0c\u4ee5\u53ca\u5728\u6570\u636e\u5e93\u7cfb\u7edf\u5730\u5740\u7a7a\u95f4\u4e2d\u76f4\u63a5\u6267\u884c\u3002\n</code></pre>"},{"location":"note/courses/database%20system/Chapter%205/#3-triggers","title":"3 Triggers","text":"<p>A <code>trigger</code> is a statement that is executed automatically by the system as a side effect of a modification to the database.  </p> <p>Trigger -  ECA rule * E: Event \uff08 insert, delete \uff0cupdate\uff09 * C: Condition A*: Action</p> <p>To design a trigger mechanism, we must: </p> <ul> <li>Specify the conditions under which the trigger is to be executed.</li> <li>Specify the actions to be taken when the trigger executes.</li> </ul> Example <p> </p> time_slot_id Example <p> </p> <p>\u8fd9\u91cc time_slot_id \u4e0d\u662f\u4e3b\u952e\uff0c\u56e0\u6b64\u5220\u9664\u4e0d\u4f1a\u5f15\u8d77\u5176\u4ed6\u5f71\u54cd\u3002\u4f46\u6211\u4eec\u53ef\u4ee5\u8bbe\u8ba1\u4e00\u4e2a\u89e6\u53d1\u5668\uff0c\u7528\u6765\u68c0\u67e5\u5f53\u524d\u8bfe\u7a0b\u7684 time_slot_id \u662f\u5426\u5728\u8868\u5185\u3002 \u7b2c\u4e8c\u4e2a\u89e6\u53d1\u5668\u8868\u793a\uff0ctime_slot_id \u5df2\u7ecf\u88ab\u5220\u5b8c\u4e86\uff0c\u4f46\u4f9d\u7136\u6709\u8bfe\u7a0b\u5728\u5f15\u7528\uff0c\u5c31\u8981 rollback.  </p> <ul> <li>Triggering event can be insert, delete or update</li> <li>Triggers on update can be restricted to specific attributes e.g. after(before) update of  takes on grade</li> <li>Values of attributes before and after an update can be referenced<ul> <li>referencing old row as:  for deletes and updates</li> <li>referencing new row as: for inserts and updates</li> </ul> </li> </ul> Trigger to Maintain credits_earned value <p> </p> <p>\u5982\u679c\u672c\u6765\u6302\u79d1\uff0c\u6216\u8005\u6ca1\u6709\u6210\u7ee9\uff0c\u66f4\u65b0\u540e\u4e0d\u518d\u6302\u79d1\u800c\u4e14\u6709\u6210\u7ee9\uff0c\u5c31\u628a\u5b66\u5206\u52a0\u4e0a\u53bb\u3002</p> <p>\u8981\u614e\u7528\u89e6\u53d1\u5668\uff0c\u7528\u5728\u5200\u5203\u4e0a\uff0c\u53ef\u80fd\u4f1a\u5f15\u53d1\u8fde\u9501\u53cd\u5e94\u3002</p> <p>Instead of executing a separate action for each affected row, a single action can be executed for all rows affected by a transaction</p> <ul> <li>Use <code>for each statement</code>  instead of <code>for each row</code></li> <li>Use <code>referencing old table</code> or <code>referencing new table</code> to refer to temporary tables (called transition tables) containing the affected rows</li> <li>Can be more efficient when dealing with SQL statements that update a large number of rows</li> </ul> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%206/","title":"Entity-Relationship Model","text":""},{"location":"note/courses/database%20system/Chapter%206/#1-example","title":"1 Example","text":"<ul> <li>\u4e00\u4e2a\u65b9\u5f62\u6846\u5c31\u662f\u4e00\u4e2a\u5b9e\u4f53\u7684\u96c6\u5408\uff0c\u4e0b\u9762\u5217\u51fa\u5176\u5c5e\u6027\u3002</li> <li>\u5b9e\u4f53\u4e0e\u5b9e\u4f53\u4e4b\u95f4\u6709\u5173\u7cfb\uff0c\u4e00\u4e2a\u83f1\u5f62\u6846\u8868\u793a\u5173\u7cfb\u3002 \u4e00\u5bf9\u4e00(\\(\\leftrightarrow\\))/\u4e00\u5bf9\u591a/\u591a\u5bf9\u4e00(\\(\\leftarrow, \\rightarrow\\))\u3002 \u8fd9\u91cc instructor \u5b9e\u4f53\u91cc\u4e0d\u9700\u8981 <code>dept</code> \u5c5e\u6027\uff0c\u56e0\u4e3a\u5728 department \u5b9e\u4f53\u91cc\u6709\u4e86\uff0c\u5426\u5219\u4f1a\u5197\u4f59\u3002</li> </ul> <p>\u6bcf\u4e2a\u5b9e\u4f53\u76f4\u63a5\u8f6c\u6362\u4e3a\u5173\u7cfb\u6a21\u5f0f\u3002 \u5173\u7cfb\u8f6c\u6362\u4e3a\u5143\u7ec4\uff0c\u5143\u7d20\u4e3a\u4e24\u4e2a\u8868\u7684 primary key. \u5bf9\u4e8e\u4e00\u5bf9\u591a\u7684\u60c5\u51b5\uff08\u5982 <code>instructor</code> \u548c <code>department\uff09\u8f6c\u6362\u540e</code> primary key \u4ecd\u4e3a ID. \u4e3a\u4e86\u51cf\u5c11\u8868\u7684\u6570\u91cf\uff0c\u53ef\u4ee5\u628a primary key \u76f8\u540c\u7684\u8868\u5408\u5e76\u3002</p> <p>\u53cc\u6a2a\u7ebf\u4e0e\u5355\u6a2a\u7ebf\u4e0d\u540c \u53cc\u6a2a\u7ebf\u8868\u793a\u6bcf\u4e2a\u5bf9\u8c61\u90fd\u5fc5\u987b\u53c2\u4e0e\u5173\u7cfb\uff0c\u800c\u5355\u6a2a\u7ebf\u5219\u8868\u793a\u5bf9\u8c61\u53ef\u4ee5\u4e0d\u53c2\u4e0e\u5173\u7cfb\u3002\u5982 <code>inst_dept</code> \u4e2d\u5982\u679c <code>department</code>-<code>inst_dep</code> \u4e3a\u53cc\u6a2a\u7ebf\uff0c\u5219\u8868\u793a\u6bcf\u4e00\u4e2a\u7cfb\u90fd\u8981\u6709\u8001\u5e08\u3002 \u6709\u4e9b\u8054\u7cfb\u662f\u9690\u542b\u7684\uff0c\u5982\u6388\u8bfe\u8001\u5e08\u548c\u542c\u8bfe\u7684\u5b66\u751f\u3002</p> <p><code>section</code> \u4e0d\u8db3\u4ee5\u552f\u4e00\u786e\u5b9a\u5143\u7ec4\uff0c\u79f0\u4e3a\u5f31\u5b9e\u4f53\uff0c\u4f9d\u8d56\u4e8e\u53e6\u4e00\u4e2a\u5b9e\u4f53\uff08\u5982 OOP\u3001DB \u90fd\u53ef\u4ee5\u6709\u540c\u6837\u5e74\u4efd\u5b66\u671f\u7684 1 \u73ed\uff09\u3002\u56e0\u4e3a\u8bfe\u7a0b\u53f7 <code>course_id</code> \u653e\u5728 <code>section</code> \u4f1a\u6709\u5197\u4f59\uff0c\u56e0\u6b64\u6ca1\u6709\u8fd9\u4e2a\u5c5e\u6027\uff0c\u5bfc\u81f4\u5f62\u6210\u4e86\u4e00\u4e2a\u5f31\u5b9e\u4f53\u3002 <code>sec_course</code> \u8868\u793a\u8054\u7cfb\u7684\u662f\u5f31\u5b9e\u4f53\uff08\u53cc\u6846\uff09\uff0c<code>section</code> \u4e0d\u80fd\u79bb\u5f00 <code>course</code> \u5b58\u5728\u3002</p> <p>relationship \u4e0a\u4e5f\u53ef\u4ee5\u5e26\u5c5e\u6027\uff0c\u5982 <code>takes</code> \u4e0a\u7684 <code>grade</code>. </p> <p>\u5173\u7cfb\u53cc\u65b9\u53ef\u4ee5\u662f\u76f8\u540c\u7684\u5b9e\u4f53\u96c6\u5408\uff0c<code>course</code> \u8fd9\u91cc\u7684 <code>prereq</code> \u662f\u591a\u5bf9\u591a\uff0c\u8868\u793a\u4e00\u95e8\u8bfe\u53ef\u4ee5\u6709\u591a\u95e8\u9884\u4fee\u8bfe\uff0c\u4e00\u95e8\u8bfe\u4e5f\u53ef\u4ee5\u662f\u591a\u95e8\u8bfe\u7684\u9884\u4fee\u8bfe\u3002<code>{}</code> \u91cc\u9762\u662f\u591a\u4e2a\u503c\uff0c\u8868\u793a\u590d\u5408\u5c5e\u6027\u3002\u8fd9\u91cc\u8868\u793a <code>time_slot_id</code> \u5b9e\u9645\u4e0a\u53ef\u4ee5\u7531\u8fd9\u4e09\u4e2a\u5c5e\u6027\u590d\u5408\u800c\u6210\u3002</p>"},{"location":"note/courses/database%20system/Chapter%206/#2-database-modeling","title":"2 Database Modeling","text":"<p>A database can be modeled as:</p> <ul> <li>a collection of entities,</li> <li>relationship among entities.</li> </ul>"},{"location":"note/courses/database%20system/Chapter%206/#21-entities","title":"2.1 Entities","text":"<p>An entity is an object that exists and is distinguishable from other objects.  e.g. specific person, company, event, plant * Entities have attributes e.g. people have names and addresses    An entity set is a set of entities of the same type that share the same properties. e.g.* set of all persons, companies, trees, holidays</p> <p>Entity sets can be represented graphically as follows:</p> <ul> <li>Rectangles represent entity sets.</li> <li>Attributes listed inside entity rectangle</li> <li>Underline indicates primary key attributes</li> </ul> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%206/#22-relationship-sets","title":"2.2 Relationship Sets","text":"<p>A relationship is an association among several entities. A relationship set is a mathematical relation among n \uf0b3 2 entities, each taken from entity  \\(\\{(e_1, e_2, ... e_n) | e_1 \\in E_1, e_2 \\in  E_2, ..., e_n \\in  E_n\\}\\) where \\((e_1, e_2, ..., e_n)\\) is a relationship.  </p> <p>\u672c\u8d28\u4e5f\u662f\u4e00\u4e2a\u96c6\u5408\u3002\u6700\u5f00\u59cb\u7684\u4f8b\u5b50\u4e2d\u5747\u4e3a\u662f\u4e8c\u5143\u8054\u7cfb\uff0c\u5373\u662f\u4e24\u4e2a\u5b9e\u4f53\u96c6\u5408\u7684\u5173\u7cfb\uff0c\u4f46\u662f\u5173\u7cfb\u53ef\u4ee5\u662f\u591a\u5143\u7684\uff0c\u5373\u591a\u4e2a\u5b9e\u4f53\u3002\u5982\u8001\u5e08\uff0c\u540c\u5b66\uff0cSRTP \u9879\u76ee\u53ef\u4ee5\u5171\u540c\u5f62\u6210\u4e00\u4e2a\u5173\u7cfb\u3002</p> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%206/#221-relationship-sets-with-attributes","title":"2.2.1 Relationship Sets with Attributes","text":"<p>An attribute can also be property of a relationship set.</p> <p>e.g. The advisor relationship set between entity sets instructor and student may have the attribute date which tracks when the student started being associated with the advisor.</p> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%206/#222-roles","title":"2.2.2 Roles","text":"<p>Entity sets of a relationship need not be distinct. Each occurrence of an entity set plays a \u201crole\u201d in the relationship The labels <code>course_id</code> and <code>prereq_id</code> are called roles.</p> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%206/#223-degree-of-a-relationship-set","title":"2.2.3 Degree(\u5ea6) of a Relationship Set","text":"<p>binary relationship\uff08\u4e8c\u5143\u8054\u7cfb\uff09</p> <ul> <li>involve two entity sets (or degree two). </li> <li>most relationship sets in a database system are binary.</li> </ul> <p>\u5c3d\u91cf\u4e0d\u7528\u591a\u5143\u8054\u7cfb\uff0c\u56e0\u4e3a\u4e8c\u5143\u8054\u7cfb\u6bd4\u8f83\u6e05\u6670\u3002\u800c\u4e14\u4efb\u4f55\u7684\u591a\u5143\u8054\u7cfb\u90fd\u53ef\u4ee5\u901a\u8fc7\u5f15\u5165\u4e2d\u4ecb\u5b9e\u4f53\u8f6c\u5316\u4e3a\u4e8c\u5143\u8054\u7cfb\u3002</p> Example <p> </p> <p>\u8f6c\u5316\u4e3a\u4e8c\u5143\u8054\u7cfb\uff1a\u628a\u591a\u5143\u8054\u7cfb\u5b9e\u4f53\u5316\u3002\u5982 <code>proj_guide</code> \u91cc\u6709\u8001\u5e08\u3001\u5b66\u751f\u3001\u5de5\u7a0b\u7684 id. \u968f\u540e\u8fd9\u4e2a\u5b9e\u4f53\u53c8\u548c\u53e6\u5916\u4e09\u4e2a\u5b9e\u4f53\u5404\u6709\u4e00\u4e2a\u4e8c\u5143\u8054\u7cfb\u3002</p>"},{"location":"note/courses/database%20system/Chapter%206/#23-attributes","title":"2.3 Attributes","text":"<p>An entity is represented by a set of attributes, that is descriptive properties possessed by all members of an entity set.</p> <p>Attribute types:</p> <ul> <li>Simple\uff08\u7b80\u5355\uff09 and composite\uff08\u590d\u5408\uff09 attributes.  </li> <li>Single-valued\uff08\u5355\u503c\uff09 and multivalued\uff08\u591a\u503c\uff09 attributes e.g. multivalued attribute: <code>phone_numbers</code> </li> <li>Derived\uff08\u6d3e\u751f\uff09 attributes<ul> <li>Can be computed from other attributes e.g. <code>age</code>, given <code>date_of_birth</code></li> </ul> </li> </ul> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%206/#24-mapping-cardinality-constraints","title":"2.4 Mapping Cardinality Constraints","text":"<p>\u6620\u5c04\u57fa\u6570\u7ea6\u675f</p> <p>Express the number of entities to which another entity can be associated via a relationship set.</p> <ul> <li>One to one</li> <li>One to many</li> <li>Many to one</li> <li>Many to many </li> </ul> <p>We express cardinality constraints by drawing either a directed line (\\(\\rightarrow\\)), signifying \u201cone,\u201d or an undirected line (\\(\u2014\\)), signifying \u201cmany,\u201d between the relationship set and the entity set.</p>"},{"location":"note/courses/database%20system/Chapter%206/#25-total-and-partial-participation","title":"2.5 Total and Partial Participation","text":"<ul> <li>Total participation (indicated by double line): every entity in the entity set participates in at least one relationship in the relationship set \u6240\u6709\u5143\u7d20\u90fd\u8981\u53c2\u4e0e\u5173\u7cfb</li> <li>Partial participation: some entities may not participate in any relationship in the relationship set</li> </ul>"},{"location":"note/courses/database%20system/Chapter%206/#26-notation-for-expressing-more-complex-constraints","title":"2.6 Notation for Expressing More Complex Constraints","text":"<p>A line may have an associated minimum and maximum cardinality, shown in the form l..h, where l is the minimum and h the maximum cardinality</p> <ul> <li>A minimum value of 1 indicates total participation.</li> <li>A maximum value of 1 indicates that the entity participates  in at most one relationship</li> <li>A maximum value of * indicates no limit.</li> </ul> Example <p> </p> <p>\u591a\u5143\u5173\u7cfb\u91cc\uff0c\u6211\u4eec\u53ea\u5141\u8bb8\u6700\u591a\u6709\u4e00\u4e2a\u7bad\u5934\u3002</p>"},{"location":"note/courses/database%20system/Chapter%206/#27-primary-key","title":"2.7 Primary Key","text":"<p>Primary Key for Relationship Sets</p> <p>\u591a\u5143\u8054\u7cfb\u7684 primary key \u662f\u4e24\u7aef key \u7684\u7ec4\u5408\u3002\u5982\u679c\u662f\u4e00\u5bf9\u4e00\u7684\u8054\u7cfb\uff0c\u90a3\u4e48\u5355\u4e2a\u5b9e\u4f53\u7684 key \u4e5f\u53ef\u4ee5\u4f5c\u4e3a primary key. \u4e00\u5bf9\u591a\u7684\u8054\u7cfb\uff08\u5982\u5bfc\u5e08\u548c\u5b66\u751f\u5c31\u662f\u4e00\u5bf9\u591a\uff0c\u90a3\u4e48\u4e3b\u952e\u5e94\u8be5\u4e3a\u5b66\u751f\uff09</p>"},{"location":"note/courses/database%20system/Chapter%206/#28-weak-entity-sets","title":"2.8 Weak Entity Sets","text":"<p>An entity set that does not have a primary key is referred to as a weak entity set.</p> <p>The existence of a weak entity set depends on the existence of a identifying entity set\uff08\u6807\u8bc6\u6027\u5b9e\u4f53\u96c6\uff09</p> <ul> <li>It must relate to the identifying entity set via a total, one-to-many relationship set from the identifying to the weak entity set</li> <li>Identifying relationship\uff08\u6807\u8bc6\u6027\u8054\u7cfb\uff09 depicted using a double diamond</li> </ul> <p>The discriminator(\u5206\u8fa8\u7b26\uff0cor partial key) of a weak entity set is the set of attributes that distinguishes among all the entities of a weak entity set  when the identifying entity  they depend is known.</p> <p>We underline the discriminator of a weak entity set  with a dashed line. \uff08\u865a\u7ebf\uff09 We put the identifying relationship of a weak entity in a double diamond. \uff08\u53cc\u6846\uff09</p> Example <p> </p> <p>Redundant Attributes</p> <p> </p>"},{"location":"note/courses/database%20system/Chapter%206/#3-reduction-to-relational-schemas","title":"3 Reduction to Relational Schemas","text":"<p>\u4e00\u4e2a ER \u56fe\u53ef\u4ee5\u8f6c\u6362\u6210\u591a\u79cd\u6a21\u5f0f\uff08\u56fe\u6570\u636e\u5e93\u3001\u9762\u5411\u5bf9\u8c61\u3001\u5173\u7cfb\u6a21\u5f0f\u7b49\uff09</p> <ul> <li>A strong entity set reduces to a schema with the same attributes <code>course(course_id, title, credits)</code></li> <li>A weak entity set becomes a table that includes a column for the primary key of the identifying strong entity set.   Primary key of the table is the union of the discriminator of the\u00a0weak entity set and\u00a0 the\u00a0primary key of the identifying strong entity set.\u00a0 \u6807\u8bc6\u96c6\u5408\u7684\u4e3b\u952e\u52a0\u4e0a\u5f31\u5b9e\u4f53\u96c6\u7684\u5206\u8fa8\u7b26\u3002 <code>section(course_id, sec_id, semester, year)</code></li> <li> <p>A many-to-many relationship set is represented as a schema with attributes for the primary keys of the two participating entity sets, and any descriptive attributes of the relationship set.  \u5373\u4e24\u4e2a\u96c6\u5408\u7684\u4e3b\u952e\u62fc\u8d77\u6765\uff0c\u52a0\u4e0a\u5173\u7cfb\u7684\u9644\u5e26\u5c5e\u6027\u3002  </p> Example <p> </p> <p><code>advisor = (s_id, i_id)</code></p> \u4e3a\u4ec0\u4e48\u591a\u5bf9\u591a\u7684\u5173\u7cfb\u4e00\u5b9a\u8981\u8f6c\u5316\u6210\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0f </li> <li> <p>Many-to-one and one-to-many relationship sets that are total on the many-side can be represented by adding an extra attribute to the \u201cmany\u201d side, containing the primary key of the \u201cone\u201d side. \u591a\u5bf9\u4e00\u53ef\u4ee5\u4e0d\u8f6c\u6362\u4e3a\u5355\u72ec\u7684\u5173\u7cfb\u6a21\u5f0f\uff0c\u76f4\u63a5\u5728\u201c\u591a\u201c\u90a3\u4e2a\u8868\u4e0a\u6dfb\u52a0\u201d\u4e00\u201c\u7684\u4e3b\u952e\u5373\u53ef\u3002</p> Example <p> </p> <p><code>inst_dept</code> \u672c\u8d28\u5c31\u662f\u5c06 <code>instructor</code> \u548c <code>department</code> \u5408\u5e76\uff0c\u5728 <code>instrutor</code> \u7684\u5c5e\u6027\u4e0a\u6dfb\u52a0 <code>dept_name</code>.  <pre><code>department(dept_name, building, budget)\ninstructor(ID,name,salary)\ninst_dept(ID, dept_name)\n// \u8f6c\u6362\u540e\uff08\u5373\u5408\u5e76\uff09\ndepartment(dept_name, building, budget)\ninstructor(ID, name, salary, dept_name)\n</code></pre></p> <p>\u5404\u6709\u5229\u5f0a\uff0c\u7b2c\u4e00\u79cd\u5199\u6cd5\u8868\u53ef\u80fd\u4f1a\u592a\u591a\uff0c\u7b2c\u4e8c\u79cd\u5199\u6cd5\u5408\u5728\u4e00\u8d77\u8868\u53ef\u80fd\u592a\u5927\uff0c\u4e0d\u5229\u4e8e\u7ba1\u7406\u3002</p> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%206/#31-composite-and-multivalued-attributes","title":"3.1 Composite and Multivalued Attributes","text":"<p>Composite attributes are flattened out by creating a separate attribute for each component attribute.  </p> <p>\u5c31\u50cf\u5728 C \u8bed\u8a00\u91cc\u5b9a\u4e49\u4e00\u4e2a\u7ed3\u6784\u3002\u4f46\u662f\u5173\u7cfb\u6570\u636e\u5e93\u91cc\u6bcf\u4e2a\u5c5e\u6027\u90fd\u5fc5\u987b\u662f\u7b80\u5355\u6570\u636e\u7c7b\u578b\uff0c\u5c31\u5fc5\u987b\u628a\u8fd9\u4e9b\u590d\u5408\u5c5e\u6027\u94fa\u5e73\u3002</p> <p>e.g. <pre><code>instructor(ID, \n        first_name, middle_initial, last_name,      \n        street_number, street_name, apt_number, \n        city, state, zip_code, date_of_birth, age)\n</code></pre></p> <p>A multivalued attribute M of an entity E is represented by a separate schema EM.  </p> <p>Schema EM has attributes corresponding to the primary key of E and an attribute corresponding to multivalued attribute M.  </p> Example <p> </p> <p>Special Case</p> <p> </p>"},{"location":"note/courses/database%20system/Chapter%206/#4-design-issues","title":"4 Design Issues","text":""},{"location":"note/courses/database%20system/Chapter%206/#41-common-mistakes-in-e-r-diagrams","title":"4.1 Common Mistakes in E-R Diagrams","text":"<ul> <li> <p>\u4fe1\u606f\u5197\u4f59 student \u7684 <code>dept_name</code> \u5e94\u8be5\u53bb\u6389      </p> </li> <li> <p>\u5173\u7cfb\u5c5e\u6027\u4f7f\u7528\u4e0d\u5f53 \u8fd9\u91cc\u4e00\u95e8\u8bfe\u53ef\u80fd\u6709\u5f88\u591a\u6b21\u4f5c\u4e1a\uff0c\u4e0d\u80fd\u53ea\u7528\u4e00\u4e2a\u5b9e\u4f53\u3002      </p> <p>\u89e3\u51b3\u65b9\u6cd5\uff1a  </p> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%206/#42-use-of-entity-sets-vs-attributes","title":"4.2 Use of entity sets vs. attributes","text":"<ul> <li>\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u660e\u786e\u653e\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\u3002</li> <li>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u7535\u8bdd\u53f7\u7801\u53ef\u4ee5\u9644\u5c5e\u66f4\u591a\u5c5e\u6027\uff0c\u4e00\u4e2a\u7535\u8bdd\u53f7\u7801\u53ef\u4ee5\u7531\u591a\u4eba\u5171\u4eab\u3002\uff08\u5982\u529e\u516c\u5ba4\u7684\u516c\u5171\u7535\u8bdd\uff09</li> </ul>"},{"location":"note/courses/database%20system/Chapter%206/#43-use-of-entity-sets-vs-relationship-sets","title":"4.3 Use of entity sets vs. relationship sets","text":"<p>Possible guideline is to designate a relationship set to describe an action that occurs between entities.</p> <p>\u5b9e\u4f53\u53ef\u4ee5\u4fbf\u4e8e\u4e0e\u5176\u4ed6\u5b9e\u4f53\u5efa\u7acb\u8054\u7cfb\u3002</p> <p>\u5982\u7535\u5546\uff0c\u6211\u4eec\u53ef\u4ee5\u7b80\u5355\u7684\u628a\u5ba2\u6237\u548c\u5546\u54c1\u7528 <code>buy</code> \u8054\u7cfb\u8d77\u6765\uff0c\u4f46\u540e\u7eed\u8fd8\u4f1a\u6709\u4ed8\u6b3e\u3001\u7269\u6d41\u7b49\u60c5\u51b5\uff0c\u6211\u4eec\u6700\u597d\u628a <code>buy</code> \u5b9e\u4f53\u5316\u4e3a\u8ba2\u5355\u3002</p>"},{"location":"note/courses/database%20system/Chapter%206/#44-placement-of-relationship-attributes","title":"4.4 Placement of relationship attributes","text":"<ul> <li>\u7b2c\u4e00\u79cd\u65b9\u6cd5\uff0c\u53ef\u4ee5\u8bb0\u5f55\u6bcf\u6b21\u8bbf\u95ee\u7684\u8bbf\u95ee\u65e5\u671f\u3002</li> <li>\u7b2c\u4e8c\u79cd\u65b9\u6cd5\uff0c\u53ea\u80fd\u8bb0\u5f55\u7528\u6237\u6700\u8fd1\u4e00\u6b21\u8bbf\u95ee\u65e5\u671f\uff0c\u4e0d\u5b8c\u6574\u3002</li> </ul>"},{"location":"note/courses/database%20system/Chapter%206/#45-binary-vs-non-binary-relationships","title":"4.5 Binary Vs. Non-Binary Relationships","text":"<ul> <li> <p>Binary versus n-ary relationship sets  Although it is possible to replace any nonbinary (n-ary, for \\(n &gt;2\\)) relationship set by a number of distinct binary relationship sets, a n-ary relationship set shows more clearly that several entities participate in a single relationship.</p> </li> <li> <p>Some relationships that appear to be non-binary may be better represented using binary relationships e.g. A ternary relationship parents, relating a child to his/her father and mother, is best replaced by two binary relationships,  father and mother Using two binary relationships allows partial information (e.g. , only mother being know) But there are some relationships that are naturally non-binary e.g. : <code>proj_guide</code></p> </li> </ul> Converting Non-Binary Relationships  <p> </p>"},{"location":"note/courses/database%20system/Chapter%206/#5-extended-er-features","title":"5 Extended ER Features","text":"<ul> <li>Specialization\uff08\u7279\u5316\uff09 <ul> <li>Top-down design process; we designate subgroupings within an entity set that are distinctive from other entities in the set.</li> <li>Attribute inheritance \u2013 a lower-level entity set inherits all the attributes and relationship participation of the higher-level entity set to which it is linked.</li> </ul> </li> <li>Generalization\uff08\u6982\u5316\uff09 A bottom-up design process \u2013 combine a number of entity sets that share the same features into a higher-level entity set.</li> </ul>"},{"location":"note/courses/database%20system/Chapter%207/","title":"Chapter 7","text":""},{"location":"note/courses/database%20system/Chapter%207/#1-relational-database-design","title":"1 Relational Database Design","text":""},{"location":"note/courses/database%20system/Chapter%207/#11-introduction","title":"1.1 Introduction","text":"<p>Example</p> <p> </p> <p>What about combining instructor and department?  </p> <p>Pitfalls of the \u201cbad\u201d relations</p> <ul> <li>Information repetition (\u4fe1\u606f\u91cd\u590d)</li> <li>Insertion anomalies (\u63d2\u5165\u5f02\u5e38)</li> <li>Update difficulty (\u66f4\u65b0\u56f0\u96be)</li> </ul> <p>\u6570\u636e\u4e4b\u95f4\u5b58\u5728\u7740\u9690\u542b\u7684\u51fd\u6570\u7ea6\u675f\u5173\u7cfb\uff0c\u77e5\u9053\u4e86 id \u5c31\u53ef\u4ee5\u51b3\u5b9a\u5176\u4ed6\u5143\u7d20\u3002 e.g.  id \\(\\rightarrow\\) name, salary, dept_name; dept_name \\(\\rightarrow\\) building, budget \u4ea7\u751f\u5197\u4f59\u7684\u539f\u56e0\u662f dept_name \u51b3\u5b9a\u4e86\u90e8\u5206\u5c5e\u6027\uff0c\u4f46\u4ed6\u5374\u4e0d\u662f\u8fd9\u4e2a\u8868\u7684 primary key. \u597d\u7684\u5173\u7cfb\uff1a\u53ea\u6709 candidate key \u80fd\u51b3\u5b9a\u5176\u4ed6\u5c5e\u6027\u3002 \u62c6\u8868\u540e\u8981\u6709\u91cd\u53e0\u7684\u5c5e\u6027\uff0c\u5426\u5219\u65e0\u6cd5\u62fc\u63a5\u56de\u53bb\u3002\u8fd9\u91cc\u7684\u516c\u5171\u5c5e\u6027\u5fc5\u987b\u662f\u5206\u62c6\u51fa\u4e00\u4e2a\u5173\u7cfb\u6a21\u5f0f\u7684 primary key, \u8fd9\u662f\u65e0\u635f\uff08\u6ca1\u6709\u4fe1\u606f\u635f\u5931\uff09\u8fde\u63a5\u3002</p> <p>lossy decomposition</p> <p><code>employee(ID, name, street, city, salary)</code> \\(\\rightarrow\\) <code>employee1 (ID, name)</code> and <code>employee2 (name, street, city, salary)</code> </p> Example of Lossless-Join Decomposition  <p> </p>"},{"location":"note/courses/database%20system/Chapter%207/#111-lossless-join-decomposition","title":"1.1.1 Lossless-join Decomposition","text":"<p>Let \\(R\\) be a relation schema and let \\(R_1\\) and \\(R_2\\) form a decomposition of \\(R\\). That is \\(R = R_1  \\cup R_2\\). </p> <p>We say that the decomposition is a lossless decomposition if there is no loss of information by replacing  R with the two relation schemas \\(R = R_1  \\cup R_2\\).  Formally,   \\(r = \\prod_{R_1}(r)  \\bowtie \\prod_{R_2}(r)\\).  </p> <p>And,  conversely a decomposition is lossy if \\(r\\subset \\prod_{R_1}(r)  \\bowtie \\prod_{R_2}(r)\\) Note: more tuples implies more uncertainty (less information).</p> <p>A decomposition of \\(R\\) into \\(R_1\\) and \\(R_2\\) is lossless join if at least one of the following dependencies holds: (\u5145\u5206\u6761\u4ef6)</p> <ul> <li>\\(R_1\\cap R_2\\rightarrow R_1\\)</li> <li>\\(R_1\\cap R_2 \\rightarrow R_2\\) \u5373\u516c\u5171\u5c5e\u6027\u662f\u5176\u4e2d\u4e00\u4e2a\u5173\u7cfb\u7684 Key.   </li> </ul>"},{"location":"note/courses/database%20system/Chapter%207/#12-devise-a-theory-for-the-following","title":"1.2 Devise a Theory for the Following","text":"<ul> <li>Decide whether a particular relation R is in \u201cgood\u201d form.  </li> <li>In the case that a relation R is not in \u201cgood\u201d form, decompose it into a set of relations \\(\\{R_1, R_2, \\ldots, R_n\\}\\) such that <ul> <li>each relation is in good form </li> <li>the decomposition is a lossless-join decomposition  \u5982\u679c\u5173\u7cfb\u662f\u4e0d\u597d\u7684\uff0c\u6211\u4eec\u5e0c\u671b\u628a\u5b83\u65e0\u635f\u5206\u89e3\u6210\u597d\u7684\u5173\u7cfb\u3002</li> </ul> </li> <li>Our theory is based on:<ul> <li>functional dependencies</li> <li>multivalued dependencies</li> </ul> </li> <li>Normal  Forms(NF): \\(1NF \\rightarrow 2NF \\rightarrow 3NF \\rightarrow **BCNF** \\rightarrow 4NF\\) \u6709\u4e9b\u51fd\u6570\u4f9d\u8d56\uff0c\u4e0d\u80fd\u5728 BCNF \u4e2d\u5f97\u5230\u4f53\u73b0\uff0c\u9700\u8981\u628a\u51e0\u4e2a\u8868\u62fc\u5728\u4e00\u8d77\u624d\u80fd\u4f53\u73b0\uff0c\u53eb\u4f9d\u8d56\u4fdd\u6301\u3002\u8fd9\u65f6\u6211\u4eec\u9700\u8981\u4ece BCNF \u56de\u5230 3NF.  </li> </ul>"},{"location":"note/courses/database%20system/Chapter%207/#2-functional-dependencies","title":"2 Functional Dependencies","text":"<p>Functional Dependencies  are constraints on the set of legal relations. (\u6765\u81ea\u4e8e\u5e94\u7528\u5c42\u9762\u7684\u89c4\u5b9a) Require that the value for a certain set of attributes determines uniquely the value for another set of attributes.   e.g. dept_name \\(\\rightarrow\\) building A functional dependency is a generalization of the notion of a key.</p> <p>Let \\(R\\) be a relation schema \\(\\alpha\\subseteq R\\) and \\(\\beta\\subseteq R\\) (\\(\\alpha, \\beta\\) \u662f\u5c5e\u6027\u7684\u96c6\u5408,R\u662f\u6240\u6709\u5c5e\u6027\u7684\u96c6\u5408) The functional dependency \\(\\alpha\\rightarrow \\beta\\) holds on \\(R\\) if and only if for any legal relations \\(r(R)\\)\u4efb\u4f55\u4e00\u4e2a\u5408\u6cd5\u7684\u5b9e\u4f8b, whenever any two tuples \\(t_1\\) and \\(t_2\\) of \\(r\\) agree on the attributes \\(\\alpha\\), they also agree on the attributes \\(\\beta\\).  That is,   </p> \\[ t_1[\\alpha] = t2 [\\alpha]   \\Rightarrow   t_1[\\beta ]  = t_2 [\\beta ]  \\] <p>\u901a\u8fc7\u6570\u636e\u5e93\u5b9e\u4f8b\u53ef\u4ee5\u8bc1\u4f2a\u51fd\u6570\u4f9d\u8d56\uff0c\u4f46\u4e0d\u80fd\u8bc1\u5b9e\u3002\uff08\u4f9d\u8d56\u662f\u6765\u81ea\u5e94\u7528\u5c42\u9762\u7684\u89c4\u5b9a\uff0c\u5148\u6709\u51fd\u6570\u4f9d\u8d56\uff0c\u518d\u6709\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\uff09</p> Example <p> </p> <p>\\(A\\rightarrow B\\) \u53ef\u4ee5\u8bc1\u4f2a\uff0c\u4f46\u4e5f\u4e0d\u80fd\u56e0\u6b64\u5c31\u8bf4 \\(B\\rightarrow A\\)</p> <ul> <li>K is a superkey for relation schema \\(R\\) if and only if \\(K\\rightarrow R\\)</li> <li>K is a candidate key for \\(R\\) if and only if <ul> <li>\\(K\\rightarrow R\\), and</li> <li>for no \\(\\alpha\\subset K\\), \\(\\alpha\\rightarrow R\\)</li> </ul> </li> </ul> <p>A functional dependency is trivial if it is satisfied by all relations. \u5168\u96c6\u53ef\u4ee5\u51b3\u5b9a\u5b50\u96c6\u3002 In general, \\(\\alpha\\rightarrow \\beta\\) is trivial if \\(\\beta\\subseteq \\alpha\\)</p>"},{"location":"note/courses/database%20system/Chapter%207/#21-closure","title":"2.1 Closure(\u95ed\u5305)","text":""},{"location":"note/courses/database%20system/Chapter%207/#211-closure-of-a-set-of-functional-dependencies","title":"2.1.1 Closure of a Set of Functional Dependencies","text":"<p>Given a set \\(F\\) of functional dependencies, there are certain other functional dependencies that are logically implied by \\(F\\). The set of all functional dependencies logically implied by \\(F\\) is the closure of \\(F\\). We denote the closure of \\(F\\) by \\(F^+\\).  </p> <p>e.g. \\(F=\\{A\\rightarrow B,B\\rightarrow C\\}\\) then \\(F^+=\\{A\\rightarrow B, B\\rightarrow C, A\\rightarrow C, AB\\rightarrow B, AB\\rightarrow C,\\ldots\\}\\)</p> <p>We can find \\(F^+\\), the closure of \\(F\\), by repeatedly applying Armstrong\u2019s Axioms:</p> <ul> <li>if \\(\\beta\\subseteq \\alpha\\) then \\(\\alpha \\rightarrow \\beta\\) (reflexivity, \u81ea\u53cd\u5f8b)</li> <li>if \\(\\alpha\\rightarrow \\beta\\) then \\(\\gamma \\alpha \\rightarrow \\gamma \\beta\\) (augmentation, \u589e\u8865\u5f8b)</li> <li>if \\(\\alpha\\rightarrow \\beta\\) and \\(\\beta \\rightarrow \\gamma\\) then \\(\\alpha\\rightarrow \\gamma\\) (transitivity, \u4f20\u9012\u5f8b)</li> </ul> <p>These rules are </p> <ul> <li>Sound\uff08\u6b63\u786e\u6709\u6548\u7684\uff09 generate only functional dependencies that actually hold</li> <li>Complete\uff08\u5b8c\u5907\u7684\uff09 generate all functional dependencies that hold</li> </ul> Example <p> </p> <p>Additional rules:</p> <ul> <li>If \\(\\alpha\\rightarrow \\beta\\) holds and \\(\\alpha\\rightarrow \\gamma\\) holds,  then \\(\\alpha\\rightarrow \\beta\\gamma\\) holds (union, \u5408\u5e76)</li> <li>If \\(\\alpha\\rightarrow \\beta\\gamma\\) holds, then \\(\\alpha\\rightarrow \\beta\\) holds and \\(\\alpha\\rightarrow \\gamma\\) holds (decomposition, \u5206\u89e3)</li> <li>If \\(\\alpha\\rightarrow \\beta\\) holds and \\(\\gamma \\beta\\rightarrow \\delta\\) holds, then \\(\\alpha \\gamma\\rightarrow \\delta\\) holds (pseudotransitivity\uff0c\u4f2a\u4f20\u9012)</li> </ul> Example <p> </p> <p>\u51fd\u6570\u4f9d\u8d56\uff0c\u53f3\u8fb9\u7684\u516c\u5171\u5c5e\u6027\u53ef\u4ee5\u53bb\u6389\uff0c\u4f7f\u5f97\u51fd\u6570\u53cc\u65b9\u6ca1\u6709\u4ea4\u96c6\u3002</p>"},{"location":"note/courses/database%20system/Chapter%207/#212-closure-of-attribute-sets","title":"2.1.2 Closure of Attribute Sets","text":"<p>Given a set of attributes \\(a\\), define the closure of a under \\(F\\) (denoted by \\(a+\\)) as the set of attributes that are functionally determined by \\(a\\) under \\(F\\) </p> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%207/#213-uses-of-attribute-closure","title":"2.1.3 Uses of Attribute Closure","text":"<ul> <li>Testing for superkey: To test if \\(\\alpha\\) is a superkey, we compute \\(\\alpha+\\), and check if \\(\\alpha+\\) contains all attributes of \\(R\\).</li> <li>Testing functional dependencies<ul> <li>To check if a functional dependency \\(\\alpha\\rightarrow \\beta\\) holds (or, in other words, is in \\(F+\\)), just check if \\(\\beta\\subseteq\\alpha+\\). </li> <li>That is, we compute \\(\\alpha+\\) by using attribute closure, and then check if it contains \\(\\beta\\). </li> <li>Is a simple and cheap test, and very useful</li> </ul> </li> <li>Computing closure of F For each \\(\\gamma\\subseteq R\\), we find the closure \\(\\gamma+\\), and for each \\(S \\subseteq \\gamma+\\), we output a functional dependency \\(\\gamma\\rightarrow  S\\).  </li> </ul> Example"},{"location":"note/courses/database%20system/Chapter%207/#22-canonical-cover","title":"2.2 Canonical Cover\uff08\u6b63\u5219\u8986\u76d6\uff09","text":"<p>\u51fd\u6570\u4f9d\u8d56\u662f\u6700\u7b80\u5355\u7684\u5f62\u5f0f\uff0c\u4e0d\u5b58\u5728\u5197\u4f59\u7684\u51fd\u6570\u4f9d\u8d56\u3002</p> <p>a canonical cover of F is a \u201cminimal\u201d set of functional dependencies equivalent to F, having no redundant dependencies or redundant parts of dependencies.  </p> Example <p> </p> <pre><code>tab: Extraneous Attributes(\u65e0\u5173\u5c5e\u6027)\n\nConsider a set $F$ of functional dependencies and the functional dependency $\\alpha\\rightarrow \\beta$ in $F$.  \n\n* Attribute A is **extraneous** in $\\alpha$ if $A\\in \\alpha$ and $F$ logically implies $(F \u2013 \\{\\alpha\\rightarrow \\beta\\})\\cup \\{(\\alpha  \u2013 A) \\rightarrow \\beta\\}$.\n* Attribute A is **extraneous** in $\\beta$ if $A\\in \\beta$ and the set of functional dependencies $(F-\\{\\alpha \\rightarrow \\beta\\})\\cup\\{(\\alpha\\rightarrow (\\beta-A))\\}$ logically implies F.\n\nA **canonical cover** for $F$ is a set of dependencies $F_c$ such that \n\n* $F$ logically implies all dependencies in $F_c$\n* $F_c$ logically implies all dependencies in $F$\n* No functional dependency in $F_c$ contains an extraneous attribute\n* Each left side of functional dependency in $F_c$ is unique.\n</code></pre> <p>\u8ba1\u7b97\u6b63\u5219\u8986\u76d6\uff1a - repeat: \u5408\u5e76\uff0c\u627e\u5230\u5197\u4f59\u5c5e\u6027\uff0c\u5220\u9664 - \u76f4\u5230F\u4e0d\u518d\u6539\u53d8</p> Computing a Canonical Cover <p> </p>"},{"location":"note/courses/database%20system/Chapter%207/#23-boyce-codd-normal-formazsx","title":"2.3 Boyce-Codd Normal FormAZSX","text":"<p>A relation schema \\(R\\) is in BCNF with respect to a set \\(F\\) of functional  dependencies if for all functional dependencies in \\(F^+\\) of the form where \\(\\alpha \\subseteq R\\) and \\(\\beta \\subseteq R\\), at least one of the following holds  </p> <ul> <li>\\(\\alpha \\rightarrow \\beta\\) is trivial</li> <li>\\(\\alpha\\) is a superkey for \\(R\\).  </li> </ul> <p>\u4efb\u4f55\u975e\u5e73\u51e1\u7684\u51fd\u6570\u4f9d\u8d56\u7684\u5de6\u8fb9\u90fd\u662f\u4e00\u4e2a key.  </p>"},{"location":"note/courses/database%20system/Chapter%207/#231-decomposing-a-schema-into-bcnf","title":"2.3.1 Decomposing a Schema into BCNF","text":"<p>\u5bf9\u4e8e\u4e0d\u662f key \u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u5c31\u628a\u5b83\u5206\u89e3\u51fa\u6765\u4f5c\u4e3a\u5355\u72ec\u7684\u5173\u7cfb\u6a21\u5f0f\u3002 Suppose we have a schema \\(R\\) and a non-trivial dependency \\(\\alpha\\rightarrow \\beta\\) causes a violation of BCNF. We decompose \\(R\\) into: \\((\\alpha \\cup \\beta)\\) and \\((R-(\\beta-\\alpha))\\) \\(\\alpha\\) \u4f5c\u4e3a\u4e24\u4e2a\u5173\u7cfb\u6a21\u5f0f\u7684\u516c\u5171\u5c5e\u6027\uff0c\u4e5f\u662f\u4e00\u4e2a\u5173\u7cfb\u7684 key, \u8fd9\u6837\u624d\u662f\u65e0\u635f\u5206\u89e3\u3002</p> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%207/#232-dependency-preservation","title":"2.3.2 Dependency Preservation","text":"<p>\u4f9d\u8d56\u4fdd\u6301\uff1a\u539f\u6765\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u90fd\u53ef\u4ee5\u5728\u5206\u89e3\u540e\u7684\u51fd\u6570\u4f9d\u8d56\u4e2d\u5f97\u5230\u5355\u72ec\u68c0\u9a8c\u3002\u5426\u5219\u9700\u8981\u628a\u51e0\u4e2a\u5173\u7cfb\u8fde\u63a5\u5728\u4e00\u8d77\u624d\u80fd\u68c0\u9a8c\u4f9d\u8d56\u7684\uff0c\u79f0\u4e3a\u4f9d\u8d56\u4e0d\u4fdd\u6301\u3002</p> <p>Constraints, including functional dependencies, are costly to check in practice unless they pertain to only one relation.  </p> <p>If it is sufficient to test only those dependencies on each individual relation of a decomposition in order to ensure that all functional dependencies hold, then that decomposition is dependency preserving (\u4fdd\u6301\u4f9d\u8d56). \uff08\u5982\u679c\u901a\u8fc7\u68c0\u9a8c\u5355\u4e00\u5173\u7cfb\u4e0a\u7684\u51fd\u6570\u4f9d\u8d56\uff0c\u5c31\u80fd\u786e\u4fdd\u6240\u6709\u7684\u51fd\u6570\u4f9d\u8d56\u6210\u7acb\uff0c\u90a3\u4e48\u8fd9\u6837\u7684\u5206\u89e3\u662f\u4f9d\u8d56\u4fdd\u6301\u7684\uff09 \uff08\u6216\u8005\uff0c\u539f\u6765\u5173\u7cfbR\u4e0a\u7684\u6bcf\u4e00\u4e2a\u51fd\u6570\u4f9d\u8d56\uff0c\u90fd\u53ef\u4ee5\u5728\u5206\u89e3\u540e\u7684\u5355\u4e00\u5173\u7cfb\u4e0a\u5f97\u5230\u68c0\u9a8c\u6216\u8005\u63a8\u5bfc\u5f97\u5230\u3002\uff09 Because it is not always possible to achieve both BCNF and dependency preservation, we consider a weaker normal form, known as third normal form.</p> <p>Let \\(F_i\\) be the set of all functional dependencies in \\(F^+\\) that include only attributes in \\(R_i\\). (\\(F_i\\):  the restriction of \\(F\\) on \\(R_i\\))</p> <ul> <li>A decomposition is dependency preserving, if \\((F_1\\cup F_2 \\cup \\ldots \\cup F_n )^+ = F^+\\)</li> <li>If it is not, then checking updates for violation of functional dependencies may require computing joins, which is expensive.</li> </ul> Example <p> </p> Example <p> </p>"},{"location":"note/courses/database%20system/Chapter%207/#24-third-normal-form","title":"2.4 Third Normal Form","text":"<p>\u4efb\u4f55\u4e00\u4e2a\u975e\u5e73\u51e1\u51fd\u6570\u4f9d\u8d56\uff0c\u5982\u679c\u5de6\u8fb9\u4e0d\u662f\u4e00\u4e2a super key, \u90a3\u4e48\u53f3\u8fb9\u5fc5\u987b\u5305\u542b\u5728\u4e00\u4e2a candidate key \u91cc\u9762\u3002</p> <p>A relation schema \\(R\\) is in third normal form (3NF) if for all: $\\alpha\\rightarrow \\beta $ in \\(F^+\\) at least one of the following holds:</p> <ul> <li>\\(\\alpha\\rightarrow \\beta\\) is trivial (i.e., \\(\\beta \\in \\alpha\\))</li> <li>\\(\\alpha\\) is a superkey for R</li> <li>Each attribute A in \\(\\beta-\\alpha\\) is contained in a candidate key for \\(R\\). \u5019\u9009\u7801\u6709\u5f88\u591a\u4e2a\uff0c\u5305\u542b\u5728\u67d0\u4e00\u4e2a\u5019\u9009\u7801\u5373\u53ef\u3002  </li> </ul> Example <p> </p> <p>Goals of Normalization</p> <p>In the case that a relation scheme R is not in \u201cgood\u201d form, decompose it into a set of relation scheme  \\(\\{R_1, R_2, \\ldots, R_n\\}\\) such that </p> <ul> <li>each relation scheme is in good form (i.e., BCNF or 3NF)</li> <li>the decomposition is a lossless-join decomposition</li> <li>Preferably, the decomposition should be dependency preserving</li> </ul> E-R Modeling and Normal Forms <p> </p> <p>\u8fd9\u91cc\u7684\u65e0\u635f\u5206\u89e3\uff0c\u5148\u6307\u5b9a\u4e00\u4e2a\u8def\u5f84\uff0c\u8003\u8651\u6bcf\u4e24\u4e2a\u5173\u7cfb\u76f4\u63a5\u662f\u5426\u65e0\u635f\uff08\u516c\u5171\u5c5e\u6027\u662f\u5426\u4e3a\u5176\u4e2d\u4e00\u4e2a\u5173\u7cfb\u7684 key\uff09\u3002</p>"},{"location":"note/courses/database%20system/Chapter%207/#3-multivalued-dependencies","title":"3 Multivalued Dependencies","text":"<p>There are database schemas in BCNF that do not seem to be sufficiently normalized.  </p> <p>Example</p> <p> </p> <p>\u5b58\u5728\u4e24\u79cd\u4e0d\u76f8\u5173\u7684\u591a\u503c\u4f9d\u8d56\u3002\u8001\u5e08 id \u53ef\u4ee5\u591a\u503c\u51b3\u5b9a child_name, \u53c8\u53ef\u4ee5\u591a\u503c\u51b3\u5b9a phone, \u4f46\u8fd9\u4e24\u4e2a\u5c5e\u6027\u662f\u4e0d\u76f8\u5173\u7684\uff0c\u653e\u5728\u4e00\u4e2a\u8868\u91cc\u5c31\u4f1a\u7ec4\u5408\u3002 \u7b2c\u4e8c\u5f20\u56fe\u7684\u4e3a Fourth Normal Form (4NF).</p> <p>\u56db\u8303\u5f0f\uff1a\u4e0d\u5b58\u5728\u975e\u5e73\u51e1\u7684\u591a\u503c\u4f9d\u8d56\u3002</p> <p>Let R be a relation schema and let \\(\\alpha\\subset R\\) and \\(\\beta\\subset R\\). The multivalued dependency \\(\\alpha\\rightarrow\\rightarrow\\beta\\) holds on \\(R\\) if in any legal relation \\(r(R)\\), for all pairs for tuples \\(t_1\\) and \\(t_2\\) in \\(r\\) such that \\(t_1[\\alpha] = t_2 [\\alpha]\\), there exist tuples \\(t_3\\) and \\(t_4\\) in \\(r\\) such that: </p> \\[ t_3[\\alpha] = t_4[\\alpha] = t_1[\\alpha]=t_2[\\alpha]\\\\ t_3[\\beta]=t_1[\\beta]\\\\ t_3[R-\\beta]=t_2[R-\\beta]\\\\ t_4[\\beta]=t_2[\\beta]\\\\ t_4[R-\\beta]=t_1[R-\\beta] \\] <p>A relation schema \\(R\\) is in 4NF with respect to a set \\(D\\) of functional and multivalued dependencies if for all multivalued dependencies in \\(D^+\\) of the form \\(\\alpha\\rightarrow \\rightarrow \\beta\\), where \\(\\alpha\\subset R\\) and \\(\\beta\\subset R\\), at least one of the following hold:</p> <ul> <li>\\(\\alpha\\rightarrow \\rightarrow \\beta\\) is trivial (i.e., \\(\\beta \\subset \\alpha\\) or \\(\\alpha \\cup \\beta= R\\))   \u5373\u9664\u4e86 \\(\\alpha,\\beta\\) \u4e3a\u6ca1\u6709\u5176\u4ed6\u5c5e\u6027\u3002</li> <li>\\(\\alpha\\) is a superkey for schema \\(R\\)</li> </ul> <p>\u4efb\u4f55\u4e00\u4e2a\u591a\u503c\u4f9d\u8d56\uff0c\u8981\u4e48\u5de6\u8fb9\u5c31\u662f\u4e2a key, \u8981\u4e48\u8fd9\u4e2a\u4f9d\u8d56\u662f\u5e73\u51e1\u7684\u3002</p> E-R Modeling and Normal Forms <p> </p> <p>\u4e0d\u662f BCNF, \u56e0\u6b64\u4e5f\u4e0d\u662f 4NF. </p>"},{"location":"note/courses/database%20system/Chapter%207/#4-overall-database-design-process","title":"4 Overall Database Design Process","text":"<p>Denormalization for Performance</p> <p>Some aspects of database design are not caught by normalization. \u6709\u65f6\u5019\u6211\u4eec\u9700\u8981\u5f15\u5165\u5197\u4f59\uff0c\u6765\u4fdd\u6301\u6027\u80fd\u3002</p> <p>Example</p> <p> </p>"},{"location":"note/courses/database%20system/Chapter%208/","title":"Physical Storage Systems","text":"Abstract <ul> <li>Classification of Physical Storage Media</li> <li>Storage Hierarchy </li> <li>Magnetic Disks</li> <li>Disk Interface Standards</li> <li>Performance Measures of Disks</li> <li>Optimization of Disk-Block Access</li> <li>Flash Storage &amp; SSD</li> <li>Storage Class Memory(NVM)</li> </ul>"},{"location":"note/courses/database%20system/Chapter%208/#1-classification-of-physical-storage-media","title":"1 Classification of Physical Storage Media","text":"<ul> <li>\u6211\u4eec\u53ef\u4ee5\u5c06\u5b58\u50a8\u5206\u4e3a\uff1a<ul> <li>\u6613\u5931\u5b58\u50a8\uff08Volatile Storage\uff09\uff1a\u5173\u95ed\u7535\u6e90\u65f6\u4e22\u5931\u5185\u5bb9</li> <li>\u975e\u6613\u5931\u5b58\u50a8\uff08Non-Volatile Storage\uff09\uff1a<ul> <li>\u5373\u4f7f\u5173\u95ed\u7535\u6e90\uff0c\u5185\u5bb9\u4ecd\u7136\u5b58\u5728</li> <li>\u5305\u62ec\u4e8c\u7ea7\u548c\u4e09\u7ea7\u5b58\u50a8\uff0c\u4ee5\u53ca\u7535\u6c60\u5907\u4efd\u7684\u4e3b\u5185\u5b58</li> </ul> </li> </ul> </li> <li>\u8bbf\u95ee\u6570\u636e\u7684\u901f\u5ea6</li> <li>\u6bcf\u5355\u4f4d\u6570\u636e\u6210\u672c</li> <li>\u53ef\u9760\u6027<ul> <li>\u7535\u6e90\u6545\u969c\u6216\u7cfb\u7edf\u5d29\u6e83\u65f6\u6570\u636e\u4e22\u5931</li> <li>\u5b58\u50a8\u8bbe\u5907\u7684\u7269\u7406\u6545\u969c</li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%208/#2-storage-hierarchy","title":"2 Storage Hierarchy","text":"<ul> <li>volatile storage(\u6613\u5931\u5b58\u50a8) loses contents when power is switched off.  </li> <li>non-volatile storage\uff08\u975e\u6613\u5931\u5b58\u50a8\uff09 Contents persist even when power is switched off.  </li> </ul> <p>\u4e3b\u8981\u4ece speed, cost, reliability \u8861\u91cf</p> <p>\u4ece\u9ad8\u5c42\u5f80\u4f4e\u5c42\u8d70\uff0c\u5b58\u50a8\u8bbe\u5907\u53d8\u5f97\u66f4\u6162\uff0c\u66f4\u4fbf\u5b9c\u548c\u66f4\u5927\u3002</p> <ul> <li>primary storage: Fastest media but volatile (cache, main memory).</li> <li>secondary storage: next level in hierarchy, non-volatile, moderately fast access time also called on-line storage (flash memory, magnetic disks)</li> <li>tertiary storage: lowest level in hierarchy, non-volatile, slow access time also called off-line storage   (magnetic tape, optical storage) \u5e38\u7528\u6765\u5907\u4efd</li> </ul> <p>NVM (non-volatile memory) \u8bbf\u95ee\u548c\u5185\u5b58\u4e00\u6837\uff0c\u4ee5\u5b57\u8282\u5bfb\u5740\uff0c\u800c\u4e14\u6389\u7535\u80fd\u4fdd\u6301\u6570\u636e\u3002 </p>"},{"location":"note/courses/database%20system/Chapter%208/#3-magnetic-disks","title":"3 Magnetic Disks","text":"<p>\u4e00\u4e2a\u78c1\u76d8\u6709\u4e0a\u5341\u4e07\u4e2a track(\u78c1\u9053), \u4e00\u4e2a\u78c1\u9053\u53c8\u6709\u4e0a\u5343\u4e2a sector(\u6247\u533a\uff0c\u662f\u8ba1\u7b97\u673a\u548c\u78c1\u76d8\u4ea4\u6362\u6570\u636e\u7684\u6700\u5c0f\u5355\u4f4d). arm assemly \u7528\u6765\u5bfb\u9053\uff0c\u8bfb\u5199\u5934\u5171\u8fdb\u9000\uff0c\u5bfb\u627e\u6570\u636e\u5728\u54ea\u4e2a\u78c1\u9053\u4e0a\u3002 \u7b49\u5bf9\u5e94\u6247\u533a\u65cb\u8f6c\u5230\u8bfb\u5199\u5934\uff0c\u624d\u5f00\u59cb\u4f20\u8f93\u6570\u636e\u3002 \u540c\u6837\u78c1\u9053\u7ec4\u6210\u7684\u67f1\u9762\u3002\u5bf9\u4e8e\u5927\u6587\u4ef6\uff0c\u6700\u597d\u5b58\u5728\u540c\u4e00\u4e2a\u67f1\u9762\u4e0a\uff0c\u8fd9\u6837\u53ef\u4ee5\u5e76\u884c\u8bfb\u5199\u3002</p> <ul> <li>Read-write head: \u975e\u5e38\u9760\u8fd1\u76d8\u8868\u9762\uff0c\u8bfb\u5199\u7f16\u7801\u4fe1\u606f</li> <li>Surface of platter divided into circular tracks\uff08\u78c1\u9053\uff09</li> <li>Each track is divided into sectors\uff08\u6247\u533a\uff09\uff1a <ul> <li>\u4e00\u4e2asector\u662f\u8bfb\u5199\u7684\u6700\u5c0f\u5355\u4f4d</li> <li>Sector Size \u901a\u5e38 512bytes</li> </ul> </li> <li>To read/write a sector<ul> <li>disk arm swings to position head on right track</li> <li>platter spins continually; data is read/written as sector passes under head</li> </ul> </li> <li>Cylinder\uff08\u67f1\u9762\uff09 i consists of ith track of all the platters </li> <li>Disk controller(\u78c1\u76d8\u63a7\u5236\u5668)\u2013 interfaces between the computer system and the disk drive hardware.<ul> <li>\u63a5\u53d7\u9ad8\u5c42\u7ea7\u7684\u8bfb\u5199\u547d\u4ee4</li> <li>\u521d\u59cb\u5316action</li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/Chapter%208/#31-performance-measures-of-disks","title":"3.1 Performance Measures of Disks","text":"<ul> <li>Access time(\u8bbf\u95ee\u65f6\u95f4) \u2013 the time it takes from when a read or write request is issued to when data transfer begins.    Consists of: <ul> <li>Seek time\uff08\u5bfb\u9053\u65f6\u95f4\uff09\u2013 time it takes to reposition the arm over the correct track. <ul> <li>Average seek time is 1/2 the worst case seek time.  </li> <li>4 to 10 milliseconds on typical disks</li> </ul> </li> <li>Rotational latency\uff08\u65cb\u8f6c\u5ef6\u8fdf\uff09 \u2013 time it takes for the sector to be accessed to appear under the head. <ul> <li>Average latency is 1/2 of the worst case latency.  </li> <li>4 to 11 milliseconds on typical disks (5400 to 15000 r.p.m.)</li> </ul> </li> </ul> </li> <li>Data-transfer rate\uff08\u6570\u636e\u4f20\u8f93\u7387\uff09 \u2013 the rate at which data can be retrieved from or stored to the disk.</li> </ul> <p>\u5185\u5b58\u4f20\u8f93\u662f\u4ee5\u5757\u4e3a\u5355\u4f4d\u7684\u3002\u5373\u4f7f\u662f\u60f3\u8981\u8bbf\u95ee\u4e00\u4e2a byte, \u4e5f\u9700\u8981\u628a\u8fd9\u4e2a byte \u6240\u5728\u7684 4k \u5185\u5b58\u8bfb\u8fdb\u6765\u3002</p> <ul> <li> <p>Disk block is a logical unit for storage allocation and retrieval  </p> <ul> <li>Smaller blocks: more transfers from disk</li> <li>Larger blocks:  more space wasted due to partially filled blocks</li> </ul> </li> <li> <p>Sequential access pattern(\u987a\u5e8f\u8bbf\u95ee\u6a21\u5f0f) \u8fde\u7eed\u7684\u8bfb\u5199\u8bf7\u6c42\u53ea\u9700\u8981\u7b2c\u4e00\u6b21\u8bbf\u95ee\u78c1\u76d8  </p> </li> <li> <p>Random access pattern\uff08\u968f\u673a\u8bbf\u95ee\u6a21\u5f0f\uff09 \u6162\uff0c\u5e0c\u671b\u5c3d\u91cf\u591a\u4e00\u4e9b\u987a\u5e8f\u8bbf\u95ee\u3002 \u53ef\u4ee5\u7528\u4e00\u4e2a\u65e5\u5fd7\u628a\u8981\u4fee\u6539\u7684\u6570\u636e\u8bb0\u5f55\u4e0b\u6765\uff0c\u540e\u9762\u518d\u8fdb\u884c\u4fee\u6539\uff0c\u5c3d\u91cf\u7528\u987a\u5e8f\u8bbf\u95ee\u66ff\u6362\u968f\u673a\u8bbf\u95ee\u3002  </p> </li> <li> <p>I/O operations per second (IOPS \uff0c\u6bcf\u79d2I/O\u64cd\u4f5c\u6570) Number of random block reads that a disk can support per second. \u6bcf\u79d2\u53ef\u4ee5\u652f\u6301\u968f\u673a\u8bfb\u7684\u6b21\u6570\u3002  </p> </li> <li>Mean time to failure (MTTF\uff0c\u5e73\u5747\u6545\u969c\u65f6\u95f4)  the average time the disk is expected to run continuously without any failure.</li> </ul>"},{"location":"note/courses/database%20system/Chapter%208/#32-optimization-of-disk-block-access","title":"3.2 Optimization of Disk-Block Access","text":"<ul> <li>Buffering: in-memory buffer to cache disk blocks \u6570\u636e\u8bfb\u8fdb\u6765\u5c31\u4e22\uff0c\u6bd4\u8f83\u53ef\u60dc\uff0c\u6240\u4ee5\u6211\u4eec\u628a\u5b83\u653e\u5728\u4e00\u4e2a\u5730\u65b9\uff0c\u4e07\u4e00\u540e\u9762\u9700\u8981\u4f7f\u7528\u53ef\u4ee5\u4e0d\u7528\u518d\u8bfb\u3002</li> <li>Read-ahead(Prefetch): Read extra blocks from a track in anticipation that they will be requested soon  \u9884\u53d6\uff0c\u8bfb\u67d0\u5757\u65f6\u9884\u6d4b\u90bb\u8fd1\u51e0\u5757\u4e5f\u4f1a\u88ab\u8bbf\u95ee\uff0c\u4e8e\u662f\u5c31\u4e00\u8d77\u53d6\u5230\u5185\u5b58\u4e2d\u3002\u8981\u6709\u4f9d\u636e\u5730\u9884\u53d6\uff0c\u4e0d\u7136\u65e0\u7528\u7684\u6570\u636e\u4f1a\u5360\u7528\u7f13\u5b58\u3002  </li> <li> <p>Disk-arm-scheduling algorithms re-order block requests so that disk arm movement is minimized  elevator algorithm </p> </li> <li> <p>File organization</p> <ul> <li>Allocate blocks of a file in as contiguous a manner as possible \u9884\u5148\u5206\u914d\u5f97\u5230\u7684\u5185\u5b58\u662f\u8fde\u7eed\u7684  </li> <li>Files may get fragmented <ul> <li>Sequential access to a fragmented file results in increased disk arm movement  </li> <li>Some systems have utilities to defragment the file system, in order to speed up file access</li> </ul> </li> </ul> </li> <li>Nonvolatile write buffers\uff08\u975e\u6613\u5931\u6027\u5199\u7f13\u5b58\uff09 speed up disk writes by writing blocks to a non-volatile RAM buffer immediately \u628a\u8981\u5199\u7684\u6570\u636e\u5148\u5199\u5230\u4e00\u4e2a\u5feb\u901f\u7684\u975e\u6613\u5931\u7684\u7f13\u5b58\u91cc\uff0c\u5982 NVM. \u8fd9\u65f6\u4e0a\u9762\u7684\u7a0b\u5e8f\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u4e86, NVM \u518d\u62e9\u673a\u5c06\u6570\u636e\u5199\u56de\u5230\u78c1\u76d8\u3002</li> <li>Log disk\uff08\u65e5\u5fd7\u78c1\u76d8\uff09 a disk devoted to writing a sequential log of block updates  </li> </ul>"},{"location":"note/courses/database%20system/Chapter%208/#4-flash-storage","title":"4 Flash Storage","text":"<ul> <li>NAND flas<ul> <li>requires page-at-a-time read (page: 512 bytes to 4 KB) \u987a\u5e8f\u8bfb\u5199\u548c\u968f\u673a\u8bfb\u5199\u5dee\u4e0d\u591a  </li> <li>Page can only be written once \u50cf\u9ed1\u677f\uff0c\u5199\u4e86\u6570\u636e\u5982\u679c\u8981\u518d\u5199\u9700\u8981\u628a\u4e4b\u524d\u7684\u64e6\u6389\u3002  </li> </ul> </li> <li>SSD(Solid State Disks) Use standard block-oriented disk interfaces, but store data on multiple flash storage devices internally</li> </ul> <p>\u53ef\u80fd\u6709\u8fd9\u6837\u7684\u60c5\u51b5\uff1a\u6211\u4eec\u53cd\u590d\u8bfb\u5199\u3001\u64e6\u53bb\u67d0\u51e0\u4e2a\u5757\uff0c\u8fd9\u4f1a\u5bfc\u81f4\u5b83\u4eec\u574f\u7684\u5f88\u5feb\u3002</p> <ul> <li>Remapping of logical page addresses to physical page addresses avoids waiting for erase</li> <li> <p>Flash translation table tracks mapping</p> <ul> <li>also stored in a label field of flash page</li> <li>remapping carried out by flash translation layer </li> </ul> </li> <li> <p>wear leveling(\u78e8\u635f\u5747\u8861) evenly distributed erase operators across physical blocks</p> </li> </ul> <p>Persistence \u5373\u6389\u7535\u662f\u5426\u80fd\u4fdd\u6301\u539f\u6570\u636e\u3002</p>"},{"location":"note/courses/database%20system/Chapter%209/","title":"Data Storage Structures","text":"Abstract <ul> <li>File Organization<ul> <li>Fixed-Length Records</li> <li>Variable-Length Records</li> </ul> </li> <li>Organization of Records in Files<ul> <li>Heap File Organization</li> <li>Sequential File Organization</li> <li>Multitable Clustering File Organization</li> <li>Table Partition</li> </ul> </li> <li>Data-Dictionary Storage</li> <li>Storage Access &amp; Buffer manager<ul> <li>LRU strategy</li> <li>Clock algorithm</li> </ul> </li> <li>Columnar Representation</li> </ul>"},{"location":"note/courses/database%20system/Chapter%209/#1-file-organization","title":"1 File Organization","text":"<ul> <li>The database is stored as a collection of files.  </li> <li>Each file is a sequence of records.  </li> <li>A record is a sequence of fields.  </li> </ul> <p>One approach:</p> <ul> <li>assume record size is fixed</li> <li>each file has records of one particular type only </li> <li>different files are used for different relations</li> </ul>"},{"location":"note/courses/database%20system/Chapter%209/#11-fixed-length-records","title":"1.1 Fixed-Length Records","text":"<p>Store record i starting from byte \\(n \\times (i \u2013 1)\\), where n is the size of each record.  </p> <p>Record access is simple but records may cross blocks Modification: do not allow records to cross block boundaries  </p> <p>Deletion of record i:  alternatives:</p> <ul> <li>move records \\(i + 1,\\ldots , n\\) to \\(i, \\ldots. , n \u2013 1\\)</li> <li>move record n  to i</li> <li>do not move records, but link all free records on a free list \u8981\u5220\u9664\u7684\u6761\u6253\u4e0a\u6807\u8bb0\uff0c\u5f62\u6210\u4e00\u4e2a\u7a7a\u8bb0\u5f55\u7684\u94fe\u8868\u3002 \u4ee5\u540e\u5982\u679c\u8981\u5f80\u8fd9\u4e2a\u5757\u91cc\u63d2\u5165\uff0c\u76f4\u63a5\u901a\u8fc7\u6307\u9488\u627e\u5230\u7a7a\u8bb0\u5f55\u63d2\u5165\u5373\u53ef\uff0c\u968f\u540e\u66f4\u65b0\u6307\u9488\u3002 </li> </ul>"},{"location":"note/courses/database%20system/Chapter%209/#12-variable-length-records","title":"1.2 Variable-Length Records","text":"<p>Variable-length records arise in database systems in several ways:</p> <ul> <li>Storage of multiple record types in a file. </li> <li>Record types that allow variable lengths for one or more fields such as strings (<code>varchar</code>)</li> <li>Record types that allow repeating fields (used in some older data models).</li> </ul> <p>Variable length attributes represented by fixed size (offset, length), with actual data stored after all fixed length attributes Null values represented by null-value bitmap\uff08\u7a7a\u4f4d\u56fe\uff09</p> <p>Example</p> <p>\u4e0d\u5b9a\u957f\u7684\u4fdd\u5b58\u5728\u540e\u9762\uff0c\u5b9a\u957f\u7684 (offset, length) \u4fdd\u5b58\u5728\u524d\u9762\u3002 </p> <p>\u8fd9\u91cc\u4f4d\u7f6e 12 \u653e\u7684 65000 \u662f\u5b9a\u957f\u7684 salary. \u4f4d\u7f6e 20 \u653e\u7684 0000, \u8868\u793a\u524d\u9762\u56db\u4e2a\u5c5e\u6027\u5747\u662f\u975e\u7a7a\u7684, 1 \u8868\u793a\u7a7a\u3002\uff08\u653e\u5728\u524d\u9762\u4e5f\u53ef\u4ee5\uff0c\u53ea\u8981\u5728\u4e00\u4e2a\u56fa\u5b9a\u4f4d\u7f6e\u80fd\u627e\u5230\u5373\u53ef\uff09 \u524d\u63d0\uff1a\u6bcf\u4e00\u4e2a\u8bb0\u5f55\u90fd\u662f\u88ab\u653e\u5728\u4e00\u8d77\u7684\u3002\uff08\u6709\u6309\u5217\u5b58\u50a8\u7684\u65b9\u5f0f\uff09</p>"},{"location":"note/courses/database%20system/Chapter%209/#121-slotted-page-structure","title":"1.2.1 Slotted Page Structure","text":"<p>Slotted page\uff08\u5206\u69fd\u9875\uff09 header contains:</p> <ul> <li>number of record entries</li> <li>end of free space in the block \u4e00\u4e2a\u6307\u9488\u6307\u5411 free space \u672b\u5c3e\uff0c\u7528\u6765\u5206\u914d\u5185\u5b58</li> <li>location and size of each record</li> </ul> <p>\u5f53\u5220\u9664\u7684\u65f6\u5019\uff0c\u4e00\u79cd\u65b9\u6cd5\u662f\u628a\u540e\u9762\u7684\u8bb0\u5f55\u632a\u8fc7\u53bb\uff0c\u8ba9\u81ea\u7531\u7a7a\u95f4\u66f4\u7d27\u51d1\uff0c\u8fd9\u6837\u9700\u8981\u4fee\u6539 entries, free space \u7684\u6307\u9488, \u504f\u79fb\u91cf\u4e5f\u8981\u8c03\u6574\u3002\u4e5f\u53ef\u4ee5\u6682\u65f6\u4e0d\u8c03\u6574\uff0c\u7b49\u540e\u9762\u5982\u679c\u9700\u8981\u5206\u914d\u5185\u5b58\u4f46\u4e0d\u591f\u7528\u65f6\uff0c\u518d\u4e00\u6b21\u6027\u91cd\u6574\u4e4b\u524d\u7684\u7a7a\u95f4\u3002</p>"},{"location":"note/courses/database%20system/Chapter%209/#13-organization-of-records-in-files","title":"1.3 Organization of Records in Files","text":"<p>\u63d2\u5165\u5230\u54ea\u4e2a\u6587\u4ef6\u7684\u54ea\u4e2a\u4f4d\u7f6e\uff1f</p> <ul> <li>Heap \u2013 record can be placed anywhere in the file where there is space \u6709\u4f4d\u7f6e\u6211\u5c31\u63d2\u8fdb\u53bb</li> <li>Sequential \u2013 store records in sequential order, based on the value of the search key of each record \u63d2\u5165\u7684\u5143\u7d20\u7ef4\u62a4\u4e00\u4e2a\u6b21\u5e8f</li> <li>In a multitable clustering file organization records of several different relations can be stored in the same file Motivation: store related records on the same block to minimize I/O</li> <li>B+-tree file organization - Ordered storage even with inserts/deletes  </li> <li>Hashing \u2013 a hash function computed on search key; the result specifies in which block of the file the record should be placed</li> </ul>"},{"location":"note/courses/database%20system/Chapter%209/#131-heap-file-organization","title":"1.3.1 Heap File Organization","text":"<p>Array with 1 entry per block.  Each entry is a few bits to a byte, and records fraction of block that is free Free-space map \u7ef4\u62a4\u4e00\u4e2a\u7a7a\u95f2\u5757\u7684\u5730\u56fe\uff0c\u8bb0\u5f55\u8fd9\u4e2a\u5757\u7684\u7a7a\u95f2\u7a0b\u5ea6\u3002</p> <p>Example</p> <p>3 bits per block, value divided by 8 indicates   </p> <p>\u5982 4 \u8868\u793a 4/8 \u7a7a\u95f2\u3002 \u987a\u5e8f\u8bbf\u95ee\u6bd4\u8f83\u4f4e\u6548\uff0c\u6211\u4eec\u53ef\u4ee5\u6709\u7b2c\u4e8c\u5c42\u6765\u8868\u793a\u5176\u4e2d\u7684\u6700\u5927\u7a7a\u95f2\u5757\u3002</p>"},{"location":"note/courses/database%20system/Chapter%209/#132-sequential-file-organization","title":"1.3.2 Sequential File Organization","text":"<p>Suitable for applications that require sequential processing of the entire file  The records in the file are ordered by a search-key   </p> <ul> <li>Deletion \u2013 use pointer chains</li> <li>Insertion \u2013 locate the position where the record is to be inserted  \u8981\u66f4\u65b0 pointer chain \u6548\u7387\u4f4e\u3002\u6211\u4eec\u628a\u63d2\u5165\u7684\u653e\u5728\u672b\u5c3e\uff0c\u901a\u8fc7\u6307\u9488\u7ef4\u62a4\u79e9\u5e8f\u3002</li> </ul> <p>Need to reorganize the file from time to time to restore sequential order.  </p>"},{"location":"note/courses/database%20system/Chapter%209/#133-multitable-clustering-file-organization","title":"1.3.3 Multitable Clustering File Organization","text":"<p>Store several relations in one file using a multitable clustering file organization.  </p> <p>Example</p> <p>\u5bf9\u4e8e\u8001\u5e08\u548c\u90e8\u5206\u7ecf\u5e38\u4e00\u8d77\u8bbf\u95ee\u7684\u60c5\u51b5\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8fd9\u4e24\u4e2a\u4fe1\u606f\u653e\u5728\u4e00\u8d77\u3002\uff08\u5982\u679c\u4e24\u4e2a\u8868\u7ecf\u5e38\u8fde\u63a5\uff0c\u8fd9\u6837\u6bd4\u8f83\u9ad8\u6548\uff09 \u4f46\u8fd9\u6837\u5bf9\u4e8e\u5355\u72ec\u67e5\u627e\u67d0\u4e2a\u4fe1\u606f\u5c31\u4e0d\u592a\u65b9\u4fbf\u3002  </p>"},{"location":"note/courses/database%20system/Chapter%209/#134-table-partitioning","title":"1.3.4 Table Partitioning","text":"<p>Table partitioning: Records in a relation can be partitioned into smaller relations that are stored separately \u4e00\u4e2a\u8868\u592a\u5927\uff0c\u5bf9\u4e8e\u5e76\u884c\u8bbf\u95ee\u53ef\u80fd\u5f15\u53d1\u51b2\u7a81\u3002\u4e8e\u662f\u6211\u4eec\u53ef\u4ee5\u628a\u8868\u5206\u5f00\uff0c\u5982\u5bf9\u4e8e\u6240\u6709\u8001\u5e08\u7684\u8868\uff0c\u6211\u4eec\u53ef\u4ee5\u628a\u8ba1\u7b97\u673a\u7cfb\u7684\u8001\u5e08\u5206\u51fa\u6765\uff0c\u6570\u5b66\u7cfb\u7684\u8001\u5e08\u5206\u51fa\u6765\u3002\uff08\u6c34\u5e73\u5206\u5272\uff09\u4e5f\u53ef\u4ee5\u6309\u5217\u5b58\u50a8\u3002  </p>"},{"location":"note/courses/database%20system/Chapter%209/#2-data-dictionary-storage","title":"2 Data Dictionary Storage","text":"<p>The Data dictionary (also called system catalog) stores metadata; that is, data about data, such as   \u5b9a\u4e49\u7684\u6570\u636e\u4e5f\u662f\u6570\u636e (metadata) \u6211\u4eec\u4e5f\u9700\u8981\u628a\u5b83\u4eec\u5b58\u50a8\u4e0b\u6765\u3002</p> <ul> <li>Information about relations</li> <li>User and accounting information, including passwords</li> <li>Statistical and descriptive data</li> <li>Physical file organization information</li> <li>Information about indices </li> </ul>"},{"location":"note/courses/database%20system/Chapter%209/#3-storage-access-buffer-manager","title":"3 Storage Access &amp; Buffer manager","text":"<p>Blocks are units of both storage allocation and data transfer. Buffer \u2013 portion of main memory available to store copies of disk blocks. Buffer manager \u2013 subsystem responsible for allocating buffer space in main memory.</p> <p>\u5982\u6211\u4eec\u8981\u627e\u67d0\u5757\uff0c\u5148\u5728 buffer \u4e2d\u627e\uff0c\u5982\u679c\u6ca1\u627e\u5230\u5c31\u4ece\u78c1\u76d8\u4e2d\u8bfb\u51fa\u6765\u653e\u5230 buffer \u4e2d\u3002\u5f53 buffer \u5b8c\u4e86\u5c31\u9700\u8981\u8003\u8651\u5982\u4f55\u66ff\u6362\uff0c\u66ff\u6362\u54ea\u4e00\u5757\u3002</p> LRU Example <p> </p> <p>\u5982\u679c 4 \u88ab\u4fee\u6539\u8fc7\u4e86\uff0c\u90a3\u4e48\u66ff\u6362\u65f6\u9700\u8981\u5148\u628a\u8fd9\u5757\u5199\u56de\u5230\u78c1\u76d8\u4e2d\u3002\u5199\u56de\u65f6\u4e5f\u8981\u6ce8\u610f\u6389\u7535\u7b49\u95ee\u9898\u3002</p> <p>Programs call on the buffer manager when they need a block from disk.</p> <ul> <li>If the block is already in the buffer, buffer manager returns the address of the block in main memory</li> <li>If the block is not in the buffer, the buffer manager<ul> <li>Allocates space in the buffer for the block \u5728 buffer \u91cc\u66ff\u6362\u7a7a\u95f4\uff0c\u5982\u679c\u6709\u7a7a\u4f4d\u53ef\u4ee5\u76f4\u63a5\u5206\u914d\uff0c\u5426\u5219\u9700\u8981\u66ff\u6362\u3002<ul> <li>Replacing (throwing out) some other block, if required, to make space for the new block. \u6709\u4e0d\u540c\u7684\u7b56\u7565\u8fdb\u884c\u9009\u62e9\u8981\u4e22\u5f03\u7684\u5757\u3002</li> <li>Replaced block written back to disk only if it was modified since the most recent time that it was written to/fetched from the disk.</li> </ul> </li> <li>Reads the block from the disk to the buffer, and returns the address of the block in main memory to requester. </li> </ul> </li> </ul> <p>Pinned block </p> <p>memory block that is not allowed to be written back to disk \u6b63\u5728\u8bbf\u95ee\u8fd9\u4e00\u5757\uff0c\u90a3\u4e48\u8fd9\u4e00\u5757\u4e0d\u80fd\u88ab\u66ff\u6362\u51fa\u53bb  </p> <ul> <li>Pin done before reading/writing data from a block</li> <li>Unpin done when read /write is complete</li> <li>Multiple concurrent pin/unpin operations possible Keep a pin count, buffer block can be evicted only if pin <code>count = 0</code></li> </ul> <p>Shared and exclusive locks on buffer </p> <p>Readers get shared lock, updates to a block require exclusive lock Locking rules:</p> <ul> <li>Only one process can get exclusive lock at a time</li> <li>Shared lock cannot be concurrently with exclusive lock</li> <li>Multiple processes may be given shared lock concurrently</li> </ul>"},{"location":"note/courses/database%20system/Chapter%209/#31-buffer-replacement-policies","title":"3.1 Buffer-Replacement Policies","text":"<ul> <li> <p>LRU strategy - replace the block least recently used.  </p> <ul> <li>Idea behind LRU \u2013 use past pattern of block references as a predictor of future references \u7528\u8fc7\u53bb\u7684\u8bbf\u95ee\u6a21\u5f0f\u63a8\u65ad\u8bb2\u6765\u7684\u8bbf\u95ee\u6a21\u5f0f</li> </ul> <p>LRU can be a bad strategy</p> <p> </p> </li> <li> <p>Toss-immediate strategy \u2013 frees the space occupied by a block as soon as the final tuple of that block has been processed</p> </li> <li>Most recently used (MRU) strategy \u2013  system must pin the block currently being processed.  After the final tuple of that block has been processed, the block is unpinned, and it becomes the most recently used block.</li> <li>Buffer managers also support forced output of blocks for the purpose of recovery </li> </ul> <p>\u6700\u597d\u7684\u7b56\u7565\u662f\u57fa\u4e8e\u9884\u6d4b\u7684\uff0c\u4f46\u662f\u9884\u6d4b\u672c\u8eab\u662f\u5f88\u96be\u7684\uff0c\u9700\u8981\u5229\u7528\u4eba\u5de5\u667a\u80fd\u7684\u65b9\u6cd5\u3002  </p>"},{"location":"note/courses/database%20system/Chapter%209/#32-clock-an-approximation-of-lru","title":"3.2 Clock: An approximation of LRU","text":"<p>Arrange block into a cycle, store one <code>reference_bit</code> per block   When <code>pin_count</code> reduces to 0, set <code>reference_bit =1</code> <code>reference_bit</code> as the 2nd chance bit  </p> <pre><code>do for each block in cycle {\n    if (reference_bit ==1)\n        set reference_bit=0;\n    else if (reference_bit ==0)\n        choose this block for replacement;\n} until a page is chosen;\n</code></pre>"},{"location":"note/courses/database%20system/Final/","title":"DB Final Review","text":""},{"location":"note/courses/database%20system/Final/#1-chapter-1-introduction","title":"1 Chapter 1 Introduction","text":"<p>The primary goal of a DBMS\u662f\u63d0\u4f9b\u4e00\u79cd\u9ad8\u6548\u65b9\u4fbf\u5b58\u50a8\u548c\u68c0\u7d22\u6570\u636e\u5e93\u4fe1\u606f\u7684\u65b9\u5f0f</p> <p>Big Data:</p> <ul> <li>Volume \u5bb9\u91cf</li> <li>Variety \u79cd\u7c7b</li> <li>Velocity \u901f\u5ea6</li> <li>Value \u4ef7\u503c</li> </ul> <p>Database application \u5efa\u7acb\u5728\u6587\u4ef6\u7cfb\u7edf\u4e0a\u7684\u95ee\u9898</p> <ul> <li>Data redundancy and inconsistency</li> <li>Data isolation \u5f88\u591a\u6587\u4ef6\u548c\u683c\u5f0f</li> <li>Difficulty in accessing data</li> <li>Intergrity problems \u5b8c\u6574\u6027\u7ea6\u675f\u4e0d\u662f\u663e\u5f0f\u7684\u8868\u8fbe\u51fa\u6765\u7684\uff0c\u4e0d\u65b9\u4fbf\u6539</li> <li>Atomicity problems \u6bd4\u5982\u4e00\u6b21\u52a8\u4f5c\u4fee\u6539\u4e24\u4e2aitem,\u8fd9\u4e24\u4e2a\u5fc5\u987b\u540c\u65f6\u4fee\u6539\u6216\u8005\u4e0d\u4fee\u6539\u624d\u884c</li> <li>Concurrent access anomalies</li> <li>Security problems</li> </ul> <p>Characteristics of Databases</p> <ul> <li>data persistence(\u6570\u636e\u6301\u4e45\u6027) </li> <li>convenience in accessing data(\u6570\u636e\u8bbf\u95ee\u4fbf\u5229\u6027) </li> <li>data integrity \uff08\u6570\u636e\u5b8c\u6574\u6027\uff09 </li> <li>concurrency control for multiple user(\u591a\u7528\u6237\u5e76\u53d1\u63a7\u5236) </li> <li>failure recovery\uff08\u6545\u969c\u6062\u590d\uff09 </li> <li>security control\uff08\u5b89\u5168\u63a7\u5236\uff09 </li> </ul> <p>Schema \u548c instance(\u7c7b\u4f3c\u4e8e types \u548c variables)</p> <ul> <li>Schema (\u6a21\u5f0f) \u2013 \u6570\u636e\u5e93\u7684\u903b\u8f91\u7ed3\u6784<ul> <li>\u4f8b\u5982\uff1a\u6570\u636e\u5e93\u5305\u542b\u4e00\u7ec4\u5ba2\u6237\u548c\u8d26\u6237\u7684\u4fe1\u606f\u4ee5\u53ca\u5b83\u4eec\u4e4b\u95f4\u7684\u5173\u7cfb</li> <li>\u7c7b\u4f3c\u4e8e\u7a0b\u5e8f\u4e2d\u53d8\u91cf\u7684\u7c7b\u578b\u4fe1\u606f</li> <li>Physical schema (\u7269\u7406\u6a21\u5f0f)\uff1a\u7269\u7406\u7ea7\u522b\u7684\u6570\u636e\u5e93\u8bbe\u8ba1</li> <li>Logical schema (\u903b\u8f91\u6a21\u5f0f)\uff1a\u903b\u8f91\u7ea7\u522b\u7684\u6570\u636e\u5e93\u8bbe\u8ba1</li> </ul> </li> <li>Instance (\u5b9e\u4f8b) \u2013 \u7279\u5b9a\u65f6\u95f4\u70b9\u6570\u636e\u5e93\u7684\u5b9e\u9645\u5185\u5bb9<ul> <li>\u7c7b\u4f3c\u4e8e\u53d8\u91cf\u7684\u503c</li> </ul> </li> </ul> <p>Physical Data Independence \uff08\u7269\u7406\u6570\u636e\u72ec\u7acb\u6027\uff1athe ability to modify the physical schema without changing the logical schema</p> <p>Logical Data Independence \u903b\u8f91\u6570\u636e\u72ec\u7acb\u6027 \uff1a \u80fd\u591f\u4fee\u6539\u903b\u8f91\u6a21\u5f0f\u800c\u4e0d\u5f71\u54cd usr view schema</p> <p>Data Models: \u7528\u6765\u63cf\u8ff0 data,data relationships, data semantics \u8bed\u4e49\uff0cdata constrains \u7ea6\u675f \u7684\u4e00\u7ec4\u5de5\u5177</p> <ul> <li>Relation Model </li> <li>Object-oriented model \u9762\u5411\u5bf9\u8c61\u6570\u636e\u6a21\u578b</li> <li>Object-relational model \u5bf9\u8c61-\u5173\u7cfb\u6a21\u578b</li> <li>Semistructured data model \u534a\u7ed3\u6784\u5316\u6a21\u578b</li> <li>Nerwork model \u7f51\u72b6\u6a21\u578b</li> <li>Hierarchical model \u5c42\u6b21\u6a21\u578b</li> </ul> <p>**Relational model </p> <p></p> <p>Database Languages</p> <ul> <li>Data Definition Language \u6570\u636e\u5b9a\u4e49\u8bed\u8a00</li> <li>Data Manipulation Language \u6570\u636e\u64cd\u4f5c\u8bed\u8a00</li> <li>SQL query language\uff1a non-procedural \u975e\u8fc7\u7a0b\u5f0f</li> <li>Application Program Interface\uff0cSQL\u6ca1\u6cd5\u4e0e\u7528\u6237\u4ea4\u4e92\u7b49\u7b49\uff0c\u8fd9\u4e9b\u64cd\u4f5c\u5fc5\u987b\u88ab\u5378\u8f7dhost language\u4e2d\uff0c\u8fd9\u4e9b\u5f15\u7528\u7a0b\u5e8f\u901a\u8fc7Language Extensions(embedded SQL)/API(ODBC/JDBC)\u6765\u628asql\u8bed\u53e5\u9001\u7ed9\u6570\u636e\u5e93\u6765\u8bbf\u95ee\u6570\u636e\u5e93</li> </ul>"},{"location":"note/courses/database%20system/HW14/","title":"HW14","text":"<p>\\documentclass{article}</p> <p>\\usepackage{ctex} \u00a0% \u4f7f\u7528macOS\u9884\u8bbe\u7684\u4e2d\u6587\u5b57\u4f53\u914d\u7f6e</p> <p>\\usepackage{mathptmx}</p> <p>\\usepackage{geometry}</p> <p>\\geometry{margin=1in}</p> <p>\\usepackage{algorithm}</p> <p>\\usepackage{algpseudocode}</p> <p>\\usepackage{amsmath}</p> <p>\\usepackage{graphicx}</p> <p>\\usepackage{svg} \u00a0% \u6dfb\u52a0\u8fd9\u4e2a\u5305\u6765\u66f4\u597d\u5730\u652f\u6301SVG\u6587\u4ef6</p> <p>\\usepackage{booktabs}</p> <p>\\usepackage{multirow}</p> <p>\\usepackage{xcolor}</p> <p>\\usepackage{hyperref}</p> <p>\\usepackage{tabularx}</p> <p>\\usepackage{listings}</p> <p>\\lstset{</p> <p>basicstyle=\\ttfamily\\small, % \u8bbe\u7f6e\u57fa\u672c\u5b57\u4f53\u6837\u5f0f</p> <p>keywordstyle=\\color{blue}, % \u8bbe\u7f6e\u5173\u952e\u8bcd\u7684\u6837\u5f0f</p> <p>commentstyle=\\color{green!60!black}, % \u8bbe\u7f6e\u6ce8\u91ca\u7684\u6837\u5f0f</p> <p>showstringspaces=false, % \u4e0d\u663e\u793a\u5b57\u7b26\u4e32\u4e2d\u7684\u7a7a\u683c</p> <p>numbers=left, % \u884c\u53f7\u663e\u793a\u5728\u5de6\u4fa7</p> <p>numberstyle=\\tiny, % \u8bbe\u7f6e\u884c\u53f7\u7684\u6837\u5f0f</p> <p>breaklines=true, % \u5141\u8bb8\u4ee3\u7801\u81ea\u52a8\u6362\u884c</p> <p>frame=leftline, % \u7ed9\u4ee3\u7801\u52a0\u4e0a\u8fb9\u6846</p> <p>captionpos=b, % \u6807\u9898\u4f4d\u7f6e\u5728\u5e95\u90e8</p> <p>keepspaces=true, % \u4fdd\u6301\u7a7a\u683c</p> <p>breakatwhitespace=false, % \u5141\u8bb8\u5728\u7a7a\u767d\u5904\u6362\u884c</p> <p>xleftmargin=20pt, % \u5de6\u8fb9\u8ddd\uff0c\u907f\u514d\u884c\u53f7\u4e0e\u4ee3\u7801\u592a\u9760\u8fd1</p> <p>tabsize=4, % \u5236\u8868\u7b26\u5927\u5c0f</p> <p>language=C++, % \u9ed8\u8ba4\u4ee3\u7801\u8bed\u8a00</p> <p>% \u4ee5\u4e0b\u9009\u9879\u7528\u4e8e\u8de8\u9875\u548c\u4fdd\u6301\u7f16\u53f7</p> <p>breaklines=true, % \u5141\u8bb8\u4ee3\u7801\u81ea\u52a8\u6362\u884c</p> <p>breakautoindent=true, % \u81ea\u52a8\u7f29\u8fdb\u65ad\u884c</p> <p>numbers=left, % \u884c\u53f7\u5728\u5de6\u4fa7</p> <p>numbersep=10pt, % \u884c\u53f7\u4e0e\u4ee3\u7801\u4e4b\u95f4\u7684\u8ddd\u79bb</p> <p>numberstyle=\\tiny\\color{gray}, % \u884c\u53f7\u6837\u5f0f</p> <p>firstnumber=auto, % \u81ea\u52a8\u7f16\u53f7</p> <p>stepnumber=1, % \u884c\u53f7\u6bcf\u6b21\u589e\u52a01</p> <p>escapeinside={(@}{@)}, % \u5141\u8bb8\u5728\u4ee3\u7801\u4e2d\u63d2\u5165LaTeX\u547d\u4ee4</p> <p>numberbychapter=false, % \u4e0d\u6309\u7ae0\u8282\u91cd\u7f6e\u884c\u53f7</p> <p>extendedchars=true, % \u652f\u6301\u6269\u5c55\u5b57\u7b26</p> <p>% \u5141\u8bb8\u8de8\u9875\u7684\u5173\u952e\u914d\u7f6e</p> <p>breakindent=10pt, % \u6362\u884c\u540e\u7684\u7f29\u8fdb</p> <p>columns=flexible, % \u7075\u6d3b\u7684\u5217\u683c\u5f0f</p> <p>keepspaces=true, % \u4fdd\u6301\u7a7a\u683c</p> <p>belowskip=\\bigskipamount, % \u4ee3\u7801\u5757\u5e95\u90e8\u7a7a\u95f4</p> <p>aboveskip=\\bigskipamount, % \u4ee3\u7801\u5757\u9876\u90e8\u7a7a\u95f4</p> <p>resetmargins=false, % \u4e0d\u91cd\u7f6e\u9875\u8fb9\u8ddd</p> <p>}</p> <p>\\usepackage{enumitem}</p> <p>\\usepackage{indentfirst} \u00a0% \u786e\u4fdd\u4e2d\u6587\u6bb5\u843d\u9996\u884c\u7f29\u8fdb</p> <p>\\usepackage{titlesec} \u00a0 \u00a0 % \u7528\u4e8e\u6807\u9898\u683c\u5f0f\u5316</p> <p>\\usepackage{fancyhdr} \u00a0 \u00a0 % \u9875\u7709\u9875\u811a\u8bbe\u7f6e</p> <p>\\usepackage{booktabs}</p> <p>\\usepackage[version=4]{mhchem}</p> <p>\\usepackage{float}</p> <p>\\usepackage{setspace}</p> <p>\\usepackage{caption}</p> <p>\\usepackage{array}</p> <p>\\graphicspath{{Figs/}} % \u8bbe\u7f6e\u56fe\u7247\u8def\u5f84</p> <p>\\hypersetup{</p> <p>colorlinks=true,</p> <p>linkcolor=black</p> <p>}</p> <p>\\begin{document}</p> <p>\\begin{titlepage}</p> <p>\\centering</p> <p>\\begin{figure}[H]</p> <p>\\centering</p> <p>\\includegraphics[width=1.0\\textwidth]{\u6821\u540d.png}</p> <p>\\end{figure}</p> <p>\\vspace{1cm}</p> <p>\\Huge \\textbf{MiniSQL \u5b9e\u9a8c\u62a5\u544a} \\</p> <p>\\Large</p> <p>\\vspace{3cm}</p> <p>% \u4f7f\u7528\u4e24\u5217\u8868\u683c\u7ed3\u6784\uff0c\u5de6\u4fa7\u6807\u9898\u53f3\u5bf9\u9f50\uff0c\u53f3\u4fa7\u5185\u5bb9\u5c45\u4e2d</p> <p>\\begin{tabular}{|r@{\\hspace{1em}}c|}</p> <p>\\hline</p> <p>\\textbf{\u4f5c\u4e1a\u540d\u79f0\uff1a} &amp; \\textbf{MiniSQL} \\</p> <p>\\hline</p> <p>\\textbf{\u59d3\u540d\uff1a} &amp; \u91d1\u797a\u4e66 \\quad \u5e9e\u661f\u78ca \\quad \u848b\u7ffc\u6cfd \\</p> <p>\\textbf{\u5b66\u53f7\uff1a} &amp; 3230104248 \\quad 3230100607 \\quad 3230102996 \\</p> <p>\\hline</p> <p>\\textbf{\u6388\u8bfe\u6559\u5e08\uff1a} &amp; \u5b59\u5efa\u4f36 \\</p> <p>\\textbf{\u52a9\u6559\uff1a} &amp; \u77f3\u5b87\u65b0 / \u7ae0\u6f47\u5f6c \\</p> <p>\\hline</p> <p>\\end{tabular}</p> <p>\\vspace{3cm} \u00a0% \u589e\u52a0\u8868\u683c\u4e0e\u65e5\u671f\u4e4b\u95f4\u7684\u7a7a\u95f4</p> <p>\\Large \\textbf{2025 \u5e74 4 \u6708 18 \u65e5}</p> <p>\\vspace{2cm}</p> <p>\\end{titlepage}</p> <p>\\tableofcontents</p> <p>\\newpage</p> <p>\\section{Catalog Manager}</p> <p>\\subsection{\u5173\u952e\u6570\u636e\u6210\u5458\u5206\u6790}</p> <p>\\begin{algorithm}</p> <p>\\caption{IndexMetadata \u7c7b\u7684\u6570\u636e\u6210\u5458}</p> <p>\\begin{lstlisting}{language=C++}</p> <p>static constexpr uint32_t INDEX_METADATA_MAGIC_NUM = 344528;</p> <p>index_id_t index_id_;</p> <p>std::string index_name_;</p> <p>table_id_t table_id_;</p> <p>std::vector key_map_; <p>\\end{lstlisting}</p> <p>\\end{algorithm}</p> <p>\\verb|IndexMetadata|\u7c7b\u5b58\u50a8\u4e86\u9b54\u6570\uff0c\u7d22\u5f15ID\uff0c\u7d22\u5f15\u540d\u79f0\uff0c\u8868ID\u4ee5\u53ca\u952e\u6620\u5c04\u3002\u9b54\u6570\u7528\u4e8e\u9a8c\u8bc1\u5143\u6570\u636e\u7684\u5b8c\u6574\u6027\uff0c\u7d22\u5f15ID\u548c\u8868ID\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u7d22\u5f15\u548c\u5173\u8054\u7684\u8868\uff0c\u952e\u6620\u5c04\u5219\u5b58\u50a8\u4e86\u7d22\u5f15\u4e2d\u5404\u4e2a\u952e\u7684\u4f4d\u7f6e\u4fe1\u606f\u3002</p> <p>\\begin{algorithm}</p> <p>\\caption{IndexInfo \u7c7b\u7684\u6570\u636e\u6210\u5458}</p> <p>\\begin{lstlisting}{language=C++}</p> <p>IndexMetadata *meta_data_;</p> <p>Index *index_;</p> <p>IndexSchema *key_schema_;</p> <p>\\end{lstlisting}</p> <p>\\end{algorithm}</p> <p>\\verb|IndexInfo|\u7c7b\u5305\u542b\u4e86\u6307\u5411\u7d22\u5f15\u5143\u6570\u636e\u7684\u6307\u9488\uff0c\u5b9e\u9645\u7684\u7d22\u5f15\u5bf9\u8c61\u4ee5\u53ca\u952e\u6a21\u5f0f\u3002\u5143\u6570\u636e\u63d0\u4f9b\u4e86\u7d22\u5f15\u7684\u57fa\u672c\u4fe1\u606f\uff0c\\verb|index|\u662f\u4e00\u4e2a\u6570\u636e\u6210\u5458\u4e3a\\verb|index_id_|\u548c\\verb|*key_schema_|\u7684\u7c7b\uff0c\u800c\u952e\u6a21\u5f0f\u5b9a\u4e49\u4e86\u7d22\u5f15\u4e2d\u4f7f\u7528\u7684\u952e\u7684\u7ed3\u6784\u3002</p> <p>\\begin{algorithm}</p> <p>\\caption{TableMetadata \u7c7b\u7684\u6570\u636e\u6210\u5458}</p> <p>\\begin{lstlisting}{language=C++}</p> <p>static constexpr uint32_t TABLE_METADATA_MAGIC_NUM = 344528;</p> <p>table_id_t table_id_;</p> <p>std::string table_name_;</p> <p>page_id_t root_page_id_;</p> <p>Schema *schema_;</p> <p>\\end{lstlisting}</p> <p>\\end{algorithm}</p> <p>\\verb|TableMetadata|\u7c7b\u5b58\u50a8\u4e86\u8868\u7684\u9b54\u6570\uff0c\u8868ID\uff0c\u8868\u540d\uff0c\u6839\u9875\u9762ID\u4ee5\u53ca\u8868\u7684\u6a21\u5f0f\u3002\u9b54\u6570\u7528\u4e8e\u9a8c\u8bc1\u5143\u6570\u636e\u7684\u5b8c\u6574\u6027\uff0c\u8868ID\u548c\u8868\u540d\u7528\u4e8e\u552f\u4e00\u6807\u8bc6\u8868\uff0c\u6839\u9875\u9762ID\u6307\u5411\u8868\u7684\u6839\u9875\u9762\uff0c\u800c\u6a21\u5f0f\u5b9a\u4e49\u4e86\u8868\u4e2d\u5404\u5217\u7684\u7ed3\u6784\u3002</p> <p>\\begin{algorithm}[H]</p> <p>\\caption{TableInfo \u7c7b\u7684\u6570\u636e\u6210\u5458}</p> <p>\\begin{lstlisting}{language=C++}</p> <p>TableMetadata *table_meta_;</p> <p>TableHeap *table_heap_;</p> <p>\\end{lstlisting}</p> <p>\\end{algorithm}</p> <p>\\verb|TableInfo|\u7c7b\u5305\u542b\u4e86\u6307\u5411\u8868\u5143\u6570\u636e\u7684\u6307\u9488\u548c\u8868\u5806\u7684\u6307\u9488\u3002\u5143\u6570\u636e\u63d0\u4f9b\u4e86\u8868\u7684\u57fa\u672c\u4fe1\u606f\uff0c\u800c\u8868\u5806\u5219\u662f\u5b9e\u9645\u5b58\u50a8\u8868\u6570\u636e\u7684\u7ed3\u6784\u3002</p> <p>\\begin{algorithm}[H]</p> <p>\\caption{CatalogMeta \u7c7b\u7684\u6570\u636e\u6210\u5458}</p> <p>\\begin{lstlisting}{language=C++}</p> <p>static constexpr uint32_t CATALOG_METADATA_MAGIC_NUM = 89849;</p> <p>std::map table_meta_pages_; <p>std::map index_meta_pages_; <p>\\end{lstlisting}</p> <p>\\end{algorithm}</p> <p>\\verb|CatalogMeta|\u7c7b\u5b58\u50a8\u4e86\\verb|Catalog|\u7684\u5143\u6570\u636e\u8be6\u7ec6\uff0c\u5305\u62ec\u5176\u4e2d\u6240\u6709\u8868\u7684\u5143\u6570\u636e\u9875\u9762\u548c\u7d22\u5f15\u7684\u5143\u6570\u636e\u9875\u9762\u3002\u9b54\u6570\u7528\u4e8e\u9a8c\u8bc1\u5143\u6570\u636e\u7684\u5b8c\u6574\u6027\uff0c\\verb|table_meta_pages_|\u548c\\verb|index_meta_pages_|\u5206\u522b\u5b58\u50a8\u4e86\u8868\u548c\u7d22\u5f15\u7684\u5143\u6570\u636e\u9875\u9762ID\u3002</p> <p>\\begin{algorithm}[H]</p> <p>\\caption{CatalogManager \u7c7b\u7684\u6570\u636e\u6210\u5458}</p> <p>\\begin{lstlisting}{language=C++}</p> <p>CatalogMeta *catalog_meta_;</p> <p>std::atomic next_table_id_; <p>std::atomic next_index_id_; <p>// map for tables</p> <p>std::unordered_map table_names_; <p>std::unordered_map tables_; <p>// map for indexes: table_name-&gt;index_name-&gt;indexes</p> <p>std::unordered_map&gt; index_names_; <p>std::unordered_map indexes_; <p>\\end{lstlisting}</p> <p>\\end{algorithm}</p> <p>\\verb|Catalog Manager|\u7c7b\u662f\u6574\u4e2a\u76ee\u5f55\u7ba1\u7406\u5668\u7684\u6838\u5fc3\uff0c\u5305\u542b\u4e86\u4e00\u4e2a\u6307\u5411\u76ee\u5f55\u5143\u6570\u636e\u7684\u6307\u9488,\u53ef\u4f9b\u5206\u914d\u7684\u4e0b\u4e00\u4e2a\u8868ID\u548c\u7d22\u5f15ID\u3002\u5b83\u7ef4\u62a4\u4e86\u8868\u540d\u5230\u8868ID\u7684\u6620\u5c04\uff0c\u8868ID\u5230\\verb|TableInfo|\u7684\u6620\u5c04\uff0c\u7d22\u5f15\u540d\u5230\u7d22\u5f15ID\u7684\u6620\u5c04\uff0c\u4ee5\u53ca\u7d22\u5f15ID\u5230\\verb|IndexInfo|\u7684\u6620\u5c04\u3002</p> <p>\\subsection{GetSerializedSize \u65b9\u6cd5\u5206\u6790}</p> <p>\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u89c2\u5bdf\u5404\u4e2a\u5143\u6570\u636e\u7684\\verb|SerializeTo|\u51fd\u6570\u6765\u5206\u6790\u5143\u6570\u636e\u9700\u8981\u7684\u7a7a\u95f4\u5927\u5c0f\u3002</p> <p>\u4ee5CatalogMeta\u4e3a\u4f8b\uff0c\u5176\\verb|SerializeTo|\u51fd\u6570\u5982\u4e0b\uff1a</p> <p>\\begin{algorithm}[H]</p> <p>\\caption{CatalogMeta \u7c7b\u7684 SerializeTo \u65b9\u6cd5}</p> <p>\\begin{lstlisting}{language=C++}</p> <p>void CatalogMeta::SerializeTo(char *buf) const {</p> <p>ASSERT(GetSerializedSize() &lt;= PAGE_SIZE, \"Failed to serialize catalog metadata to disk.\");</p> <p>MACH_WRITE_UINT32(buf, CATALOG_METADATA_MAGIC_NUM);</p> <p>buf += 4;</p> <p>MACH_WRITE_UINT32(buf, table_meta_pages_.size());</p> <p>buf += 4;</p> <p>MACH_WRITE_UINT32(buf, index_meta_pages_.size());</p> <p>buf += 4;</p> <p>for (auto iter : table_meta_pages_) {</p> <p>MACH_WRITE_TO(table_id_t, buf, iter.first);</p> <p>buf += 4;</p> <p>MACH_WRITE_TO(page_id_t, buf, iter.second);</p> <p>buf += 4;</p> <p>}</p> <p>for (auto iter : index_meta_pages_) {</p> <p>MACH_WRITE_TO(index_id_t, buf, iter.first);</p> <p>buf += 4;</p> <p>MACH_WRITE_TO(page_id_t, buf, iter.second);</p> <p>buf += 4;</p> <p>}</p> <p>}</p> <p>\\end{lstlisting}</p> <p>\\end{algorithm}</p> <p>\u6839\u636e\u76ee\u5f55\u5143\u4fe1\u606f\u7684\u5e8f\u5217\u5316\u51fd\u6570\uff0c\u53ef\u4ee5\u7b97\u51fabuf\u7684\u4f4d\u79fb\u91cf\uff0c\u4e5f\u5c31\u662f\u6700\u540e\u5e8f\u5217\u5316\u7684\u5927\u5c0f</p> <p>\\begin{algorithm}[H]</p> <p>\\caption{CatalogMeta \u7c7b\u7684 GetSerializedSize \u65b9\u6cd5}</p> <p>\\begin{lstlisting}{language=C++}</p> <p>uint32_t CatalogMeta::GetSerializedSize() const {</p> <p>//ASSERT(false, \"Not Implemented yet\");</p> <p>uint32_t size = sizeof(uint32_t) * 3 + \\</p> <p>(sizeof(table_id_t) + sizeof(page_id_t)) * table_meta_pages_.size() + \\</p> <p>(sizeof(index_id_t) + sizeof(page_id_t)) * index_meta_pages_.size(); // magic num + table nums + index nums</p> <p>return 0;</p> <p>}</p> <p>\\end{lstlisting}</p> <p>\\end{algorithm}</p> <p>table\u548cindex\u7684\\verb|GetSerializedSize|\u65b9\u6cd5\u4e5f\u7c7b\u4f3c\uff0c\u5728\u6b64\u4e0d\u591a\u505a\u8d58\u8ff0\u3002</p> <p>\\subsection{IndexInfo \u7684\u521d\u59cb\u5316}</p> <p>\u7531\u7b2c\u4e00\u90e8\u5206\u7684\u5206\u6790\u53ef\u4ee5\u77e5\u9053\uff0c\\verb|IndexInfo|\u7c7b\u5305\u542b\u4e86\u6307\u5411\u7d22\u5f15\u5143\u6570\u636e\u7684\u6307\u9488\uff0c\u5b9e\u9645\u7684\u7d22\u5f15\u5bf9\u8c61\u4ee5\u53ca\u952e\u6a21\u5f0f\u3002</p> <p>\u800c\\verb|IndexInfo|\u7684\u521d\u59cb\u5316\u4e3b\u8981\u6839\u636e\\verb|IndexMetadata|\u53cd\u5e8f\u5217\u5316\u5f97\u5230\u7684\\verb|IndexMetadata|\u5bf9\u8c61\u6765\u5b8c\u6210\u3002</p> <p>\\begin{algorithm}[H]</p> <p>\\caption{IndexInfo \u7c7b\u7684\u6784\u9020\u51fd\u6570}</p> <p>\\begin{lstlisting}{language=C++}</p> <p>void Init(IndexMetadata meta_data, TableInfo table_info, BufferPoolManager *buffer_pool_manager) {</p> <p>meta_data_ = meta_data;</p> <p>const std::vector &amp;key_map = meta_data_-&gt;GetKeyMapping(); <p>TableSchema* table_schema = table_info-&gt;GetSchema();</p> <p>key_schema_ = IndexSchema::ShallowCopySchema(table_schema, key_map);</p> <p>index_ = CreateIndex(buffer_pool_manager, \"bptree\");</p> <p>}</p> <p>\\end{lstlisting}</p> <p>\\end{algorithm}</p> <p>\u9996\u5148\uff0c\u6211\u4eec\u52a0\u8f7d\u7d22\u5f15\u5143\u6570\u636e\uff0c\u4ece\u4e2d\u63d0\u53d6\u952e\u6620\u5c04\u4fe1\u606f\u3002\u63a5\u7740\uff0c\u901a\u8fc7TableInfo \u83b7\u5f97\\verb|table_schema|,\u7531\u4e8e\\verb|key_schema_|\u4e2d\u5305\u542b\u7684\u5217\u548c\\verb|table_schema|\u4e2d\u7684\u5217\u4f7f\u7528\u7684\u5e94\u5f53\u662f\u540c\u4e00\u4efd\u5185\u5b58\uff0c</p> <p>\u6240\u4ee5\u5c06\u4f7f\u7528\u6d45\u62f7\u8d1d\u51fd\u6570\uff0c\u6839\u636e\\verb|key_map|\u6765\u83b7\u5f97\u9700\u8981\u7684\u5217\u5b58\u5165\\verb|key_schema_|\u4e2d\u3002</p> <p>\u6700\u540e\uff0c\u4ee5bp\u6811\u7684\u65b9\u5f0f\u5728\u7f13\u51b2\u6c60\u5efa\u7acb\u7d22\u5f15\u3002</p> <p>\\subsection{CatalogManager \u6210\u5458\u51fd\u6570\u7684\u5b9e\u73b0}</p> <p>\\subsubsection{}</p> <p>\\end{document}</p>"},{"location":"note/courses/database%20system/Index/","title":"Index","text":"<p>Index</p> <p>\u672c\u8bfe\u7a0b\u7b14\u8bb0\u5728hobbiqia\u5b66\u957f\u7684\u7b14\u8bb0\u4e0a\u4fee\u6539\u800c\u6210</p>"},{"location":"note/courses/database%20system/Quiz/","title":"Quiz 1","text":"\\[ \\Pi_{name}(\\sigma_{building={'\u767d\u6c99\u4e00\u5e62'\\wedge room='213'\\wedge department='CS'}}(student)) \\] \\[\\Pi_{name}(\\sigma_{name\\neq'\u738b\u5c0f\u5f3a'}(student)\\bowtie(\\Pi_{building,room}(\\sigma_{name='\u738b\u5c0f\u5f3a'}(student))))$$ $$\\Pi_{A.name,B.name}(\\sigma_{A.building=B.building\\wedge A.room=B.room \\wedge A.sid&gt;B.sid \\wedge A.department\\neq B.department}(\\rho_A(student)\\times \\rho_B(student)))\\] \\[ \\Pi_{building,room}(\\sigma_{dorm.capacity=R.sum}(dorm\\bowtie\\rho_{R(building,room,sum)}(building,room~\\mathcal{G}_{count(*)}(student))) ) \\]"},{"location":"note/courses/database%20system/chaper%201%20Introduction/","title":"Introduction","text":""},{"location":"note/courses/database%20system/chaper%201%20Introduction/#1-database-systems","title":"1 Database Systems","text":"<p>Database \u662f\u4e00\u4e2a\u5355\u4f4d\u4e2d\u76f8\u5173\u8054\u7684\u6570\u636e\u96c6\uff0c\u7531DBMS(Database Management System)\u7ba1\u7406</p> <p>\u6700\u57fa\u672c\u7684\u529f\u80fd\u662f\u6570\u636e\u7684\u5b58\u548c\u53d6\u4e0e\u7ba1\u7406</p> <p>\u6570\u636e\u7ba1\u7406\u65e2\u5305\u62ec\u5b9a\u4e49\u4fe1\u606f\u5b58\u50a8\u7684\u7ed3\u6784\uff0c\u4e5f\u5305\u62ec\u63d0\u4f9b\u4fe1\u606f\u64cd\u4f5c\u7684\u673a\u5236\u3002</p> <p>\u6570\u636e\u5e93\u7cfb\u7edf\u5fc5\u987b\u4fdd\u8bc1\u5b58\u50a8\u6570\u636e\u7684\u5b89\u5168\u6027</p> <p>\u5e76\u53d1\u8bbf\u95ee\u65f6\u5e94\u4fdd\u8bc1\u6709\u5e8f\u8bbf\u95ee\u4e0d\u53d1\u751f\u6df7\u4e71</p>"},{"location":"note/courses/database%20system/chaper%201%20Introduction/#2-purpose-of-database-systems","title":"2 Purpose of Database Systems","text":"<ul> <li>Intergrity problems \u5b8c\u6574\u6027\u95ee\u9898<ul> <li>\u5b8c\u6574\u6027\u7ea6\u675f\u88ab\u201c\u57cb\u85cf\u201d\u5728\u7a0b\u5e8f\u4ee3\u7801\u4e2d\uff0c\u800c\u975e\u88ab\u663e\u5f0f\u5730\u8868\u8ff0</li> <li>\u96be\u4ee5\u6dfb\u52a0\u65b0\u7684\u7ea6\u675f\u548c\u4fee\u6539\u73b0\u5b58\u7684</li> </ul> </li> <li>Atomicity problems \u539f\u5b50\u6027\u95ee\u9898\uff0c\u95ee\u9898\u4e4b\u95f4\u662f\u76f8\u4e92\u5173\u8054\u7684<ul> <li>\u6545\u969c\u53ef\u80fd\u4f1a\u4f7f\u6570\u636e\u5e93\u5904\u4e8e\u4e0d\u4e00\u81f4\u7684\u72b6\u6001\uff0c\u5176\u4e2d\u90e8\u5206\u66f4\u65b0\u5df2\u6267\u884c\u3002</li> </ul> </li> <li>Concurrent access anomalies  \u5e76\u53d1\u8bbf\u95ee\u5f02\u5e38<ul> <li>\u4e0d\u53d7\u63a7\u5236\u7684\u5e76\u53d1\u8bbf\u95ee\u53ef\u80fd\u5bfc\u81f4\u4e0d\u4e00\u81f4</li> </ul> </li> <li>Security problems \u5b89\u5168\u6027\u95ee\u9898<ul> <li>\u96be\u4ee5\u5411\u7528\u6237\u63d0\u4f9b\u5bf9\u4e00\u90e8\u5206\u4f46\u4e0d\u662f\u5168\u90e8\u7684\u6570\u636e\u7684\u8bbf\u95ee</li> <li>Authentication \u8ba4\u8bc1</li> <li>privilege \u6743\u9650</li> <li>Audit \u5ba1\u8ba1</li> </ul> </li> </ul> <p>Characteristics of Databases: - data persistence(\u6570\u636e\u6301\u4e45\u6027) - convenience in accessing data(\u6570\u636e\u8bbf\u95ee\u4fbf\u5229\u6027) - data integrity \uff08\u6570\u636e\u5b8c\u6574\u6027\uff09 - concurrency control for multiple user(\u591a\u7528\u6237\u5e76\u53d1\u63a7\u5236) - failure recovery\uff08\u6545\u969c\u6062\u590d\uff09  - security  control\uff08\u5b89\u5168\u63a7\u5236\uff09</p>"},{"location":"note/courses/database%20system/chaper%201%20Introduction/#3-view-of-data","title":"3 View of Data","text":"<p>\u6570\u636e\u5e93\u7684\u4e09\u7ea7\u62bd\u8c61\uff1a </p>"},{"location":"note/courses/database%20system/chaper%201%20Introduction/#31-schema-and-instance","title":"3.1 Schema and Instance","text":"<ul> <li>Similar to types and variables in programming languages</li> <li>Schema \u6a21\u5f0f\uff0c\u6570\u636e\u5e93\u7684\u903b\u8f91\u7ed3\u6784</li> <li>Instance\u5b9e\u4f8b\uff0c\u67d0\u4e00\u65f6\u95f4\u70b9\u6570\u636e\u5e93\u7684\u5177\u4f53\u5185\u5bb9</li> </ul>"},{"location":"note/courses/database%20system/chaper%201%20Introduction/#32-data-independence","title":"3.2 Data Independence","text":"<p>\u7269\u7406\u6570\u636e\u72ec\u7acb\u6027\uff1a</p> <p>\u903b\u8f91\u6570\u636e\u72ec\u7acb\u6027\uff1a</p>"},{"location":"note/courses/database%20system/chaper%201%20Introduction/#4-data-models","title":"4 Data Models","text":"<ul> <li>A collection of tools for describing <ul> <li>Data (\u6570\u636e)</li> <li>Data relationships(\u8054\u7cfb)</li> <li>Data semantics(\u8bed\u4e49)</li> <li>Data constraints(\u7ea6\u675f)</li> </ul> </li> <li>Relational model(\u5173\u7cfb\u6a21\u578b)</li> <li>Entity-Relationship(\u5b9e\u4f53-\u8054\u7cfb) data model </li> <li>Object-based data models <ul> <li>Object-oriented  (\u9762\u5411\u5bf9\u8c61\u6570\u636e\u6a21\u578b)</li> <li>Object-relational(\u5bf9\u8c61-\u5173\u7cfb\u6a21\u578b\u6a21\u578b)</li> </ul> </li> <li>Semistructured data model  (XML)(\u534a\u7ed3\u6784\u5316\u6570\u636e\u6a21\u578b)</li> <li>Other older models:<ul> <li>Network model  (\u7f51\u72b6\u6a21\u578b)</li> <li>Hierarchical model(\u5c42\u6b21\u6a21\u578b)</li> </ul> </li> </ul>"},{"location":"note/courses/database%20system/chaper%201%20Introduction/#5-database-languages","title":"5 Database Languages","text":""},{"location":"note/courses/database%20system/chaper%201%20Introduction/#51-data-definition-languages-ddl","title":"5.1 Data Definition Languages DDL","text":"<p>\u7528\u4e8e\u5b9a\u4e49\u6570\u636e\u5e93\u6a21\u5f0f\u7684\u89c4\u8303\u7b26\u53f7</p> <p>Example</p> <p></p> <p>C \u8bed\u8a00\u91cc\u7684 struct \u7ecf\u8fc7\u7f16\u8bd1\u540e\u5168\u90e8\u53d8\u4e3a\u4e86\u4ee3\u7801\uff08\u6709\u4e00\u5f20\u7b26\u53f7\u8868\uff09\u4f46\u6570\u636e\u5e93\u91cc\u4e0d\u4f1a\u3002</p> <p>Data dictionary contains\u00a0metadata\u00a0(\u5143\u6570\u636e\uff0ci.e.\u00a0data about data)</p> <ul> <li>DDL compiler generates a set of table templates stored in a data dictionary (\u6570\u636e\u5b57\u5178)</li> <li>Database schema</li> <li>Integrity constraints (\u5b8c\u6574\u6027\u7ea6\u675f) Primary key (ID uniquely identifies instructors, \u4e3b\u952e) Referential integrity (references constraint in SQL, \u53c2\u7167\u5b8c\u6574\u6027) e.g. dept_name value in any instructor tuple must appear in department relation</li> <li>Authorization (\u6743\u9650)</li> </ul>"},{"location":"note/courses/database%20system/chaper%201%20Introduction/#52-data-manipulation-language-dml","title":"5.2 Data Manipulation Language DML","text":"<p>Two classes of languages</p> <ul> <li>Procedural (\u8fc7\u7a0b\u5f0f)\u2013 user specifies what data is required and how to get those data\u00a0e.g.\u00a0C</li> <li>Declarative (nonprocedural\uff0c\u9648\u8ff0\u5f0f\uff0c\u975e\u8fc7\u7a0b\u5f0f) \u2013 user specifies what data is required without specifying how to get those data\u00a0e.g.\u00a0SQL</li> </ul> <p>SQL\u00a0is the most widely used query language</p>"},{"location":"note/courses/database%20system/chaper%201%20Introduction/#53-sql-query-language","title":"5.3 SQL Query Language","text":""},{"location":"note/courses/database%20system/chaper%201%20Introduction/#54-database-access-from-application-program","title":"5.4 Database Access from Application Program","text":"<ul> <li>Such computations and actions must be written in a host language, such as C/C++, Java or Python.</li> <li>Application programs generally access databases through one of * Language extensions to allow embedded SQL\u00a0e.g.\u00a0\u901a\u8fc7\u9884\u5904\u7406\u5668\uff0c\u5c06 select \u8bed\u53e5\u8bc6\u522b\u51fa\u6765\uff0c\u7ffb\u8bd1\u6210 C \u8bed\u8a00\u7684\u51fd\u6570\u8c03\u7528\u3002 </li> <li>API\u00a0(Application program interface)\u00a0e.g.\u00a0ODBC/JDBC which allow SQL queries to be sent to a database.</li> </ul>"},{"location":"note/courses/database%20system/chaper%201%20Introduction/#55-database-design","title":"5.5 Database Design\u6570\u636e\u5e93\u8bbe\u8ba1","text":"<ul> <li> <p>Entity Relationship Model (\u5b9e\u4f53-\u8054\u7cfb\u6a21\u578b)     \u4e00\u5bf9\u4e00/\u4e00\u5bf9\u591a/\u591a\u5bf9\u4e00/\u591a\u5bf9\u591a      \u56fe\u662f\u4e2d\u7acb\u7684\uff0c\u53ef\u4ee5\u7528\u5173\u7cfb\u6570\u636e\u5e93/\u9762\u5411\u5bf9\u8c61\u6570\u636e\u5e93\u5b9e\u73b0</p> </li> <li> <p>Normalization Theory\u89c4\u8303\u5316\u7406\u8bba     Formalize what designs are bad , and test for them</p> </li> </ul> <p>Example</p> <p> \u8fd9\u4e2a\u8868\u5b58\u5728\u5197\u4f59\uff0cdepartment \u6709\u91cd\u590d\uff0c\u5e94\u8be5\u62c6\u5206\u4e3a\u4e24\u5f20\u8868</p>"},{"location":"note/courses/database%20system/chaper%201%20Introduction/#6-database-engine","title":"6 Database Engine \u6570\u636e\u5e93\u5f15\u64ce","text":"<p>\u4e00\u4e2a\u6570\u636e\u5e93\u7cfb\u7edf\u662f\u88ab\u5206\u4e3a\u4e0d\u540c\u7684\u5904\u7406\u5404\u81ea\u804c\u8d23\u7684\u6a21\u578b</p> <p>\u4e00\u4e2a\u6570\u636e\u5e93\u7cfb\u7edf\u7684\u7ec4\u4ef6\u53ef\u4ee5\u88ab\u5206\u4e3a\uff1a - The storage manager - the query processor - the transaction management component</p>"},{"location":"note/courses/database%20system/chaper%201%20Introduction/#61-storage-manager","title":"6.1 Storage Manager","text":"<p>\u4e3a\u4e86\u6570\u636e\u6301\u4e45\u5316\uff0c\u653e\u5728\u786c\u76d8\u91cc\uff0c\u4f46\u6570\u636e\u5904\u7406\u8981\u8fdb\u5165\u5185\u5b58\uff0c\u8fd9\u4e4b\u95f4\u5b58\u5728\u6570\u636e\u9e3f\u6c9f\u3002 \u6309\u5757\u8bbf\u95ee\u5185\u5b58 (4k/16k), \u7f13\u51b2\u7ba1\u7406\u3002</p> <ul> <li>File manager</li> <li>Buffer manager</li> <li>Authorization and intergrity manager</li> <li>Transaction manger</li> </ul> <p>\u6570\u636e\u5e93\u91cc\u9762\u653e\u7684\u662f\uff1a - data files \u771f\u6b63\u7684\u6570\u636e - data dictionary \u653e\u7684\u662f\u539f\u5b50\u6570\u636e - statistical data \u7528\u4e8e\u6570\u636e\u5e93\u7684\u67e5\u8be2\u5904\u7406 - indices</p>"},{"location":"note/courses/hpc/note/","title":"\u8ba1\u7b97\u673a\u7cfb\u7edf\u77e5\u8bc6","text":"\u8fd9\u662f\u5565 <p>haha</p> <ul> <li>\u5e76\u884c\u8ba1\u7b97\uff1a<ul> <li>\u4f20\u7edf\u610f\u4e49\u4e0a\u662f\u6307\u8ba1\u7b97\u8d44\u6e90\u5e94\u5305\u62ec\u4e00\u53f0\u914d\u6709\u591a\u5904\u7406\u673a\uff08\u5e76\u884c\u5904\u7406\uff09\u7684\u8ba1\u7b97\u673a</li> <li>\u5177\u6709\u8d85\u7ea7\u8ba1\u7b97\u80fd\u529b\u7684\u8ba1\u7b97\u673a\u7cfb\u7edf</li> <li>\u4e5f\u6307\u4e00\u4e2a\u75db\u6bb4\u8fc7\u7f51\u7edc\u8fde\u63a5\u7684\u8ba1\u7b97\u673a\u7fa4</li> </ul> </li> <li>\u5206\u5e03\u5f0f\u8ba1\u7b97<ul> <li>\u5305\u62ec\u5206\u5e03\u5f0f\u786c\u4ef6\u7ed3\u6784\u548c\u5206\u5e03\u5f0f\u8f6f\u4ef6\u8bbe\u8ba1</li> <li>\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u662f\u4e3a\u89e3\u51b3\u5355\u4e2a\u95ee\u9898\u800c\u7d27\u5bc6\u7ed3\u5408\u5728\u4e00\u8d77\u5de5\u4f5c\u7684\u591a\u5904\u7406\u673a\u7684\u96c6\u5408</li> <li>\u4e00\u4e2a\u5206\u5e03\u5f0f\u7cfb\u7edf\u53ef\u80fd\u610f\u5473\u7740\u4e00\u4e2a\u7531\u5730\u7406\u4e0a\u5206\u6563\u7684\u3001\u5404\u81ea\u72ec\u7acb\u7684\u8ba1\u7b97\u673a\u7ec4\u6210\u7684\u7f51\u7edc</li> </ul> </li> <li>\u96c6\u7fa4\u8ba1\u7b97\uff1a<ul> <li>\u57fa\u4e8e\u5e76\u884c\u7cfb\u7edf\u548c\u7f51\u7edc\u7684</li> <li>\u96c6\u7fa4\u7cfb\u7edf\u2014\u2014\u662f\u4ee5\u9ad8\u901f\u7f51\u7edc\u8fde\u63a5\u8d77\u6765\u7684\u9ad8\u6027\u80fd\u5de5\u4f5c\u7ad9\u6216\u5fae\u673a\u7ec4\u6210</li> </ul> </li> <li>\u4e91\u8ba1\u7b97\uff1a</li> </ul>"},{"location":"note/courses/hpc/note/#1","title":"1 \u8ba1\u7b97\u673a\u6982\u8ff0","text":"<ul> <li>\u7a0b\u5e8f\uff08program\uff09\uff1a\u7b80\u5355\u5730\u88ab\u7406\u89e3\u4e3a\u6309\u7167\u9884\u5b9a\u7684\u6b65\u9aa4\u8fdb\u884c\u5de5\u4f5c\uff0c\u7a0b\u5e8f\u662f\u5904\u7406\u6570\u636e\u7684\u7b97\u6cd5\u7684\u5177\u4f53\u5b9e\u73b0</li> <li>\u8ba1\u7b97\u673a\u7cfb\u7edf\u5206\u4e3a\u786c\u4ef6\u7cfb\u7edf\u548c\u8f6f\u4ef6\u7cfb\u7edf</li> <li>\u786c\u4ef6\u7cfb\u7edf\uff1a\u6307\u8ba1\u7b97\u673a\u7684\u7269\u7406\u8bbe\u5907\uff0c\u5b9e\u73b0\u8ba1\u7b97\u673a\u64cd\u4f5c\u8fc7\u7a0b\u3001\u8f93\u5165\u3001\u8f93\u51fa\u7684\u5404\u79cd\u7535\u5b50\u8bbe\u5907</li> <li>\u8ba1\u7b97\u673a\u662f\u5982\u4f55\u8fd0\u884c\u7684\uff1a</li> <li>\u901a\u7535\u540e CPU\u6267\u884c\u542f\u52a8\u7a0b\u5e8fBIOS\uff0c\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5165\u5185\u5b58</li> <li>BIOS\u5f15\u5bfc\u540e\u8ba1\u7b97\u673a\u7531\u64cd\u4f5c\u7cfb\u7edf\u7ba1\u7406\u548c\u63a7\u5236</li> </ul>"},{"location":"note/courses/hpc/note/#2","title":"2 \u8ba1\u7b97\u673a\u4e2d\u6570\u7684\u8868\u793a","text":"<ul> <li>\u6574\u6570\uff1a\u539f\u7801\u3001\u53cd\u7801\u3001\u8865\u7801\uff0c\u6b63\u6570\u7684\u8865\u7801\u7b49\u4e8e\u4ed6\u7684\u539f\u7801\uff0c\u8d1f\u6570\u7684\u8865\u7801\u7b49\u4e8e\u5b83\u7684\u53cd\u7801\u52a01\uff08\u8fdb\u4f4d\u4e0d\u6539\u53d8\u7b26\u53f7\u4f4d\uff09</li> <li> <p>\u5b58\u50a8\u91c7\u7528\u8865\u7801\u5f62\u5f0f\uff0c\u5c06\u7b26\u53f7\u4f4d\u4e0e\u5176\u4ed6\u4f4d\u53ef\u4ee5\u7edf\u4e00\u5904\u7406\uff0c\u8865\u7801\u5b9e\u73b0\u51cf\u6cd5\u8fd0\u7b97</p> </li> <li> <p>\u6570\u7684\u4e24\u79cd\u5f62\u5f0f\uff1a\u5b9a\u70b9\u6570\u548c\u6d6e\u70b9\u6570</p> </li> <li>\u8ba1\u7b97\u673a\u4e2d\u7684\u5b9a\u70b9\u6570\uff1a\u4e8c\u8fdb\u5236\uff0c\u56fa\u5b9a\u957f\u5ea6\uff0c\u5c0f\u6570\u70b9\u56fa\u5b9a\u5728\u67d0\u4e00\u4e2a\u4f4d\u7f6e\uff0c\u5b9a\u70b9\u7eaf\u5c0f\u6570\uff0c\u5b9a\u70b9\u7eaf\u6574\u6570</li> <li>\u6d6e\u70b9\u6570\uff0c\u7c7b\u4f3c\u79d1\u5b66\u8ba1\u6570\u6cd5\uff0c\u8868\u793a\u6570\u7684\u8303\u56f4\u66f4\u5927</li> <li>\u6d6e\u70b9\u6570\uff1a</li> <li> <p>\u6d6e\u70b9\u6570\u5206\u9636\u7801\u548c\u5c3e\u6570</p> <ul> <li>\u9636\u7801\uff1a\u5c0f\u6570\u70b9\u4f4d\u7f6e\u2014\u2014\u5e26\u7b26\u53f7\u7684\u6574\u6570\u2014\u2014\u7c7b\u4f3c\u79d1\u5b66\u8ba1\u6570\u6cd5\u4e2d\u6570\u7684\u6307\u6570\u90e8\u5206</li> <li>\u5c3e\u6570\u8868\u793a\u6570\u7684\u6709\u6548\u6570\u503c\uff1a\u7eaf\u6574\u6570\u6216\u8005\u7eaf\u5c0f\u6570</li> </ul> </li> <li> <p>\u7f16\u7801\u548c\u6587\u672c</p> </li> <li>\u5e38\u7528\u7f16\u7801\uff1aASCII\uff0c\u6c49\u5b57\u7f16\u7801\uff0c\u591a\u5a92\u4f53\u6570\u636e</li> <li> <p>\u6587\u672c\uff1a\u6587\u672c\u4e2d\u7684\u6bcf\u4e00\u4e2a\u7b26\u53f7\u5305\u62ec\u5b57\u6bcd\u3001\u6807\u70b9\uff0c\u90fd\u4ee5\u4e00\u4e2a\u552f\u4e00\u7684\u4e8c\u8fdb\u5236\u4f4d\u5e8f\u5217\u8868\u793a\uff0c\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u6587\u672c\u5c31\u662f\u4f4d\u6a21\u5f0f\u7684\u4e8c\u8fdb\u5236\u6570\u636e\u957f\u4e32</p> <ul> <li>\u57fa\u7840\u7684\u6587\u672c\u7f16\u7801\u5c31\u662fASCII</li> <li>\u6587\u672c\u7f16\u7801\u662f\u8ba1\u7b97\u673a\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u7684\u57fa\u7840\uff08ASCII\u3001Unicode\u3001\u6c49\u5b57\u7f16\u7801\uff09</li> <li>\u5728\u6c49\u5b57\u7cfb\u7edf\u4e2d\uff0c\u6bcf\u4e2a\u6c49\u5b57\u5bf9\u5e94\u4e24\u4e2a\u82f1\u6587\u5b57\u7b26\u5bbd\u5ea6</li> <li></li> <li>\u4e3a\u4e86\u8f93\u51fa\u6c49\u5b57\uff0c\u5fc5\u987b\u5b58\u50a8\u6c49\u5b57\u7684\u5b57\u5f62<ul> <li>\u77e2\u91cf\u5316\u2014\u2014\u5b83\u7531\u4e00\u7ec4\u6307\u4ee4\u6765\u63cf\u8ff0\u5b57\u7b26\u7684\u5916\u5f62\u2014\u2014\u8f6e\u5ed3\u5b57\u4f53</li> <li>\u70b9\u9635\u56fe\u5f62\u2014\u2014\u5c06\u6c49\u5b57\u5206\u89e3\u4e3a\u82e5\u5e72\u4e2a\u201c\u70b9\u201d\u7ec4\u6210\u7684\u70b9\u9635\u5b57\u578b\u65b9\u5f0f</li> </ul> </li> </ul> </li> <li> <p>\u56fe\u5f62\u548c\u56fe\u50cf\uff1a\uff08\u4e24\u79cd\u6280\u672f\uff1a\u77e2\u91cf\u56fe\u548c\u4f4d\u56fe\uff09</p> </li> <li>\u4f4d\u56fe\uff1a\u4f7f\u7528\u50cf\u7d20\u9635\u5217\uff0c\u6bcf\u4e00\u4e2a\u50cf\u7d20\u662f\u4e00\u4e2a\u70b9</li> <li>\u77e2\u91cf\u56fe\uff1a\u4efb\u4f55\u56fe\u5f62\u3001\u56fe\u5f62\u53ef\u4ee5\u5206\u89e3\u4f4d\u66f2\u7ebf\u548c\u76f4\u7ebf\u7684\u7ec4\u5408\uff0c\u76f4\u7ebf\u3001\u66f2\u7ebf\u516c\u5f0f\u7684 \u7ec4\u5408\u4f5c\u4e3a\u56fe\u5f62\u6570\u636e\u5b58\u50a8\u8d77\u6765</li> </ul>"},{"location":"note/courses/hpc/note/#3","title":"3 \u8ba1\u7b97\u673a\u7cfb\u7edf\u7ec4\u6210","text":"<ul> <li>PC\u673a\u5927\u591a\u6570\u529f\u80fd\u7535\u8def\uff0c\u90fd\u5b89\u88c5\u5728\u4e3b\u677f\u4e0a</li> <li>\u4e3b\u677f\u533a\u5206\uff1a\u82af\u7247\u7ec4\uff0c\u5b89\u88c5\u5728\u4e3b\u677f\u4e0a\uff0c\u534f\u52a9cpu</li> <li>\u5317\u6865\uff1a\u4e3b\u8981\u8d1f\u8d23\u7ba1\u7406\u3001\u63a7\u5236\u673a\u5185\u7684\u603b\u7ebf</li> <li> <p>\u5357\u6865\uff1a\u4e3b\u8981\u8d1f\u8d23\u5916\u8bbe\u63a5\u53e3\u7684\u63a7\u5236</p> </li> <li> <p>NUMA\uff1a\u975e\u7edf\u4e00\u5185\u5b58\u8bbf\u95ee\uff0c\u63cf\u8ff0\u4e86\u5f53\u4ee3\u591a\u5904\u7406</p> </li> </ul>"},{"location":"note/courses/hpc/note/#31","title":"3.1 \u5904\u7406\u5668","text":"<ul> <li> <p>\u5904\u7406\u5668\u7531\u8fd0\u7b97\u5668\u548c\u63a7\u5236\u5668\u6784\u6210</p> </li> <li> <p>\u6469\u5c14\u6cd5\u5219</p> </li> <li> <p>\u5904\u7406\u5668\u7684\u7ed3\u6784\u6a21\u578b\uff1a</p> </li> </ul> <p></p> <ul> <li>\u5185\u90e8\u603b\u7ebf\uff1a</li> <li>\u603b\u7ebf\u5c31\u662f\u4e00\u7ec4\u5bfc\u7ebf\uff0c\u662f\u4fe1\u53f7\u7684\u516c\u5171\u901a\u8def</li> <li>\u4e3b\u677f\u8303\u56f4\u5185\u7684\u603b\u7ebf\u53eb\u5185\u90e8\u603b\u7ebf\uff0c\u5b83\u662fCPU\u4e0e\u5b58\u50a8\u5668\u53ca\u8f93\u5165/\u8f93\u51fa\u63a7\u5236\u7535\u8def\u8fdb\u884c\u6570\u636e\u4ea4\u6362\u7684\u901a\u8def</li> <li> <p>\u603b\u7ebf\u5206\u4e3a\uff1a</p> <ul> <li>\u6570\u636e\u603b\u7ebf\uff1a\u63a5\u53d7\u6216\u8f93\u51fa\u6570\u636e</li> <li>\u5730\u5740\u603b\u7ebf\uff1a\u5411\u5916\u8f93\u51fa\u5730\u5740\u4fe1\u53f7</li> <li>\u63a7\u5236\u603b\u7ebf\uff1a\u8f93\u51fa\u63a7\u5236\u4fe1\u53f7\u6216\u8005\u63a5\u53d7\u6765\u81ea\u5916\u90e8\u7684\u63a7\u5236\u4fe1\u53f7</li> </ul> </li> <li> <p>\u5904\u7406\u5668\u7684\u6027\u80fd\u6307\u6807</p> </li> <li>\u4e3b\u9891</li> <li>\u96c6\u6210\u5ea6</li> <li>\u5b57\u957f</li> <li>\u534f\u5904\u7406\u5668</li> <li>\u5185\u90e8\u9ad8\u901f\u7f13\u5b58\u5668</li> <li>\u5de5\u4f5c\u6e29\u5ea6\u8303\u56f4</li> <li>\u7535\u6e90\u7535\u538b\u8303\u56f4</li> <li>\u82af\u7247\u5c01\u88c5\u6750\u6599\u53ca\u7ed3\u6784</li> <li> <p>CISC\uff08\u590d\u6742\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a\uff09\uff1a\u4f7f\u7528\u6570\u91cf\u548c\u79cd\u7c7b\u8f83\u591a\u7684\u6307\u4ee4</p> </li> <li> <p>RISC\uff08\u7cbe\u7b80\u6307\u4ee4\u96c6\u8ba1\u7b97\u673a\uff09\uff1a\u53ea\u5305\u542b\u5e38\u7528\u6307\u4ee4\u4e14\u6307\u4ee4\u7684\u957f\u5ea6\u548c\u6267\u884c\u65f6\u95f4\u90fd\u76f8\u540c</p> </li> </ul>"},{"location":"note/courses/hpc/note/#32","title":"3.2 \u5b58\u50a8\u5668","text":"<ul> <li>\u5b58\u50a8\u5355\u5143\u4ee5\u5b57\u8282\u4f4d\u5355\u4f4d\uff0c\u4e00\u4e2a\u5b57\u8282\u75318\u4f4d\u4e8c\u8fdb\u5236\u7ec4\u6210</li> <li>\u5b58\u50a8\u5668\u7531\u82e5\u5e72\u5b57\u8282\u7ec4\u6210\uff0c\u6bcf\u4e2a\u5b57\u8282\u90fd\u6709\u552f\u4e00\u7684\u6807\u8bc6\u53eb\u505a\u5b58\u50a8\u5668\u7684\u5730\u5740\uff0c\u7528\u4e8c\u8fdb\u5236\u4f4d\u6a21\u5f0f\u6807\u8bc6</li> <li>\u5b58\u50a8\u5bb9\u91cf\u5373\u5b58\u50a8\u5668\u4e2d\u5b58\u50a8\u5355\u5143\u7684\u603b\u6570\uff0c\u4e5f\u53eb\u505a\u5b57\u8282\u6570\uff0c\u6216\u8005\u79f0\u4e3a\u5730\u5740\u7a7a\u95f4</li> <li>\u5b58\u50a8\u5668\u5206\u4e3a\u5185\u5b58\u548c\u5916\u5b58</li> <li>\u5185\u5b58\uff1a<ul> <li>\u4e0eCPU\u7ecf\u5185\u603b\u7ebf\u8fde\u63a5\u7684\u5b58\u50a8\u5668\u662f\u201c\u5185\u5b58\u201d \uff0c \u4e5f\u79f0\u4e3b\u5b58\u50a8\u5668\uff0c\u7b80\u79f0\u4e3b\u5b58\u3002 \u7531\u534a\u5bfc\u4f53\u5b58\u50a8\u5668\u7ec4\u6210\uff0c\u4e3b\u8981\u5206\uff1a </li> <li>\u968f\u673a\u5b58\u53d6\u5b58\u50a8\u5668\uff08RAM\uff09\uff0c\u6613\u5931\u6027\u3002 </li> <li>\u25cb\u52a8\u6001RAM\uff08Dynamic RAM\uff09 </li> <li>\u25cb\u9759\u6001RAM\uff08Static RAM\uff09 </li> <li>\u53ea\u8bfb\u5b58\u50a8\u5668\uff08ROM\uff09\uff0c\u65ad\u7535\u540e\u6570\u636e\u4e0d\u4e22\u5931\uff0c\u4e00\u4e2a\u91cd\u8981\u5e94\u7528\uff1a\u5b58\u653e BIOS\u7a0b\u5e8f\u3002 </li> <li>\u25cbPROM \u2014\u2014 \u4e00\u65e6\u6570\u636e\u88ab\u5199\u5165\uff0c\u5c31\u4e0d\u80fd\u518d\u6539\u53d8</li> <li>\u25cbEPROM \u2014\u2014\u5982\u679c\u6570\u636e\u9700\u8981\u88ab\u6539\u5199\uff0c\u5c31\u9700\u8981\u7528\u4e00\u79cd\u7d2b\u5916\u7ebf\u5149\u8bbe\u5907\u5c06\u539f\u6570\u636e\u64e6 \u9664\u540e\u518d\u91cd\u65b0\u5199\u6570\u636e </li> <li>\u25cbEEPROM \u2014\u2014\u53ef\u4ee5\u5bf9\u90e8\u5206\u5355\u5143\u8fdb\u884c\u91cd\u65b0\u5199\u5165</li> </ul> </li> </ul> <ul> <li>\u5916\u5b58\uff1a</li> <li>\u8f85\u52a9\u5b58\u50a8\u5668\u7cfb\u7edf\u2014\u2014(\u5916\u90e8\u5b58\u50a8\u5668\u3001\u5916\u5b58) <ul> <li>\u5177\u6709\u5916\u8bbe\u7279\u6027 </li> <li>\u4f5c\u4e3a\u6570\u636e\u6c38\u4e45\u5b58\u50a8\u7684\u8bbe\u5907 </li> </ul> </li> <li>\u4e3b\u5b58<ul> <li>\u8f85\u5b58\u7ed3\u6784\u548c\u865a\u62df\u5b58\u50a8\u5668 n</li> </ul> </li> <li> <p>\u8f85\u52a9\u5b58\u50a8\u5668\u4e3b\u8981\u91c7\u7528\uff1a </p> <ul> <li>\u78c1\u4ecb\u8d28\u5b58\u50a8\u8bbe\u5907 </li> <li>\u5149\u5b58\u50a8\u8bbe\u5907</li> </ul> </li> <li> <p>CPU\u6267\u884c\u7a0b\u5e8f\u65f6 \uff0c\u5c06\u78c1\u76d8\u4e2d\u7684\u6570\u636e\u6620\u5c04\u5b58\u653e\u5230\u865a\u62df\u5185\u5b58\u4e2d \uff0c\u9700\u8981\u65f6\u518d\u4ece\u6620\u5c04\u7684\u865a\u62df\u5185\u5b58\u4e2d\u91cd\u65b0\u53d6\u51fa\u00e8\u5185\u5b58\u3002 </p> </li> <li>\u7531\u4e8e\u865a\u62df\u5185\u5b58\u4e0e\u5185\u5b58\u5730\u5740\u662f\u5bf9\u5e94\u7684\uff0c\u56e0\u6b64\u5b58\u53d6\u901f\u5ea6\u5feb\u4e8e\u4e00\u822c\u78c1\u76d8\u64cd\u4f5c n\u63d0\u5347\u4e86\u7cfb\u7edf\u7684\u8fd0\u884c\u6548\u7387\u3002 </li> <li>\u7531OS\u548cCPU\u5171\u540c\u5b8c\u6210\u7ba1\u7406\u548c\u63a7\u5236\u5b58\u50a8\u7cfb\u7edf\u7684\u4efb\u52a1</li> </ul>"},{"location":"note/courses/hpc/note/#33","title":"3.3 \u8f93\u5165\u8f93\u51fa\u7cfb\u7edf","text":"<ul> <li>\u7aef\u53e3\u548c\u4e3b\u673a\u7684\u6570\u636e\u4f20\u8f93\u6a21\u5f0f\u6709\u4e24\u79cd\uff1a\u5e76\u884c\u6216\u4e32\u884c\u3002</li> <li>\u5e76\u884c\uff1a\u4e00\u6b21\u4f20\u8f938\u4f4d\u6570\u636e</li> <li> <p>\u4e32\u884c\uff1a\u6bcf\u6b21\u4f20\u8f931\u4f4d\u6570\u636e</p> </li> <li> <p>\u5916\u90e8\u8bbe\u5907\u901a\u8fc7\u4e00\u7ec4(\u675f)\u5bfc\u7ebf\u7684\u63a5\u63d2\u4ef6\u7aef\u53e3\u4e0e\u4e3b\u673a\u8fde\u63a5</p> </li> <li>\u5916\u90e8\u8bbe\u5907\u7684\u603b\u7ebf\u6807\u51c6\uff0c\u89c4\u5b9a\u4e86\u8fde\u63a5\u7ebf\u5982\u4f55\u6392\u5217\u4e14\u5177\u6709\u4f55\u79cd\u529f\u80fd\uff08\u5982\u6570 \u636e\u4f4d\u5bbd\u5ea6\u3001\u6570\u636e\u4f20\u8f93\u901f\u7387\uff09</li> <li>USB\uff1a</li> <li>\u662f\u4e00\u79cd\u603b\u5199\u6807\u51c6\uff0c\u4e5f\u662f\u4e00\u79cd\u6280\u672f</li> <li> <p>\u7531Intel\u516c\u53f8\u53d1\u8d77\u5e76\u5236\u5b9a\u7684\u901a\u7528\u4e32\u884c\u603b\u7ebf\u6807\u51c6\u3002 </p> <ul> <li>\u4f7f\u75284\u7ebf\u7ed3\u6784 </li> <li>\u81ea\u8eab\u65e0\u987b\u914d\u5907\u7535\u6e90\uff0c\u53ef\u4ee5\u901a\u8fc7USB\u4e2d\u7684VBUS\u83b7\u5f97\u4ece\u4e3b\u673a\u63d0\u4f9b\u7684\u7535\u6e90 </li> <li>\u5b83\u7684\u8fde\u63a5\u7aef\u53e3\u4e3b\u8981\u6709\u4e24\u79cd\u89c4\u683c\uff1aA\u578b\u548cB\u578b\uff0c\u5206\u522b\u8fde\u63a5\u8ba1\u7b97\u673a\u548c\u5916\u8bbe\u3002 </li> <li>USB\u81ea\u52a8\u914d\u7f6e\u8bbe\u5907\uff0c\u652f\u6301\u70ed\u63d2\u62d4\uff08Hot-Plugging\uff09 </li> <li>\u53ef\u4ee5\u8fde\u63a5\u591a\u8fbe127\u4e2a\u8bbe\u5907\u3002</li> </ul> </li> <li> <p>\u63a5\u53e3</p> </li> <li>\u7528\u6765\u89e3\u51b3\u9ad8\u901f\u4e3b\u673a\u548c\u4f4e\u901f\u5916\u8bbe\u4e4b\u95f4\u7684\u77db\u76fe\uff0c\u4f7f\u5f97\u5b83\u4eec\u5728\u901f\u5ea6\u4e4b\u95f4\u5b9e\u73b0\u5339\u914d</li> <li>\u5206\u4e3a\u4e24\u4e2a\u90e8\u5206\uff1a<ul> <li>\u4e00\u90e8\u5206\u901a\u8fc7\u5185\u90e8\u603b\u7ebf\u8fde\u63a5CPU\u548c\u5b58\u50a8\u5668</li> <li>\u53e6\u4e00\u90e8\u5206\u5219\u901a\u8fc7\u5916\u90e8\u603b\u7ebf\u8fde\u63a5\u5916\u8bbe</li> </ul> </li> </ul>"},{"location":"note/courses/hpc/note/#34","title":"3.4 \u64cd\u4f5c\u7cfb\u7edf","text":"<p>\u64cd\u4f5c\u7cfb\u7edf\u662f\u8ba1\u7b97\u673a\u786c\u4ef6\u4e0e \u5176\u4ed6\u8f6f\u4ef6\u4e4b\u95f4\u7684\u63a5\u53e3\uff0c\u80fd\u6709\u6548\u5730\u5bf9\u8ba1\u7b97\u673a\u8f6f\u4ef6 \u3001\u786c\u4ef6\u8d44\u6e90\u8fdb\u884c\u7ba1\u7406\u548c\u4f7f\u7528\uff0c \u4f7f\u7528\u6237\u80fd\u65b9\u4fbf\u5730\u64cd\u4f5c\u8ba1\u7b97\u673a\u3002</p> <ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u6709\u8bb8\u591a\u4e0d\u540c\u7684\u5206\u7c7b\u65b9\u6cd5\uff0c\u6309\u7167\u5176\u4f7f\u7528\u73af\u5883\u548c\u5bf9\u7a0b\u5e8f\u6267\u884c\u7684\u5904\u7406\u65b9\u5f0f\u8fdb\u884c\u5206\u7c7b\uff0c \u53ef\u5206\u4e3a\uff1a</li> <li>\u5b9e\u65f6\u7cfb\u7edf <ul> <li>\u8981\u6c42\u5728\u89c4\u5b9a\u7684\u65f6\u95f4\u5185\u54cd\u5e94\uff0c\u5e76\u5feb\u901f\u5904\u7406\uff0c\u5927\u90e8\u5206\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u90fd\u662f\u4e13\u7528\u7cfb\u7edf</li> <li>\u5b9e\u65f6\u64cd\u4f5c\u7cfb\u7edf\u672c\u8eab\u5bf9\u8d44\u6e90\u7684\u4f7f\u7528\u548c\u63a7\u5236\u90fd\u5fc5\u987b\u4f18\u5316\u4ee5 \u6ee1\u8db3\u7cfb\u7edf\u8981\u6c42\u3002</li> </ul> </li> <li>\u5355\u7528\u6237\u5355\u4efb\u52a1\u7cfb\u7edf <ul> <li>\u53ea\u80fd\u7531\u4e00\u4e2a\u4eba\u4f7f\u7528\uff0c\u4e14\u4e00\u6b21\u53ea\u80fd\u6267\u884c\u4e00\u4e2a\u4efb\u52a1</li> </ul> </li> <li>\u5355\u7528\u6237\u591a\u4efb\u52a1\u7cfb\u7edf <ul> <li>\u91c7\u7528\u4efb\u52a1\u662f\u4e00\u79cd\u5206\u65f6\u5904\u7406\u6280\u672f\uff0c\u5c06CPU\u7684\u6267\u884c\u65f6\u95f4\u5212\u5206\u4e3a\u82e5\u5e72\u4e2a\u65f6\u95f4\u7247\uff0c\u5728\u4e00\u4e2a\u65f6\u95f4\u7247\u5185 \u6267\u884c\u4e00\u4e2a\u4efb\u52a1\uff0c\u5728\u4e0b\u4e00\u4e2a\u65f6\u95f4\u7247\u5185\u6267\u884c\u53e6\u5916\u4e00\u4e2a\u4efb\u52a1</li> <li>\u53ef\u4ee5\u5728\u591a\u4e2a\u7a0b\u5e8f\u4e4b\u95f4\u8fdb\u884c\u6570\u636e\u4ea4\u6362</li> </ul> </li> <li>\u591a\u7528\u6237\u591a\u4efb\u52a1\u7cfb\u7edf <ul> <li>\u5141\u8bb8\u591a\u4e2a\u7528\u6237\u4f7f\u7528\u4e00\u53f0\u4e3b\u673a\uff0c\u800c\u4e14\u652f\u6301\u6bcf\u4e2a\u7528\u6237\u7684\u591a\u4efb\u52a1\u5904\u7406</li> </ul> </li> <li>\u5206\u5e03\u5f0f\u7cfb\u7edf <ul> <li>\u901a\u8fc7\u7f51\u7edc\u5c06\u7269\u7406\u4e0a\u5206\u5e03\uff08\u5206\u6563\uff09\u7684\u5177\u6709\u72ec\u7acb\u529f\u80fd\u7684\u8ba1\u7b97 \u673a\u7cfb\u7edf\u4e92\u8fde\u8d77\u6765\uff0c\u5b9e\u73b0\u4fe1\u606f\u4ea4\u6362\u3001\u8d44\u6e90\u5171\u4eab\u3001\u53ef\u4e92\u64cd\u4f5c\u548c \u534f\u4f5c\u5904\u7406\u7684\u7cfb\u7edf\u3002</li> </ul> </li> <li> <p>\u5e76\u884c\u7cfb\u7edf</p> <ul> <li>\u5e76\u884c\u64cd\u4f5c\u7cfb\u7edf\u662f\u9488\u5bf9\u8ba1\u7b97\u673a\u7cfb\u7edf\u7684\u591a\u5904\u7406\u5668\u8981\u6c42\u8bbe\u8ba1\u7684\uff0c \u5b83\u9664\u4e86\u5b8c\u6210\u5355\u4e00\u5904\u7406\u5668\u7cfb\u7edf\u540c\u6837\u7684\u4f5c\u4e1a\u4e0e\u8fdb\u7a0b\u63a7\u5236\u4efb\u52a1\u5916\uff0c \u8fd8\u9700\u8981\u5b8c\u6210\u5728\u7cfb\u7edf\u7684\u591a\u4e2a\u5904\u7406\u5668\u4e4b\u95f4\u6d3b\u52a8\u7684\u5206\u914d\u3001\u8c03\u5ea6\u3002</li> <li>\u5e76\u884c\u7cfb\u7edf\u8981\u89e3\u51b3 \u201c\u8d1f\u8f7d\u5e73\u8861\u201d\uff08Load Balancing\uff09 \u95ee\u9898\u548c\u201c\u7f29\u653e\u201d\u95ee\u9898</li> </ul> </li> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ed3\u6784</p> </li> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\u7684\u7ed3\u6784\u57fa\u4e8e\u8f6f\u4ef6\u7684\u5c42\u6b21\u7ed3\u6784\uff0c\u628a\u64cd\u4f5c\u7cfb\u7edf\u5206\u4e3a \u5185\u6838\uff08Kernel\uff09\u548c\u5916\u58f3 \uff08Shell\uff09\u4e24\u5c42</p> <ul> <li>kernel</li> <li>\u5305\u62ec\u64cd\u63a7\u8ba1\u7b97\u673a\u5404\u79cd\u8d44\u6e90\u7684\u57fa\u672c\u6a21\u5757\uff0c\u8bbe\u5907\u9a71\u52a8\uff0c\u5185\u5b58\u7ba1\u7406</li> <li>kernel\u7684\u8c03\u5ea6\u7a0b\u5e8f\u51b3\u5b9a\u54ea\u4e00\u4e2a\u4efb\u52a1\u88ab\u6267\u884c\uff0c\u63a7\u5236\u7a0b\u5e8f\u4e3a\u8fd9\u4e9b\u4efb\u52a1\u5206\u914d\u65f6\u95f4\u7247</li> <li>shell</li> <li>\u8d1f\u8d23\u63a5\u53d7\u7528\u6237\u548c\u5e94\u7528\u7a0b\u5e8f\u7684\u64cd\u4f5c\u547d\u4ee4\uff0c\u5e76\u5c06\u8fd9\u4e2a\u547d\u4ee4\u89e3\u91ca\u540e\u4ea4\u7ed9kernel\u53bb\u6267\u884c</li> </ul> </li> <li> <p>\u64cd\u4f5c\u7cfb\u7edf\u7684\u529f\u80fd</p> </li> <li> <p>\u8fdb\u7a0b\u7ba1\u7406</p> <ul> <li>\u200b processes\u6307\u6b63\u5728\u6267\u884c\u4e2d\u7684\u7a0b\u5e8f\uff0cprocesses\u8d8a\u591a\uff0c\u8fdb\u7a0b\u7ba1\u7406\u8d8a\u590d\u6742</li> <li>\u8fdb\u7a0b\u7ba1\u7406\u6700\u91cd\u8981\u7684\u4efb\u52a1\u5c31\u662f\u8fdb\u7a0b\u8c03\u5ea6\uff0c\u5176\u76ee\u7684\u5c31\u662f\u6709\u6548\u7ba1\u7406\u800c\u4e14\u9632\u6b62\u6b7b\u9501</li> <li>\u6b7b\u9501\u5c31\u662f\u591a\u4e2a\u8fdb\u7a0b\u540c\u65f6\u5360\u6709\u5bf9\u65b9\u9700\u8981\u7684\u8d44\u6e90\u800c\u540c\u65f6\u8bf7\u6c42\u5bf9\u65b9\u7684\u8d44\u6e90\uff0c\u800c\u5b83\u4eec\u5728\u5f97 \u5230\u8bf7\u6c42\u4e4b\u524d\u4e0d\u4f1a\u91ca\u653e\u6240\u5360\u6709\u7684\u8d44\u6e90\u3002</li> <li>\u53d1\u751f\u6b7b\u9501\u4f1a\u5bfc\u81f4\u7cfb\u7edf\u5904\u4e8e\u65e0\u6548\u7b49\u5f85\u72b6\u6001\uff0c\u56e0\u6b64\u5fc5\u987b\u64a4\u9500\u5176\u4e2d\u7684\u4e00\u4e2a\u8fdb\u7a0b\u3002\u4f8b\u5982 \u5728Windows\u4e2d\uff0c\u53ef\u7528\u201c\u4efb\u52a1\u7ba1\u7406\u5668\u201d \u7ec8\u6b62\u6ca1\u6709\u54cd\u5e94\u4e5f\u5c31\u662f\u65e0\u6548\u7684\u8fdb\u7a0b\u3002</li> <li>\u8fdb\u7a0b\u6982\u5ff5\u7684\u5ef6\u4f38\u3002\u5982\u679c\u7a0b\u5e8f\u53ea\u6709\u4e00\u4e2a\u8fdb\u7a0b\u5c31\u53ef\u4ee5\u5904\u7406\u6240\u6709\u7684 \u4efb\u52a1\uff0c\u90a3\u4e48\u5b83\u5c31\u662f\u5355\u4e00\u7ebf\u7a0b\u7684\u3002\u5982\u679c\u7a0b\u5e8f\u53ef\u4ee5\u88ab\u5206\u89e3\u4e3a\u591a\u4e2a \u8fdb\u7a0b\u5171\u540c\u5b8c\u6210\u7a0b\u5e8f\u7684\u4efb\u52a1\uff0c\u90a3\u4e48\u88ab\u5206\u89e3\u7684\u4e0d\u540c\u8fdb\u7a0b\u5c31\u53eb\u505a\u7ebf \u7a0b\uff0c\u4e5f\u53eb\u8f7b\u91cf\u7ea7\u8fdb\u7a0b\uff08Light Weight Processes\uff09</li> </ul> </li> <li> <p>\u5b58\u50a8\u5668\u7ba1\u7406\uff0c\u8d1f\u8d23\u8c03\u5ea6\u5185\u5b58\u3001\u76d1\u63a7\u5185\u5b58\u8fd0\u884c\u72b6\u6001\uff0c\u8fd8\u8d1f\u8d23\u7ba1\u7406\u5185\u5b58\u548c\u5916\u5b58\u4e4b\u95f4\u7684\u6570\u636e\u4ea4\u6362\u3002\u8f93\u5165\u8f93\u51fa\u7ba1\u7406\u6a21\u5757\u4e5f\u627f\u62c5\u4e86\u5bf9\u5916\u5b58\u7684\u9ed8\u5199\u7ba1\u7406\u4efb\u52a1</p> </li> <li> <p>\u5185\u5b58\u7ba1\u7406\u7684\u4e3b\u8981\u4efb\u52a1\u662f\u5185\u5b58\u8d44\u6e90\u7684\u5408\u7406\u5206\u914d\u548c\u4f7f\u7528\uff0c\u8981\u786e\u4fdd\u6574\u4e2a\u5185\u5b58\u88ab\u5404\u4e2a\u8fdb\u7a0b\u5408\u7406\u4f7f\u7528</p> <ul> <li>\u5728\u64cd\u4f5c\u7cfb\u7edf\u4e2d\uff0cMMU\u8d1f\u8d23\u5904\u7406\uff1a </li> <li>\u4f55\u65f6\u5c06\u7a0b\u5e8f\u6216\u6570\u636e\u4ece\u5916\u5b58\u88c5\u8f7d\u5230\u5185\u5b58\u4e2d\uff1f </li> <li>CPU\u5982\u4f55\u5728\u5185\u5b58\u4e2d\u5bfb\u627e\u6240\u9700\u8981\u7684\u7a0b\u5e8f\u548c\u6570\u636e\u7684\u5730\u5740\u3002 </li> <li>\u5982\u4f55\u5bf9\u5185\u5b58\u5206\u533a\u6216\u8005\u5206\u5757\uff0c\u4ee5\u5b58\u653e\u4e0d\u540c\u7684\u7a0b\u5e8f\u3002</li> </ul> </li> <li> <p>\u865a\u62df\u5b58\u50a8</p> <p>\u200b   \u5728\u78c1\u76d8\u4e0a\u5f00\u8f9f\u4e00\u4e2a\u6bd4\u5185\u5b58\u8981\u5927\u7684\u7a7a\u95f4\uff08Windows\u5efa\u8bae\u4e3a1.5 \u500d\uff09\uff0c\u628a\u88ab\u6267\u884c\u7684\u7a0b\u5e8f\u88c5\u8f7d\u5230\u8fd9\u4e2a\u533a\u57df\u4e2d\uff0c\u6309\u7167\u5185\u5b58\u7684\u7ed3\u6784\u8fdb\u884c \u7ec4\u7ec7 \u3002</p> </li> <li> <p>\u8bbe\u5907\u7ba1\u7406</p> </li> <li>\u5757\u8bbe\u5907\uff1a\u4fe1\u606f\u5b58\u653e\u5728\u56fa\u5b9a\u957f\u5ea6\u5757\u4e2d\uff0c\u6bcf\u4e2a\u5757\u90fd\u6709\u81ea\u5df1\u7684\u5730\u5740\uff0c \u78c1\u76d8\u3001\u6fc0\u5149\u6253\u5370\u673a\u5c31\u662f\u5178\u578b\u7684\u5757\u8bbe\u5907\u3002 </li> <li>\u5b57\u7b26\u8bbe\u5907\uff1a\u4ee5\u5b57\u7b26\u4e3a\u5355\u4f4d\u53d1\u9001\u6216\u8005\u63a5\u53d7\u5b57\u7b26\u6d41\uff0c\u5982\u952e\u76d8\u3001\u9f20 \u6807\u5668\u90fd\u5c5e\u4e8e\u8fd9\u4e00\u7c7b\u3002</li> <li> <p>\u8bbe\u5907\u7ba1\u7406\u63d0\u4f9b\u4e86\u8bb8\u591a\u4e0e\u8f93\u5165/\u8f93\u51fa(I/O)\u6709\u5173\u7684\u670d\u52a1 </p> <ul> <li>\u8bbe\u5907\u8c03\u5ea6 \u2013 \u786e\u5b9a\u8fdb\u7a0b\u6309\u987a\u5e8f\u6267\u884cI/O\u8bf7\u6c42\uff0c\u4f7f\u5404\u4e2a\u8fdb\u7a0b\u516c\u5e73\u5730\u5171\u4eab\u8bbe\u5907 \uff0c\u63d0\u4f9bI/O\u8bbf\u95ee\u7684\u6548\u7387\uff0c\u51cf\u5c11I/O\u64cd\u4f5c\u9700\u8981\u7684\u5e73\u5747\u7b49\u5f85\u65f6\u95f4 \u3002 </li> <li>\u7f13\u51b2\u533a \u2013 \u5373\u7f13\u51b2\u5b58\u50a8\u533a\uff0c\u5b83\u5728\u4e24\u4e2a\u8bbe\u5907\u4e4b\u95f4\uff0c\u6216\u5728\u8bbe\u5907\u548c\u5e94\u7528\u7a0b\u5e8f\u4e4b\u95f4 \u7f13\u5b58\u6570\u636e\u3002 </li> <li>\u9519\u8bef\u5904\u7406</li> </ul> </li> <li> <p>\u8bbe\u5907\u9a71\u52a8\u7a0b\u5e8f\uff08Driver\uff09</p> <ul> <li>OS\u901a\u8fc7\u9a71\u52a8\u7a0b\u5e8f\u64cd\u4f5c\u8bbe\u5907</li> <li>Device Driver\u662f\u63a7\u5236\u3001\u64cd\u4f5c\u8bbe\u5907\u7684\u7a0b\u5e8f\uff0c\u662f\u4e00\u7ec4\u63a5\u53e3\uff0c\u53ef\u4ee5\u88ab\u64cd\u4f5c\u7cfb\u7edf\u548c\u5176\u4ed6\u5e94\u7528\u7a0b\u5f0f\u6240\u8c03\u7528</li> </ul> </li> <li> <p>\u542f\u52a8\u548c\u505c\u673a\uff1a</p> <ul> <li>\u6309\u4e0b\u5f00\u5173,\u901a\u7535\u2014\u2014\u6267\u884cBIOS\uff0c\u542f\u52a8\u88c5\u8f7d\u7a0b\u5e8f\uff0c\u5b8c\u6210\u7cfb\u7edf\u5f15\u5bfc</li> <li>\u957f\u6309\u7535\u6e90\u5f00\u5173\u2014\u2014\u542f\u52a8\u5173\u673a\u8fc7\u7a0b\uff1a\u6570\u636e\u5199\u5165\uff0c\u7ed3\u675f\u8fdb\u7a0b\uff0c\u5173\u95ed\u7535\u6e90</li> </ul> </li> <li> <p>\u6587\u4ef6\u548c\u6587\u4ef6\u7ba1\u7406</p> </li> <li> <p></p> </li> <li> <p>\u8ba1\u7b97\u673a\u7f51\u7edc</p> </li> <li>TCP/IP<ul> <li>Transmission Control Protocol/Internet Protocol</li> <li>TCP \u6570\u636e\u6253\u5305\u3001\u7f16\u53f7\uff0c\u5728\u63a5\u6536\u7aef\u5c06\u6570\u636e\u6309\u539f\u683c\u5f0f\u7ec4\u5408</li> <li>IP \u4e3a\u6bcf\u4e2a\u6570\u636e\u5305\u52a0\u4e0a\u63a5\u6536\u673a\u5730\u5740\u540e\u5728\u7f51\u7edc\u4fe1\u9053\u4e2d\u4f20\u8f93</li> <li></li> <li></li> <li></li> <li></li> <li></li> <li>IP\u5730\u5740</li> <li>IP\u534f\u8bae\u89c4\u5b9a\uff0c\u6bcf\u53f0\u5165\u7f51\u7684\u8ba1\u7b97\u673a\u90fd\u5fc5\u987b\u6709\u4e00\u4e2a\u552f\u4e00\u7684\u7f51\u7edc\u5730\u5740\uff0c\u5373IP\u5730\u5740</li> <li>Host\uff1a\u62e5\u6709IP\u5730\u5740\u7684\u673a\u5668\u53eb\u505a\u4e3b\u673a\uff0c\u8def\u7531\u6839\u636eIP\u5730\u5740\u4f20\u8f93\u6570\u636e\u5305\u3001</li> <li></li> <li>\u5b50\u7f51\u548c\u5b50\u7f51\u63a9\u7801\uff1a</li> <li>\u628a\u4e00\u4e2a\u8f83\u5927\u7684\u7f51\u7edc\u5206\u6210\u82e5\u5e72\u4e2a\u8f83\u5c0f\u7684\u7f51\u7edc\uff0c\u5e76\u901a\u8fc7\u8def\u7531\u5668\u8fde\u63a5\u8d77\u6765\uff0c\u8fd9\u4e9b\u5177\u6709\u76f8\u540c\u7f51\u7edc\u6807\u8bc6\u7684\u5c0f\u7f51\u7edc\u5c31\u79f0\u4e3a\u5b50\u7f51</li> <li></li> <li></li> </ul> </li> </ul>"},{"location":"note/courses/hpc/note/#_2","title":"\u8d85\u7b97\u7b80\u4ecb","text":""},{"location":"note/courses/hpc/note/#a-crash-course-on-computer-system","title":"A Crash Course on Computer System","text":""},{"location":"note/courses/hpc/note/#1-isa","title":"1 ISA","text":"<ul> <li>Primitives for processors to execute</li> <li>Defined by an instruction set architecture</li> <li>usually generated by compilers of high-level languages</li> <li> <p>code forms:</p> </li> <li> <p>Machine Code</p> </li> <li>Assembly Code</li> </ul>"},{"location":"note/courses/hpc/note/#hpc-methodology","title":"HPC Methodology","text":""},{"location":"note/courses/hpc/note/#1-basic-theories-for-hpc","title":"1 Basic Theories for HPC","text":""},{"location":"note/courses/hpc/note/#11-factors-affecting-performance","title":"1.1 Factors Affecting Performance","text":""},{"location":"note/courses/hpc/note/#12-high-level-models","title":"1.2 High-Level Models","text":"<ul> <li>Compute </li> <li>Program\uff0cFunction\uff0cProgramming language\uff0cComputation Graph</li> <li> <p>Lynn Models\uff0cSIMT</p> </li> <li> <p>Storage</p> </li> <li>Storage Database: Relational, KV, Graph </li> <li>Storage System: Block, Object, File . </li> <li>Networking </li> <li>I/O :Blocking, Signal-Driven, Asynchronous </li> <li>Communication Mode: P2P, Collective Communication</li> </ul>"},{"location":"note/courses/hpc/note/#13-software-implementation-of-models","title":"1.3 Software\uff1a Implementation of Models","text":"<ul> <li>Host OS </li> <li>Compute Library </li> <li>BLAS, FFT </li> <li>OpenMP, pthreads, TBB, Intel MKL, Nvidia CUDA .</li> <li>Storage </li> <li>File System: Local, Remote, Distributed . </li> <li>Communication Library </li> <li>MPI, Gloo, NCCL</li> </ul>"},{"location":"note/courses/hpc/note/#14-hardware-operated-by-software","title":"1.4 Hardware: Operated by Software","text":"<ul> <li>Server </li> <li>Processing Units </li> <li>CPU, GPU, NPU, FPGA </li> <li>Related: Cache, Memory . </li> <li>Storage Hardware </li> <li>HDD, SSD, NVMe </li> <li>RAID . </li> <li>Networking </li> <li>Ethernet, IB </li> <li>Smart NIC, DP</li> </ul> <p>Example: Matrix Multiplication</p> <p></p> <p>\u200b   We  decide  to run it in parallel(\u5373\u5c06\u77e9\u9635\u5206\u6210\u51e0\u4e2a\u90e8\u5206\u8fdb\u884c\u5e76\u884c\u8ba1\u7b97)</p> <ul> <li>Assuming we divide it into 3 small matrix multiplication tasks</li> <li>Compute  on 3 different processing units</li> <li>Distribute workload &amp; gather results via net work</li> </ul> <p>\u5bf9\u4e8e\u6bcf\u4e00\u4e2a\u5c0f\u77e9\u9635\u7684\u8ba1\u7b97\uff0c\u4f7f\u7528BLAS\u8fdb\u884cefficient computing</p> <p>\u5bf9\u4e8e\u5de5\u4f5c\u91cf\u5206\u914d\u548c\u7ed3\u679c\u6536\u96c6\uff0c\u6211\u4eec\u4f7f\u7528MPI\u6765\u8fdb\u884c\u901a\u4fe1</p> <ul> <li>We use BLAS on CPU/GPU</li> <li>CPU/GPU\u6027\u80fd\\(\\rightarrow\\)higher performance</li> <li>GPU\u901a\u5e38\u8ba1\u7b97\u4f1a\u66f4\u5feb</li> <li>use MPI on InfiniBand(I/O\u7f51\u7edc)</li> <li>larger throughput &amp; lower latency</li> </ul>"},{"location":"note/courses/hpc/note/#2-performance-analysis-and-optimization-methodology","title":"2 Performance Analysis and Optimization Methodology","text":"<ul> <li>Performance Test\uff1a Just directly run the program and see how long it takes </li> </ul>"},{"location":"note/courses/hpc/note/#21-optimization-space-analysis","title":"2.1 Optimization Space Analysis","text":"<p>we can find the theoretical upper bounds</p> <ul> <li>CPU/GPU Flops</li> <li>Memory Accessing Speed</li> <li>PCIe Bandwidth</li> <li>Disk/Net IO Speed</li> </ul> <p>Some Open question</p> <ul> <li>turn to use black-box models</li> </ul> <p>Opt. Space Analysis - Roofline Model</p> <ul> <li>Work</li> <li>The work W denotes the number of operations performed, and in most cases W is expressed as FLOPS</li> <li>Memory traffic</li> <li>The memory traffic Q denotes the number of bytes of memory transfers during the execution</li> <li>Arithmetic intensity</li> <li>The arithmetic intensity I is the ratio of the work W to the memory traffic Q</li> </ul> <p>Roofline model only focus on 1~2 dominant components</p>"},{"location":"note/courses/hpc/note/#22-where-to-optimize","title":"2.2 Where to optimize","text":"<p>Amdahll's Law</p> <p>can be formulated in the following way:\\(S_{latency}(s)=\\frac{1}{(1-p)+\\frac{p}{s}}\\leq\\frac{1}{1-p}\\)</p> <ul> <li>$S_{latency}(s): $\u6574\u4e2a\u8fc7\u7a0b\u7684\u7406\u8bba\u4f18\u5316\u901f\u5ea6</li> <li>s:\u7cfb\u7edf\u8d44\u6e90\u5f15\u8d77\u7684\u901f\u5ea6\u4f18\u5316</li> <li>p:\u6267\u884c\u8fc7\u7a0b\u53d7\u4f18\u5316\u7684\u65f6\u95f4</li> </ul> <p>hotspot analysis:</p> <p>use hotspots analysis to find the bottleneck of the program</p> <ul> <li>Methods\uff1a</li> <li>Analytical</li> <li>Hardware simulator</li> <li>Profile: sampling some usage of a resource by a program</li> <li>Trace : collecting highly detailed data about the execution</li> </ul>"},{"location":"note/courses/hpc/note/#23-general-optimizaton-pipeline","title":"2.3 General Optimizaton Pipeline","text":"<ol> <li>Determine your baseline code </li> <li>Run performance test </li> <li>Is optimization target reached? (Optimization Space Analysis) </li> <li>Find bottleneck (Hotspot Analysis) </li> <li>Optimize the bottleneck </li> <li>Go to 2.</li> </ol>"},{"location":"note/courses/hpc/note/#3-practical-optimization-stretagies","title":"3 Practical Optimization Stretagies","text":""},{"location":"note/courses/hpc/note/#31-algorithm-optimization","title":"3.1 Algorithm Optimization","text":"<ul> <li>reduce complexity</li> <li>trade space for time</li> <li>parallelization</li> <li>prefetch &amp; prediction</li> <li>locality of high-level logic</li> <li>instruction level<ul> <li>branch prediction</li> </ul> </li> </ul>"},{"location":"note/courses/hpc/note/#311-caching","title":"3.1.1 Caching","text":"<ul> <li>stores results from previous executions</li> <li>limited cache size</li> </ul>"},{"location":"note/courses/hpc/note/#312-lock-free","title":"3.1.2 Lock-Free","text":"<ul> <li>Locks are needed for concurrency </li> <li>Lock--waiting: waste cpu resources</li> <li>use atomic primitives</li> </ul>"},{"location":"note/courses/hpc/note/#313-load-balancing","title":"3.1.3 Load Balancing","text":""},{"location":"note/courses/hpc/note/#32-code-optimization","title":"3.2 Code Optimization","text":"<ul> <li> <p>reduce redundancy(\u5197\u4f59)</p> </li> <li> <p>reduce precision</p> </li> </ul> <p>high-precision data:</p> <ul> <li>take up lots of space </li> <li>large computation cost</li> <li> <p>consume lots of  resources</p> </li> <li> <p>reduce branching\u51cf\u5c11\u5206\u652f\u8bed\u53e5</p> </li> <li>Vectorization\uff08\u77e2\u91cf\u5316\uff09</li> <li>optimize memory access locality</li> <li>adjust modifiers \u8c03\u6574\u4fee\u9970\u7b26</li> <li>Instruction/Data Alignment</li> <li>Optimize CPU memory access</li> </ul>"},{"location":"note/courses/hpc/note/#33-compilerunning-parameter-optimization","title":"3.3 Compile/Running Parameter Optimization","text":""},{"location":"note/courses/hpc/note/#331-parameter-tuning","title":"3.3.1 Parameter Tuning","text":"<p>Adjust Running Scale</p> <p>Adjust Cache Size </p> <p>Adjust Core Affinity</p>"},{"location":"note/courses/hpc/note/#34-hardware-optimization","title":"3.4 hardware optimization","text":"<ul> <li>DPU</li> </ul>"},{"location":"note/courses/hpc/note/#linux","title":"Linux \u5b9e\u8df5","text":""},{"location":"note/courses/hpc/note/#1_1","title":"1 \u83b7\u53d6\u5e2e\u52a9","text":"<ul> <li>man</li> <li>tldr\uff1a too long, didn't read</li> <li>cht.sh: unified cheat sheet</li> </ul>"},{"location":"note/courses/hpc/note/#2_1","title":"2 \u4f7f\u7528\u96c6\u7fa4\u4ee3\u7406","text":"<p><code>proxychains4</code></p>"},{"location":"note/courses/hpc/note/#3-linux","title":"3 Linux \u7528\u6237\u548c\u7528\u6237\u7ec4","text":"<p>\u96c6\u7fa4\u4f7f\u7528\u4e2d\u5fc3\u5316\u7684\u7528\u6237\u8ba4\u8bc1\uff1aNIS\uff0cLDAP</p> <p>\u4e0d\u8981\u6ee5\u7528root\u8d26\u6237</p>"},{"location":"note/courses/hpc/note/#4-everything-is-a-file","title":"4 Everything is a file","text":"<ul> <li>\u6587\u4ef6 file</li> <li>\u76ee\u5f55 directory </li> <li>\u8bbe\u5907 device </li> <li>\u7ba1\u9053 pipe </li> <li>\u5957\u63a5\u5b57 socket </li> <li>\u7b26\u53f7\u94fe\u63a5 symbolic link</li> </ul>"},{"location":"note/courses/hpc/note/#5-linux","title":"5 Linux\u6587\u4ef6\u7cfb\u7edf\u5c42\u6b21","text":""},{"location":"note/courses/hpc/note/#6-linux","title":"6 Linux \u6587\u4ef6\u6743\u9650","text":"<p>read write execute</p> <p>SUID\uff1a\u4e34\u65f6\u62e5\u6709\u6587\u4ef6\u6301\u6709\u8005\u7684\u6743\u9650</p> <p></p> <p></p>"},{"location":"note/courses/hpc/note/#7","title":"7 \u5e38\u7528\u547d\u4ee4","text":"<pre><code>echo\ndate/timedatectl\nreboot/poweroff\nwget/curl\nps/pstree/top/htop/btop/nice/pidof/kill/killall\n#\u7cfb\u7edf\u72b6\u6001\nifconfig/ping/traceroute/netstat\nuname/uptime/free\nwho/last\nhistory\n#\u6587\u4ef6\npwd/cd/ls\nfind/locate/whereis/which\ncat/more/head/tail/tr/wc/stat/grep/cut/diff/sort\ntouch/mkdir/cp/mv/rm/dd/file/tar\n#\u78c1\u76d8\u548c\u6587\u4ef6\u7cfb\u7edf\u7ba1\u7406\nmount/unmount\nlsblk\ndf\nparted\nfdisk\n</code></pre>"},{"location":"note/courses/hpc/note/#71","title":"7.1 \u6e90\u4ee3\u7801\u7ba1\u7406\u548c\u6784\u5efa\u5de5\u5177","text":"<p>GNU Compiler Collection</p> <p>LLVM Compiler Infrastructure</p> <p>Git</p> <p>Make</p> <p>CMake</p>"},{"location":"note/courses/hpc/note/#72","title":"7.2 \u7ba1\u9053\u4e0e\u91cd\u5b9a\u5411","text":"<pre><code>| &gt; &lt;\n&gt;&gt;\n2&amp;&gt;1\ntee\n</code></pre> <p>Tip:\u8bb0\u5f55\u81ea\u5df1\u7684\u64cd\u4f5c\u548clog</p>"},{"location":"note/courses/hpc/note/#8-linux","title":"8 Linux\u5185\u6838\u77e5\u8bc6","text":""},{"location":"note/courses/hpc/note/#81","title":"8.1 \u5185\u6838\u7684\u89d2\u8272\u548c\u4f5c\u7528","text":"<p>Physical Hardware -&gt; Kernel Space -&gt; User Space</p> <p>\u5c06\u5185\u6838\u7a7a\u95f4\u548c\u7528\u6237\u7a7a\u95f4\u5206\u5f00\uff1a   </p> <ul> <li>\u200b Why\uff1f\u786c\u4ef6\u5c42\u9762\u4e0a\u6307\u4ee4\u5206\u7ea7\uff08\u7279\u6743\u4e0e\u975e\u7279\u6743\uff09\u5371\u9669\u6307\u4ee4\u53ea\u6709\u64cd\u4f5c\u7cfb\u7edf\u80fd\u591f\u6267\u884c</li> <li> <p>\u63d0\u9ad8\u64cd\u4f5c\u7cfb\u7edf\u7684\u7a33\u5b9a\u6027</p> </li> <li> <p>\u7528\u6237\u6001\u4e0b\u6267\u884c\u7684\u547d\u4ee4\u53d7\u5230\u8bf8\u591a\u68c0\u67e5</p> </li> <li>\u9700\u8981\u8bbf\u95ee\u7cfb\u7edf\u8d44\u6e90\u662f\uff0c\u6267\u884c\u7cfb\u7edf\u8c03\u7528\uff0c\u5207\u6362\u5230\u5185\u6838\u6001</li> </ul>"},{"location":"note/courses/hpc/note/#82","title":"8.2 \u5b8f\u5185\u6838\u4e0e\u5fae\u5185\u6838","text":""},{"location":"note/courses/hpc/note/#83-linux","title":"8.3 Linux \u5185\u6838\u6a21\u5757","text":"<ul> <li>\u5185\u6838\u4ee3\u7801\u6811\u62e5\u6709\u6240\u6709\u53ef\u7528\u7684\u4e1c\u897f</li> <li>\u4f46\u4e0d\u53ef\u80fd\u5728\u5185\u6838\u542f\u52a8\u65f6\u52a0\u8f7d\u6240\u6709\u53ef\u80fd\u7684\u76f8\u5173\u4ee3\u7801</li> <li>\u5382\u5546\u7684\u95ed\u6e90\u9a71\u52a8</li> <li>\u8fd0\u884c\u65f6\u52a8\u6001\u52a0\u8f7d\u6a21\u5757</li> </ul>"},{"location":"note/courses/hpc/note/#84","title":"8.4 \u9a71\u52a8\u662f\u4e00\u79cd\u5185\u6838\u6a21\u5757","text":"<p>\u9a71\u52a8\u77e5\u9053\u600e\u4e48\u548c\u786c\u4ef6\u4ea4\u4e92</p> <ul> <li>\u7279\u6b8a\u7684\u6307\u4ee4</li> <li>\u5185\u5b58\u7a7a\u95f4\u6620\u5c04</li> <li>\u4e2d\u65ad</li> </ul>"},{"location":"note/courses/hpc/note/#85","title":"8.5 \u4f7f\u7528\u5185\u6838\u6a21\u5757","text":""},{"location":"note/courses/hpc/note/#9-hpc","title":"9 HPC\u4e2d\u7684\u8f6f\u4ef6","text":"<p>\u96c6\u7fa4\u6982\u51b5\uff1aNFSRoot</p> <ul> <li>\u5927\u578b\u6280\u672f\u7fa4\u5f80\u5f80\u4e0d\u4f1a\u9009\u62e9NFSRoot\uff08\u7f51\u7edc\u8d1f\u62c5\u592a\u91cd\uff09</li> <li>RAM Disk\u548c\u955c\u50cf\u90e8\u7f72\u65f6\u6bd4\u8f83\u5e38\u89c1\u7684\u9009\u62e9</li> </ul>"},{"location":"note/courses/hpc/note/#91","title":"9.1 \u73af\u5883\u7ba1\u7406","text":"<p>\u53c2\u8003\u96c6\u7fa4\u7ba1\u7406\u6587\u6863</p>"},{"location":"note/courses/hpc/note/#92-mpi","title":"9.2 MPI","text":""},{"location":"note/courses/hpc/note/#93-cuda","title":"9.3 CUDA","text":""},{"location":"note/courses/hpc/note/#10-hpc","title":"10 HPC\u4e2d\u7684\u786c\u4ef6","text":"<p>HPC\u96c6\u7fa4</p> <p>\u670d\u52a1\u5668</p> <p>CPU</p> <p>PCIe</p>"},{"location":"note/courses/hpc/note/#11","title":"11 \u529f\u8017\u63a7\u5236","text":"<p>\u9650\u5236CPU\u7684\u529f\u8017\uff1a</p> <ul> <li>\u95f4\u63a5\uff1a\u9650\u5236\u9891\u7387\uff0c\u51cf\u5c11\u4f7f\u7528\u7684\u6838\u5fc3\u6570</li> <li>\u76f4\u63a5\uff1a Intel DCM \uff0cPowercap</li> </ul>"},{"location":"note/courses/hpc/note/#12","title":"12 \u7b97\u529b\u53d1\u5c55\u4e0e\u8fd0\u7ef4\u7684\u6f14\u8fdb","text":""},{"location":"note/courses/hpc/note/#_3","title":"\u5411\u91cf\u5316\u8ba1\u7b97","text":""},{"location":"note/courses/hpc/note/#1-numpy","title":"1 NumPy","text":"<p>\u5411\u91cf\u5316\u6838\u5fc3\u601d\u60f3\uff1a\u4e00\u6b21\u540c\u65f6\u53c2\u4e0e\u8fd0\u7b97\u7684\u4e0d\u662f\u4e00\u4e2a\u503c\uff0c\u800c\u662f\u540c\u65f6\u591a\u4e2a\u503c\u4e00\u8d77\u7b97\uff0c\u5373\u4e00\u4e2a\u5411\u91cf</p>"},{"location":"note/courses/hpc/note/#2-numpy","title":"2 NumPy\u57fa\u7840","text":"<ul> <li>\u521b\u5efa\u4e00\u4e2a\u77e9\u9635\uff1a\u5c06\u539f\u6709\u5217\u8868\u8f6c\u4e3aNumPy\u77e9\u9635</li> </ul>"},{"location":"note/courses/hpc/note/#3-simd","title":"3 SIMD\u5411\u91cf\u5316","text":"<ul> <li>Single Instruction Multiple Data,\u5355\u6307\u4ee4\u591a\u6570\u636e\u6d41</li> <li>\u5728x86\u67b6\u6784\u4e0b\uff0cSIMD\u4e00\u822c\u548cSSE\u548cAVX\u7b49\u6307\u4ee4\u96c6\u8054\u7cfb\u5728\u4e00\u8d77</li> <li>SSE\u548cAVX\u6307\u4ee4\u96c6\u4e2d \u63d0\u4f9b\u4e86\u5927\u91cf\u53ef\u4ee5\u5355\u6307\u4ee4\u64cd\u4f5c\u591a\u4e2a\u6570\u636e\u5355\u5143\u7684\u6307\u4ee4</li> </ul>"},{"location":"note/courses/hpc/note/#graphics-processing-units","title":"Graphics Processing Units","text":""},{"location":"note/courses/hpc/note/#1-von-neumann-model","title":"1 von Neumann Model","text":"<ul> <li>Von Neumann Model is also called stored program computer(instructions in memory)</li> <li>has two key properties</li> <li>stored program<ul> <li>\u6307\u4ee4\u88ab\u5b58\u50a8\u5728liner memory array\u4e2d</li> <li>\u5185\u5b58\u5728\u6307\u4ee4\u548c\u6570\u636e\u4e4b\u95f4\u662f\u7edf\u4e00\u7684\uff1a\u7ffb\u8bd1\u5b58\u50a8\u7684\u5185\u5bb9\u53d6\u51b3\u4e8e\u63a7\u5236\u547d\u4ee4</li> </ul> </li> <li>sequential instruction processing<ul> <li>\u4e00\u4e2a\u6307\u4ee4\u6267\u884c\u4e00\u6b21</li> <li>Program counter\u8bc6\u522b\u5f53\u524d\u7684\u6307\u4ee4\uff0c\u65f6\u5e8f\u4e0a\u662f\u63d0\u524d\u7684\u9664\u975e\u63a7\u5236transfer instruction</li> </ul> </li> </ul>"},{"location":"note/courses/hpc/note/#2-single-cycle-microarchitecture","title":"2 single-cycle microarchitecture","text":"<p>Each instruction takes a single clock cycle to execute</p> <p>only combinational logic is used to implement instruction execution</p>"},{"location":"note/courses/hpc/note/#3-multi-cycle-microarchitectures","title":"3 Multi-Cycle Microarchitectures","text":"<ul> <li>Goal: Let each instruction take only as much time is reslly needs</li> <li>Idea:</li> <li>\u51cf\u5c11\u65f6\u949f\u5468\u671f\u7684\u65f6\u95f4</li> <li>\u4e00\u6761\u6307\u4ee4\u671f\u95f4\u8fdb\u884c\u591a\u6b21\u72b6\u6001\u4f20\u8f93</li> <li>\u6bcf\u4e00\u6761\u6307\u4ee4\u540e\u7684\u72b6\u6001\u662f\u4e0d\u540c\u7684</li> </ul>"},{"location":"note/courses/hpc/note/#4-pipeline","title":"4 Pipeline","text":"<ul> <li>Goal: More concurrency --&gt;Higher instruction throughput</li> <li> <p>Key idea: When an instruction is using some resources in its processing phase, process other instructions on idle4 resources not needed by that instruction</p> </li> <li> <p>idea  of  pipeling : </p> </li> <li>divide the instruction processing cycle int distinct \"stages\" of processing </li> <li>ensure enough hardware resources to process on instruction in each stage</li> <li>process a different instruction in each stage</li> </ul>"},{"location":"note/courses/hpc/note/#5-gpu","title":"5 GPU","text":"<p>CPU\uff1a Few complex cores;Larger cache for low memory latency ; Large and slow memory</p> <p>GPU : Lots of simple cores; Small cache for low memory latency; Small and fast memory</p>"},{"location":"note/courses/hpc/note/#51-gpu-computing","title":"5.1 GPU Computing","text":"<p>key idea: Computation is offloaded to the GPU</p> <p>Three steps:</p> <p></p> <ul> <li>CPU-GPU Co-processing</li> <li>CPU\uff1a Sequential or modestly parallel sections</li> <li> <p>GPU: Massively parallel sections</p> </li> </ul> <p>A GPU is not programmed using threads(SIMD programming model ), Each thread execute the same code but operates a different piece of data. Each Thread has its own context.</p> <ul> <li>sequential (SISD)\u6d41\u6c34\u7ebf\u5904\u7406</li> <li>data-parallel (SIMD)</li> <li></li> <li>Multithreaded(SPMD)</li> </ul> <p></p>"},{"location":"note/courses/hpc/note/#hardware-execution-model","title":"Hardware Execution Model","text":""},{"location":"note/courses/hpc/note/#introduction-to-machine-learning","title":"Introduction to Machine Learning","text":""},{"location":"note/courses/hpc/note/#1-basic-of-machine-leatning","title":"1 Basic of machine leatning","text":"<p>Machine learning problems:</p> <ul> <li>Supervised learning\u7ed9\u6807\u7b7e</li> <li>unsupervised learning\u4e0d\u7ed9\u6807\u7b7e</li> <li>transfer learning</li> <li>reinforcement learning</li> </ul> <p>Classifiation,Regression\uff0c Clustering\uff0c Dimensionality</p> <p>Formulation of machine learning</p> <p></p> <p>How to solve params in \\(f\\)\uff1a</p> <ul> <li>gradient: the direction in which the function increases most quickly</li> </ul> <p>Minibatch Stochastic Gradient Descent:</p> <p></p> <p>overfitting and underfitting</p> <p></p>"},{"location":"note/courses/hpc/note/#2-basic-of-deep-learning","title":"2 Basic of deep learning","text":""},{"location":"note/courses/hpc/note/#21-multilayer-perceptrons","title":"2.1 Multilayer perceptrons","text":"<p>active function: \u89e3\u51b3\u62df\u5408\u8fc7\u7a0b\u4e2d\u65e0\u6cd5\u62df\u5408\u7684\u95ee\u9898</p> <p></p>"},{"location":"note/courses/hpc/note/#openmp","title":"OpenMP","text":""},{"location":"note/courses/hpc/note/#1-false-sharing","title":"1 False Sharing","text":"<p>False sharing\u662fOpenMP\u5e76\u884c\u7f16\u7a0b\u4e2d\u5e38\u89c1\u7684\u6027\u80fd\u95ee\u9898\u4e4b\u4e00\u3002\u5b83\u53d1\u751f\u5728\u591a\u4e2a\u7ebf\u7a0b\u5e76\u884c\u4fee\u6539\u76f8\u4e91\u7684\u5185\u5b58\u4f4d\u7f6e\u65f6\uff0c\u5373\u4f7f\u5b83\u4eec\u4fee\u6539\u7684\u662f\u4e0d\u540c\u7684\u53d8\u91cf\u3002\u7531\u4e8e\u7f13\u5b58\u7cfb\u7edf\u7684\u8bbe\u8ba1\uff0cCPU\u6838\u5fc3\u901a\u5e38\u4e0d\u4f1a\u76f4\u63a5\u4ece\u4e3b\u5185\u5b58\u4e2d\u8bfb\u5199\u6570\u636e\uff0c\u800c\u662f\u64cd\u4f5c\u7f13\u5b58\u4e2d\u7684\u6570\u636e\u3002\u73b0\u4ee3\u8ba1\u7b97\u673a\u7684\u7f13\u5b58\u7cfb\u7edf\u901a\u5e38\u4ee5\u7f13\u5b58\u884c\uff08cache line\uff09\u4e3a\u5355\u4f4d\u5b58\u50a8\u6570\u636e\uff0c\u4e00\u4e2a\u7f13\u5b58\u884c\u901a\u5e38\u662f64\u5b57\u8282\u3002</p> <p>\u5f53\u4e00\u4e2a\u7ebf\u7a0b\u4fee\u6539\u4e86\u5b83\u7684\u7f13\u5b58\u884c\u4e2d\u7684\u6570\u636e\u65f6\uff0c\u5982\u679c\u8fd9\u4e2a\u7f13\u5b58\u884c\u4e5f\u88ab\u5176\u4ed6\u6838\u5fc3\u7f13\u5b58\u4e86\uff08\u56e0\u4e3a\u5176\u4ed6\u6838\u5fc3\u7684\u7ebf\u7a0b\u9700\u8981\u8bbf\u95ee\u540c\u4e00\u4e2a\u7f13\u5b58\u884c\u4e2d\u7684\u5176\u4ed6\u6570\u636e\uff09\uff0c\u90a3\u4e48\u8fd9\u4e2a\u7f13\u5b58\u884c\u4f1a\u88ab\u6807\u8bb0\u4e3a\u65e0\u6548\u3002\u7ed3\u679c\u662f\uff0c\u5176\u4ed6\u6838\u5fc3\u5fc5\u987b\u4ece\u4e3b\u5185\u5b58\u4e2d\u91cd\u65b0\u8bfb\u53d6\u8fd9\u4e2a\u7f13\u5b58\u884c\uff0c\u5373\u4f7f\u5b83\u4eec\u9700\u8981\u7684\u6570\u636e\u6ca1\u6709\u88ab\u4fee\u6539\u3002\u8fd9\u5c31\u662f\u6240\u8c13\u7684\"false sharing\"\uff1a\u867d\u7136\u7ebf\u7a0b\u64cd\u4f5c\u7684\u662f\u4e0d\u540c\u7684\u6570\u636e\uff0c\u4f46\u7531\u4e8e\u8fd9\u4e9b\u6570\u636e\u4f4d\u4e8e\u540c\u4e00\u4e2a\u7f13\u5b58\u884c\u4e2d\uff0c\u5b83\u4eec\u7684\u64cd\u4f5c\u4e92\u76f8\u5e72\u6270\uff0c\u5bfc\u81f4\u6027\u80fd\u4e0b\u964d\u3002</p> <p>\u907f\u514dfalse sharing\u7684\u4e00\u79cd\u65b9\u6cd5\u662f\u786e\u4fdd\u5e76\u884c\u5de5\u4f5c\u7684\u6570\u636e\u5206\u5e03\u5728\u4e0d\u540c\u7684\u7f13\u5b58\u884c\u4e2d\u3002\u8fd9\u53ef\u4ee5\u901a\u8fc7\u589e\u52a0\u6570\u636e\u7ed3\u6784\u7684\u5927\u5c0f\uff08padding\uff09\u6765\u5b9e\u73b0\uff0c\u786e\u4fdd\u6bcf\u4e2a\u7ebf\u7a0b\u5de5\u4f5c\u7684\u6570\u636e\u4f4d\u4e8e\u4e0d\u540c\u7684\u7f13\u5b58\u884c\u4e0a\u3002</p>"},{"location":"note/courses/hpc/note/#mpi","title":"MPI\u7f16\u7a0b","text":""},{"location":"note/courses/hpc/ACS25/HPL%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/","title":"HPL\u8c03\u8bd5\u8bb0\u5f55","text":"<p>ASC18\u4e16\u754c\u5927\u5b66\u751f\u8d85\u7b97\u7ade\u8d5b\u9898\u76ee\u5206\u6790\u4ee5\u53ca\u601d\u8def\u603b\u7ed3_asc\u4e16\u754c\u5927\u5b66\u751f\u8d85\u7ea7\u8ba1\u7b97\u673a\u7ade\u8d5b\u9898\u76ee-CSDN\u535a\u5ba2</p>"},{"location":"note/courses/hpc/ACS25/HPL%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/#1-hplhpcg","title":"1 \u5b89\u88c5hpl\u548chpcg","text":"<pre><code>cd $HOME &amp;&amp; git clone -c feature.manyFiles=true --depth=2 https://github.com/spack/spack.git &amp;&amp;  . $HOME/spack/share/spack/setup-env.sh \n# \u5b89\u88c5spack\n# \u6bcf\u6b21\u4f7f\u7528\u524d\u90fd\u8981\u6267\u884c . $HOME/spack/share/spack/setup-env.sh \n</code></pre>"},{"location":"note/courses/hpc/ACS25/HPL%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/#2-intel-one-api-version","title":"2 Intel-one-api version","text":"<pre><code>spack env activate myenv\nspack add intel-oneapi-compilers\nspack install intel-oneapi-compilers\nspack compiler add $(spack location -i intel-oneapi-compilers)/compiler/2025.0/bin\nspack add intel-oneapi-mpi%oneapi\nspack install intel-oneapi-mpi%oneapi\n</code></pre> <p>\u5355\u4f4d\uff1a Gflops</p> \\(P\\times Q\\)\\NB 128 160 192 224 256 288 320 352 384 416 \\(2\\times 2\\) 4.70876e+03 4.85222e+03 4.85506e+03 4.76512e+03 4.78550e+03 4.78525e+03 4.74770e+03 4.73352e+03 4.72667e+03 4.46924e+03 \\(1\\times 4\\) 3.34736e+03 3.41158e+03 3.41368e+03 3.34171e+03 3.37401e+03 3.34084e+03 3.30737e+03 3.28426e+03 3.26189e+03 3.08771e+03 \\(P\\times Q=2\\times 2,NB=192\\) \\(P\\times Q\\)\\NB 128 160 192 224 256 288 320 352 384 416 1*2 1.04943e+03 1.11461e+03 1.17154e+03 1.16570e+03 1.18795e+03 1.18955e+03 1.20555e+03 1.20268e+03 1.19627e+03 1.14732e+03 <p>\u8ba1\u7b97\u5f97\u5230\\(N=448380\\)</p> N Gflops 60000 4.96825e+03 70000 5.08977e+03 80000 5.15926e+03 100000 5.19091e+03 120000 5.21272e+03 \u8fdb\u7a0b\u7ebf\u7a0b\u5173\u7cfb"},{"location":"note/courses/hpc/ACS25/HPL%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/#3","title":"3 \u4e0d\u540c\u5b9e\u73b0","text":"<p><code>mpirun -np 4 ./xhpl</code></p> <p>N=50000 NB=192 P * Q=2 * 2</p> <p>mpich + openblas  </p> <p>openmpi + openblas </p> <ul> <li> \u6dfb\u52a0intel \u7684\u4f9d\u8d56\u9879\u65f6concretize\u4f1a\u51fa\u9519\uff0c\u53ef\u80fd\u662f\u5b89\u88c5\u4f9d\u8d56\u7684\u7f16\u8bd1\u5668\u4e0d\u4e00\u6837\uff1f \u7b49\u6d4b\u5b8c\u5176\u4ed6\u7684\u518d\u53bb\u6d4b\u8bd5\u8fd9\u4e2a</li> </ul>"},{"location":"note/courses/hpc/ACS25/HPL%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/#4-hpcg","title":"4 HPCG","text":""},{"location":"note/courses/hpc/ACS25/HPL%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/#41-intel-oneapi-version","title":"4.1 intel-oneapi version","text":"<p>mkl/benchmarks/hpcg/hpcg_cpu <pre><code>#!/bin/bash\n\nmpiexec.hydra -genvall -n 2 -ppn 2 bin/xhpcg_skx -n64 -t60\n\nmpiexec.hydra -genvall -n 2 -ppn 2 bin/xhpcg_skx -n128 -t60\n\nmpiexec.hydra -genvall -n 2 -ppn 2 bin/xhpcg_skx -n192 -t60\n\nmpiexec.hydra -genvall -n 2 -ppn 2 bin/xhpcg_skx -n256 -t60\n</code></pre></p> <pre><code>64:\n Final Summary =\n Final Summary ::HPCG result is VALID with a GFLOP/s rating of=37.5657\n Final Summary ::    HPCG 2.4 Rating (for historical value) is=37.7748\n Final Summary ::Reference version of ComputeDotProduct used=Performance results are most likely suboptimal\n Final Summary ::Results are valid but execution time (sec) is=60.0863\n Final Summary ::     Official results execution time (sec) must be at least=1800\n\n128\n Final Summary =\n Final Summary ::HPCG result is VALID with a GFLOP/s rating of=37.8587\n Final Summary ::    HPCG 2.4 Rating (for historical value) is=38.0171\n Final Summary ::Reference version of ComputeDotProduct used=Performance results are most likely suboptimal\n Final Summary ::Results are valid but execution time (sec) is=60.8692\n Final Summary ::     Official results execution time (sec) must be at least=1800\n\n192\n\n Final Summary =\n Final Summary ::HPCG result is VALID with a GFLOP/s rating of=38.7001\n Final Summary ::    HPCG 2.4 Rating (for historical value) is=38.8492\n Final Summary ::Reference version of ComputeDotProduct used=Performance results are most likely suboptimal\n Final Summary ::Results are valid but execution time (sec) is=67.3397\n Final Summary ::     Official results execution time (sec) must be at least=1800\n\n256\n Final Summary =\n Final Summary ::HPCG result is VALID with a GFLOP/s rating of=37.0932\n Final Summary ::    HPCG 2.4 Rating (for historical value) is=37.2203\n Final Summary ::Reference version of ComputeDotProduct used=Performance results are most likely suboptimal\n Final Summary ::Results are valid but execution time (sec) is=66.819\n Final Summary ::     Official results execution time (sec) must be at least=1800\n</code></pre>"},{"location":"note/courses/hpc/ACS25/HPL%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/#42","title":"4.2 \u8c03\u6574\u7ebf\u7a0b\u8fdb\u7a0b\u5927\u5c0f","text":"<pre><code>#!/bin/bash\n\n\n\nN_cores_per_node=52\n\nNP=(2 4 8 12 16 24 48)\n\n\n\ntouch hpcg_cpu_results.out\n\n\n\nfor N_processes_per_node in ($NP){\n\n\u00a0 \u00a0 nt = $N_cores_per_node / $N_processes_per_node\n\n\u00a0 \u00a0 export OMP_NUM_THREADS=$nt\n\n\u00a0 \u00a0 nprocs = 2 * $N_processes_per_node\n\n\u00a0 \u00a0 mpiexec.hydra -genvall -n $nprocs -ppn $N_processes_per_node bin/xhpcg_skx -n128 -t60\n\n}\n</code></pre>"},{"location":"note/courses/hpc/ACS25/HPL%E8%B0%83%E8%AF%95%E8%AE%B0%E5%BD%95/#gpuhplhpcg","title":"GPU\u7248\u672c\u7684HPL\u548cHPCG","text":"<p>NVIDIA HPC-Benchmarks | NVIDIA NGC <pre><code>sudo docker container run -it --gpus all --ipc=host --ulimit memlock=-1 --ulimit stack=67108864 \u00a0nvcr.io/nvidia/hpc-benchmarks:24.09 /bin/bash\n\ncd hpl-linux-x86_64\n</code></pre></p> <p><code>mpirun -n 1 ./hpl.sh --dat ./sample-dat/HPL-1GPU.dat</code> <code>mpirun -np 2 ./hpl.sh --dat ./sample-dat/HPL-2GPUs.dat</code>  \u8c03\u6574N  </p> <p></p> <p><code>./hpcg.sh --dat ./sample-dat/hpcg.dat --nx 48 --ny 48 --rt 5 --b 1</code></p> <p><pre><code>HPCG-Benchmark\nversion=3.1\nRelease date=March 28, 2019\nMachine Summary=\nMachine Summary::Distributed Processes=1\nMachine Summary::Threads per processes=104\nGlobal Problem Dimensions=\nGlobal Problem Dimensions::Global nx=104\nGlobal Problem Dimensions::Global ny=104\nGlobal Problem Dimensions::Global nz=104\nProcessor Dimensions=\nProcessor Dimensions::npx=1\nProcessor Dimensions::npy=1\nProcessor Dimensions::npz=1\nLocal Domain Dimensions=\nLocal Domain Dimensions::nx=104\nLocal Domain Dimensions::ny=104\n</code></pre> </p> <p>64 64 64  </p> <pre><code>#!/bin/bash\n# load CUDA and openmpi-cuda\nnvidia-smi\nmpirun --bind-to none -np 2 hpcg.sh --nx 256 --ny 256 --nz 256 --rt 64 | tee -a ./results.txt\nmpirun --bind-to none -np 2 hpcg.sh --nx 288 --ny 288 --nz 288 --rt 64 | tee -a ./results.txt\nmpirun --bind-to none -np 2 hpcg.sh --nx 320 --ny 320 --nz 320 --rt 64 | tee -a ./results.txt\nmpirun --bind-to none -np 2 hpcg.sh --nx 352 --ny 352 --nz 352 --rt 64 | tee -a ./results.txt\nmpirun --bind-to none -np 2 hpcg.sh --nx 384 --ny 384 --nz 384 --rt 64 | tee -a ./results.txt\n\necho \"done\"\n</code></pre> <p></p>"},{"location":"note/courses/physics/Ch%2016%20%E5%85%89%E7%9A%84%E5%B9%B2%E6%B6%89%E5%92%8C%E8%A1%8D%E5%B0%84/","title":"Ch 16 \u5149\u7684\u5e72\u6d89\u548c\u884d\u5c04","text":""},{"location":"note/courses/physics/Ch14%20%E7%94%B5%E7%A3%81%E6%84%9F%E5%BA%94/","title":"\u7535\u78c1\u611f\u5e94\u7684\u57fa\u672c\u5b9a\u5f8b","text":"<p>\u695e\u6b21\u5b9a\u5f8b\uff1a \u95ed\u5408\u56de\u8def\u4e2d\u4ea7\u751f\u611f\u5e94\u7535\u6d41\u65b9\u5411\uff0c\u603b\u662f\u4f7f\u5b83\u6240\u6fc0\u53d1\u7684\u78c1\u573a\u53bb\u963b\u6b62\u539f\u78c1\u901a\u91cf\u7684\u53d8\u5316 \u6cd5\u62c9\u7b2c\u7535\u78c1\u611f\u5e94\u5b9a\u5f8b\uff1a \u901a\u8fc7\u56de\u8def\u6240\u5305\u56f4\u9762\u79ef\u7684\u78c1\u901a\u91cf\u53d1\u751f\u53d8\u5316\u65f6\uff0c\u56de\u8def\u4e2d\u5c06\u4ea7\u751f\u611f\u5e94\u7535\u52a8\u52bf\\(\\varepsilon_i\\),\u5b83\u6b63\u6bd4\u4e8e\u78c1\u901a\u91cf\u7684\u65f6\u95f4\u53d8\u5316\u7387 \\(\\(\\varepsilon_i = -\\frac {\\mathrm d \\Phi}{\\mathrm d t}=-\\frac {\\mathrm d}{\\mathrm d t}\\int_S\\overrightarrow B\\cdot\\mathrm d\\overrightarrow S\\)\\) \u5bf9\u4e8eN\u531d\u7ebf\u5708\uff0c\u603b\u611f\u5e94\u7535\u52a8\u52bf\uff1a \\(\\(\\varepsilon_i=-\\frac{\\mathrm d}{\\mathrm d t}(\\sum_{i=1}^N\\varPhi_i)=-\\frac{\\mathrm d \\Psi}{\\mathrm d t}\\)\\)</p>"},{"location":"note/courses/physics/Ch19%20%E7%94%B5%E7%A3%81%E8%BE%90%E5%B0%84%E7%9A%84%E9%87%8F%E5%AD%90%E6%80%A7/","title":"\u70ed\u8f90\u5c04","text":""},{"location":"note/courses/physics/Ch19%20%E7%94%B5%E7%A3%81%E8%BE%90%E5%B0%84%E7%9A%84%E9%87%8F%E5%AD%90%E6%80%A7/#1","title":"1 \u5355\u8272\u8f90\u5c04\u51fa\u5c04\u5ea6","text":"\\[M_{\\lambda}(T)=\\frac {\\mathrm  dW_{\\lambda}} {\\mathrm d{\\lambda}} \\]"},{"location":"note/courses/physics/Ch19%20%E7%94%B5%E7%A3%81%E8%BE%90%E5%B0%84%E7%9A%84%E9%87%8F%E5%AD%90%E6%80%A7/#2","title":"2 \u5438\u6536\u7cfb\u6570\uff0c\u53cd\u5c04\u7cfb\u6570","text":""},{"location":"note/courses/physics/physics/","title":"Physics","text":"<p>\u5ffd\u7565\u8fb9\u7f18\u6548\u5e94=\u65e0\u9650\u957f \u63a5\u5730\u540e\u7535\u52bf\u4e3a0</p>"},{"location":"note/courses/physics/physics/#9","title":"\u7b2c9\u7ae0 \u9759\u7535\u573a","text":""},{"location":"note/courses/physics/physics/#1","title":"1 \u7535\u8377","text":""},{"location":"note/courses/physics/physics/#11","title":"1.1 \u7535\u8377\u91cf\u5b50\u5316","text":"<p>\u7535\u5b50\u662f\u81ea\u7136\u754c\u4e2d\u5b58\u5728\u7684\u6700\u5c0f\u8d1f\u7535\u8377\uff0c\u8d28\u5b50\u662f\u6700\u5c0f\u7684\u6b63\u7535\u8377\u3002\u4ed6\u4eec\u7684\u5e26\u7535\u91cf\u90fd\u662f\u57fa\u672c\u7535\u8377\uff1a \\(\\(e=1.602176\\times 10^{-19}C\\)\\)</p>"},{"location":"note/courses/physics/physics/#12","title":"1.2 \u7535\u8377\u5b88\u6052\u5b9a\u5f8b","text":"<p>\u5728\u4e00\u4e2a\u4e0e\u5916\u754c\u6ca1\u6709\u7535\u8377\u4ea4\u6362\u7684\u7cfb\u7edf\u5185\uff0c\u6b63\u8d1f\u7535\u8377\u7684\u4ee3\u6570\u548c\u5728\u4efb\u4f55\u7269\u7406\u8fc7\u7a0b\u4e2d\u4fdd\u6301\u4e0d\u53d8</p>"},{"location":"note/courses/physics/physics/#13","title":"1.3 \u7535\u8377\u7684\u76f8\u5bf9\u8bba\u4e0d\u53d8\u6027","text":"<p>\u5728\u4e0d\u540c\u7684\u53c2\u7167\u7cfb\u5185\u89c2\u5bdf\uff0c\u540c\u4e00\u4e2a\u5e26\u70b9\u7c92\u5b50\u7684\u7535\u91cf\u4e0d\u53d8</p>"},{"location":"note/courses/physics/physics/#2","title":"2 \u5e93\u4ed1\u5b9a\u5f8b","text":"\\[F=\\frac 1{4\\pi \\varepsilon_0}\\frac {q_1q_2}{{r_{12}^2}}\\hat {r_{12}}\\]"},{"location":"note/courses/physics/physics/#21","title":"2.1 \u7535\u573a\u529b\u53e0\u52a0\u539f\u7406","text":"<p>\u77e2\u91cf\u548c</p>"},{"location":"note/courses/physics/physics/#3","title":"3 \u7535\u573a \u7535\u573a\u5f3a\u5ea6","text":""},{"location":"note/courses/physics/physics/#4","title":"4 \u9ad8\u65af\u5b9a\u7406\u53ca\u5176\u5e94\u7528","text":"<p>\u9759\u7535\u573a\u4e2d\u4efb\u4e00\u95ed\u5408\u66f2\u9762\u4e0a\u6240\u901a\u8fc7\u7684\u7535\u901a\u91cf\u4e0e\u8fd9\u4e00\u95ed\u5408\u66f2\u9762\u6240\u5305\u56f4\u7684\u7535\u8377\u4e4b\u95f4\u7684\u5173\u7cfb\uff1a\\(\\phi=\\frac 1 {\\varepsilon_0}\\sum{q_i}\\)</p>"},{"location":"note/courses/physics/physics/#41","title":"4.1 \u9ad8\u65af\u5b9a\u7406\u7684\u5e94\u7528","text":""},{"location":"note/courses/physics/physics/#411","title":"4.1.1 \u7403\u5bf9\u79f0\u5206\u5e03","text":"<p>\u5e26\u70b9\u7403\u9762\uff08q\uff09\u5916\u4efb\u4e00\u70b9\uff08\u534a\u5f84r\uff09\u5904\u7684\u573a\u5f3a \\(\\(\\overrightarrow E=\\frac q {4\\pi \\varepsilon_0 r^2}\\hat r\\)\\)</p>"},{"location":"note/courses/physics/physics/#412","title":"4.1.2 \u8f74\u5bf9\u79f0\u5206\u5e03","text":"<p>\u65e0\u9650\u957f\u5747\u5300\u5e26\u70b9\u7684\u76f4\u7ebf\uff0c\u5706\u67f1\u9762\uff0c\u5706\u67f1\u4f53\u7b49 \\(\\(E=\\frac {\\lambda} {2\\pi \\varepsilon_0 R}\\)\\)</p>"},{"location":"note/courses/physics/physics/#413","title":"4.1.3 \u65e0\u9650\u5927\u5e73\u9762\u7535\u8377","text":"\\[E=\\frac \\sigma {2\\varepsilon_0}\\]"},{"location":"note/courses/physics/physics/#414","title":"4.1.4 \u4e24\u5757\u5e26\u7b49\u91cf\u5f02\u53f7\u7535\u8377\u5e73\u884c\u5e73\u677f\u7684\u7535\u573a","text":"\\[E=\\frac \\sigma {\\varepsilon_0}\\]"},{"location":"note/courses/physics/physics/#5","title":"5 \u9759\u7535\u573a\u7684\u73af\u8def\u5b9a\u7406","text":""},{"location":"note/courses/physics/physics/#51","title":"5.1 \u9759\u7535\u573a\u529b\u7684\u529f","text":""},{"location":"note/courses/physics/physics/#511","title":"5.1.1 \u70b9\u7535\u8377\u7535\u573a\u4e2d\u7535\u573a\u529b\u505a\u529f","text":""},{"location":"note/courses/physics/physics/#52","title":"5.2 \u9759\u7535\u573a\u7684\u73af\u8def\u5b9a\u7406","text":"<p> \u6709\u6e90\u573a\u3001\u6709\u52bf\u573a\uff1a\u9ad8\u65af\u5b9a\u7406\u8868\u660e\u7535\u573a\u7684\u95ed\u5408\u9762\u79ef\u5206\u4e0d\u4e3a0\uff0c\u662f\u6709\u6e90\u573a\uff1b\u73af\u8def\u5b9a\u7406\u8868\u660e\u7535\u573a\u7684\u95ed\u5408\u7ebf\u79ef\u5206\u4e3a0\uff0c\u662f\u6709\u52bf\u573a</p>"},{"location":"note/courses/physics/physics/#6","title":"6 \u7535\u52bf","text":"<p> \u70b9\u7535\u8377\u7535\u573a\u4e2d\u7535\u8377\u7684\u7535\u52bf\u80fd\uff1a \\(\\(W_p=\\frac {q_0q}{4\\pi\\varepsilon r_p}\\)\\)  - \u7535\u573a\u529b\u505a\u529f\u548c\u7535\u52bf\u80fd\u7528\u7535\u52bf\u6765\u8868\u793a\uff1a \\(\\(W_a = qU_a,W_b=q_oU_b\\)\\)</p> <p>\u7535\u52bf\u68af\u5ea6\uff1a\\(\\(F=-\\frac{\\partial U}{\\partial x}\\overrightarrow i-\\frac{\\partial U}{\\partial y}\\overrightarrow j-\\frac{\\partial U}{\\partial z}\\overrightarrow k\\)\\)</p>"},{"location":"note/courses/physics/physics/#53","title":"5.3 \u7535\u52bf\u53e0\u52a0\u539f\u7406","text":""},{"location":"note/courses/physics/physics/#531","title":"5.3.1 \u70b9\u7535\u8377\u7535\u573a\u7684\u7535\u52bf","text":"\\[U_p=\\frac q {4\\pi\\varepsilon_0 r}\\]"},{"location":"note/courses/physics/physics/#532","title":"5.3.2 \u7535\u52bf\u53e0\u52a0\u539f\u7406","text":"\\[U_p =\\sum {U_{pi}}\\]"},{"location":"note/courses/physics/physics/#533","title":"5.3.3 \u7535\u8377\u8fde\u7eed\u5206\u5e03\u5e26\u7535\u4f53\u7684\u7535\u52bf","text":"<p>\u7535\u5076\u6781\u5b50\u7535\u52bf </p>"},{"location":"note/courses/physics/physics/#534","title":"5.3.4 \u7535\u52bf\u7684\u8ba1\u7b97","text":"<ul> <li>\u5747\u5300\u5e26\u7535\u7403\u58f3\u4ea7\u751f\u7684\u7535\u573a\u7684\u7535\u52bf \\(\\((r&gt;R )V_P=\\frac 1{4\\pi \\varepsilon_0}\\frac qr\\)\\) \\(\\((r&lt;R)V_p=\\frac 1{4\\pi \\varepsilon_0}\\frac qR\\)\\)</li> <li>\u5747\u5300\u5e26\u7535\u5706\u73af\u8f74\u7ebf\u4e0a\u7684\u7535\u52bf \\(\\(V=\\frac q {4\\pi \\varepsilon_0(x^2+R^2)^{\\frac 12}}\\)\\)</li> </ul>"},{"location":"note/courses/physics/physics/#_1","title":"\u9759\u7535\u573a\u4e2d\u7684\u5bfc\u4f53\u548c\u7535\u4ecb\u8d28","text":""},{"location":"note/courses/physics/physics/#1_1","title":"1 \u9759\u7535\u573a\u4e2d\u7684\u91d1\u5c5e\u5bfc\u4f53","text":""},{"location":"note/courses/physics/physics/#11_1","title":"1.1 \u5bfc\u4f53\u7684\u9759\u7535\u5e73\u8861","text":"<p>\u5fc5\u8981\u6761\u4ef6\uff1a\u5bfc\u4f53\u5185\u4efb\u4e00\u70b9\u7684\u7535\u573a\u5f3a\u5ea6\u90fd\u7b49\u4e8e\u96f6</p> <p>\u9759\u7535\u5e73\u8861\u7684\u63a8\u8bba\uff1a  - \u5bfc\u4f53\u5185\u90e8\u573a\u5f3a\u5904\u5904\u4e3a\u96f6  - \u5bfc\u4f53\u662f\u4e00\u4e2a\u7b49\u52bf\u4f53\uff0c\u5bfc\u4f53\u8868\u9762\u662f\u4e00\u4e2a\u7b49\u52bf\u9762  - \u5bfc\u4f53\u8868\u9762\u7684\u573a\u5f3a\u5782\u76f4\u4e8e\u5bfc\u4f53\u8868\u9762</p>"},{"location":"note/courses/physics/physics/#12_1","title":"1.2 \u9759\u7535\u5e73\u8861\u65f6\u5bfc\u4f53\u4e0a\u7684\u7535\u8377\u5206\u5e03","text":"<p>\u7535\u8377\u53ea\u80fd\u5206\u5e03\u5728\u5bfc\u4f53\u7684\u8868\u9762 \\(\\(\\overrightarrow E =\\frac \\sigma \\varepsilon_0 \\overrightarrow e_n\\)\\)</p> <p>\\(\\sigma\\): \u5bfc\u4f53\u8868\u9762\u4e0a\u7535\u8377\u5bc6\u5ea6\u7684\u5206\u5e03 \u5728\u6ca1\u6709\u5916\u7535\u573a\u7684\u60c5\u51b5\u4e0b\uff0c\u7535\u8377\u7684\u5206\u5e03\u4e0e\u5bfc\u4f53\u8868\u9762\u7684\u66f2\u7387\u6709\u5173\uff0c\u5bfc\u4f53\u7a81\u51fa\u7684\u5730\u65b9\u66f2\u7387\u8f83\u5927\uff0c\u9762\u7535\u8377\u5bc6\u5ea6\\(\\sigma\\)\u8f83\u5927\uff0c\u573a\u5f3a\u8f83\u5927</p>"},{"location":"note/courses/physics/physics/#2_1","title":"2 \u5916\u7535\u573a\u4e2d\u7684\u5bfc\u4f53","text":"<ul> <li>\u5b9e\u5fc3\u5bfc\u4f53</li> <li>\u5bfc\u4f53\u7a7a\u8154<ul> <li>\u7a7a\u8154\u5185\u65e0\u5e26\u7535\u4f53\uff08\u9759\u7535\u5c4f\u853d\uff09</li> <li>\u7a7a\u8154\u5185\u6709\u5e26\u7535\u4f53     \u7a7a\u8154\u5185\u5916\u7684\u7535\u573a\u4e0d\u4e92\u76f8\u5f71\u54cd\uff08\u5916\u8868\u9762\u63a5\u5730\uff09     \u5148\u8003\u8651\u5427\u7a7a\u8154\u5185\u9759\u7535\u611f\u5e94\uff0c\u82e5\u6ca1\u6709\u518d\u8003\u8651\u5916\u7535\u573a</li> </ul> </li> </ul>"},{"location":"note/courses/physics/physics/#3_1","title":"3 \u7535\u5bb9\uff0c\u7535\u5bb9\u5668","text":""},{"location":"note/courses/physics/physics/#31","title":"3.1 \u5b64\u7acb\u5bfc\u4f53\u7684\u7535\u5bb9","text":"\\[C=\\frac q U=4\\pi \\varepsilon_0R~~~~~~U=\\frac 1 {4\\pi \\varepsilon_0 }\\frac qR\\]"},{"location":"note/courses/physics/physics/#32","title":"3.2 \u7535\u5bb9\u5668\u7684\u7535\u5bb9","text":"\\[C=\\frac Q {U_A-U_B}\\]"},{"location":"note/courses/physics/physics/#321","title":"3.2.1 \u5e73\u884c\u677f\u7535\u5bb9\u5668","text":"\\[C=\\frac {\\varepsilon_0 S}d\\]"},{"location":"note/courses/physics/physics/#322","title":"3.2.2 \u5706\u67f1\u5f62\u7535\u5bb9\u5668","text":"<p>\\(\\lambda=\\frac qr\\)\u662f\u6bcf\u5355\u4f4d\u957f\u5ea6\u5706\u67f1\u6a2a\u622a\u9762\u4e0a\u7684\u5e26\u7535\u91cf \\(\\(C=\\frac {2\\pi \\varepsilon_0l}{ln\\frac {R_B} {R_A}}\\)\\) \\(R_A\\)\u4e3a\u5185\u5f84,\\(R_B\\)\u4e3a\u5916\u5f84</p>"},{"location":"note/courses/physics/physics/#323","title":"3.2.3 \u7403\u5f62\u7535\u5bb9\u5668","text":"\\[C=4\\pi \\varepsilon_0\\frac {R_B R_A}{R_B-R_A}\\]"},{"location":"note/courses/physics/physics/#33","title":"3.3 \u7535\u5bb9\u5668\u7684\u4e32\u8054\u548c\u5e76\u8054","text":"<p>\u4e32\u8054\uff1a \\(\\(\\frac 1 C =\\frac 1 C_1+\\frac 1 C_2\\cdots+\\frac 1 C_n\\)\\) \u7535\u5bb9\u51cf\u5c0f\uff0c\u8010\u538b\u589e\u52a0 \u5e76\u8054 \\(\\(C=C_1+C_2\\cdots +C_n\\)\\) \u5e76\u8054\u589e\u52a0\u603b\u7535\u5bb9\uff0c\u8010\u538b\u503c\u7b49\u4e8e\u5176\u4e2d\u6700\u4f4e\u7684\u8010\u538b\u503c</p>"},{"location":"note/courses/physics/physics/#4_1","title":"4 \u9759\u7535\u573a\u4e2d\u7684\u7535\u4ecb\u8d28","text":"<p>\u7535\u4ecb\u8d28\uff1a \u7535\u7684\u975e\u5bfc\u4f53\uff0c\u7edd\u7f18\u4ecb\u8d28\uff0c\u5728\u5916\u7535\u573a\u4e2d\u5bf9\u7535\u573a\u6709\u5f71\u54cd\uff0c\u9759\u7535\u5e73\u8861\u65f6\uff0c\u5185\u90e8\u573a\u5f3a\u4e0d\u4e3a0</p>"},{"location":"note/courses/physics/physics/#41_1","title":"4.1 \u7535\u4ecb\u8d28\u5bf9\u7535\u573a\u7684\u5f71\u54cd","text":""},{"location":"note/courses/physics/physics/#42","title":"4.2 \u7535\u4ecb\u8d28\u7684\u6781\u5316","text":"<p>\u5206\u5b50\u7684\u6b63\u8d1f\u7535\u4e2d\u5fc3\u662f\u5426\u91cd\u5408\u3002\u5bf9\u6709\u6781\u5206\u5b50\uff0c\u6b63\u8d1f\u7535\u4e2d\u5fc3\u7ec4\u6210\u7b49\u6548\u5206\u5b50\u7535\u5076\u6781\u77e9\\(p\\),\u5bf9\u5927\u91cf\u5206\u5b50\u7684\u7b49\u6548\u7535\u5076\u6781\u77e9\u4e4b\u548c\\(\\sum p=0\\),\u5bf9\u65e0\u6781\u5206\u5b50\\(p=0\\)</p> <p>\u7535\u4ecb\u8d28\u6781\u5316\uff1a \u7535\u4ecb\u8d28\u5728\u5916\u573a\u4e2d\uff0c\u5728\u4e0e\u5916\u573a\\(E_0\\)\u7684\u5782\u76f4\u7684\u8868\u9762\u5c42\u91cc\u51fa\u73b0\u6b63\u8d1f\u7535\u8377\u5c42\uff0c\u8fd9\u4e9b\u7535\u8377\u4e0d\u80fd\u81ea\u7531\u79fb\u52a8\uff0c\u79f0\u4e3a\u8212\u670d\u7535\u8377\u6216\u6781\u5316\u7535\u8377\uff0c\u8fd9\u79cd\u73b0\u8c61\u79f0\u4e3a\u7535\u4ecb\u8d28\u7684\u6781\u5316\u3002\u65e0\u6781\u5206\u5b50\u7684\u6781\u5316\u79f0\u4e3a\u4f4d\u79fb\u6781\u5316\uff0c\u6709\u6781\u5206\u5b50\u7684\u6781\u5316\u79f0\u4e3a\u53d6\u5411\u6781\u5316</p>"},{"location":"note/courses/physics/physics/#43","title":"4.3 \u7535\u6781\u5316\u5f3a\u5ea6\u77e2\u91cf \u6781\u5316\u7535\u8377\u9762\u5bc6\u5ea6","text":"<p>\u7535\u5076\u6781\u77e9\uff1a$$ \\overrightarrow{p}=\\overrightarrow{q}\\cdot \\overrightarrow{r_e}$$  </p>"},{"location":"note/courses/physics/physics/#44","title":"4.4 \u7535\u4ecb\u8d28\u4e2d\u9759\u7535\u573a\u7684\u57fa\u672c\u5b9a\u7406","text":""},{"location":"note/courses/physics/physics/#441","title":"4.4.1 \u7535\u4ecb\u8d28\u4e2d\u7684\u573a\u5f3a","text":"\\[\\begin{align}&amp;E=\\frac{E_o}{1+\\chi_e}\\\\&amp;U=Ed=\\frac{\\sigma_0d}{\\varepsilon_0(1+\\chi_e)}\\\\ &amp;=\\frac qU=(1+\\chi_e)C_0\\end{align}$$ ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202409221100003.png) ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202409222241666.png) ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202409222241805.png) ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202409222316955.png) $$\\begin{align}\\varepsilon_r=(1+\\chi_e)\\\\ \\varepsilon = \\varepsilon_r\\varepsilon_0=(1+\\chi_e)\\varepsilon_0\\\\ \\sigma'=(1-\\frac 1 \\varepsilon_r)\\sigma_0\\end{align}\\]"},{"location":"note/courses/physics/physics/#442","title":"4.4.2 \u6709\u7535\u4ecb\u8d28\u65f6\u7684\u9ad8\u65af\u5b9a\u7406 \u7535\u4f4d\u79fb\u77e2\u91cf","text":"<p>\u7535\u4f4d\u79fb\u77e2\u91cf\uff1a \\(\\(\\overrightarrow D = \\varepsilon_0\\overrightarrow E+\\overrightarrow P\\)\\) \u6709\u7535\u4ecb\u8d28\u65f6\u7684\u9ad8\u65af\u5b9a\u7406 \\(\\(\\int\\kern{-7pt}\\int \\kern{-24mu} \\bigcirc \\bf_S \\overrightarrow D\\cdot d\\overrightarrow s = q_0\\)\\) \u5f15\u8fdb\u7535\u4f4d\u79fb\u7ebf\uff1a 1.\u7535\u4f4d\u79fb\u7ebf\u4e0a\u6bcf\u4e00\u70b9\u7684\u5207\u7ebf\u65b9\u5411\u548c\u8be5\u70b9\u7684\u7535\u4f4d\u79fbD\u7684\u65b9\u5411\u76f8\u540c 2.\u5782\u76f4\u4e8e\u7535\u4f4d\u79fb\u7ebf\u7684\u5355\u4f4d\u9762\u79ef\u4e0a\u901a\u8fc7\u7684\u7535\u4f4d\u79fb\u7ebf\u6570\u7b49\u4e8e\u8be5\u70b9\u7684\u7535\u4f4d\u79fbD\u7684\u91cf\u503c \u7535\u4ecb\u8d28\u4e2d\u7684\u9ad8\u65af\u5b9a\u7406\uff1a \u901a\u8fc7\u7535\u4ecb\u8d28\u4e2d\u4efb\u4e00\u95ed\u5408\u66f2\u9762\u7684\u7535\u4f4d\u79fb\u901a\u91cf\u7b49\u4e8e\u8be5\u9762\u6240\u5305\u56f4\u7684\u81ea\u7531\u7535\u8377\u91cf\u7684\u4ee3\u6570\u548c - \u7535\u4f4d\u79fb\u77e2\u91cf\u6ca1\u6709\u660e\u663e\u7684\u7269\u7406\u610f\u4e49 - \u901a\u8fc7\u95ed\u5408\u66f2\u9762\u7684\u7535\u4f4d\u79fb\u901a\u91cf\u53ea\u4e0e\u81ea\u7531\u7535\u8377\u6709\u5173 - \u7535\u4f4d\u79fb\u77e2\u91cf\u51b3\u5b9a\u4e8e\u81ea\u7531\u7535\u8377\u4e0e\u6781\u5316\u7535\u8377\u7684\u5206\u5e03 - \u7535\u4f4d\u79fb\u77e2\u91cf\u7684\u5b9a\u4e49\u5f0f\u5bf9\u5404\u5411\u540c\u6027\u548c\u5404\u5411\u5f02\u6027\u7684\u4ecb\u8d28\u90fd\u9002\u7528</p> <p>\u5728\u5404\u5411\u540c\u6027\u7684\u4ecb\u8d28\u4e2d\uff1a $$\\overrightarrow D = \\varepsilon \\overrightarrow E $$</p>"},{"location":"note/courses/physics/physics/#5_1","title":"5 \u9759\u7535\u573a\u7684\u80fd\u91cf","text":""},{"location":"note/courses/physics/physics/#51_1","title":"5.1 \u70b9\u7535\u8377\u7684\u76f8\u4e92\u4f5c\u7528\u80fd","text":"<p>\u5916\u529b\u505a\u529f\u7b49\u4e8e\u4e24\u7535\u8377\u76f8\u4e92\u4f5c\u7528\u7684\u80fd\u91cf \\(\\(W=\\frac 12\\sum_{i=1}^nq_iU_i\\)\\)</p>"},{"location":"note/courses/physics/physics/#52_1","title":"5.2 \u7535\u8377\u8fde\u7eed\u5206\u5e03\u5f0f\u7684\u9759\u7535\u80fd","text":"<ul> <li>\u7535\u8377\u4f53\u5206\u5e03\u65f6\u7684\u9759\u7535\u80fd \\(\\(W=\\frac 12 \\iiint_V U\\rho dV\\)\\)</li> <li>\u7535\u8377\u9762\u5206\u5e03\u65f6\u7684\u9759\u7535\u80fd \\(\\(W=\\frac 12 \\iint_sU\\sigma dS\\)\\)</li> <li>\u7535\u5bb9\u5668\u6240\u5e26\u7684\u9759\u7535\u80fd \\(\\(W=\\frac Q2U_A-\\frac QxU_B=\\frac 12 \\frac {Q^2}C\\)\\)</li> </ul>"},{"location":"note/courses/physics/physics/#53_1","title":"5.3 \u9759\u7535\u573a\u7684\u80fd\u91cf","text":"\\[\\begin{align}w_e=\\frac 12\\overrightarrow E\\cdot\\overrightarrow D=\\frac 12\\varepsilon_0\\varepsilon_rE^2\\\\ W=\\int_Vw_e\\mathrm d V \\end{align}\\] <p>\u5bf9\u4efb\u610f\u53d8\u5316\u7535\u573a\u90fd\u9002\u7528</p>"},{"location":"note/courses/physics/physics/#_2","title":"\u7a33\u6052\u7535\u6d41","text":""},{"location":"note/courses/physics/physics/#1_2","title":"1 \u7a33\u6052\u7535\u6d41","text":"<p>\u7535\u6d41\u5bc6\u5ea6\u77e2\u91cf\uff1a \\(\\(\\begin{align} &amp;I=\\frac{\\mathrm d q}{\\mathrm d t}\\\\ &amp;j=\\frac{\\mathrm d I}{\\mathrm d Scos\\theta}\\\\ &amp;I=\\int_S j\\cdot \\mathrm d S \\end{align}\\)\\) \u7535\u6d41\u573a\uff1a\\(j\\)\u5f62\u6210\u7684\u77e2\u91cf\u573a \u7535\u6d41\u7ebf\u7684\u7279\u70b9 - \u7535\u6d41\u7ebf\u4e0a\u7684\u5207\u7ebf\u65b9\u5411\u4e3a\\(j\\)\u7684\u65b9\u5411 - \u7535\u6d41\u7ebf\u5bc6\u5904\\(j\\)\u5927 - \u4e24\u7535\u6d41\u7ebf\u4e0d\u76f8\u4ea4</p>"},{"location":"note/courses/physics/physics/#11_2","title":"1.1 \u7535\u6d41\u5bc6\u5ea6\u548c\u6f02\u79fb\u901f\u5ea6\u7684\u5173\u7cfb","text":"<p>\u6f02\u79fb\u8fd0\u52a8\uff1a\u7535\u5b50\u5728\u7535\u573a\u4f5c\u7528\u4e0b\uff0c\u9664\u4e86\u4f5c\u65e0\u89c4\u5219\u70ed\u8fd0\u52a8\u5916\uff0c\u8fd8\u5c06\u5b9a\u5411\u8fd0\u52a8\u4f60\uff0c\u8fd9\u79cd\u5b9a\u5411\u8fd0\u52a8\u7684\u5e73\u5747\u901f\u5ea6\u79f0\u4e3a\u6f02\u79fb\u901f\u5ea6\\(v_d\\) \\(\\(\\overrightarrow j=-en\\overrightarrow{v_d}\\)\\)</p>"},{"location":"note/courses/physics/physics/#12_2","title":"1.2 \u7a33\u6052\u7535\u6d41\u4e0e\u7a33\u6052\u7535\u573a","text":"<p>\u7a33\u6052\u7535\u6d41\uff1a\u5bfc\u4f53\u4e2d\u5404\u70b9\u5bc6\u5ea6\u77e2\u91cf\u4e0d\u968f\u65f6\u95f4\u53d8\u5316 \u7535\u8377\u8fde\u7eed\u6027\u65b9\u7a0b\uff1a \\(\\(\\int\\kern{-7pt}\\int \\kern{-24mu} \\bigcirc \\bf_S \\overrightarrow j\\cdot d\\overrightarrow S = -\\frac {\\mathrm dq}{\\mathrm d t}\\)\\) \u7535\u6d41\u7a33\u6052\u6761\u4ef6 \\(\\(\\int\\kern{-7pt}\\int \\kern{-24mu} \\bigcirc \\bf_S \\overrightarrow j\\cdot d\\overrightarrow S = 0\\)\\) </p>"},{"location":"note/courses/physics/physics/#2_2","title":"2 \u6b27\u59c6\u5b9a\u5f8b\u7684\u5fae\u5206\u5f62\u5f0f","text":"<p>\\(\\(\\begin{align} &amp;I=\\frac UR \\\\&amp;R=\\rho\\frac l S \\\\&amp;\\rho_t=\\rho_0(1+\\alpha t) \\end{align}\\)\\) \u6b27\u59c6\u5b9a\u5f8b\u7684\u5fae\u5206\u5f62\u5f0f  \\(\\(j=\\gamma E = -enV_d\\)\\) \\(\\gamma=\\frac 1\\rho\\):\u7535\u5bfc\u7387</p>"},{"location":"note/courses/physics/physics/#3_2","title":"3 \u7535\u52a8\u52bf","text":"<p>\u7535\u6e90\uff1a\u63d0\u4f9b\u975e\u9759\u7535\u6027\u5916\u529b\u7684\u88c5\u7f6e\uff0c\u662f\u5c06\u5176\u4ed6\u80fd\u91cf\u8f6c\u5316\u4e3a\u7535\u80fd\u7684\u88c5\u7f6e</p>"},{"location":"note/courses/physics/physics/#31_1","title":"3.1 \u7535\u6e90\u7684\u7535\u52a8\u52bf","text":"<p>\\(\\(\\varepsilon=\\frac {A_K}{q}\\)\\) </p>"},{"location":"note/courses/physics/physics/#32_1","title":"3.2 \u7535\u6e90\u7684\u8def\u7aef\u7535\u538b","text":"\\[U_+-U_-=\\varepsilon - IR\\]"},{"location":"note/courses/physics/physics/#_3","title":"\u7a33\u6052\u78c1\u573a","text":""},{"location":"note/courses/physics/physics/#1_3","title":"1 \u78c1\u573a\uff0c\u78c1\u611f\u5e94\u5f3a\u5ea6","text":""},{"location":"note/courses/physics/physics/#11_3","title":"1.1 \u57fa\u672c\u78c1\u73b0\u8c61","text":"<p>\u78c1\u73b0\u8c61\u53ef\u5f52\u7ed3\u4e3a\u8fd0\u52a8\u7535\u8377\u7684\u76f8\u4e92\u4f5c\u7528\uff0c\u8fd9\u79cd\u76f8\u4e92\u4f5c\u7528\u901a\u8fc7\u78c1\u573a\u4f20\u9012</p>"},{"location":"note/courses/physics/physics/#12_3","title":"1.2 \u78c1\u611f\u5e94\u5f3a\u5ea6","text":"<p>\u5f53\u901f\u5ea6v\u5782\u76f4\u4e8e\u78c1\u611f\u5e94\u5f3a\u5ea6B\u65f6\uff0c\u529b\u8fbe\u5230\u6700\u5927\u503c \\(\\(B=F_{max}/(qv)\\)\\) \u6d1b\u4f26\u5179\u529b\uff1a \\(\\(\\overrightarrow F=q\\overrightarrow v\\times\\overrightarrow B\\)\\) \u82e5\u7535\u573a\u548c\u78c1\u573a\u540c\u65f6\u5b58\u5728\uff1a \\(\\(\\overrightarrow F=q\\overrightarrow E+q\\overrightarrow v\\times\\overrightarrow B\\)\\)</p>"},{"location":"note/courses/physics/physics/#13_1","title":"1.3 \u78c1\u611f\u5e94\u7ebf","text":"<p>\u78c1\u611f\u5e94\u7ebf\uff1a \u78c1\u611f\u5e94\u7ebf\u4e0a\u4efb\u4e00\u70b9\u7684\u5207\u7ebf\u65b9\u5411\u548c\u8be5\u70b9\u7684\u78c1\u573a\u65b9\u5411\u4e00\u81f4\u3002\u78c1\u611f\u5e94\u7ebf\u662f\u95ed\u5408\u66f2\u7ebf\uff0c\u73af\u6d41\u65b9\u5411\u4e0e\u7535\u6d41\u6784\u6210\u53f3\u624b\u87ba\u65cb\u5173\u7cfb\u3002</p>"},{"location":"note/courses/physics/physics/#14","title":"1.4 \u8fd0\u52a8\u7535\u8377\u7684\u573a","text":"\\[B=\\frac {\\mu_0}{4\\pi}\\frac{q( v\\times \\hat r)}{r^2}$$ ## 2 \u6bd5\u5965-\u8428\u4f10\u5c14\u5b9a\u5f8b $$d\\overrightarrow B=\\frac {\\mu_0} {4\\pi}\\frac {Id\\overrightarrow l\\times\\hat{r}}{r^2} $$ $$\\overrightarrow B = \\frac{\\mu_0}{4\\pi}\\int_L\\frac{Id\\overrightarrow l\\times \\hat r}{r^2}$$ ### 2.1 \u6bd5\u5965-\u8428\u4f10\u5c14\u5b9a\u5f8b\u7684\u5e94\u7528 #### 2.1.1 \u8f7d\u6d41\u957f\u76f4\u5bfc\u7ebf\u7684\u78c1\u573a ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202410051540705.png) $$B=\\frac{\\mu_0 I}{4\\pi a}(cos\\theta_1-cos\\theta_2)$$ \u5f53$L&gt;&gt;a,\\theta_1=0,\\theta_2=\\pi$\u65f6 $$B=\\frac {\\mu_0I}{2\\pi a}$$ #### 2.1.2 \u8f7d\u6d41\u5706\u7ebf\u5708\u8f74\u7ebf\u4e0a\u7684\u78c1\u573a ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202410051554144.png) $$B=\\frac{\\mu_0IR^2}{2(R^2+x^2)^{\\frac 32}}$$ $B$\u7684\u65b9\u5411\u6cbfOP\u8f74\uff0c\u4e0e\u7535\u6d41\u65b9\u5411\u6210\u53f3\u87ba\u65cb\u5173\u7cfb ***\u4e24\u7279\u6b8a\u70b9\u7684\u60c5\u51b5*** - \u5728\u5706\u5fc3O\u5904\uff0cx=0,\u5219$B(0)=\\frac {\\mu_0I}{2R}$     \u82e5\u5bc6\u7ed5N\u531d\uff0c\u5219\uff1a$B(0)=\\frac {\\mu_0IN}{2R}$ - \u5728\u8f74\u7ebf\u4e0a\u8fdc\u79bb\u539f\u7ebf\u5708$(x&gt;&gt;R)$:     $$B=\\frac {\\mu_0IS}{2\\pi x^3}$$     ***\u8f7d\u6d41\u7ebf\u5708\u7684\u78c1\u77e9\uff0c\u78c1\u5076\u6781\u5b50***     \u78c1\u77e9$p_m=NIS_n$     \u5f15\u5165\u78c1\u77e9\u6982\u5ff5\u540e\uff0c\u5728\u8f74\u7ebf\u6492\u8c0e\u7ed9\u4f60\u8fdc\u79bb\u8f7d\u6d41\u5706\u7ebf\u5708\u7684\u78c1\u573a\u4e3a\uff1a$$\\overrightarrow B=\\frac {\\mu_0\\overrightarrow p_m}{2\\pi x^3}$$     \u573a\u70b9\u5230\u573a\u6e90\u7684\u8ddd\u79bb\u8fdc\u5927\u4e8e\u7ebf\u5708\u5c3a\u5bf8\u7684\u8f7d\u6d41\u7ebf\u5708\u2014\u2014\u78c1\u5076\u6781\u5b50 #### 2.1.3 \u8f7d\u6d41\u76f4\u87ba\u7ebf\u7ba1\u5185\u90e8\u7684\u78c1\u573a ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202410051617560.png) $$\\mathrm dB=\\frac{\\mu_0IR^2n\\mathrm dl}{2(R^2+l^2)^{\\frac 32}}$$ $$B=\\frac {\\mu_0} 2nI(cos\\beta_2-cos\\beta_1)$$ ***\u4e24\u79cd\u7279\u6b8a\u60c5\u51b5*** - $L&gt;&gt;R$$$B=\\mu_0nI$$ - \u957f\u76f4\u87ba\u7ebf\u7ba1\u4e0a\u7684\u4e24\u7aef\u70b9\uff0c$\\beta_1=\\frac {\\pi}2,\\beta_2\\rightarrow 0$\u6216$\\beta_2=\\frac {\\pi}2,\\beta_1\\rightarrow 0$ $$B=\\frac 12\\mu_0nI$$***\u4ea5\u59c6\u970d\u5179\u7ebf\u5708\uff1a*** ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202410051630940.png) ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202410051631112.png) ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202410051631517.png) ### 2.2 \u8fd0\u52a8\u7535\u8377\u7684\u78c1\u573a $$j=qnv\uff0cI=qnvS$$ ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202410051649044.png) ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202410051649035.png) ## 3 \u78c1\u573a\u7684\u9ad8\u65af\u5b9a\u7406\uff0c\u5b89\u57f9\u73af\u8def\u5b9a\u7406 ### 3.1 \u78c1\u901a\u91cf \u901a\u8fc7\u6709\u9650\u66f2\u9762$S$\u7684\u78c1\u901a\u91cf $$\\phi=\\iint_S\\overrightarrow  B\\cdot\\mathrm d\\overrightarrow S$$ ### 3.2 \u78c1\u573a\u4e2d\u7684\u9ad8\u65af\u5b9a\u7406 ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202410051707525.png) ### 3.3 \u5b89\u57f9\u73af\u8def\u5b9a\u7406 \u5728\u78c1\u573a\u4e2d\uff0c\u6cbf\u4efb\u4f55\u95ed\u5408\u66f2\u7ebf\uff0cB\u77e2\u91cf\u7684\u7ebf\u79ef\u5206\uff08\u6216B\u77e2\u91cf\u7684\u73af\u6d41\uff09\uff0c\u7b49\u4e8e\u771f\u7a7a\u7684\u78c1\u5bfc\u7387$\\mu_0$\u4e58\u4ee5\u7a7f\u8fc7\u8fd9\u4e2a\u95ed\u5408\u66f2\u7ebf\u4e3a\u8fb9\u754c\u6240\u5f20\u4efb\u610f\u66f2\u9762\u7684\u5404\u6052\u5b9a\u7535\u6d41\u7684\u4ee3\u6570\u548c $$\\oint_L\\overrightarrow B\\cdot \\mathrm d \\overrightarrow l=\\mu_0\\sum I$$ ### 3.4 \u5b89\u57f9\u73af\u8def\u5b9a\u7406\u7684\u5e94\u7528 #### 3.4.1 \u957f\u76f4\u5706\u67f1\u5f62\u8f7d\u6d41\u5bfc\u7ebf\u5185\u5916\u7684\u78c1\u573a ![image.png](https://cdn.jsdelivr.net/gh/hhhjyz/photos@main/202410091544672.png) - \u5f53r&gt;R\u65f6\uff0c$B=\\frac {\\mu_0}{2\\pi}\\frac Ir$ - \u5f53r&lt;R\u65f6\uff0c\u82e5\u7535\u6d41\u5728\u5706\u67f1\u5f62\u7684\u5bfc\u4f53\u622a\u9762\u4e0a\u5747\u5300\u5206\u5e03\uff0c$B=\\frac{\\mu_0}{2\\pi}\\frac{Ir}{R^2}$ #### 3.4.2 \u8f7d\u6d41\u87ba\u7ed5\u73af\u5185\u7684\u78c1\u573a $$B=\\frac{\\mu_0NI}{2\\pi r}$$  #### 3.4.3 \u8f7d\u6d41\u957f\u76f4\u87ba\u7ebf\u7ba1\u5185\u7684\u78c1\u573a $$B=\\mu_0nI\\]"},{"location":"note/courses/physics/physics/#4_2","title":"4 \u6d1b\u4f26\u5179\u529b","text":"\\[F_m=q\\overrightarrow v\\times \\overrightarrow B\\]"},{"location":"note/courses/physics/physics/#5_2","title":"5 \u78c1\u573a\u5bf9\u7535\u6d41\u7684\u4f5c\u7528","text":""},{"location":"note/courses/physics/physics/#51_2","title":"5.1 \u5b89\u57f9\u529b","text":"\\[\\overrightarrow F=\\int_L I\\mathrm d \\overrightarrow l \\times\\overrightarrow B \\]"},{"location":"note/courses/physics/physics/#52_2","title":"5.2 \u5e73\u884c\u957f\u76f4\u8f7d\u6d41\u5bfc\u7ebf\u95f4\u7684\u76f8\u4e92\u4f5c\u7528\u529b","text":"<p>\u7b2c\u4e94\u5468\u4f5c\u4e1a 15-19 15-22 19-1 19-2 19-9 19-10</p>"},{"location":"note/courses/physics/physics/#53_2","title":"5.3 \u78c1\u573a\u5bf9\u5e73\u9762\u8f7d\u6d41\u7ebf\u5708\u7684\u4f5c\u7528","text":"<p> \\(\\overrightarrow p_m=NIS\\)\u4e3a\u8f7d\u6d41\u7ebf\u5708\u7684\u78c1\u77e9\uff0c\u65b9\u5411\u4e3a\u8f7d\u6d41\u7ebf\u5708\u6cd5\u5411\u91cf\u65b9\u5411\\(\\(\\overrightarrow M=\\overrightarrow p_m\\times \\overrightarrow B\\)\\)</p>"},{"location":"note/courses/physics/physics/#6_1","title":"6 \u78c1\u529b\u505a\u529f","text":""},{"location":"note/courses/physics/physics/#61","title":"6.1 \u8f7d\u6d41\u5bfc\u5411\u5728\u78c1\u573a\u4e2d\u8fd0\u52a8\u662f\u78c1\u529b\u6240\u4f5c\u7684\u529f","text":"<p>\\(\\(A=I\\Delta\\Phi\\)\\) \u78c1\u529b\u6240\u4f5c\u7684\u529f\u7b49\u4e8e\u7535\u6d41\u4e58\u4ee5\u78c1\u901a\u91cf\u7684\u53d8\u5316</p>"},{"location":"note/courses/physics/physics/#62","title":"6.2 \u8f7d\u6d41\u7ebf\u5708\u5728\u5300\u5f3a\u78c1\u573a\u4e2d\u8f6c\u52a8\u65f6\u78c1\u529b\u6240\u4f5c\u7684\u529f","text":"\\[A=I\\Delta\\Phi\\]"},{"location":"note/courses/physics/physics/#7","title":"7 \u5e26\u7535\u7c92\u5b50\u5728\u7535\u573a\u548c\u78c1\u573a\u4e2d\u7684\u8fd0\u52a8","text":""},{"location":"note/courses/physics/physics/#chapter16","title":"Chapter16 \u7269\u8d28\u4e2d\u7684\u78c1\u573a","text":"<p>\u78c1\u5316\u5f3a\u5ea6 M= \\(\\frac {\\sum p_m}{\\Delta V}\\)</p>"},{"location":"note/courses/physics/physics/#1_4","title":"1 \u78c1\u4ecb\u8d28\u7684\u78c1\u5316","text":"<p>\u78c1\u4ecb\u8d28\u5728\u5916\u78c1\u573a\u4f5c\u7528\u4e0b\u80fd\u591f\u83b7\u5f97\u78c1\u77e9\u7684\u73b0\u8c61\u79f0\u4e3a\u78c1\u4ecb\u8d28\u7684\u78c1\u5316\uff0c\u78c1\u5316\u540e\u7684\u78c1\u4ecb\u8d28\u4ea7\u751f\u7684\u9644\u52a0\u78c1\u573a\\(B'\\)\u548c\u7535\u6d41\u4ea7\u751f\u7684\u78c1\u573a\\(B_0\\)\u53e0\u52a0\u5728\u4e00\u8d77\uff0c\u4fbf\u4ea7\u751f\u5408\u78c1\u573a\\(B=B_0+B'\\)</p>"},{"location":"note/courses/physics/physics/#2_3","title":"2 \u675f\u7f1a\u7535\u6d41\u4e0e\u78c1\u5316\u5f3a\u5ea6\u7684\u5173\u7cfb","text":"<p>\\(j_m\\): \u78c1\u4ecb\u8d28\u8868\u9762\u5355\u4f4d\u957f\u5ea6\u4e0a\u7684\u675f\u7f1a\u7535\u6d41 \\(\\oint_LM\\cdot \\mathrm d l = j_m \\cdot \\overline{ab}=I_m\\) \u8fd9\u91cc\u7684\\(I_m\\)\u662f\u901a\u8fc7\u95ed\u5408\u56de\u8def\u7684\u675f\u7f1a\u7535\u6d41</p>"},{"location":"note/courses/physics/physics/#3_3","title":"3 \u78c1\u573a\u5f3a\u5ea6\u4e0e\u78c1\u4ecb\u8d28\u4e2d\u7684\u5b89\u57f9\u73af\u8def\u5b9a\u7406","text":"<p>\u78c1\u573a\u5f3a\u5ea6\\(H=\\frac B {\\mu_0} - M\\) \\(\\(\\oint_L H\\cdot \\mathrm d l=\\sum_{L\u5185} I\\)\\)</p> \\[M=\\chi_mH\\] \\[H=\\frac{B}{\\mu_0\\mu}\\] <p>[!note] \u78c1\u4ecb\u8d28\u4e0e\u7535\u4ecb\u8d28\u7684\u5bf9\u6bd4  </p>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/","title":"\u7eea\u8bba","text":""},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#1","title":"1 \u6d4b\u91cf","text":"<p>\u6d4b\u91cf\u56db\u8981\u7d20\uff1a \u88ab\u6d4b\u5bf9\u8c61\uff0c\u6d4b\u91cf\u7a0b\u5e8f\uff0c\u6d4b\u91cf\u51c6\u786e\u5ea6\uff0c\u8ba1\u91cf\u5355\u4f4d</p> <p>\u6d4b\u91cf\u8bfe\u5206\u4e3a\u76f4\u63a5\u6d4b\u91cf\u548c\u95f4\u63a5\u6d4b\u91cf</p>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#2","title":"2 \u8bef\u5dee","text":"<p>\u6982\u5ff5\uff1a\u6d4b\u91cf\u503c\u4e0e\u771f\u503c\u4e4b\u5dee\u88ab\u79f0\u4e3a\u8bef\u5dee</p> <p>Note</p> <p>\u9519\u8bef\u662f\u53ef\u4ee5\u907f\u514d\u7684\uff0c\u800c\u8bef\u5dee\u662f\u4e0d\u53ef\u4ee5\u907f\u514d\u7684</p> <ul> <li>\u7edd\u5bf9\u8bef\u5dee\uff1a\u7edd\u5bf9\u8bef\u5dee=\u6d4b\u91cf\u503c-\u771f\u503c</li> <li>\u76f8\u5bf9\u8bef\u5dee\uff1a$\u76f8\u5bf9\u8bef\u5dee=\\frac{|\u6d4b\u91cf\u503c-\u771f\u503c|}{\u771f\u503c}\\times 100% $</li> <li>\u6807\u51c6\u8bef\u5dee\uff1a\\(\u6807\u51c6\u8bef\u5dee=\\sqrt{\\frac{1}{n-1}\\sum_{i=1}^{n}|\u7edd\u5bf9\u8bef\u5dee|^2}\\) </li> </ul>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#21","title":"2.1 \u8bef\u5dee\u5206\u7c7b","text":""},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#211","title":"2.1.1 \u7cfb\u7edf\u8bef\u5dee","text":"<p>\u5728\u540c\u7b49\u6761\u4ef6\u4e0b\u6d4b\u91cf\uff0c\u5bf9\u540c\u4e00\u4e2a\u5f85\u6d4b\u91cf\u8fdb\u884c\u591a\u6b21\u6d4b\u91cf\uff0c\u6d4b\u91cf\u91cf\u548c\u771f\u503c\u7684\u504f\u79bb\u603b\u662f\u76f8\u540c\u7684\u90a3\u4e00\u90e8\u5206\u8bef\u5dee\u5206\u91cf\u88ab\u79f0\u4f5c\u5df2\u5b9a\u7cfb\u7edf\u8bef\u5dee</p> <p>\u6709\u4e9b\u60c5\u51b5\u4e0b\uff0c\u4e0d\u77e5\u9053\u786e\u5207\u7684\u7cfb\u7edf\u8bef\u5dee\u503c\uff0c\u53ea\u77e5\u9053\u5b83\u5904\u4e8e\u4e00\u4e2a\u8303\u56f4\uff0c\u8fd9\u79cd\u7cfb\u7edf\u8bef\u5dee\u88ab\u79f0\u4e3a\u672a\u5b9a\u7cfb\u7edf\u8bef\u5dee</p> <p>\u7cfb\u7edf\u8bef\u5dee\u6709\u89c4\u5f8b\u6027\u53ef\u901a\u8fc7\u5b9e\u9a8c\u65b9\u6cd5\u6216\u5f15\u5165\u4fee\u6b63\u503c\u529e\u6cd5\u8fdb\u884c\u4fee\u6b63</p>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#212","title":"2.1.2 \u968f\u673a\u8bef\u5dee\uff08\u5076\u7136\u8bef\u5dee\uff09","text":"<p>\u968f\u673a\u8bef\u5dee\u662f\u4e0d\u53ef\u4fee\u6b63\u7684\uff0c\u4f46\u53ef\u4ee5\u901a\u8fc7\u591a\u6b21\u6d4b\u91cf\u6765\u51cf\u5c11\u5b83\u7684\u5f71\u54cd</p>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#213","title":"2.1.3 \u7c97\u5927\u8bef\u5dee\uff08\u8fc7\u5931\u8bef\u5dee\uff09","text":"<p>\u7c97\u5927\u8bef\u5dee\u662f\u660e\u663e\u8d85\u51fa\u89c4\u5b9a\u5b9e\u9a8c\u6761\u4ef6\u4e0b\u9884\u671f\u7684\u8bef\u5dee\uff0c\u5728\u5b9e\u9a8c\u6570\u636e\u4e2d\u51fa\u73b0\u5f02\u5e38\u6570\u636e\uff0c\u5e94\u5bf9\u5176\u8fdb\u884c\u79d1\u5b66\u7684\u8bc4\u4f30\uff0c\u4ee5\u51b3\u5b9a\u662f\u5426\u5254\u9664</p>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#22","title":"2.2 \u6d4b\u91cf\u8bef\u5dee \u5206\u5e03","text":""},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#221","title":"2.2.1 \u6b63\u6001\u5206\u5e03","text":"<p>\u968f\u673a\u8bef\u5dee\u6b63\u6001\u5206\u5e03\u7684\u89c4\u5f8b\uff1a</p> <ul> <li>\u5355\u5cf0\u6027\uff1a \u7edd\u5bf9\u503c\u5c0f\u7684\u8bef\u5dee\u51fa\u73b0\u7684\u53ef\u80fd\u6027\u5927\uff0c\u7edd\u5bf9\u503c\u5927\u7684\u8bef\u5dee\u51fa\u73b0\u7684\u53ef\u80fd\u6027\u5c0f</li> <li>\u5bf9\u79f0\u6027</li> <li>\u6709\u754c\u6027</li> <li>\u62b5\u507f\u6027</li> </ul>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#222","title":"2.2.2 \u5747\u5300\u5206\u5e03","text":""},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#23","title":"2.3 \u6d4b\u91cf\u7ed3\u679c\u8868\u8fbe\u5f0f","text":"<p>\u6d4b\u91cf\u7ed3\u679c\u7684\u5b8c\u6574\u8868\u8fbe\u5f0f\u5305\u62ec\u4e09\u4e2a\u8981\u7d20\uff1a\u6d4b\u5f97\u503c\\(\\overline X\\),\u4e0d\u786e\u5b9a\u5ea6\\(u\\)\uff0c\u5355\u4f4d \\(\\(X=\\overline X\\pm u(\u5355\u4f4d)\\)\\)</p>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#24","title":"2.4 \u7cbe\u5bc6\u5ea6\u3001\u51c6\u786e\u5ea6\u548c\u6b63\u786e\u5ea6","text":"<ul> <li>\u7cbe\u5bc6\u5ea6\uff1a \u5404\u6b21\u6d4b\u91cf\u7684\u6570\u636e\u5927\u5c0f\u5f7c\u6b64\u63a5\u8fd1\u7684\u7a0b\u5ea6</li> <li>\u6b63\u786e\u5ea6\uff1a \u6d4b\u91cf\u6570\u636e\u7684\u5e73\u5747\u503c\u504f\u79bb\u771f\u503c\u7684\u7a0b\u5ea6</li> <li>\u51c6\u786e\u5ea6\uff1a \u6d4b\u91cf\u6570\u636e\u96c6\u4e2d\u4e8e\u771f\u503c\u9644\u8fd1\u7684\u7a0b\u5ea6</li> </ul>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#25","title":"2.5 \u5e38\u7528\u4eea\u5668\u8bef\u5dee","text":"<ul> <li>\u4eea\u5668\u5206\u8fa8\u529b</li> <li>\u4eea\u5668\u793a\u503c\u8bef\u5dee\uff1a\u6b63\u5e38\u4f7f\u7528\u4e0b\u4eea\u5668\u793a\u503c\u4e0e\u5bf9\u5e94\u8f93\u5165\u91cf\u7684\u53c2\u8003\u503c\u4e4b\u5dee</li> <li>\u4eea\u5668\u7684\u6807\u5c3a\u95f4\u9694\uff1a\u5206\u5ea6\u503c\uff0c\u5bf9\u5e94\u4e24\u76f8\u90bb\u6807\u5c3a\u6807\u8bb0\u7684\u4e24\u4e2a\u503c\u4e4b\u5dee</li> <li>\u7075\u654f\u9608\uff1a \u4eea\u5668\u6307\u793a\u6709\u4e86 \u521a\u521a\u53ef\u4ee5\u89c2\u5bdf\u5230\u7684\u53d8\u5316\u65f6\uff0c\u5bf9\u5e94\u7684\u7269\u7406\u91cf\u7684\u53d8\u5316\u7684\u5927\u5c0f</li> </ul>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#3","title":"3 \u4e0d\u786e\u5b9a\u5ea6","text":""},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#31-a","title":"3.1 A\u7c7b\u4e0d\u786e\u5b9a\u5ea6","text":"\\[u_a=\\sqrt{\\frac{1}{n(n-1)}\\sum_{i=1}^n(x-\\overline x)^2}\\]"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#32-b","title":"3.2 B\u7c7b\u4e0d\u786e\u5b9a\u5ea6","text":"\\[u_b=\\frac{\\Delta_\u4eea}{\\sqrt 3}\\]"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#33","title":"3.3 \u5408\u6210\u6807\u51c6\u4e0d\u786e\u5b9a\u5ea6","text":"<p>\u5bf9Y\u7684\u6d4b\u91cf\u4e3a\u76f4\u63a5\u6d4b\u91cf\u65f6\uff1a</p> \\[u_c^2(y)=u_A^2+u_B^2\\] <p>Note</p> <p>\u82e5\u6709\u51fd\u6570\\(Y=f(X_1,X_2,......,X_N)\\),\u5f53\\(X_i\\)\u5f7c\u6b64\u4e0d\u76f8\u5173\u65f6\uff0c\u5408\u6210\u6807\u51c6\u4e0d\u786e\u5b9a\u5ea6\uff1a</p> \\[u_c(y)=\\sum_{i=1}^{N}(\\frac{\\partial f}{\\partial x_i})^2u_{x_i}^2(\u9002\u7528\u4e8e\u548c\u5dee\u5f62\u5f0f\u7684\u51fd\u6570)\\] \\[\\frac{u_c(y)}y=\\sum_{i=1}^{N}(\\frac{\\partial \\mathrm {ln}f}{\\partial x_i})^2u_{x_i}^2(\u9002\u7528\u4e8e\u79ef\u5546\u5f62\u5f0f\u7684\u51fd\u6570)\\]"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#4","title":"4 \u6709\u6548\u6570\u5b57","text":"<ul> <li>\u53ef\u9760\u6570\u5b57\uff1a\u901a\u8fc7\u76f4\u63a5\u8bfb\u83b7\u5f97\u7684\u51c6\u786e\u6570\u5b57</li> <li>\u5b58\u7591\u6570\u5b57\uff1a\u901a\u8fc7\u4f30\u8bfb\u5f97\u5230\u7684\u6570\u5b57</li> <li>\u6709\u6548\u6570\u5b57\uff1a\u5e26\u6709\u4e00\u4f4d\u5b58\u7591\u6570\u5b57\u7684\u5168\u90e8\u6570\u5b57</li> </ul>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#41","title":"4.1 \u6709\u6548\u6570\u5b57\u7684\u4fee\u7ea6\u539f\u5219","text":"<p>Example</p> <p>1.\u5982\u679c\u53ea\u6709\u4e00\u4e2a\u4fee\u7ea6\u533a\u95f4\u7684\u6574\u6570\u500d\u6700\u63a5\u8fd1\u5df2\u77e5\u6570\uff0c\u5c31\u9009\u53d6\u8fd9\u4e2a</p> <p>2.\u5982\u679c\u6709\u4e24\u4e2a\u6574\u6570\u500d\u540c\u6837\u63a5\u8fd1\uff0c\u9009\u53d6\u5076\u6570\u500d\uff08\u4f18\u5148\uff09/\u8f83\u5927\u7684\u6574\u6570\u500d</p> <p>3.\u4e0d\u5141\u8bb8\u8fde\u7eed\u4fee\u7ea6</p>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#42","title":"4.2 \u51fd\u6570\u503c\u7684\u6709\u6548\u4f4d\u6570\u8868\u793a","text":"<ul> <li>\u4e09\u89d2\u51fd\u6570\u8ba1\u7b97\u7ed3\u679c\u7684\u6709\u6548\u6570\u5b57\u4e0e\u89d2\u5ea6\u7684\u6709\u6548\u6570\u5b57\u4f4d\u6570\u76f8\u540c</li> <li>\u5bf9\u6570\u7684\u6709\u6548\u6570\u5b57\u4f4d\u6570\uff0c\u5176\u5c3e\u6570\u4e0e\u771f\u6570\u7684\u6709\u6548\u6570\u5b57\u4f4d\u76f8\u540c</li> <li>\u5176\u4ed6\u51fd\u6570\u7684\u6709\u6548\u4f4d\u6570\uff0c\u5c06\u81ea\u53d8\u91cf\u53ef\u7591\u4f4d\u4e0a\u4e0b\u53d8\u52a8\u4e00\u4e2a\u5355\u4f4d\uff0c\u89c2\u5bdf\u51fd\u6570\u7ed3\u679c\u5728\u54ea\u4e00\u4f4d\u4e0a\u53d8\u52a8\uff0c\u5c31\u9009\u53d6\u90a3\u4e00\u4f4d</li> <li>\u6d4b\u91cf\u7ed3\u679c\u7684\u79d1\u5b66\u8868\u793a\u65b9\u6cd5\uff1a\u4e00\u822c\u5c0f\u6570\u70b9\u524d\u53ea\u53d6\u4e00\u4f4d\u6570\u5b57</li> </ul>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#43","title":"4.3 \u6d4b\u91cf\u4e0d\u786e\u5b9a\u5ea6\u7684\u6709\u6548\u4f4d\u6570","text":"<p>\u901a\u5e38\u6700\u591a\u53ea\u80fd\u53d6\u4e24\u4f4d\u6709\u6548\u6570\u5b57</p> <ul> <li>\u6700\u5de6\u8fb9\u7684\u7b2c\u4e00\u4f4d\u975e\u96f6\u6709\u6548\u6570\u5b57\u662f1\u548c2\u65f6\uff0c\u53ef\u53d62\u4f4d\uff0c3\u4ee5\u4e0a\u5219\u53ea\u53ef\u7528\u4e00\u4f4d\u6709\u6548\u6570\u5b57</li> <li>\u4fee\u7ea6\uff1a<ul> <li>\u6b32\u4fdd\u7559\u7684\u6700\u4f4e\u4f4d\u540e\u7684\u4e00\u4f4d\u4e3a0\u5219\u820d\u53bb\uff0c\u5426\u5219\u8fdb\u4f4d</li> </ul> </li> <li>\u6d4b\u91cf\u7ed3\u679c\u7684\u6709\u6548\u4f4d\u6570\u6839\u636e\u6d4b\u91cf\u4e0d\u786e\u5b9a\u5ea6\u7684\u4fee\u7ea6\u533a\u95f4\u6765\u4fee\u7ea6\u6d4b\u91cf\u7ed3\u679c</li> </ul>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#44-i","title":"4.4 \u6709\u6548\u4f4d\u6570\u4e0e\u6362\u7b97\u5355\u4f4di\u6b38","text":"<ul> <li>\u5341\u8fdb\u5236\u8f6c\u6362\u4e0d\u5f71\u54cd</li> <li>\u975e\u5341\u8fdb\u5236\u5355\u4f4d\u53d8\u5316\u4fdd\u6301\u8bef\u5dee\u6240\u5728\u5355\u4f4d\u53d8\u6362\u540e\u8fd8\u662f\u6709\u6548\u6570\u5b57\u7684\u672b\u4f4d</li> </ul>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#45","title":"4.5 \u6709\u6548\u6570\u5b57\u8fd0\u7b97\u6cd5\u5219","text":"<p>\u53ef\u9760\u6570\u4e0e\u5b58\u7591\u6570\u8fd0\u7b97\u4f9d\u7136\u662f\u5b58\u7591\u6570</p>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#451","title":"4.5.1 \u52a0\u51cf\u6cd5\u5219","text":"<p>\u7ed3\u679c\u53ef\u7591\u6570\u5b57\u4f4d\u7f6e\u4e0e\u6700\u5927\u7684\u4f4d\u7f6e\u4fdd\u6301\u4e00\u81f4</p>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#452","title":"4.5.2 \u4e58\u9664\u6cd5\u5219","text":"<p>\u7ed3\u679c\u6709\u6548\u6570\u5b57\u4f4d\u6570\u4e0e\u6709\u6548\u6570\u5b57\u4f4d\u6570\u6700\u5c11\u7684\u76f8\u540c</p>"},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#_2","title":"\u793a\u6ce2\u5668\u7684\u4f7f\u7528","text":""},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#_3","title":"\u5206\u5149\u8ba1\u7684\u8c03\u6574\u4e0e\u4f7f\u7528","text":""},{"location":"note/courses/physics/%E5%A4%A7%E7%89%A9%E5%AE%9E%E9%AA%8C%E6%9C%9F%E6%9C%AB%E5%A4%8D%E4%B9%A0/#1_1","title":"1 \u53cd\u5c04\u6cd5\u6d4b\u91cf\u4e09\u68f1\u955c\u68f1\u89d2","text":"\\[\\angle A=\\frac{|\\angle r1 -\\angle l1|+|\\angle r2-\\angle l2|}{4}\\]"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/","title":"\u5b66\u4e60\u6e05\u5355","text":"<ul> <li>css</li> <li>html</li> <li>ads</li> <li>\u8ba1\u7ec4/cs61c</li> <li>\u9a6c\u539f\u8bfb\u4e66\u62a5\u544a</li> <li>\u8ba8\u8bba\u8bfeppt</li> <li>python</li> <li>machein learning</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#1-2024910","title":"1 2024.9.10","text":"<ul> <li>ads \u9884\u4e60</li> <li>\u8ba1\u7ec4lab0</li> <li>\u5927\u7269\u5b9e\u9a8c\u7b2c\u4e00\u6b21\u9884\u4e60</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#2-2024912","title":"2 2024.9.12","text":"<ul> <li>pta</li> <li>cs61c</li> <li>ads \u6559\u6750+\u7b14\u8bb0\u5b8c\u5584</li> <li>\u6982\u7edf\u4f5c\u4e1a</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#2024916-18","title":"2024.9.16-18","text":"<ul> <li>fds\u590d\u4e60</li> <li>ads\u590d\u4e60+\u9884\u4e60\uff089.20\uff09</li> <li>\u5927\u7269\u7b14\u8bb0\u5b8c\u5584+\u4f5c\u4e1a\u5b8c\u6210</li> <li>\u8ba1\u7ec4lab1\uff089.22\uff09~</li> <li>\u6982\u7edf\u7b14\u8bb0\u5b8c\u5584</li> <li>\u5927\u7269\u5b9e\u9a8c\u9884\u4e60(9.22)</li> <li>\u901a\u6838\u6587\u732e\u9605\u8bfb<ul> <li></li> </ul> </li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#919","title":"9.19","text":"<ul> <li>\u8ba1\u7ec4\u4f5c\u4e1a\uff089.24\uff09</li> <li>\u6982\u7edf\u4f5c\u4e1a\uff089.26\uff09</li> <li>cuda\u548c\u6df1\u5ea6\u5b66\u4e60\u590d\u4e60\u4e00\u4e0b\uff0c\u8d85\u7b97\u961f\u9762\u8bd5\uff089.25\uff09</li> <li>\u5b66\u751f\u4f1a\u62a5\u9500</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#920","title":"9.20","text":"<ul> <li>\u5927\u7269\u4f5c\u4e1a\uff089.26\uff09</li> <li>\u5927\u5b66\u4e0e\u6587\u5316\u4f20\u627f\u7ebf\u4e0a\u89c6\u9891</li> <li>\u5927\u7269\u5c0f\u6d4b</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#921","title":"9.21","text":"<ul> <li>ads\u4f5c\u4e1a+\u7b14\u8bb0\u5b8c\u5584</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#922","title":"9.22","text":"<ul> <li>ads \u9884\u4e60</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#925","title":"9.25","text":"<ul> <li>\u901a\u6838\u8bba\u6587\u9605\u8bfb</li> <li>ads\u4f5c\u4e1a</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#926","title":"9.26","text":"<ul> <li>\u6982\u7edf\u4f5c\u4e1a</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#_1","title":"\u56fd\u5e86\u4efb\u52a1","text":"<ul> <li>\u5927\u7269\u5b9e\u9a8c\u62a5\u544a\u5b9e\u9a8c\u6570\u636e\u5904\u7406</li> <li>~~\u5927\u7269\u7535\u573a\u548c\u78c1\u573a10.11  ~~ 1</li> <li>\u5927\u5b66\u4e0e\u6587\u5316\u4f20\u627f\u6587\u732e\u9605\u8bfb+PPT\u5236\u4f5c10.205 10.12\u505a</li> <li>\u8ba1\u7ec4\u590d\u4e60+lab2(10.13)3 10.11\u505a</li> <li>\u952e\u76d8\u4e50\u827a\u672f\u53f2\u5c55\u793a</li> <li>\u8367\u5149\u591c\u8dd1\u7b56\u5212\u6848</li> <li>(10.12)\u5927\u7269\u5b9e\u9a8c\u62a5\u544a\u9884\u4e602</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#108","title":"10.8","text":"<ul> <li>ads\u7b14\u8bb0\u68b3\u7406+\u4f5c\u4e1a(10.13)4 10.12\u505a</li> <li>\u8ba1\u7ec4lab3\uff0810.286 \u5b9e\u9a8c\u62a5\u544a</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#109","title":"10.9","text":"<ul> <li>\u6982\u7edf\u7b14\u8bb0\u68b3\u7406+\u4f5c\u4e1a</li> <li>\u591c\u8dd1\u62a5\u540d\u8868</li> <li>\u9762\u8bd5\u5b98\u95ee\u5377</li> <li>\u5927\u7269\u5b9e\u9a8c\u62a5\u544a10.1410.11\u505a </li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#10-17","title":"10-17","text":"<ul> <li>\u8ba1\u7ec4\u4f5c\u4e1a\uff0810.28\uff09 <p>3.7,3.20,3.26,3.27,3.32</p> </li> <li>\u5927\u7269\u4f5c\u4e1a</li> <li>\u901a\u6838ppt\uff08\u5468\u4e94\u5b8c\u621010.18\uff09</li> <li>\u6982\u7edf\u7b14\u8bb0\u6574\u7406<sub>~</sub><sub>\u4e0e</sub>~\u4f5c\u4e1a</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#1020","title":"10.20","text":"<ul> <li> ads </li> <li> \u5927\u7269\u5b9e\u9a8c\u62a5\u544a\u8865\u5168+\u9884\u4e60</li> <li> \u7b2c\u4e00\u7248ppt==1==</li> <li> \u5927\u7269\u5c0f\u6d4b\u590d\u4e60==3==</li> <li> \u9a6c\u539f\u5c55\u793a\u8d44\u6599\u67e5\u627e</li> <li> \u8ba1\u7ec4\u4f5c\u4e1a==4== <p>2.4,2.8,2.12, 2.14,2.17,2.22,2.24,2.29 </p> </li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#1022","title":"10.22","text":"<ul> <li> ads \u4f5c\u4e1a==2==</li> <li> \u8ba1\u7ec4lab4</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#1028","title":"10.28","text":"<ul> <li> \u8ba1\u7ec4\u671f\u4e2d\u8003\u590d\u4e60<ul> <li> Ch1</li> <li> Ch2</li> <li> Ch3</li> <li> Ch4</li> </ul> </li> <li> \u5927\u7269\u671f\u4e2d\u8003\u590d\u4e60<ul> <li> \u7535\u5b66</li> <li> \u78c1\u5b66</li> <li> \u5386\u5e74\u9898</li> </ul> </li> <li> \u901a\u6838ppt\u5b8c\u5584</li> <li> ads project</li> <li> ads\u671f\u4e2d\u8003</li> <li> \u8ba1\u7ec4lab4</li> <li> \u9a6c\u539f\u8d44\u6599\u6574\u7406</li> <li> \u6982\u7edf\u4f5c\u4e1a</li> <li> \u5927\u7269\u4f5c\u4e1a</li> <li> \u5927\u7269\u5b9e\u9a8c\u62a5\u544a\uff08\u9884\u4e60+\u6284\u5199\uff09</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#117","title":"11.7","text":"<ul> <li> \u8ba1\u7ec4lab4 ddl 11.26</li> <li> \u8ba1\u7ec4\u671f\u4e2d\u8003\u590d\u4e60 11.18</li> <li> ads\u671f\u4e2d\u8003\u590d\u4e60 11.13</li> <li> \u901a\u6838\u5927\u4f5c\u4e1a \uff08\u672a\u77e5\uff09\u8d44\u6599\u641c\u7d22</li> <li> \u901a\u6838\u7b2c\u4e8c\u6b21\u5c55\u793a 11.28</li> <li> ads pre 11.12</li> <li> ads \u4f5c\u4e1a</li> <li> \u6982\u7edf\u4f5c\u4e1a 11.14</li> <li> <p> \u9a6c\u539f\u5c55\u793a\u8d44\u6599\u51c6\u5907 \u8fd9\u4e24\u5929</p> </li> <li> <p> lab4 \u5b9e\u9a8c\u62a5\u544a</p> </li> <li> \u5927\u7269\u81ea\u5b66\u5230\u7b2c\u4e5d\u5468\u5185\u5bb9</li> <li> ads\u9884\u4e60</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#1113","title":"11.13","text":"<ul> <li> ads\u4f5c\u4e1a</li> <li> \u5927\u7269\u4f5c\u4e1a+\u590d\u4e60</li> <li> \u5927\u7269\u5b9e\u9a8c\u62a5\u544a</li> <li> </li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#1115","title":"11.15","text":"<ul> <li> \u8ba1\u7ec4\uff084.1\uff0c4.4 \uff0c4.6\uff0c4.9\uff0c4.11\uff0c4.16\uff0c4.18\uff0c4.20\uff0c4.21\uff0c4.25\uff09</li> <li> \u8ba1\u7ec4lab4\u5b9e\u9a8c\u62a5\u544a</li> <li> \u6982\u7edf\u4f5c\u4e1a</li> <li> \u5927\u5b66 pre2</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#1118","title":"11.18","text":"<ul> <li> \u6982\u7edf\u590d\u4e60</li> <li> ads\u4f5c\u4e1a</li> <li> \u9a6c\u539f<sub>~\u8bfb\u4e66\u95ee\u9898</sub>~\uff0c\u8bfb\u4e66\u62a5\u544a\uff08\u7b2c14\u5468\u4e4b\u524d\uff09</li> </ul>"},{"location":"note/courses/physics/assets/%E5%AD%A6%E4%B9%A0%E6%B8%85%E5%8D%95/#_2","title":"\u957f\u671f\u91cd\u8981\u4e8b\u9879","text":"<ul> <li> \u5927\u7269\u671f\u4e2d\u8003</li> <li> \u7b2c\u4e8c\u7248ppt</li> <li> \u62a5\u9500</li> <li>ads project/\u9884\u4e60</li> <li>CO labs</li> <li>\u8d85\u7b97,cuda\uff0cgo</li> <li>python</li> <li>c++</li> <li>machine learning</li> <li>\u82f1\u8bed\u5b66\u4e60</li> <li>go</li> </ul>"},{"location":"note/courses/probility/Chapter%201/","title":"Chapter 1","text":""},{"location":"note/courses/probility/Chapter%201/#1","title":"1 \u6837\u672c\u7a7a\u95f4\uff0c\u968f\u673a\u4e8b\u4ef6","text":"<p>\u968f\u673a\u73b0\u8c61\u6307\u7684\u662f\u5177\u6709\u591a\u79cd\u53ef\u80fd\u7684\u7ed3\u679c\uff0c\u5728\u4e00\u6b21\u8bd5\u9a8c\u4e2d\u65e0\u6cd5\u9884\u77e5\u54ea\u4e2a\u7ed3\u679c\u4f1a\u53d1\u751f\uff0c\u4f46\u5728\u5927\u91cf\u91cd\u590d\u8bd5\u9a8c\u4e2d\u5176\u7ed3\u679c\u53c8\u5448\u73b0\u4e00\u5b9a \u89c4\u5f8b\u6027\u7684\u73b0\u8c61 \u5bf9\u968f\u673a\u73b0\u8c61\u4f5c\u4e00\u6b21\u89c2\u5bdf\u79f0\u4e3a\u968f\u673a\u8bd5\u9a8c\uff1a - \u53ef\u4ee5\u5728\u76f8\u540c\u7684\u6761\u4ef6\u4e0b\u91cd\u590d\u8fdb\u884c - \u6bcf\u6b21\u8bd5\u9a8c\u53ef\u80fd\u51fa\u73b0\u7684\u7ed3\u679c\u662f\u4e0d\u786e\u5b9a\u7684\uff0c\u4f46\u80fd\u4e8b\u5148\u77e5\u9053\u4e8b\u4ef6\u7684\u6240\u6709\u53ef\u80fd\u7ed3\u679c \u79f0\u968f\u673a\u8bd5\u9a8c\u7684\u6240\u6709\u53ef\u80fd\u7ed3\u679c\u6784\u6210\u7684\u96c6\u5408\u4e3a\u6837\u672c\u7a7a\u95f4\uff0c\u8bb0\u4e3a\\(S\\),\u6837\u672c\u7a7a\u95f4\u4e2d\u7684\u6bcf\u4e00\u4e2a\u5143\u7d20\uff0c\u5373\u8bd5\u9a8c\u7684\u6bcf\u4e00\u4e2a\u7ed3\u679c\u79f0\u4e3a\u6837\u672c\u70b9 \u968f\u673a\u4e8b\u4ef6\uff1a \u6837\u672c\u7a7a\u95f4\u7684\u4efb\u4e00\u5b50\u96c6 \u57fa\u672c\u4e8b\u4ef6\uff1a\u53ea\u542b\u6709\u4e00\u4e2a\u6837\u672c\u70b9\u7684\u5b50\u96c6</p>"},{"location":"note/courses/probility/Chapter%201/#11","title":"1.1 \u4e8b\u4ef6\u7684\u76f8\u4e92\u5173\u7cfb\u53ca\u8fd0\u7b97","text":""},{"location":"note/courses/probility/Chapter%201/#111","title":"1.1.1 \u4e8b\u4ef6\u7684\u5305\u542b\u4e0e\u76f8\u7b49","text":""},{"location":"note/courses/probility/Chapter%201/#112","title":"1.1.2 \u4e8b\u4ef6\u7684\u8fd0\u7b97","text":"<ul> <li>\u548c\u4e8b\u4ef6\uff1a\\(A\\cup B\\)</li> <li>\u79ef\u4e8b\u4ef6\uff1a\\(A\\cap B\\)</li> <li>\u9006\u4e8b\u4ef6\uff1a\\(\\overline A\\)</li> <li>\u5dee\u4e8b\u4ef6\uff1a\\(A-B\\)</li> </ul>"},{"location":"note/courses/probility/Chapter%201/#2","title":"2 \u9891\u7387\u4e0e\u6982\u7387","text":""},{"location":"note/courses/probility/Chapter%201/#21","title":"2.1 \u9891\u7387","text":"<p>\\(f_n(A)=\\frac {n_A} n\\)</p>"},{"location":"note/courses/probility/Chapter%201/#22","title":"2.2 \u6982\u7387","text":"<p>\\(P(A)=p\\) \\(p\\)\u4e3a\\(A\\)\u7684\u9891\u7387\\(f_n(A)\\)\u7684\u7a33\u5b9a\u503c \u5b9a\u4e49\uff1a \u5bf9\u6837\u672c\u7a7a\u95f4\\(S\\)\u4e2d\u4efb\u4e00\u4e8b\u4ef6\\(A\\),\u5b9a\u4e49\u4e00\u4e2a\u5b9e\u6570\\(P(A)\\),\u5982\u679c\u6ee1\u8db3\u4ee5\u4e0b\u4e09\u6761\uff1a - \u975e\u8d1f\u6027\uff1a\\(P(A)\\geqslant 0\\) - \u89c4\u8303\u6027\uff1a\\(P(S)=1\\) - \u53ef\u5217\u53ef\u52a0\u6027\uff1a\u82e5\\(A_1,A_2,\\cdots,A_k,\\cdots\\)\u4e24\u4e24\u4e0d\u76f8\u5bb9\uff0c\u5219\\(P(\\bigcup_{i=1}^{\\infty}{A_i})=\\sum_{i=1}^{\\infty}P(A_i)\\) \u5219\u79f0\\(P(A)\\)\u4e3a\u4e8b\u4ef6A\u7684\u6982\u7387</p> <ul> <li>\u5bf9\u4e8e\u6709\u9650\u4e2a\u4e24\u4e24\u4e0d\u76f8\u5bb9\u7684\u4e8b\u4ef6\u7684\u548c\u4e8b\u4ef6\uff0c\u6709 \\(\\(P({\\bigcup_{j=1}^{n}A_j})=\\sum_{j=1}^{n}P(A_i)\\)\\)</li> <li>\\(P(A)=1-P(\\overline A)\\)</li> <li>\u5f53\\(A\\supset B\\)\u65f6\uff0c\\(P(A-B)=P(A)-P(B)\\)</li> <li>\u6982\u7387\u7684\u52a0\u6cd5\u516c\u5f0f\uff1a \\(\\(P(\\bigcup_{j=1}^{n}A_j)=\\sum_{j=1}^{n}P(A_j)-\\sum_{i&lt;j}P(A_iA_j)+\\sum_{i&lt;j&lt;k}P(A_iA_jA_k)-\\cdots+(-1)_{n-1}P(A_1A_2\\cdots A_n),n\\geqslant 1\\)\\)</li> </ul>"},{"location":"note/courses/probility/Chapter%201/#3","title":"3 \u7b49\u53ef\u80fd\u6982\u578b","text":"<p>\u5b9a\u4e49: - \\(S\\)\u4e2d\u6837\u672c\u70b9\u6709\u9650\uff08\u6709\u9650\u6027\uff09 - \u51fa\u73b0\u6bcf\u4e00\u6837\u672c\u70b9\u7684\u6982\u7387\u76f8\u7b49\uff08\u7b49\u53ef\u80fd\u6027\uff09 \u5b9e\u9645\u63a8\u65ad\u539f\u7406 \u6982\u7387\u5f88\u5c0f\u7684\u4e8b\u4ef6\u5728\u4e00\u6b21\u8bd5\u9a8c\u4e2d\u5b9e\u9645\u4e0a\u51e0\u4e4e\u662f\u4e0d\u53d1\u751f\u7684</p>"},{"location":"note/courses/probility/Chapter%201/#4","title":"4 \u6761\u4ef6\u6982\u7387","text":"<p>\u5b9a\u4e49\uff1a\u5982\u679c\\(P(B)&gt;0\\),\u90a3\u4e48\u5728B\u53d1\u751f\u7684\u6761\u4ef6\u4e0bA\u53d1\u751f\u7684\u6761\u4ef6\u6982\u7387\u4e3a\\(\\(P(A|B)=\\frac {P(AB)}{P(B)}\\)\\)</p>"},{"location":"note/courses/probility/Chapter%201/#41","title":"4.1 \u4e58\u6cd5\u516c\u5f0f","text":"\\[P(A_1A_2\\cdots A_n)=P(A_1)P(A_2|A_1)P(A_3|A_1A_2)\\cdots P(A_n|A_1\\cdots A_{n-1})\\]"},{"location":"note/courses/probility/Chapter%201/#5-bayes","title":"5 \u5168\u6982\u7387\u516c\u5f0f\u548cbayes\u516c\u5f0f","text":"<p> \u5168\u6982\u7387\u516c\u5f0f\uff1a \\(\\(P(A)=\\sum_{j=1}^nP(B_j)P(A|B_j)\\)\\) \u8d1d\u53f6\u65af\u516c\u5f0f\uff1a \\(\\(P(B_k|A)=\\frac {P(B_kA)}{P(A)}=\\frac{P(B_k)P(A|B_k)}{\\sum_{j=1}^{n}P(B_j)P(A|B_j)}\\)\\)</p>"},{"location":"note/courses/probility/Chapter%201/#6","title":"6 \u72ec\u7acb\u6027","text":"<p>  \u5e76\u4e8b\u4ef6\u8f6c\u5316\u4e3a\u4ea4\u4e8b\u4ef6\\(\\rightarrow\\)\u53d6\u53cd \u72ec\u7acb\u8bd5\u9a8c: \u6307\u4efb\u4e00\u6b21\u5b50\u8bd5\u9a8c\u51fa\u73b0\u7684\u7ed3\u679c\u90fd\u4e0d\u5f71\u54cd\u5176\u4ed6\u5404\u5b50\u8bd5\u9a8c\u51fa\u73b0\u7684\u7ed3\u679c \u91cd\u590d\u8bd5\u9a8c\uff1a\u5982\u679c\u5404\u5b50\u8bd5\u9a8c\u662f\u5728\u76f8\u540c\u6761\u4ef6\u4e0b\u8fdb\u884c\u7684</p>"},{"location":"note/courses/probility/Chapter%202/","title":"Chapter 2","text":""},{"location":"note/courses/probility/Chapter%202/#1","title":"1 \u968f\u673a\u53d8\u91cf","text":"<p>Definition: \u8bbe\u968f\u673a\u8bd5\u9a8c\u7684\u6837\u672c\u7a7a\u95f4\u4e3a\\(S=\\{e\\}\\),\u82e5\\(X=X(e)\\)\u4e3a\u5b9a\u4e49\u5728\u6837\u672c\u7a7a\u95f4\\(S\\)\u4e0a\u7684\u5b9e\u503c\u5355\u503c\u51fd\u6570\uff0c\u5219\u79f0\\(X=X(e)\\)\u4e3a\u968f\u673a\u53d8\u91cf \u5e38\u89c1\u7684\u968f\u673a\u53d8\u91cf\uff1a\u79bb\u6563\u578b\uff0c\u8fde\u7eed\u578b</p>"},{"location":"note/courses/probility/Chapter%202/#2","title":"2 \u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf\u53ca\u5176\u5206\u5e03","text":"<p>Definition     \u53d6\u503c\u81f3\u591a\u53ef\u6570\u7684\u968f\u673a\u53d8\u91cf\u4e3a\u79bb\u6563\u578b\u7684\u968f\u673a\u53d8\u91cf     </p>"},{"location":"note/courses/probility/Chapter%202/#21","title":"2.1 \u51e0\u4e2a\u91cd\u8981\u7684\u79bb\u6563\u578b\u968f\u673a\u53d8\u91cf","text":""},{"location":"note/courses/probility/Chapter%202/#211-0-1","title":"2.1.1 0-1\u5206\u5e03","text":"<p>  \u5bf9\u4e8e\u4e00\u4e2a\u968f\u673a\u8bd5\u9a8c\uff0c\u5982\u679c\u5b83\u7684\u6837\u672c\u7a7a\u95f4\u53ea\u5305\u542b\u4e24\u4e2a\u5143\u7d20\uff0c\u6211\u4eec\u603b\u80fd\u5728\\(S\\)\u4e0a\u5b9a\u4e49\u4e00\u4e2a\u670d\u4ece\uff080-1\uff09\u5206\u5e03\u7684\u968f\u673a\u53d8\u91cf\\(\\(X=X(e)=\\left\\{\\begin{matrix}  0,e=e_1\\\\1,e=e_2 \\end{matrix}\\right.\\)\\)\u6765\u63cf\u8ff0\u968f\u673a\u8bd5\u9a8c\u7684\u7ed3\u679c\uff0c\u8fd9\u79cd\u968f\u673a\u8bd5\u9a8c\u79f0\u4e3aBernoulli\u8bd5\u9a8c</p>"},{"location":"note/courses/probility/Chapter%202/#212","title":"2.1.2 \u4e8c\u9879\u5206\u5e03","text":"<p>n\u91cd\u4f2f\u52aa\u5229\u8bd5\u9a8c </p>"},{"location":"note/courses/probility/Chapter%202/#213","title":"2.1.3 \u6cca\u677e\u5206\u5e03","text":""},{"location":"note/courses/probility/Chapter%202/#214","title":"2.1.4 \u8d85\u51e0\u4f55\u5206\u5e03","text":""},{"location":"note/courses/probility/Chapter%202/#215","title":"2.1.5 \u51e0\u4f55\u5206\u5e03","text":""},{"location":"note/courses/probility/Chapter%202/#216","title":"2.1.6 \u5df4\u65af\u5361\u5206\u5e03","text":""},{"location":"note/courses/probility/Chapter%202/#3","title":"3 \u968f\u673a\u53d8\u91cf\u7684\u5206\u5e03\u51fd\u6570","text":"<p>\u5b9a\u4e49\uff1a \u968f\u673a\u53d8\u91cfX,\u82e5\u5bf9\u4efb\u610f\u5b9e\u6570x\uff0c\u51fd\u6570 \\(F(x)=P(X&lt;x)\\)\u79f0\u4e3aX\u7684\u5206\u5e03\u51fd\u6570 \u4efb\u4f55\u968f\u673a\u53d8\u91cf\u90fd\u6709\u76f8\u5e94\u7684\u5206\u5e03\u51fd\u6570 \u6027\u8d28\uff1a </p>"},{"location":"note/courses/probility/Chapter%202/#4","title":"4 \u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u53ca\u5176\u5bc6\u5ea6\u51fd\u6570","text":"<p>\u5b9a\u4e49\uff1a \u6027\u8d28\uff1a </p>"},{"location":"note/courses/probility/Chapter%202/#41","title":"4.1 \u51e0\u4e2a\u91cd\u8981\u7684\u8fde\u7eed\u578b\u968f\u673a\u53d8\u91cf\u5206\u5e03","text":""},{"location":"note/courses/probility/Chapter%202/#411","title":"4.1.1 \u5747\u5300\u5206\u5e03","text":""},{"location":"note/courses/probility/Chapter%202/#412","title":"4.1.2 \u6307\u6570\u5206\u5e03","text":"<p> \u6307\u6570\u5206\u5e03\u7684\u65e0\u8bb0\u5fc6\u6027 - \u5bf9\u4efb\u4f55\\(S&gt;0,P(X-s&gt;t|X&gt;s)=P(X&gt;t)\\),\u5728\\(X&gt;s\\)\u7684\u6761\u4ef6\u4e0b\uff0c\\(X-s\\)\u4ecd\u7136\u670d\u4ece\u53c2\u6570\u4e3a\\(\\lambda\\)\u7684\u6307\u6570\u5206\u5e03 - \u5982\u679cX\u8868\u793a\u7b49\u5f85\u65f6\u95f4\uff0c\u90a3\u4e48\u65e0\u8bb0\u5fc6\u6027\u8bf4\u660e\u53ea\u8981\u8fd8\u6ca1\u7b49\u5230\uff0c\u90a3\u4e48\u5269\u4f59\u7b49\u5f85\u65f6\u95f4\u4ecd\u7136\u670d\u4ece\u53c2\u6570\u4e3a\\(\\lambda\\)\u7684\u6307\u6570\u5206\u5e03 - \u5982\u679cX\u8868\u793a\u5143\u4ef6\u5bff\u547d\uff0c\u90a3\u4e48\u65e0\u8bb0\u5fc6\u6027\u8bf4\u660e\u53ea\u8981\u8fd8\u6ca1\u574f\u6389\uff0c\u90a3\u4e48\u5269\u4f59\u5bff\u547d\u4ecd\u7136\u670d\u4ece\u53c2\u6570\u4e3a\\(\\lambda\\)\u7684\u6307\u6570\u5206\u5e03</p>"},{"location":"note/courses/probility/Chapter%202/#413","title":"4.1.3 \u6b63\u6001\u5206\u5e03","text":"<p> - \\(f(x)\u5173\u4e8ex=\\mu\u5bf9\u79f0\\) - \\(f_{max}=f(\\mu)=\\frac 1{\\sqrt{2\\pi}\\sigma}\\) - \\(\\displaystyle\\lim_{|x-\\mu|\\rightarrow \\infty}f(x)=0\\) \\(\\(\\begin{align}\u5f53X\\sim N(\\mu,\\sigma^2)\u65f6\\\\P(X\\leq b)=\\Phi(\\frac{b-\\mu}\\sigma)\\\\ \u5373\\frac{X-\\mu}\\sigma\\sim N(0,1)\\end{align}\\)\\)</p>"},{"location":"note/courses/probility/Chapter%202/#5","title":"5 \u968f\u673a\u53d8\u91cf\u51fd\u6570\u7684\u5206\u5e03","text":"<p>\u4e00\u822c\uff0c\u82e5\u5df2\u77e5X\u7684\u6982\u7387\u5206\u5e03\uff0cY=g(X),\u6c42Y\u7684\u6982\u7387\u5206\u5e03\u7684\u8fc7\u7a0b\u4e3a\uff1a - \u82e5Y\u4e3a\u79bb\u6563\u91cf\uff0c\u5219\u5148\u5199\u51faY\u7684\u53ef\u80fd\u53d6\u503c\uff1a\\(y_1,y_2\\cdots y_j\\cdots\\)\uff0c\u518d\u627e\u51fa\\(Y=y_i\\)\u7684\u7b49\u4ef7\u65f6\u95f4\\(X\\in D\\),\u5f97\\(P(Y=y_i)= P(X\\in D)\\) - \u82e5Y\u4e3a\u8fde\u7eed\u91cf\uff0c\u5219\u5148\u5199\u51faY\u7684\u6982\u7387\u5206\u5e03\u51fd\u6570\uff1a\\(F_y(y)=P(Y\\le y)\\),\u627e\u51fa\\((Y\\le y)\\)\u7684\u7b49\u4ef7\u65f6\u95f4\\(X\\in D\\),\u5f97\\(F_y(y)=P(X\\in D)\\);\u518d\u6c42\u51faY \u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\\(f_y(y)\\)</p> <p>[!note] \u6ce8\u610f\u70b9  \u5173\u952e\u662f\u627e\u51fa\u7b49\u4ef7\u4e8b\u4ef6</p> <p>[!info] attention \u6ce8\u610f\u5e38\u7528\u5230\u590d\u5408\u51fd\u6570\u6c42\u5bfc\uff1a \\(\\(\\frac{\\mathrm d(F_x(h(y)))}{\\mathrm dy}=f_x(h(y))h'(y)\\)\\)</p>"},{"location":"note/courses/probility/Chapter%202/#51-251","title":"5.1 \u5b9a\u74062.5.1","text":"<p>\u8bbe\\(X\\sim f_X(x),g'(x)&gt;0(\u6216g'(x)&lt;0),Y=g(X)\\),\u5219Y\u5177\u6709\u7684\u6982\u7387\u5bc6\u5ea6\u51fd\u6570\u4e3a\\(\\(f_Y(y)=\\left\\{ \\begin{matrix}f_X(h(y))\\cdot|h'(y)|,&amp;\\alpha&lt;y&lt;\\beta\\\\0&amp;otherwise \\end {matrix}\\right.\\)\\) \u8fd9\u91cc\\((\\alpha,\\beta)\\)\u662fY \u7684\u53d6\u503c\u8303\u56f4\uff0ch\u662fg \u7684\u53cd\u51fd\u6570</p> <p>\u82e5\\(X\\sim N(\\mu,\\sigma^2),Y=aX+b\\rightarrow Y\\sim N(a\\mu+b,a^2\\sigma^2)\\)</p>"},{"location":"note/courses/probility/Chapter3/","title":"\u591a\u5143\u968f\u673a\u53d8\u91cf\u53ca\u5176\u5206\u5e03","text":""},{"location":"note/courses/probility/Chapter3/#1","title":"1 \u4e8c\u5143\u79bb\u6563\u968f\u673a\u53d8\u91cf","text":""},{"location":"note/courses/probility/Chapter3/#2","title":"2 \u968f\u673a\u53d8\u91cf\u7684\u72ec\u7acb\u6027","text":""},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/lab1/","title":"Lab1","text":""},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/lab1/#1-1","title":"1 \u4e0a\u673a\u5b9e\u8df51","text":""},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/lab1/#11","title":"1.1 \u68c0\u7d22\u6b65\u9aa4","text":"<p>\u5728https://portal.gdc.cancer.gov/\u6570\u636e\u5e93\u9009\u62e9Analysis Center\uff0c\u63a5\u7740\u9009\u62e9Mutationn Frequency,  \u70b9\u51fbCASES,\u9009\u62e9TCGA-LUAD project,\u8fdb\u884c\u68c0\u7d22</p> <p>\u63a5\u7740\u70b9\u51fbGenes\uff0c\u67e5\u770bDistribution of Most Frequently Mutated Genes</p> <p>\u6700\u540e\u70b9\u51fbMutations,\u67e5\u770b\u7a81\u53d8\u9891\u7387\u6700\u9ad8\u768410\u4e2a\u7a81\u53d8\u7c7b\u578b</p>"},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/lab1/#12","title":"1.2 \u68c0\u7d22\u7ed3\u679c","text":"<ul> <li>\u80ba\u764c(TCGA-LUAD project)\u4e2d\u4f53\u7ec6\u80de\u7a81\u53d8\u9891\u7387\u6700\u9ad8\u768410\u4e2a\u57fa\u56e0(genes)</li> </ul> <ul> <li>\u80ba\u764c(TCGA-LUAD project)\u4e2d\u4f53\u7ec6\u80de\u7a81\u53d8\u9891\u7387\u6700\u9ad8\u768410\u4e2a\u7a81\u53d8\u7c7b\u578b(motations\uff09 </li> </ul>"},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/lab1/#2-2","title":"2 \u4e0a\u673a\u5b9e\u8df52","text":""},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/lab1/#21","title":"2.1 \u68c0\u7d22\u8fc7\u7a0b","text":"<p>\u9996\u5148\uff0c\u8fdb\u5165CHEMBL\u5b98\u7f51\uff0c\u5728Search \u7684\u4e0b\u62c9\u9009\u9879\u4e2d\u9009\u62e9Compound Search\uff0c \u627e\u5230Structure Search \u90e8\u5206\uff0c\u70b9\u51fbDraw Structure\u6309\u94ae\uff0c\u6253\u5f00\u5316\u5b66\u7ed3\u6784\u7f16\u8f91\u5668\uff0c\u6839\u636e\u7ed9\u51fa\u7684\u56fe\u7247\u7ed8\u5236\u9700\u8981\u68c0\u7d22\u7684\u5316\u5408\u7269\u7684\u952e\u7ebf\u5f0f\uff0c\u8fdb\u884c\u68c0\u7d22\uff0c\u627e\u5230\u6211\u4eec\u9700\u8981\u7684\u5316\u5408\u7269 </p> <p>\u70b9\u51fbActivity Charts \u5f97\u5230\u5bf9\u5e94\u7684\u5206\u5e03\u56fe</p> <p></p> <p>\u63a5\u7740\u5728\u5f53\u524d\u9875\u9762\u70b9\u51fbDruc Mechanisms,\u627e\u5230\u4e24\u4e2a\u9776\u6807\u53ca\u5176\u5bf9\u5e94ID</p> <p></p> <p>\u5206\u522b\u70b9\u51fb\u4e24\u4e2a\u9776\u6807ID,\u627e\u5230\u5176\u5bf9\u5e94\u7684Activity Charts</p> <p>CHEMBL279: </p> <p></p> <p>\u70b9\u51fb\u5bf9\u5e94\u7684activity charts \uff0c \u5c31\u53ef\u4ee5\u627e\u5230\u5728\u4e0d\u540c\u8bd5\u9a8c\u4e2d\u9488\u5bf9\u8be5\u9776\u6807\u5bf9\u5e94\u6240\u8981\u6c42\u5316\u5408\u7269\u7684\u6d3b\u6027\u6570\u503c</p> <p>CHEMBL3717:</p> <p> \u6b65\u9aa4\u540c\u4e0a</p> <p>\u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u6240\u6c42\u5316\u5408\u7269\u7684\u751f\u7269\u6d3b\u6027\u4fe1\u606f</p>"},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/lab1/#3-3","title":"3 \u4e0a\u673a\u5b9e\u9a8c3","text":"<p>\u6211\u4eec\u9009\u62e9CHEMBL\u4f5c\u4e3a\u6570\u636e\u6e90\uff0c\u5728CHEMBL\u4e2d\u641c\u7d22hepatocellular carcinoma \uff0c\u7b5b\u9009\u51fa\u4e0e\u809d\u764c\u76f8\u5173\u7684\u8bd5\u9a8c\uff0c\u63a5\u7740\u70b9\u51fb\u5bf9\u5e94\u7684\u8bd5\u9a8c\uff0c\u627e\u51fa\u8be5\u8bd5\u9a8c\u4e2d\u5316\u5408\u7269\u4e0e\u9776\u6807\u5bf9\u5e94\u7684\u540d\u79f0</p> <p>\u6bd4\u5982\uff1a</p> <p>\u5728Proliferation assay: SNU-449 (hepatocellular carcinoma) \u4e2d\uff0c\u6211\u4eec\u627e\u5230</p> <p></p> <p>\u6b64\u5904\u627e\u51fa\u7684\u9776\u6807\u7ec4\u5408\u4e3aBAY-693\u548c# SNU-449</p> <p>\u5728Antitumor activity against human hepatocellular carcinoma Hells \u4e2d\uff0c\u6211\u4eec\u627e\u5230</p> <p></p> <p>\u6b64\u5904\u627e\u51fa\u7684\u9776\u6807\u7ec4\u5408\u4e3aCHEMBL348434\u548cHepG2</p>"},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%A8%A1%E5%9E%8B/","title":"\u6a21\u578b","text":""},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%A8%A1%E5%9E%8B/#1","title":"1 \u86cb\u767d\u8d28\u529f\u80fd\u6ce8\u91ca\u7684\u539f\u7406\u4e0e\u65b9\u6cd5","text":"<p>\u5728\u86cb\u767d\u8d28\u7814\u7a76\u4e2d\uff0c\u9075\u5faa\u201c\u5e8f\u5217-\u7ed3\u6784-\u529f\u80fd\u201d\u7684\u8303\u5f0f\u3002\u76ee\u524d\uff0c\u86cb\u767d\u8d28\u529f\u80fd\u7531\u57fa\u56e0\u672c\u4f53\u8bba \uff08GO\uff09\u6807\u51c6\u5316\uff0c\u5b83\u5305\u62ec\u4e09\u4e2a\u65b9\u9762\uff1a\u751f\u7269\u8fc7\u7a0b\u672c\u4f53\u8bba \uff08BPO\uff09\u3001\u5206\u5b50\u529f\u80fd\u672c\u4f53\u8bba \uff08MFO\uff09 \u548c\u7ec6\u80de\u6210\u5206\u672c\u4f53\u8bba \uff08CCO\uff09 </p> <p>\u201c\u5e8f\u5217-\u7ed3\u6784-\u51fd\u6570\u201d\u8303\u5f0f\u7684\u793a\u610f\u56fe\u3002\u5e8f\u5217\u662f\u6307\u86cb\u767d\u8d28\u4e2d\u6c28\u57fa\u9178\u7684\u6392\u5217\u3002\u7ed3\u6784\u662f\u6307\u86cb\u767d\u8d28\u539f\u5b50\u7684\u4e09\u7ef4\u6392\u5217\u3002\u529f\u80fd\u662f\u6307\u86cb\u767d\u8d28\u5728\u751f\u7269\u4f53\u5185\u53d1\u6325\u7684\u7279\u6b8a\u4f5c\u7528 \u3002\u901a\u5e38\uff0c\u86cb\u767d\u8d28\u5e8f\u5217\u51b3\u5b9a\u4e86\u5b83\u7684\u7ed3\u6784\uff0c\u800c\u7ed3\u6784\u53c8\u51b3\u5b9a\u4e86\u5b83\u7684\u529f\u80fd\u3002</p> <p>\u5728\u8fc7\u53bb\u7684\u51e0\u5341\u5e74\u91cc\uff0c\u5df2\u7ecf\u63d0\u51fa\u4e86\u8bb8\u591a\u8ba1\u7b97\u65b9\u6cd5\u6765\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd\u3002\u8fd9\u4e9b\u65b9\u6cd5\u6839\u636e\u5b83\u4eec\u4f7f\u7528\u7684\u4fe1\u606f\u7c7b\u578b\u53ef\u5206\u4e3a\u56db\u7ec4\uff1a\u57fa\u4e8e\u5e8f\u5217\u7684\u65b9\u6cd5\u3001\u57fa\u4e8e 3D \u7ed3\u6784\u7684\u65b9\u6cd5\u3001\u57fa\u4e8e PPI \u7f51\u7edc\u7684\u65b9\u6cd5\u548c\u57fa\u4e8e\u6df7\u5408\u4fe1\u606f\u7684\u65b9\u6cd5\u3002\u9700\u8981\u6ce8\u610f\u7684\u662f\uff0c\u8fd9\u4e9b\u7c7b\u522b\u5e76\u4e0d\u4e25\u683c\u4e0d\u540c\uff0c\u5b83\u4eec\u4e4b\u95f4\u5b58\u5728\u91cd\u53e0\u548c\u76f8\u5173\u6027\u3002\u4f8b\u5982\uff0c\u4e00\u4e9b\u57fa\u4e8e\u7ed3\u6784\u6216 PPI \u4fe1\u606f\u7684\u8ba1\u7b97\u65b9\u6cd5\u4e5f\u4f7f\u7528\u5e8f\u5217\u4fe1\u606f\u6765\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd\u3002</p>"},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%A8%A1%E5%9E%8B/#2","title":"2 \u6a21\u578b\u6784\u5efa","text":""},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%A8%A1%E5%9E%8B/#211","title":"2.1.1 \u86cb\u767d\u8d28\u5e8f\u5217\u4fe1\u606f","text":"<p>\u86cb\u767d\u8d28\u5e8f\u5217\u4fe1\u606f\u662f\u6307\u86cb\u767d\u8d28\u4e2d\u6c28\u57fa\u9178\u6b8b\u57fa\u7684\u7ebf\u6027\u6392\u5217\u987a\u5e8f\uff0c\u8fd9\u662f\u86cb\u767d\u8d28\u6700\u57fa\u672c\u7684\u7ed3\u6784\u7279\u5f81\u3002</p> <p>\u4e3b\u8981\u7279\u70b9\uff1a - \u8868\u793a\u65b9\u5f0f\uff1a\u901a\u5e38\u752820\u79cd\u6807\u51c6\u6c28\u57fa\u9178\u7684\u5355\u5b57\u6bcd\u6216\u4e09\u5b57\u6bcd\u7f29\u5199\u8868\u793a\uff08\u4f8b\u5982\uff1aA\u4ee3\u8868\u4e19\u6c28\u9178Alanine\uff0cR\u4ee3\u8868\u7cbe\u6c28\u9178Arginine\u7b49\uff09 - \u6807\u51c6\u683c\u5f0f\uff1a\u5e38\u89c1\u7684\u5e8f\u5217\u683c\u5f0f\u5305\u62ecFASTA\u683c\u5f0f\u3001UniProt\u683c\u5f0f\u7b49 - \u5e8f\u5217\u957f\u5ea6\uff1a\u4ece\u51e0\u5341\u5230\u51e0\u5343\u4e2a\u6c28\u57fa\u9178\u4e0d\u7b49\uff0c\u5e73\u5747\u7ea6300\u4e2a\u6c28\u57fa\u9178</p> <p>\u793a\u4f8b\uff08FASTA\u683c\u5f0f\uff09\uff1a <pre><code>&gt;sp|P99999|CYC_HUMAN Cytochrome c\nMGDVEKGKKIFIMKCSQCHTVEKGGKHKTGPNLHGLFGRKTGQAPGYSYTAANKNKGIIWGEDTLMEYLENPKKYIPGTKMIFVGIKKKEERADLIAYLKKATNE\n</code></pre></p> <p>\u91cd\u8981\u6027\uff1a - \u5e8f\u5217\u51b3\u5b9a\u86cb\u767d\u8d28\u7684\u6298\u53e0\u65b9\u5f0f\u548c\u6700\u7ec8\u4e09\u7ef4\u7ed3\u6784 - \u662f\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd\u7684\u57fa\u672c\u8f93\u5165\u6570\u636e - \u901a\u8fc7\u5e8f\u5217\u6bd4\u5bf9\u53ef\u4ee5\u63a8\u65ad\u86cb\u767d\u8d28\u7684\u8fdb\u5316\u5173\u7cfb</p> <p>\u86cb\u767d\u8d28\u529f\u80fd\u4fe1\u606f</p> <p>\u86cb\u767d\u8d28\u529f\u80fd\u4fe1\u606f\u63cf\u8ff0\u86cb\u767d\u8d28\u5728\u751f\u7269\u4f53\u5185\u6267\u884c\u7684\u751f\u7269\u5b66\u4efb\u52a1\u6216\u89d2\u8272\u3002</p> <p>\u4e3b\u8981\u5206\u7c7b\uff1a - \u5206\u5b50\u529f\u80fd(Molecular Function)\uff1a\u63cf\u8ff0\u86cb\u767d\u8d28\u7684\u5206\u5b50\u6d3b\u6027\uff0c\u5982\u50ac\u5316\u6d3b\u6027\u6216\u7ed3\u5408\u6d3b\u6027 - \u751f\u7269\u8fc7\u7a0b(Biological Process)\uff1a\u63cf\u8ff0\u86cb\u767d\u8d28\u53c2\u4e0e\u7684\u751f\u7269\u5b66\u8fc7\u7a0b\uff0c\u5982\u7ec6\u80de\u51cb\u4ea1\u3001\u4fe1\u53f7\u4f20\u5bfc\u7b49 - \u7ec6\u80de\u7ec4\u5206(Cellular Component)\uff1a\u63cf\u8ff0\u86cb\u767d\u8d28\u5728\u7ec6\u80de\u4e2d\u7684\u5b9a\u4f4d\uff0c\u5982\u7ec6\u80de\u6838\u3001\u7ebf\u7c92\u4f53\u7b49</p> <p>\u529f\u80fd\u6ce8\u91ca\u7cfb\u7edf\uff1a - \u57fa\u56e0\u672c\u4f53\u8bba(GO\uff0cGene Ontology)\uff1a\u6700\u5e7f\u6cdb\u4f7f\u7528\u7684\u529f\u80fd\u6ce8\u91ca\u7cfb\u7edf\uff0c\u63d0\u4f9b\u6807\u51c6\u5316\u8bcd\u6c47\u8868\u63cf\u8ff0\u86cb\u767d\u8d28\u529f\u80fd - \u9176\u59d4\u5458\u4f1a\u7f16\u53f7(EC Number)\uff1a\u5bf9\u9176\u7684\u529f\u80fd\u8fdb\u884c\u5206\u7c7b\u7684\u6570\u5b57\u4ee3\u7801\u7cfb\u7edf - KEGG\u901a\u8def\uff1a\u63cf\u8ff0\u86cb\u767d\u8d28\u53c2\u4e0e\u7684\u4ee3\u8c22\u548c\u4fe1\u53f7\u901a\u8def</p>"},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%A8%A1%E5%9E%8B/#22-go","title":"2.2 \u793a\u4f8b\uff08GO\u672f\u8bed\uff09\uff1a","text":"<ul> <li>GO:0005515 - \u86cb\u767d\u8d28\u7ed3\u5408(protein binding)</li> <li>GO:0006915 - \u7ec6\u80de\u51cb\u4ea1\u8fc7\u7a0b(apoptotic process)</li> <li>GO:0005739 - \u7ebf\u7c92\u4f53(mitochondrion)</li> </ul> <p>\u5e8f\u5217\u76f8\u4f3c\u7684\u86cb\u767d\u8d28\u901a\u5e38\u5177\u6709\u76f8\u4f3c\u7684\u529f\u80fd\uff0c\u8fd9\u662f\u5e8f\u5217\u6bd4\u5bf9\u65b9\u6cd5\u7684\u57fa\u7840</p> <p>\u57fa\u4e8e\u5e8f\u5217\u7684\u65b9\u6cd5\u4fa7\u91cd\u4e8e\u86cb\u767d\u8d28\u5e8f\u5217\uff0c\u901a\u8fc7\u4ece\u4e2d\u63d0\u53d6\u4e0e\u529f\u80fd\u76f8\u5173\u7684\u6f5c\u5728\u7279\u5f81\u6765\u9884\u6d4b\u86cb\u767d\u8d28\u529f\u80fd\u3002\u8fd9\u4e9b\u65b9\u6cd5\u6df1\u5165\u7814\u7a76\u6c28\u57fa\u9178\u5e8f\u5217\u4e2d\u5305\u542b\u7684\u4fe1\u606f\uff0c\u5e76\u8bd5\u56fe\u6355\u6349\u5d4c\u5165\u5176\u4e2d\u7684\u4e0e\u86cb\u767d\u8d28\u529f\u80fd\u76f8\u5173\u7684\u7ec6\u5fae\u7279\u5f81</p> <p></p> <p>\u9996\u5148\uff0c\u901a\u8fc7\u4e0d\u540c\u7684\u65b9\u6cd5\u4ece\u5e8f\u5217\u4e2d\u63d0\u53d6\u7279\u5f81\u3002\u5176\u6b21\uff0c\u5c06\u63d0\u53d6\u7684\u7279\u5f81\u8f93\u5165\u5230\u67d0\u79cd\u7b97\u6cd5\u4e2d\u3002\u6700\u540e\uff0c\u901a\u8fc7\u8bad\u7ec3\u6a21\u578b\u9884\u6d4b\u672a\u77e5\u86cb\u767d\u8d28\u7684\u529f\u80fd\uff0c\u5e76\u8ba1\u7b97\u5b83\u4eec\u5c5e\u4e8e\u7279\u5b9a GO \u9879\u7684\u6982\u7387\u3002\u4f46\u662f\uff0cBLAST \u5de5\u5177\u4f1a\u5728\u6570\u636e\u5e93\u4e2d\u641c\u7d22\u4e0e\u76ee\u6807\u86cb\u767d\u76f8\u4f3c\u7684\u5e8f\u5217\uff0c\u65e0\u9700\u4ece\u5e8f\u5217\u4e2d\u63d0\u53d6\u7279\u5f81\u3002</p> <p>\u4ee5\u4e0b\u662f\u63a8\u8350\u76843-4\u4e2a\u5206\u7c7b\u89d2\u5ea6\uff1a</p> <ol> <li> <p>\u4ee3\u8c22\u9176 (Metabolic Enzymes):</p> <ul> <li>\u529f\u80fd\uff1a \u8fd9\u7c7b\u86cb\u767d\u8d28\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u50ac\u5316\u7ec6\u80de\u5185\u5404\u79cd\u751f\u7269\u5316\u5b66\u53cd\u5e94\uff0c\u662f\u65b0\u9648\u4ee3\u8c22\u9014\u5f84\uff08\u5982\u7cd6\u9175\u89e3\u3001\u4e09\u7fa7\u9178\u5faa\u73af\u3001\u8102\u80aa\u9178\u5408\u6210\u4e0e\u5206\u89e3\u7b49\uff09\u7684\u6838\u5fc3\u53c2\u4e0e\u8005\u3002</li> <li>\u7279\u70b9\uff1a \u901a\u5e38\u5177\u6709\u7279\u5b9a\u7684\u6d3b\u6027\u4f4d\u70b9\uff0c\u5e8f\u5217\u4e0a\u53ef\u80fd\u5305\u542b\u4e0e\u8f85\u9176\u6216\u5e95\u7269\u7ed3\u5408\u76f8\u5173\u7684\u4fdd\u5b88\u6a21\u4f53\uff08motifs\uff09\u3002</li> <li> <p>\u4f8b\u5b50\uff1a \u5df1\u7cd6\u6fc0\u9176\u3001\u4e19\u916e\u9178\u8131\u6c22\u9176\u3001\u8102\u80aa\u9178\u5408\u9176\u3002 2. \u8f6c\u5f55\u8c03\u63a7\u56e0\u5b50 (Transcription Regulators):</p> </li> <li> <p>\u529f\u80fd\uff1a \u8fd9\u7c7b\u86cb\u767d\u8d28\u901a\u8fc7\u4e0eDNA\u7279\u5b9a\u5e8f\u5217\u7ed3\u5408\uff0c\u8c03\u63a7\u57fa\u56e0\u7684\u8f6c\u5f55\uff08\u5373\u57fa\u56e0\u7684\u201c\u5f00\u542f\u201d\u6216\u201c\u5173\u95ed\u201d\uff09\uff0c\u4ece\u800c\u63a7\u5236\u7ec6\u80de\u7684\u529f\u80fd\u548c\u547d\u8fd0\u3002</p> </li> <li>\u7279\u70b9\uff1a \u901a\u5e38\u5305\u542bDNA\u7ed3\u5408\u57df\uff08\u5982\u950c\u6307\u3001\u87ba\u65cb-\u8f6c\u89d2-\u87ba\u65cb\u7b49\uff09\u4ee5\u53ca\u4e0e\u5176\u4ed6\u8c03\u63a7\u86cb\u767d\u76f8\u4e92\u4f5c\u7528\u7684\u7ed3\u6784\u57df\u3002</li> <li> <p>\u4f8b\u5b50\uff1a p53\u6291\u764c\u86cb\u767d\u3001Hox\u86cb\u767d\u3001\u7c7b\u56fa\u9187\u6fc0\u7d20\u53d7\u4f53\u3002 3. \u8de8\u819c\u8f6c\u8fd0\u86cb\u767d (Transporters):</p> </li> <li> <p>\u529f\u80fd\uff1a \u8fd9\u7c7b\u86cb\u767d\u8d28\u9576\u5d4c\u5728\u7ec6\u80de\u819c\u6216\u7ec6\u80de\u5668\u819c\u4e0a\uff0c\u8d1f\u8d23\u9009\u62e9\u6027\u5730\u5c06\u79bb\u5b50\u3001\u8425\u517b\u7269\u8d28\u3001\u4ee3\u8c22\u4ea7\u7269\u7b49\u5206\u5b50\u8de8\u819c\u8fd0\u8f93\u3002</p> </li> <li>\u7279\u70b9\uff1a \u5176\u5e8f\u5217\u901a\u5e38\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a\u8de8\u819c\u533a\u57df\uff08\u758f\u6c34\u6027\u6c28\u57fa\u9178\u5bcc\u96c6\uff09\uff0c\u5f62\u6210\u901a\u9053\u6216\u8f7d\u4f53\u7ed3\u6784\u3002</li> <li> <p>\u4f8b\u5b50\uff1a \u8461\u8404\u7cd6\u8f6c\u8fd0\u86cb\u767d (GLUTs)\u3001\u6c34\u901a\u9053\u86cb\u767d (Aquaporins)\u3001\u94a0\u94be\u6cf5 (Na+/K+-ATPase)\u3002 4. \u7ec6\u80de\u9aa8\u67b6\u86cb\u767d (Cytoskeletal Proteins): (\u5982\u679c\u9700\u8981\u7b2c\u56db\u7c7b)</p> </li> <li> <p>\u529f\u80fd\uff1a \u8fd9\u7c7b\u86cb\u767d\u8d28\u6784\u6210\u7ec6\u80de\u7684\u9aa8\u67b6\u7cfb\u7edf\uff0c\u4e3a\u7ec6\u80de\u63d0\u4f9b\u7ed3\u6784\u652f\u6301\u3001\u7ef4\u6301\u7ec6\u80de\u5f62\u6001\u3001\u53c2\u4e0e\u7ec6\u80de\u8fd0\u52a8\u3001\u7ec6\u80de\u5206\u88c2\u4ee5\u53ca\u7ec6\u80de\u5185\u7269\u8d28\u8fd0\u8f93\u7b49\u3002</p> </li> <li>\u7279\u70b9\uff1a \u901a\u5e38\u80fd\u81ea\u7ec4\u88c5\u6210\u957f\u4e1d\u72b6\u7ed3\u6784\uff0c\u5177\u6709\u91cd\u590d\u6027\u7684\u7ed3\u6784\u5355\u5143\u3002</li> <li>\u4f8b\u5b50\uff1a \u808c\u52a8\u86cb\u767d (Actin)\u3001\u5fae\u7ba1\u86cb\u767d (Tubulin)\u3001\u89d2\u86cb\u767d (Keratin)\u3002</li> </ul> </li> </ol> <p>\u9009\u62e9\u8fd9\u4e9b\u89d2\u5ea6\u7684\u7406\u7531\uff1a</p> <ul> <li>\u529f\u80fd\u76f8\u5bf9\u660e\u786e\u4e14\u91cd\u8981\uff1a \u8fd9\u51e0\u7c7b\u86cb\u767d\u8d28\u4ee3\u8868\u4e86\u7ec6\u80de\u5185\u4e00\u4e9b\u6700\u57fa\u672c\u548c\u6838\u5fc3\u7684\u529f\u80fd\u6d3b\u52a8\u3002</li> <li>\u7ed3\u6784\u4e0e\u5e8f\u5217\u7279\u5f81\u7684\u6f5c\u5728\u5dee\u5f02\uff1a \u4e0d\u540c\u529f\u80fd\u7684\u86cb\u767d\u8d28\u5f80\u5f80\u5728\u5e8f\u5217\u7ec4\u6210\u3001\u7ed3\u6784\u57df\u3001\u4e8c\u7ea7\u7ed3\u6784\u548c\u4e09\u7ea7\u7ed3\u6784\u4e0a\u6709\u4e00\u5b9a\u7684\u5dee\u5f02\uff0c\u8fd9\u4e3a\u673a\u5668\u5b66\u4e60\u6a21\u578b\u63d0\u4f9b\u4e86\u5b66\u4e60\u548c\u533a\u5206\u7684\u57fa\u7840\u3002\u4f8b\u5982\uff0c\u8de8\u819c\u86cb\u767d\u901a\u5e38\u6709\u660e\u663e\u7684\u758f\u6c34\u8de8\u819c\u533a\uff0cDNA\u7ed3\u5408\u86cb\u767d\u6709\u7279\u5b9a\u7684DNA\u7ed3\u5408\u57df\u3002</li> <li>\u6570\u636e\u53ef\u83b7\u5f97\u6027\uff1a \u8fd9\u4e9b\u7c7b\u522b\u7684\u86cb\u767d\u8d28\u5728\u516c\u5171\u6570\u636e\u5e93 (\u5982UniProt) \u4e2d\u6709\u5927\u91cf\u7684\u6ce8\u91ca\u4fe1\u606f\u548c\u5e8f\u5217\u6570\u636e\uff0c\u4fbf\u4e8e\u6536\u96c6\u8bad\u7ec3\u6837\u672c\u3002</li> <li>\u7b26\u5408\u9879\u76ee\u8981\u6c42\uff1a \u80fd\u591f\u6ee1\u8db3\u4f60\u9879\u76ee\u521d\u671f\u5bf93-4\u7c7b\u8fdb\u884c\u591a\u5206\u7c7b\u7684\u9700\u6c42\u3002</li> </ul> <p>\u5728\u5b9e\u9645\u64cd\u4f5c\u4e2d\uff0c\u4f60\u9700\u8981\u6ce8\u610f\uff1a</p> <ul> <li>\u660e\u786e\u5206\u7c7b\u6807\u51c6\uff1a \u5728\u6536\u96c6\u6570\u636e\u65f6\uff0c\u8981\u786e\u4fdd\u6bcf\u4e2a\u86cb\u767d\u8d28\u88ab\u660e\u786e\u5730\u5f52\u5165\u4e00\u4e2a\u7c7b\u522b\u3002\u53ef\u4ee5\u53c2\u8003Gene Ontology (GO) \u7b49\u6570\u636e\u5e93\u4e2d\u7684\u6ce8\u91ca\uff0c\u9009\u62e9\u90a3\u4e9b\u4e3b\u8981\u529f\u80fd\u660e\u786e\u5c5e\u4e8e\u67d0\u4e00\u7c7b\u7684\u86cb\u767d\u8d28\u3002</li> <li>\u907f\u514d\u9ad8\u5ea6\u91cd\u53e0\uff1a \u867d\u7136\u86cb\u767d\u8d28\u529f\u80fd\u590d\u6742\uff0c\u53ef\u80fd\u5b58\u5728\u201c\u517c\u804c\u201d\u73b0\u8c61\uff0c\u4f46\u5728\u521d\u671f\u8fdb\u884c\u591a\u5206\u7c7b\u65f6\uff0c\u5c3d\u91cf\u9009\u62e9\u529f\u80fd\u754c\u9650\u76f8\u5bf9\u6e05\u6670\u7684\u7c7b\u522b\u548c\u86cb\u767d\u8d28\u6837\u672c\u3002</li> </ul> <p>\u4ece\u4ee3\u8c22\u9176\u7684\u89d2\u5ea6\uff0c\u5b83\u4eec\u6700\u4e3b\u8981\u548c\u6700\u7cfb\u7edf\u5316\u7684\u5206\u7c7b\u65b9\u5f0f\u662f\u6839\u636e\u56fd\u9645\u9176\u5b66\u59d4\u5458\u4f1a (Enzyme Commission, EC) \u7684\u5206\u7c7b\u7cfb\u7edf\u3002\u8fd9\u4e2a\u7cfb\u7edf\u6839\u636e\u9176\u6240\u50ac\u5316\u7684\u5316\u5b66\u53cd\u5e94\u7c7b\u578b\u5c06\u9176\u5206\u4e3a\u4e03\u5927\u7c7b\uff0c\u6bcf\u4e00\u7c7b\u4e0b\u9762\u53c8\u8fdb\u4e00\u6b65\u7ec6\u5206\u4e3a\u4e9a\u7c7b\u548c\u6b21\u4e9a\u7c7b\u3002</p> <p>\u5bf9\u4e8e\u4ee3\u8c22\u9014\u5f84\u4e2d\u7684\u9176\uff0c\u5b83\u4eec\u90fd\u4f1a\u5f52\u5c5e\u4e8e\u8fd9\u4e03\u5927\u7c7b\u4e4b\u4e00\uff1a</p> <ol> <li> <p>EC 1: \u6c27\u5316\u8fd8\u539f\u9176 (Oxidoreductases)</p> <ul> <li>\u529f\u80fd\uff1a \u50ac\u5316\u6c27\u5316\u8fd8\u539f\u53cd\u5e94\uff0c\u5373\u7535\u5b50\u7684\u8f6c\u79fb\u3002\u8fd9\u4e9b\u9176\u901a\u5e38\u9700\u8981\u8f85\u9176\uff08\u5982NAD\\(^+\\)\u3001FAD\uff09\u4f5c\u4e3a\u7535\u5b50\u7684\u8f7d\u4f53\u3002</li> <li> <p>\u4ee3\u8c22\u4e2d\u7684\u4f8b\u5b50\uff1a</p> <ul> <li>\u8131\u6c22\u9176 (Dehydrogenases)\uff1a \u5982\u4e73\u9178\u8131\u6c22\u9176\uff08\u50ac\u5316\u4e73\u9178\u548c\u4e19\u916e\u9178\u4e4b\u95f4\u7684\u8f6c\u5316\uff09\u3001\u4e59\u9187\u8131\u6c22\u9176\u3002</li> <li>\u6c27\u5316\u9176 (Oxidases)\uff1a \u5982\u7ec6\u80de\u8272\u7d20c\u6c27\u5316\u9176\uff08\u7535\u5b50\u4f20\u9012\u94fe\u7684\u6700\u7ec8\u6c27\u5316\u9176\uff09\u3002</li> <li>\u8fc7\u6c27\u5316\u7269\u9176 (Peroxidases)\uff1a \u6e05\u9664\u8fc7\u6c27\u5316\u6c22\u3002 2. EC 2: \u8f6c\u79fb\u9176 (Transferases)</li> </ul> </li> <li> <p>\u529f\u80fd\uff1a \u50ac\u5316\u4e00\u4e2a\u5206\u5b50\u5b98\u80fd\u56e2\uff08\u5982\u7532\u57fa\u3001\u4e59\u9170\u57fa\u3001\u6c28\u57fa\u3001\u78f7\u9178\u57fa\u7b49\uff09\u4ece\u4e00\u4e2a\u5206\u5b50\uff08\u4f9b\u4f53\uff09\u8f6c\u79fb\u5230\u53e6\u4e00\u4e2a\u5206\u5b50\uff08\u53d7\u4f53\uff09\u3002</p> </li> <li> <p>\u4ee3\u8c22\u4e2d\u7684\u4f8b\u5b50\uff1a</p> <ul> <li>\u6fc0\u9176 (Kinases)\uff1a \u8f6c\u79fb\u78f7\u9178\u57fa\uff0c\u901a\u5e38\u7531ATP\u63d0\u4f9b\u78f7\u9178\u57fa\uff0c\u5982\u5df1\u7cd6\u6fc0\u9176\uff08\u50ac\u5316\u8461\u8404\u7cd6\u78f7\u9178\u5316\uff09\u3001\u86cb\u767d\u6fc0\u9176\u3002</li> <li>\u6c28\u57fa\u8f6c\u79fb\u9176 (Aminotransferases/Transaminases)\uff1a \u8f6c\u79fb\u6c28\u57fa\uff0c\u5728\u6c28\u57fa\u9178\u4ee3\u8c22\u4e2d\u975e\u5e38\u91cd\u8981\uff0c\u5982\u4e19\u6c28\u9178\u6c28\u57fa\u8f6c\u79fb\u9176\u3002</li> <li>\u7532\u57fa\u8f6c\u79fb\u9176 (Methyltransferases)\uff1a \u8f6c\u79fb\u7532\u57fa\u3002 3. EC 3: \u6c34\u89e3\u9176 (Hydrolases)</li> </ul> </li> <li> <p>\u529f\u80fd\uff1a \u50ac\u5316\u5316\u5b66\u952e\u7684\u6c34\u89e3\u53cd\u5e94\uff0c\u5373\u5229\u7528\u6c34\u5206\u5b50\u5c06\u4e00\u4e2a\u5927\u5206\u5b50\u65ad\u88c2\u6210\u4e24\u4e2a\u5c0f\u5206\u5b50\u3002</p> </li> <li> <p>\u4ee3\u8c22\u4e2d\u7684\u4f8b\u5b50\uff1a</p> <ul> <li>\u86cb\u767d\u9176/\u80bd\u9176 (Proteases/Peptidases)\uff1a \u6c34\u89e3\u86cb\u767d\u8d28\u4e2d\u7684\u80bd\u952e\uff0c\u5982\u80c3\u86cb\u767d\u9176\u3001\u80f0\u86cb\u767d\u9176\u3002</li> <li>\u8102\u80aa\u9176 (Lipases)\uff1a \u6c34\u89e3\u7518\u6cb9\u4e09\u916f\uff08\u8102\u80aa\uff09\u751f\u6210\u7518\u6cb9\u548c\u8102\u80aa\u9178\u3002</li> <li>\u7cd6\u82f7\u9176 (Glycosidases)\uff1a \u6c34\u89e3\u7cd6\u82f7\u952e\uff0c\u5982\u6dc0\u7c89\u9176\uff08\u6c34\u89e3\u6dc0\u7c89\uff09\u3001\u4e73\u7cd6\u9176\u3002</li> <li>\u78f7\u9178\u9176 (Phosphatases)\uff1a \u53bb\u9664\u78f7\u9178\u57fa\u56e2\uff0c\u4e0e\u6fc0\u9176\u529f\u80fd\u76f8\u53cd\u3002 4. EC 4: \u88c2\u89e3\u9176 (Lyases)</li> </ul> </li> <li> <p>\u529f\u80fd\uff1a \u50ac\u5316\u975e\u6c34\u89e3\u3001\u975e\u6c27\u5316\u7684\u65b9\u5f0f\u88c2\u89e3\u5316\u5b66\u952e\uff0c\u6216\u4ece\u5e95\u7269\u79fb\u53bb\u4e00\u4e2a\u57fa\u56e2\u5f62\u6210\u53cc\u952e\uff08\u6216\u53cd\u5411\u53cd\u5e94\uff0c\u5c06\u57fa\u56e2\u52a0\u5230\u53cc\u952e\u4e0a\uff09\u3002</p> </li> <li> <p>\u4ee3\u8c22\u4e2d\u7684\u4f8b\u5b50\uff1a</p> <ul> <li>\u8131\u7fa7\u9176 (Decarboxylases)\uff1a \u79fb\u53bb\u7fa7\u57fa\u5e76\u91ca\u653eCO\\(_2\\)\uff0c\u5982\u4e19\u916e\u9178\u8131\u7fa7\u9176\u3002</li> <li>\u919b\u7f29\u9176 (Aldolases)\uff1a \u5982\u7cd6\u9175\u89e3\u4e2d\u7684\u679c\u7cd6-1,6-\u4e8c\u78f7\u9178\u919b\u7f29\u9176\u3002</li> <li>\u6c34\u5408\u9176/\u8131\u6c34\u9176 (Hydratases/Dehydratases)\uff1a \u5982\u5ef6\u80e1\u7d22\u9178\u9176\uff08\u50ac\u5316\u5ef6\u80e1\u7d22\u9178\u6c34\u5408\u751f\u6210\u82f9\u679c\u9178\uff09\u3002 5. EC 5: \u5f02\u6784\u9176 (Isomerases)</li> </ul> </li> <li> <p>\u529f\u80fd\uff1a \u50ac\u5316\u5206\u5b50\u5185\u7684\u7ed3\u6784\u91cd\u6392\uff0c\u5c06\u4e00\u4e2a\u5206\u5b50\u8f6c\u53d8\u4e3a\u5176\u540c\u5206\u5f02\u6784\u4f53\u3002</p> </li> <li> <p>\u4ee3\u8c22\u4e2d\u7684\u4f8b\u5b50\uff1a</p> <ul> <li>\u6d88\u65cb\u9176 (Racemases) \u548c\u5dee\u5411\u5f02\u6784\u9176 (Epimerases)\uff1a \u6539\u53d8\u624b\u6027\u4e2d\u5fc3\u7684\u6784\u578b\uff0c\u5982\u4e19\u6c28\u9178\u6d88\u65cb\u9176\u3002</li> <li>\u987a\u53cd\u5f02\u6784\u9176 (Cis-trans isomerases)\uff1a \u50ac\u5316\u987a\u53cd\u5f02\u6784\u3002</li> <li>\u5206\u5b50\u5185\u8f6c\u79fb\u9176 (Intramolecular transferases)\uff1a \u5982\u78f7\u9178\u8461\u8404\u7cd6\u5f02\u6784\u9176\uff08\u50ac\u5316\u8461\u8404\u7cd6-6-\u78f7\u9178\u548c\u679c\u7cd6-6-\u78f7\u9178\u4e4b\u95f4\u7684\u8f6c\u5316\uff09\u3002 6. EC 6: \u8fde\u63a5\u9176 (Ligases)</li> </ul> </li> <li> <p>\u529f\u80fd\uff1a \u50ac\u5316\u4e24\u4e2a\u5206\u5b50\u8fde\u63a5\u5f62\u6210\u65b0\u5316\u5b66\u952e\u7684\u53cd\u5e94\uff0c\u6b64\u8fc7\u7a0b\u901a\u5e38\u4e0eATP\uff08\u6216\u5176\u4ed6\u7c7b\u4f3c\u7684\u6838\u82f7\u4e09\u78f7\u9178\uff09\u7684\u6c34\u89e3\u76f8\u5076\u8054\u4ee5\u63d0\u4f9b\u80fd\u91cf\u3002</p> </li> <li> <p>\u4ee3\u8c22\u4e2d\u7684\u4f8b\u5b50\uff1a</p> <ul> <li>\u5408\u6210\u9176 (Synthetases)\uff1a \u5982\u8c37\u6c28\u9170\u80fa\u5408\u6210\u9176\uff08\u5229\u7528ATP\u8fde\u63a5\u8c37\u6c28\u9178\u548c\u6c28\u751f\u6210\u8c37\u6c28\u9170\u80fa\uff09\u3002</li> <li>\u7fa7\u5316\u9176 (Carboxylases) (\u67d0\u4e9b\u7c7b\u578b)\uff1a \u5982\u4e19\u916e\u9178\u7fa7\u5316\u9176\uff08\u5229\u7528ATP\u5c06CO\\(_2\\)\u52a0\u5230\u4e19\u916e\u9178\u4e0a\u751f\u6210\u8349\u9170\u4e59\u9178\uff09\u3002</li> <li>DNA\u8fde\u63a5\u9176 (DNA ligase)\uff1a \u8fde\u63a5DNA\u7247\u6bb5\u3002 7. EC 7: \u8f6c\u4f4d\u9176 (Translocases)</li> </ul> </li> <li> <p>\u529f\u80fd\uff1a \u50ac\u5316\u79bb\u5b50\u6216\u5206\u5b50\u8de8\u819c\u8f6c\u8fd0\uff0c\u6216\u5176\u5728\u819c\u5185\u7684\u5206\u79bb\u3002\u8fd9\u7c7b\u9176\u901a\u5e38\u662f\u819c\u86cb\u767d\u3002</p> </li> <li>\u4ee3\u8c22\u4e2d\u7684\u4f8b\u5b50\uff1a<ul> <li>ATP\u9176\uff08\u67d0\u4e9b\u7c7b\u578b\u4f5c\u4e3a\u79bb\u5b50\u6cf5\uff09\uff1a \u5982H\\(^+\\)-ATP\u9176\uff08\u8d28\u5b50\u6cf5\uff09\u3002</li> <li>\u8bb8\u591a\u53c2\u4e0e\u7269\u8d28\u8de8\u819c\u8fd0\u8f93\u7684\u86cb\u767d\u8d28\uff0c\u5982\u7ebf\u7c92\u4f53\u5185\u819c\u4e0a\u7684\u67d0\u4e9b\u8f7d\u4f53\u3002</li> </ul> </li> </ul> </li> </ol>"},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%A8%A1%E5%9E%8B/#_1","title":"\u6a21\u578b\u6784\u5efa","text":"<p>\u597d\u7684\uff0c\u6211\u4eec\u6765\u8be6\u7ec6\u5206\u6790\u4e00\u4e0b\u4e4b\u524d\u4e3a\u4f60\u8bbe\u8ba1\u76841D CNN\uff08\u4e00\u7ef4\u5377\u79ef\u795e\u7ecf\u7f51\u7edc\uff09\u6a21\u578b\u7684\u6784\u5efa\u6d41\u7a0b\u3002\u8fd9\u4e2a\u6d41\u7a0b\u4e3b\u8981\u6307\u7684\u662f\u5728Keras\u4e2d\u4f7f\u7528<code>Sequential</code> API\u6765\u9010\u5c42\u642d\u5efa\u7f51\u7edc\u7ed3\u6784\uff0c\u5e76\u6700\u7ec8\u7f16\u8bd1\u6a21\u578b\u4ee5\u5907\u8bad\u7ec3\u3002</p> <p>\u6a21\u578b\u6784\u5efa\u7684\u76ee\u6807\uff1a</p> <p>\u6211\u4eec\u7684\u76ee\u6807\u662f\u6784\u5efa\u4e00\u4e2a\u80fd\u591f\u63a5\u6536\u86cb\u767d\u8d28\u5e8f\u5217\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u8f93\u51fa\u8be5\u86cb\u767d\u8d28\u5c5e\u4e8e\u9884\u5b9a\u4e49\u7684\u51e0\u4e2a\u9176\u7c7b\u522b\uff08EC1, EC2, EC3, EC5, EC6\uff09\u4e2d\u54ea\u4e00\u4e2a\u7684\u6982\u7387\u7684\u6a21\u578b\u3002</p> <p>\u56de\u987e\u6a21\u578b\u8f93\u5165\uff1a</p> <p>\u5728\u8fdb\u5165\u6a21\u578b\u4e4b\u524d\uff0c\u539f\u59cb\u7684\u86cb\u767d\u8d28\u6c28\u57fa\u9178\u5e8f\u5217\uff08\u5982 \"MKT...Y\"\uff09\u7ecf\u8fc7\u4e86\u4ee5\u4e0b\u9884\u5904\u7406\uff1a</p> <ol> <li>\u6574\u6570\u7f16\u7801\uff1a \u6bcf\u4e2a\u6c28\u57fa\u9178\u5b57\u7b26\uff08A, C, D,...W, Y, \u4ee5\u53ca\u4e00\u4e2a\u4ee3\u8868\u672a\u77e5\u6c28\u57fa\u9178\u7684'X'\uff09\u88ab\u6620\u5c04\u4e3a\u4e00\u4e2a\u552f\u4e00\u7684\u6574\u6570\uff08\u4f8b\u5982\uff0cA-&gt;1, C-&gt;2,..., X-&gt;21\uff09\u3002</li> <li>\u5e8f\u5217\u586b\u5145/\u622a\u65ad\uff1a \u6240\u6709\u6574\u6570\u7f16\u7801\u540e\u7684\u5e8f\u5217\u90fd\u88ab\u5904\u7406\u6210\u7edf\u4e00\u7684\u957f\u5ea6 <code>MAX_SEQUENCE_LENGTH</code>\u3002\u8f83\u77ed\u7684\u5e8f\u5217\u4f1a\u5728\u672b\u5c3e\u75280\u8fdb\u884c\u586b\u5145\uff08padding\uff09\uff0c\u8f83\u957f\u7684\u5e8f\u5217\u4f1a\u88ab\u622a\u65ad\u3002 \u6240\u4ee5\uff0c\u6a21\u578b\u7684\u76f4\u63a5\u8f93\u5165\u662f\u4e00\u4e2a\u5f62\u72b6\u4e3a <code>(batch_size, MAX_SEQUENCE_LENGTH)</code> \u76842D\u6574\u6570\u5f20\u91cf\u3002</li> </ol> <p>\u6a21\u578b\u5404\u5c42\u8be6\u7ec6\u5206\u6790 (Keras <code>Sequential</code> \u6a21\u578b)</p> <p>\u6211\u4eec\u4f7f\u7528\u7684\u662fKeras\u7684<code>Sequential</code>\u6a21\u578b\uff0c\u8fd9\u610f\u5473\u7740\u5404\u5c42\u662f\u7ebf\u6027\u5806\u53e0\u7684\uff0c\u524d\u4e00\u5c42\u7684\u8f93\u51fa\u662f\u540e\u4e00\u5c42\u7684\u8f93\u5165\u3002</p> <p>Python</p> <pre><code>model = Sequential(name=\"Protein_1D_CNN\")\n</code></pre> <ol> <li> <p><code>Embedding</code>\u5c42 (\u5d4c\u5165\u5c42)</p> <p>Python</p> <pre><code>model.add(Embedding(input_dim=VOCAB_SIZE,\n                    output_dim=EMBEDDING_DIM,\n                    input_length=MAX_SEQUENCE_LENGTH,\n                    name=\"embedding_layer\"))\n</code></pre> <ul> <li>\u76ee\u7684\uff1a \u5c06\u8f93\u5165\u7684\u6574\u6570\u7f16\u7801\u7684\u6c28\u57fa\u9178\u5e8f\u5217\u8f6c\u6362\u4e3a\u7a20\u5bc6\u7684\u5411\u91cf\u8868\u793a\u3002\u8fd9\u4e00\u5c42\u7684\u4e3b\u8981\u4f5c\u7528\u662f\u5b66\u4e60\u6c28\u57fa\u9178\u4e4b\u95f4\u7684\u201c\u8bed\u4e49\u201d\u5173\u7cfb\uff0c\u5e76\u5c06\u6bcf\u4e2a\u6c28\u57fa\u9178\u6620\u5c04\u5230\u4e00\u4e2a\u56fa\u5b9a\u7ef4\u5ea6\u7684\u201c\u5d4c\u5165\u5411\u91cf\u201d\u4e2d\u3002\u76f8\u6bd4\u4e8e\u7a00\u758f\u7684\u72ec\u70ed\u7f16\u7801 (One-hot encoding)\uff0c\u5d4c\u5165\u5c42\u80fd\u66f4\u6709\u6548\u5730\u8868\u793a\u7279\u5f81\uff0c\u5e76\u4e14\u53ef\u4ee5\u51cf\u5c11\u540e\u7eed\u5c42\u7684\u53c2\u6570\u91cf\u3002</li> <li>\u53c2\u6570\u89e3\u91ca\uff1a<ul> <li><code>input_dim=VOCAB_SIZE</code>: \u8f93\u5165\u6570\u636e\u7684\u8bcd\u6c47\u8868\u5927\u5c0f\u3002\u8fd9\u91cc\u662f\u4e0d\u540c\u6c28\u57fa\u9178\uff08\u52a0\u4e0a\u586b\u5145\u7b260\u548c\u672a\u77e5\u7b26'X'\uff09\u7684\u603b\u6570\u3002\u4f8b\u5982\uff0c\u5982\u679c20\u79cd\u6807\u51c6\u6c28\u57fa\u9178+1\u4e2a'X'+1\u4e2apadding=0\uff0c\u90a3\u4e48\u53ef\u80fd\u662f22\u3002\u5728\u6211\u4eec\u7684\u4ee3\u7801\u4e2d\uff0c<code>VOCAB_SIZE</code> \u88ab\u8bbe\u7f6e\u4e3a <code>len(char_to_int) + 1</code>\uff0c\u5176\u4e2d <code>char_to_int</code> \u5305\u542b\u4e8620\u4e2a\u6807\u51c6\u6c28\u57fa\u9178\u548c'X'\uff0c\u7d22\u5f15\u4ece1\u5f00\u59cb\uff0c\u6240\u4ee5 <code>VOCAB_SIZE</code> \u5b9e\u9645\u4e0a\u662f <code>(20+1) + 1 = 22</code>\uff0c\u4ee3\u8868\u7d22\u5f150\u523021\u3002</li> <li><code>output_dim=EMBEDDING_DIM</code>: \u6bcf\u4e2a\u6c28\u57fa\u9178\u5d4c\u5165\u5411\u91cf\u7684\u7ef4\u5ea6\u3002\u8fd9\u662f\u4e00\u4e2a\u8d85\u53c2\u6570\uff0c\u4f8b\u5982\u8bbe\u7f6e\u4e3a64\uff0c\u610f\u5473\u7740\u6bcf\u4e2a\u6c28\u57fa\u9178\u4f1a\u88ab\u8868\u793a\u6210\u4e00\u4e2a64\u7ef4\u7684\u6d6e\u70b9\u6570\u5411\u91cf\u3002</li> <li><code>input_length=MAX_SEQUENCE_LENGTH</code>: \u8f93\u5165\u5e8f\u5217\u7684\u957f\u5ea6\u3002</li> </ul> </li> <li>\u8f93\u51fa\uff1a \u5f62\u72b6\u4e3a <code>(batch_size, MAX_SEQUENCE_LENGTH, EMBEDDING_DIM)</code> \u76843D\u5f20\u91cf\u3002\u73b0\u5728\uff0c\u5e8f\u5217\u4e2d\u7684\u6bcf\u4e2a\u4f4d\u7f6e\u4e0d\u518d\u662f\u4e00\u4e2a\u6574\u6570\uff0c\u800c\u662f\u4e00\u4e2a <code>EMBEDDING_DIM</code> \u7ef4\u7684\u5411\u91cf\u3002 2. \u7b2c\u4e00\u4e2a\u5377\u79ef\u5757 (<code>Conv1D</code>, <code>MaxPooling1D</code>, <code>Dropout</code>)</li> </ul> <p>Python</p> <pre><code>model.add(Conv1D(filters=NUM_FILTERS_1,\n                 kernel_size=KERNEL_SIZE_1,\n                 activation='relu',\n                 padding='same',\n                 name=\"conv1d_1\"))\nmodel.add(MaxPooling1D(pool_size=2, name=\"maxpool1d_1\"))\nmodel.add(Dropout(DROPOUT_RATE, name=\"dropout_1\"))\n</code></pre> <ul> <li><code>Conv1D</code> (\u4e00\u7ef4\u5377\u79ef\u5c42):<ul> <li>\u76ee\u7684\uff1a \u5145\u5f53\u201c\u6a21\u4f53\u626b\u63cf\u5668\u201d(motif scanner)\u3002\u5b83\u5728\u8f93\u5165\u7684\u6c28\u57fa\u9178\u5d4c\u5165\u5e8f\u5217\u4e0a\u6ed1\u52a8\u4e00\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u5377\u79ef\u6838\uff08\u6ee4\u6ce2\u5668\uff09\uff0c\u4ee5\u68c0\u6d4b\u5c40\u90e8\u7684\u6c28\u57fa\u9178\u6a21\u5f0f\uff08\u4f8b\u5982\uff0c\u8fde\u7eed<code>KERNEL_SIZE_1</code>\u4e2a\u6c28\u57fa\u9178\u7ec4\u6210\u7684\u77ed\u5e8f\u5217\u6a21\u5f0f\uff09\u3002\u4e0d\u540c\u7684\u6ee4\u6ce2\u5668\u4f1a\u5b66\u4e60\u8bc6\u522b\u4e0d\u540c\u7c7b\u578b\u7684\u6a21\u5f0f\u3002</li> <li>\u53c2\u6570\u89e3\u91ca\uff1a<ul> <li><code>filters=NUM_FILTERS_1</code>: \u5377\u79ef\u6838\u7684\u6570\u91cf\uff08\u4e5f\u662f\u8f93\u51fa\u7279\u5f81\u56fe\u7684\u6df1\u5ea6\uff09\u3002\u4f8b\u5982128\u4e2a\uff0c\u610f\u5473\u7740\u8fd9\u4e00\u5c42\u4f1a\u5b66\u4e60128\u79cd\u4e0d\u540c\u7684\u5c40\u90e8\u6a21\u5f0f\u3002</li> <li><code>kernel_size=KERNEL_SIZE_1</code>: 1D\u5377\u79ef\u7a97\u53e3\u7684\u957f\u5ea6\u3002\u4f8b\u59827\uff0c\u8868\u793a\u5377\u79ef\u6838\u4e00\u6b21\u67e5\u770b7\u4e2a\u8fde\u7eed\u7684\u6c28\u57fa\u9178\uff08\u7684\u5d4c\u5165\u5411\u91cf\uff09\u3002</li> <li><code>activation='relu'</code>: \u6fc0\u6d3b\u51fd\u6570\uff0c\u5f15\u5165\u975e\u7ebf\u6027\uff0c\u4f7f\u5f97\u6a21\u578b\u80fd\u5b66\u4e60\u66f4\u590d\u6742\u7684\u6a21\u5f0f\u3002ReLU (Rectified Linear Unit) \u662f\u5e38\u7528\u7684\u6fc0\u6d3b\u51fd\u6570\u3002</li> <li><code>padding='same'</code>: \u586b\u5145\u7b56\u7565\u3002<code>'same'</code>\u8868\u793a\u5728\u8f93\u5165\u5e8f\u5217\u7684\u4e24\u7aef\u8fdb\u884c\u586b\u5145\uff0c\u4f7f\u5f97\u5377\u79ef\u64cd\u4f5c\u540e\u7684\u8f93\u51fa\u5e8f\u5217\u957f\u5ea6\u4e0e\u8f93\u5165\u5e8f\u5217\u957f\u5ea6\u76f8\u540c\uff08\u5bf9\u4e8e\u5377\u79ef\u7684\u201c\u65f6\u95f4\u201d\u7ef4\u5ea6\u800c\u8a00\uff09\u3002</li> </ul> </li> <li>\u8f93\u51fa\uff1a \u5f62\u72b6\u4e3a <code>(batch_size, MAX_SEQUENCE_LENGTH, NUM_FILTERS_1)</code> \u76843D\u5f20\u91cf\u3002</li> </ul> </li> <li><code>MaxPooling1D</code> (\u4e00\u7ef4\u6700\u5927\u6c60\u5316\u5c42):<ul> <li>\u76ee\u7684\uff1a \u5bf9\u5377\u79ef\u5c42\u8f93\u51fa\u7684\u7279\u5f81\u56fe\u8fdb\u884c\u4e0b\u91c7\u6837\u3002\u5b83\u901a\u8fc7\u53d6\u7279\u5f81\u56fe\u5c40\u90e8\u533a\u57df\u7684\u6700\u5927\u503c\u6765\u51cf\u5c11\u6570\u636e\u7684\u7ef4\u5ea6\uff0c\u6709\u52a9\u4e8e\uff1a<ul> <li>\u51cf\u5c11\u540e\u7eed\u5c42\u7684\u8ba1\u7b97\u91cf\u3002</li> <li>\u63d0\u53d6\u6700\u663e\u8457\u7684\u7279\u5f81\uff0c\u4f7f\u5f97\u6a21\u578b\u5bf9\u6a21\u4f53\u5728\u5e8f\u5217\u4e2d\u7684\u5177\u4f53\u4f4d\u7f6e\u4e0d\u90a3\u4e48\u654f\u611f\uff08\u5e73\u79fb\u4e0d\u53d8\u6027\uff09\u3002</li> </ul> </li> <li>\u53c2\u6570\u89e3\u91ca\uff1a<ul> <li><code>pool_size=2</code>: \u6c60\u5316\u7a97\u53e3\u7684\u5927\u5c0f\u3002\u8fd9\u91cc\u4e3a2\uff0c\u610f\u5473\u7740\u5c06\u5e8f\u5217\u957f\u5ea6\u51cf\u534a\uff08\u5927\u7ea6\uff09\u3002</li> </ul> </li> <li>\u8f93\u51fa\uff1a \u5f62\u72b6\u4e3a <code>(batch_size, MAX_SEQUENCE_LENGTH / 2, NUM_FILTERS_1)</code> \u76843D\u5f20\u91cf\u3002</li> </ul> </li> <li><code>Dropout</code> (\u4e22\u5f03\u5c42):<ul> <li>\u76ee\u7684\uff1a \u6b63\u5219\u5316\u6280\u672f\uff0c\u7528\u4e8e\u9632\u6b62\u6a21\u578b\u5728\u8bad\u7ec3\u6570\u636e\u4e0a\u8fc7\u62df\u5408\u3002\u5b83\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u4ee5\u4e00\u5b9a\u7684\u6982\u7387 (<code>DROPOUT_RATE</code>) \u968f\u673a\u5730\u5c06\u8f93\u5165\u5355\u5143\uff08\u795e\u7ecf\u5143\uff09\u7684\u6fc0\u6d3b\u503c\u8bbe\u7f6e\u4e3a0\u3002</li> <li>\u53c2\u6570\u89e3\u91ca\uff1a<ul> <li><code>rate=DROPOUT_RATE</code>: \u9700\u8981\u4e22\u5f03\u7684\u8f93\u5165\u5355\u5143\u7684\u6bd4\u4f8b\uff0c\u4f8b\u59820.4\u8868\u793a40%\u3002</li> </ul> </li> <li>\u5de5\u4f5c\u65b9\u5f0f\uff1a \u8feb\u4f7f\u7f51\u7edc\u5b66\u4e60\u5197\u4f59\u8868\u793a\uff0c\u51cf\u5c11\u795e\u7ecf\u5143\u4e4b\u95f4\u7684\u5171\u540c\u9002\u5e94\uff0c\u4ece\u800c\u63d0\u9ad8\u6a21\u578b\u7684\u6cdb\u5316\u80fd\u529b\u3002\u5728\u6d4b\u8bd5\u65f6\uff0cDropout\u5c42\u4e0d\u8d77\u4f5c\u7528\uff0c\u6240\u6709\u5355\u5143\u90fd\u4fdd\u6301\u6fc0\u6d3b\u72b6\u6001\uff08\u4f46\u5176\u8f93\u51fa\u4f1a\u6309\u6bd4\u4f8b\u7f29\u5c0f\uff09\u3002 3. \u7b2c\u4e8c\u4e2a\u5377\u79ef\u5757 (\u4e0e\u7b2c\u4e00\u4e2a\u7c7b\u4f3c\uff0c\u53ef\u9009)</li> </ul> </li> </ul> <p>Python</p> <pre><code>model.add(Conv1D(filters=NUM_FILTERS_2,\n                 kernel_size=KERNEL_SIZE_2,\n                 activation='relu',\n                 padding='same',\n                 name=\"conv1d_2\"))\nmodel.add(MaxPooling1D(pool_size=2, name=\"maxpool1d_2\"))\nmodel.add(Dropout(DROPOUT_RATE, name=\"dropout_2\"))\n</code></pre> <ul> <li>\u76ee\u7684\uff1a \u5728\u7b2c\u4e00\u4e2a\u5377\u79ef\u5757\u63d0\u53d6\u7684\u7279\u5f81\u57fa\u7840\u4e0a\uff0c\u5b66\u4e60\u66f4\u9ad8\u7ea7\u522b\u3001\u66f4\u590d\u6742\u7684\u7279\u5f81\u6a21\u5f0f\u3002\u901a\u5e38\uff0c\u7f51\u7edc\u4e2d\u66f4\u6df1\u7684\u5377\u79ef\u5c42\u80fd\u6355\u6349\u5230\u66f4\u5927\u611f\u53d7\u91ce\u7684\u7279\u5f81\u3002</li> <li>\u53c2\u6570\u548c\u5de5\u4f5c\u65b9\u5f0f \u4e0e\u7b2c\u4e00\u4e2a\u5377\u79ef\u5757\u7c7b\u4f3c\uff0c\u4f46\u53ef\u4ee5\u6709\u4e0d\u540c\u7684<code>filters</code>\u548c<code>kernel_size</code>\u3002</li> <li>\u8f93\u51fa\uff1a \u7ecf\u8fc7\u8fd9\u4e2a\u5757\u540e\uff0c\u5e8f\u5217\u957f\u5ea6\u4f1a\u8fdb\u4e00\u6b65\u51cf\u5c0f\uff08\u5982\u679c<code>pool_size=2</code>\uff0c\u5219\u518d\u51cf\u534a\uff09\uff0c\u7279\u5f81\u56fe\u7684\u6df1\u5ea6\u53d8\u4e3a<code>NUM_FILTERS_2</code>\u3002\u4f8b\u5982\uff0c\u5f62\u72b6\u53d8\u4e3a <code>(batch_size, MAX_SEQUENCE_LENGTH / 4, NUM_FILTERS_2)</code>\u3002 4. <code>GlobalMaxPooling1D</code> (\u5168\u5c40\u6700\u5927\u6c60\u5316\u5c42)</li> </ul> <p>Python</p> <pre><code>model.add(GlobalMaxPooling1D(name=\"global_maxpool1d\"))\n</code></pre> <ul> <li>\u76ee\u7684\uff1a \u5c06\u524d\u4e00\u4e2a\u5377\u79ef\u5757\u8f93\u51fa\u7684\u6bcf\u4e2a\u7279\u5f81\u56fe\uff08\u5bf9\u5e94\u6bcf\u4e2a\u6ee4\u6ce2\u5668\uff09\u5728\u6574\u4e2a\u5e8f\u5217\u7ef4\u5ea6\u4e0a\u8fdb\u884c\u6700\u5927\u6c60\u5316\u3002\u4e5f\u5c31\u662f\u8bf4\uff0c\u5bf9\u4e8e<code>NUM_FILTERS_2</code>\u4e2a\u7279\u5f81\u56fe\u4e2d\u7684\u6bcf\u4e00\u4e2a\uff0c\u5b83\u53ea\u4fdd\u7559\u8be5\u7279\u5f81\u56fe\u5728\u6240\u6709\u65f6\u95f4\u6b65\uff08\u5e8f\u5217\u4f4d\u7f6e\uff09\u4e0a\u7684\u6700\u5927\u503c\u3002</li> <li>\u5de5\u4f5c\u65b9\u5f0f\uff1a \u5c06\u5f62\u72b6\u4e3a <code>(batch_size, steps, features)</code> \u7684\u8f93\u5165\u8f6c\u6362\u4e3a\u5f62\u72b6\u4e3a <code>(batch_size, features)</code> \u7684\u8f93\u51fa\u3002\u8fd9\u6709\u6548\u5730\u4e3a\u6bcf\u4e2a\u8f93\u5165\u5e8f\u5217\u751f\u6210\u4e86\u4e00\u4e2a\u56fa\u5b9a\u957f\u5ea6\u7684\u7279\u5f81\u5411\u91cf\uff0c\u65e0\u8bba\u5728\u5377\u79ef\u8fc7\u7a0b\u4e2d\u5e8f\u5217\u957f\u5ea6\u5982\u4f55\u53d8\u5316\u3002\u8fd9\u4e2a\u5411\u91cf\u53ef\u4ee5\u88ab\u770b\u4f5c\u662f\u6574\u4e2a\u5e8f\u5217\u6700\u91cd\u8981\u7684\u7279\u5f81\u7684\u603b\u7ed3\u3002</li> <li>\u66ff\u4ee3\u65b9\u6848\uff1a \u53ef\u4ee5\u4f7f\u7528<code>Flatten()</code>\u5c42\uff0c\u5b83\u4f1a\u5c06\u6240\u6709\u7279\u5f81\u56fe\u7684\u6240\u6709\u503c\u5c55\u5e73\u6210\u4e00\u4e2a\u957f\u5411\u91cf\u3002\u4f46<code>GlobalMaxPooling1D</code> (\u6216<code>GlobalAveragePooling1D</code>) \u901a\u5e38\u5728\u5e8f\u5217\u5206\u7c7b\u4e2d\u8868\u73b0\u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u5bf9\u8f93\u5165\u957f\u5ea6\u7684\u53d8\u5316\u66f4\u4e0d\u654f\u611f\uff0c\u5e76\u4e14\u80fd\u51cf\u5c11\u53c2\u6570\u6570\u91cf\u3002</li> <li>\u8f93\u51fa\uff1a \u5f62\u72b6\u4e3a <code>(batch_size, NUM_FILTERS_2)</code> \u76842D\u5f20\u91cf\u3002 5. \u7b2c\u4e00\u4e2a\u5168\u8fde\u63a5\uff08\u7a20\u5bc6\uff09\u9690\u5c42 (<code>Dense</code>, <code>Dropout</code>)</li> </ul> <p>Python</p> <pre><code>model.add(Dense(DENSE_UNITS, activation='relu', name=\"dense_hidden\"))\nmodel.add(Dropout(DROPOUT_RATE, name=\"dropout_dense\"))\n</code></pre> <ul> <li><code>Dense</code> (\u5168\u8fde\u63a5\u5c42):<ul> <li>\u76ee\u7684\uff1a \u5728\u5377\u79ef\u548c\u6c60\u5316\u5c42\u63d0\u53d6\u7684\u7279\u5f81\u57fa\u7840\u4e0a\u8fdb\u884c\u66f4\u9ad8\u5c42\u6b21\u7684\u975e\u7ebf\u6027\u7ec4\u5408\uff0c\u4ee5\u5b66\u4e60\u7c7b\u522b\u4e4b\u95f4\u7684\u590d\u6742\u5173\u7cfb\u3002</li> <li>\u53c2\u6570\u89e3\u91ca\uff1a<ul> <li><code>units=DENSE_UNITS</code>: \u8be5\u5c42\u795e\u7ecf\u5143\u7684\u6570\u91cf\uff0c\u4f8b\u5982128\u3002</li> <li><code>activation='relu'</code>: \u6fc0\u6d3b\u51fd\u6570\u3002</li> </ul> </li> <li>\u5de5\u4f5c\u65b9\u5f0f\uff1a \u6bcf\u4e2a\u795e\u7ecf\u5143\u90fd\u4e0e\u524d\u4e00\u5c42\uff08<code>GlobalMaxPooling1D</code>\u7684\u8f93\u51fa\uff09\u7684\u6240\u6709\u5355\u5143\u76f8\u8fde\u63a5\u3002</li> <li>\u8f93\u51fa\uff1a \u5f62\u72b6\u4e3a <code>(batch_size, DENSE_UNITS)</code> \u76842D\u5f20\u91cf\u3002</li> </ul> </li> <li><code>Dropout</code>: \u540c\u6837\u7528\u4e8e\u9632\u6b62\u8fc7\u62df\u5408\u3002 6. \u8f93\u51fa\u5c42 (<code>Dense</code>)</li> </ul> <p>Python</p> <pre><code>model.add(Dense(NUM_CLASSES, activation='softmax', name=\"output_softmax\"))\n</code></pre> <ul> <li>\u76ee\u7684\uff1a \u6700\u7ec8\u7684\u5206\u7c7b\u5c42\uff0c\u4e3a\u6bcf\u4e2a\u8f93\u5165\u5e8f\u5217\u8f93\u51fa\u5176\u5c5e\u4e8e\u5404\u4e2a\u9176\u7c7b\u522b\u7684\u6982\u7387\u3002</li> <li>\u53c2\u6570\u89e3\u91ca\uff1a<ul> <li><code>units=NUM_CLASSES</code>: \u8f93\u51fa\u5355\u5143\u7684\u6570\u91cf\uff0c\u7b49\u4e8e\u4f60\u8981\u5206\u7c7b\u7684\u9176\u7684\u7c7b\u522b\u603b\u6570\uff08\u4f8b\u59825\u4e2a\u7c7b\u522b\uff09\u3002</li> <li><code>activation='softmax'</code>: Softmax\u6fc0\u6d3b\u51fd\u6570\u3002\u5b83\u5c06\u8f93\u51fa\u5c42\u7684\u539f\u59cb\u8f93\u51fa\uff08logits\uff09\u8f6c\u6362\u4e3a\u4e00\u4e2a\u6982\u7387\u5206\u5e03\uff0c\u786e\u4fdd\u6240\u6709\u8f93\u51fa\u6982\u7387\u503c\u90fd\u57280\u52301\u4e4b\u95f4\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u603b\u548c\u4e3a1\u3002\u6bcf\u4e2a\u8f93\u51fa\u5355\u5143\u5bf9\u5e94\u4e00\u4e2a\u7c7b\u522b\u7684\u6982\u7387\u3002</li> </ul> </li> <li>\u8f93\u51fa\uff1a \u5f62\u72b6\u4e3a <code>(batch_size, NUM_CLASSES)</code> \u76842D\u5f20\u91cf\uff0c\u5176\u4e2d\u6bcf\u4e00\u884c\u662f\u4e00\u4e2a\u6982\u7387\u5206\u5e03\u3002</li> </ul> </li> </ol> <p>\u6a21\u578b\u7f16\u8bd1 (<code>model.compile(...)</code>)</p> <p>\u5728\u5b9a\u4e49\u5b8c\u6a21\u578b\u7ed3\u6784\u540e\uff0c\u9700\u8981\u7f16\u8bd1\u6a21\u578b\u6765\u914d\u7f6e\u5176\u5b66\u4e60\u8fc7\u7a0b\uff1a</p> <p>Python</p> <pre><code>model.compile(optimizer='adam',\n              loss='categorical_crossentropy',\n              metrics=['accuracy'])\n</code></pre> <ul> <li><code>optimizer='adam'</code> (\u4f18\u5316\u5668):<ul> <li>\u76ee\u7684\uff1a \u6307\u5b9a\u7528\u4e8e\u66f4\u65b0\u7f51\u7edc\u6743\u91cd\u4ee5\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u7684\u7b97\u6cd5\u3002</li> <li>'adam': \u4e00\u79cd\u5e38\u7528\u7684\u3001\u81ea\u9002\u5e94\u5b66\u4e60\u7387\u7684\u4f18\u5316\u7b97\u6cd5\uff0c\u901a\u5e38\u5728\u5404\u79cd\u4efb\u52a1\u4e2d\u8868\u73b0\u826f\u597d\uff0c\u6536\u655b\u901f\u5ea6\u8f83\u5feb\u3002</li> </ul> </li> <li><code>loss='categorical_crossentropy'</code> (\u635f\u5931\u51fd\u6570):<ul> <li>\u76ee\u7684\uff1a \u8861\u91cf\u6a21\u578b\u9884\u6d4b\u7ed3\u679c\u4e0e\u771f\u5b9e\u6807\u7b7e\u4e4b\u95f4\u7684\u5dee\u5f02\uff08\u201c\u8bef\u5dee\u201d\uff09\u3002\u8bad\u7ec3\u8fc7\u7a0b\u7684\u76ee\u6807\u662f\u6700\u5c0f\u5316\u8fd9\u4e2a\u635f\u5931\u3002</li> <li>'categorical_crossentropy': \u9002\u7528\u4e8e\u591a\u5206\u7c7b\u95ee\u9898\uff0c\u4e14\u771f\u5b9e\u6807\u7b7e\u662f\u72ec\u70ed\u7f16\u7801 (one-hot encoded) \u5f62\u5f0f\uff08\u4f8b\u5982\uff0c<code>[0,1,0,0,0]</code> \u4ee3\u8868\u5c5e\u4e8e\u7b2c2\u7c7b\uff09\u3002\u5982\u679c\u771f\u5b9e\u6807\u7b7e\u662f\u6574\u6570\u5f62\u5f0f\uff08\u4f8b\u5982\uff0c<code>1</code> \u4ee3\u8868\u5c5e\u4e8e\u7b2c2\u7c7b\uff09\uff0c\u5219\u5e94\u4f7f\u7528 <code>sparse_categorical_crossentropy</code>\u3002</li> </ul> </li> <li><code>metrics=['accuracy']</code> (\u8bc4\u4f30\u6307\u6807):<ul> <li>\u76ee\u7684\uff1a \u5728\u8bad\u7ec3\u548c\u8bc4\u4f30\u8fc7\u7a0b\u4e2d\u76d1\u63a7\u7684\u6307\u6807\uff0c\u7528\u4e8e\u5224\u65ad\u6a21\u578b\u7684\u6027\u80fd\u3002</li> <li>'accuracy': \u5bf9\u4e8e\u5206\u7c7b\u95ee\u9898\uff0c\u51c6\u786e\u7387\u662f\u6700\u76f4\u89c2\u7684\u6307\u6807\u4e4b\u4e00\uff0c\u8868\u793a\u88ab\u6b63\u786e\u5206\u7c7b\u7684\u6837\u672c\u6240\u5360\u7684\u6bd4\u4f8b\u3002</li> </ul> </li> </ul> <p>\u6574\u4f53\u6d41\u7a0b\u603b\u7ed3\uff1a</p> <ol> <li>\u8f93\u5165\u5e8f\u5217\u9996\u5148\u901a\u8fc7\u5d4c\u5165\u5c42\u8f6c\u6362\u4e3a\u5411\u91cf\u5e8f\u5217\uff0c\u6355\u6349\u6c28\u57fa\u9178\u7684\u8bed\u4e49\u4fe1\u606f\u3002</li> <li>\u7136\u540e\uff0c\u4e00\u7cfb\u5217\u5377\u79ef\u548c\u6c60\u5316\u5c42\uff08\u5377\u79ef\u5757\uff09\u50cf\u7279\u5f81\u63d0\u53d6\u5668\u4e00\u6837\u5de5\u4f5c\uff0c\u4ece\u5c40\u90e8\uff08\u77ed\u7684\u6c28\u57fa\u9178\u6a21\u5f0f\uff09\u5230\u9010\u6e10\u66f4\u5168\u5c40\u7684\u5c42\u9762\u5b66\u4e60\u5e8f\u5217\u4e2d\u7684\u5c42\u6b21\u5316\u7279\u5f81\u3002Dropout\u5c42\u5728\u5176\u4e2d\u5e2e\u52a9\u9632\u6b62\u8fc7\u62df\u5408\u3002</li> <li>\u5168\u5c40\u6c60\u5316\u5c42\uff08\u5982 <code>GlobalMaxPooling1D</code>\uff09\u5c06\u5377\u79ef\u90e8\u5206\u63d0\u53d6\u7684\u53ef\u53d8\u957f\u5ea6\u7279\u5f81\u56fe\u8f6c\u6362\u4e3a\u56fa\u5b9a\u957f\u5ea6\u7684\u7279\u5f81\u5411\u91cf\uff0c\u4ee3\u8868\u4e86\u6574\u4e2a\u5e8f\u5217\u7684\u5173\u952e\u4fe1\u606f\u3002</li> <li>\u8fd9\u4e2a\u7279\u5f81\u5411\u91cf\u63a5\u7740\u88ab\u9001\u5165\u4e00\u4e2a\u6216\u591a\u4e2a\u5168\u8fde\u63a5\uff08\u7a20\u5bc6\uff09\u5c42\uff0c\u8fd9\u4e9b\u5c42\u8fdb\u4e00\u6b65\u7ec4\u5408\u8fd9\u4e9b\u7279\u5f81\uff0c\u5e76\u5b66\u4e60\u5b83\u4eec\u4e0e\u6700\u7ec8\u9176\u7c7b\u522b\u4e4b\u95f4\u7684\u975e\u7ebf\u6027\u6620\u5c04\u5173\u7cfb\u3002</li> <li>\u6700\u540e\uff0c\u5e26\u6709Softmax\u6fc0\u6d3b\u7684\u8f93\u51fa\u5c42\u4ea7\u751f\u6bcf\u4e2a\u7c7b\u522b\u7684\u6982\u7387\uff0c\u4ece\u800c\u5b8c\u6210\u5206\u7c7b\u4efb\u52a1\u3002</li> <li>\u7f16\u8bd1\u6b65\u9aa4\u5219\u4e3a\u8fd9\u4e2a\u5b66\u4e60\u8fc7\u7a0b\u914d\u7f6e\u4e86\u4f18\u5316\u5668\u3001\u635f\u5931\u51fd\u6570\u548c\u8bc4\u4f30\u6807\u51c6\u3002</li> </ol> <p>\u8fd9\u4e2a\u6d41\u7a0b\u4f53\u73b0\u4e86\u6df1\u5ea6\u5b66\u4e60\u6a21\u578b\uff08\u7279\u522b\u662fCNN\uff09\u5728\u5904\u7406\u5e8f\u5217\u6570\u636e\u65f6\u4ece\u539f\u59cb\u8f93\u5165\u4e2d\u81ea\u52a8\u5b66\u4e60\u76f8\u5173\u7279\u5f81\u7684\u5f3a\u5927\u80fd\u529b\u3002\u6a21\u578b\u7684\u53c2\u6570\uff08\u6743\u91cd\u548c\u504f\u7f6e\uff09\u4f1a\u5728\u8bad\u7ec3\u8fc7\u7a0b\u4e2d\u901a\u8fc7\u53cd\u5411\u4f20\u64ad\u548c\u4f18\u5316\u5668\u4e0d\u65ad\u8c03\u6574\uff0c\u4ee5\u6700\u5c0f\u5316\u635f\u5931\u51fd\u6570\u3002</p>"},{"location":"note/courses/%E5%8C%BB%E8%8D%AF%E4%BA%BA%E5%B7%A5%E6%99%BA%E8%83%BD/%E6%A8%A1%E5%9E%8B/#_2","title":"\u6a21\u578b\u8bc4\u4f30","text":"<p>pip install https://ms-release.obs.cn-north-4.myhuaweicloud.com/2.2.14/MindSpore/cpu/x86_64/mindspore-2.2.14-cp37-cp37m-win_amd64.whl --trusted-host ms-release.obs.cn-north-4.myhuaweicloud.com -i https://pypi.tuna.tsinghua.edu.cn/simple</p>"},{"location":"note/cssu/24%E7%A7%8B%E5%86%AC%E8%88%9E%E4%BC%9A/","title":"\u65f6\u95f4\u7ebf","text":"<ul> <li> <p>11.17  \u8054\u7cfb\u821e\u534f\u786e\u5b9a\u821e\u66f2\u548c\u57f9\u8bad\u65f6\u95f4         \u7b56\u5212\u6848\u5b8c\u6210\u8bbe\u8ba1\u548c\u7269\u8d44\u6572\u5b9a</p> </li> <li> <p>11.17~11.24         - \u7acb\u9879\uff0c\u63a8\u6587\uff0c\u62a5\u540d      \u4eba\u5458\u6572\u5b9a(\u57f9\u8bad\u6b21\u6570 2\u6b21 and\u65f6\u95f4\uff1f) 21 22\uff1f\u5468\u672b\u5468\u4e2d\u4e24\u6b21\u57f9\u8bad</p> </li> <li> <p>11.24  \u5b8c\u6210\u5ba3\u4f20\u54c1\u8bbe\u8ba1\u548c\u7269\u8d44\u8d2d\u4e70</p> </li> <li> <p>11.29/30/12.1 \u821e\u4f1a\u73b0\u573a </p> </li> </ul>"},{"location":"note/cssu/24%E7%A7%8B%E5%86%AC%E8%88%9E%E4%BC%9A/#_2","title":"\u5206\u5de5","text":"<p>\u6d3b\u52a8\u4e3b\u9898\u5982\u4f55\u786e\u5b9a\uff1f\uff0811.11 8\u70b9\uff09\u9700\u8981\u4e3b\u9898\u786e\u5b9a\u4e86\u624d\u80fd\u5f00\u59cb\u7b56\u5212 \u4e3b\u6301\u4eba\u53d1\u95ee\u5377\u62db\u52df+\u9762\u8bd5\u8fd8\u662f\u5185\u90e8\u4eba\u5458\uff1f\u5148\u5185\u90e8\u62db\u52df\uff0c\u6ca1\u4eba\u7684\u8bdd\u518d\u53d1\u95ee\u5377</p>"},{"location":"note/cssu/24%E7%A7%8B%E5%86%AC%E8%88%9E%E4%BC%9A/#1","title":"1 \u7b56\u5212\u6848\u90e8\u5206","text":"<ul> <li>\u6d3b\u52a8\u65b9\u6848\uff08\u6d3b\u52a8\u6d41\u7a0b\u8bbe\u8ba1\uff0c\u73b0\u573a\u6e38\u620f\u7b56\u5212\uff0c\u642d\u6863\u6253\u5361\u5185\u5bb9\uff0c\u5e94\u6025\u9884\u6848\uff09+\u7269\u8d44\u6572\u5b9a \u7acb\u9879\u8ba1\u9662</li> <li>\u7f8e\u80b2\u4e8c\u8bfe\uff0c\u5fd7\u613f\u8005\u5c0f\u65f6\u6570\uff0c\u7533\u8bf7</li> </ul>"},{"location":"note/cssu/24%E7%A7%8B%E5%86%AC%E8%88%9E%E4%BC%9A/#2","title":"2 \u573a\u5730","text":"<ul> <li>\u786e\u5b9a\u573a\u5730\uff08\u5f85\u786e\u5b9a\uff0c\u8d39\u7528\uff09+\u7269\u8d44\uff08\u98df\u54c1\uff0c\u62a5\u9500\u53ef\u80fd\u6709\u95ee\u9898\uff09\u8d2d\u4e70\uff0c\u62a5\u9500 \u7535\u6c14</li> </ul>"},{"location":"note/cssu/24%E7%A7%8B%E5%86%AC%E8%88%9E%E4%BC%9A/#3","title":"3 \u5ba3\u4f20\u54c1\u8bbe\u8ba1","text":"<ul> <li>\u5ba3\u4f20\u54c1\uff08\u6d77\u62a5\uff0c\u63a8\u6587\uff09\u8bbe\u8ba1+\u73b0\u573a\u4e3b\u9898\u8bbe\u8ba1 \u8ba1\u9662\u4f20\u5a92+\u7535\u6c14</li> </ul>"},{"location":"note/cssu/24%E7%A7%8B%E5%86%AC%E8%88%9E%E4%BC%9A/#4","title":"4 \u4eba\u5458+\u57f9\u8bad","text":"<ul> <li>\u8054\u7cfb\u821e\u534f\u786e\u5b9a\u821e\u66f2\u548c\u57f9\u8bad\u65f6\u95f4\uff08\u821e\u534f\u65f6\u95f4\uff09\uff08\u573a\u5730\uff0c\u540c\u6837\u4e5f\u9700\u8981\u5de5\u4f5c\u4eba\u5458\uff09 \u793c\u4eea\u961f</li> <li> <p>\u62a5\u540d\u540e\u4eba\u5458\u5b89\u6392\uff08\u5355\u4eba\u7684\u914d\u5bf9\u642d\u6863\uff09\uff0c\u4e3b\u6301\u4eba\uff08\u62db\u52dfor\u5185\u90e8\u4eba\u5458\uff09\uff0c\u62a5\u540d\u8868\u53d1\u5e03\uff08\u53c2\u4e0e \u6d3b\u52a8\u4eba\u5458+\u5fd7\u613f\u8005\uff08\u4e09\u7ec4\u7ec7\u5185\u90e8\uff09\uff09  \u793c\u4eea\u961f \u53d1\u77ed\u4fe1\u5206\u644a\u4e00\u4e0b</p> </li> <li> <p>\u53ea\u6709\u4e00\u4e2a\u4eba\u662f\u5b66\u9662\u5185\u7684\u53ef\u4ee5\u62a5\u540d\uff08</p> </li> </ul>"},{"location":"note/cssu/24%E7%A7%8B%E5%86%AC%E8%88%9E%E4%BC%9A/#5","title":"5 \u73b0\u573a","text":"<p>\u73b0\u573a\u4e3b\u8981\u8d1f\u8d23\u3001\u534f\u8c03\u7b49\uff08\u5de5\u4f5c\u4eba\u5458\u4ece\u5404\u7ec4\u7ec7\u5185\u90e8\u62db\u52df\uff09\u7535\u6c14</p>"},{"location":"note/cssu/24%E7%A7%8B%E5%86%AC%E8%88%9E%E4%BC%9A/#_3","title":"\u95ee\u9898","text":"<p>\u901a\u52e4\uff0c\u5973\u751f\u4e0d\u591f\u7684\u60c5\u51b5</p>"},{"location":"note/self-study/LHY%20MachineLearning/Lec2%20What%20to%20do%20if%20my%20network%20fails%20to%20train/","title":"What to do if my network fails to train","text":""},{"location":"note/self-study/LHY%20MachineLearning/Lec2%20What%20to%20do%20if%20my%20network%20fails%20to%20train/#1-framework-of-ml","title":"1 FrameWork of ML","text":"<p>Training: - Step1: function with unknown \\(y=f_{\\theta}(x)\\) - Step2: define loss from training data - Step3: Optimization</p>"},{"location":"note/self-study/LHY%20MachineLearning/Lec2%20What%20to%20do%20if%20my%20network%20fails%20to%20train/#model-bias","title":"Model Bias","text":"<p>the model is too simple</p> <p>Solution: \u91cd\u65b0\u8bbe\u8ba1\u6a21\u578b\u4f7f\u5176\u66f4\u6709\u5f39\u6027</p>"},{"location":"note/self-study/LHY%20MachineLearning/Lec2%20What%20to%20do%20if%20my%20network%20fails%20to%20train/#2-optimization-issue","title":"2 Optimization Issue","text":"<p>\u6ca1\u80fd\u627e\u5230\u6700\u4f18\u7684function</p> <p>\u53ef\u4ee5\u5148\u4ece\u6bd4\u8f83\u6d45\u7684Model\u5f00\u59cb</p> <p>\u5982\u679c\u6df1\u7684model\u5728\u8bad\u7ec3\u96c6\u4e0a\u8868\u73b0\u66f4\u5dee\uff0c\u5c31\u662fOptimizatioin Issue</p> <p>Solution: More powerful optimization technology</p>"},{"location":"note/self-study/LHY%20MachineLearning/Lec2%20What%20to%20do%20if%20my%20network%20fails%20to%20train/#3-overfitting","title":"3 Overfitting","text":"<p>Solution: - Data augmentation: \u6839\u636e\u73b0\u6709\u7684\u6570\u636e\u6dfb\u52a0\u6570\u636e - \u9650\u5236\u6a21\u578b\u7684\u5f39\u6027\uff1a\u51cf\u5c11\u53c2\u6570\u3001\u795e\u7ecf\u5143\uff0c\u5171\u7528\u4e00\u7ebf\u53c2\u6570\uff0c\u7528\u6bd4\u8f83\u5c11\u7684feature     - Early Stopping     - Regularization     - Dropout</p>"},{"location":"note/self-study/LHY%20MachineLearning/Lecture%201%20Introduction%20of%20Deep%20Learning/","title":"Introduction of Deep Learning","text":"<p>\u673a\u5668\u5b66\u4e60\uff1a \u8ba9\u673a\u5668\u5177\u5907\u627e\u51fd\u6570\u7684\u80fd\u529b</p> <ul> <li>Regression: The function outputs a scalars\u6570\u503c</li> <li>Classification: Given Options\uff0c The functions outputs the current one</li> </ul> <p>Training  Steps\uff1a - Function with unknown parameters(base on domain knowledge)\u731c\u6d4b\u51fd\u6570\u7684\u53c2\u6570 - Define Loss from Training Data     - Loss \uff1ahow good a set of values is     - Label: \u6b63\u786e\u7684\u6570\u503c - Optimization:\u627e\u5230\u6700\u597d\u7684weight\u548cbias     - Gradient Desent:\u9996\u5148\u968f\u673a\u9009\u62e9\u4e00\u4e2a\u503c\uff0c\u7136\u540e\u8ba1\u7b97\u504f\u5bfc\uff0c\u5b66\u4e60\u7387\u4e58\u4e0a\u504f\u5bfc\u662f\u79fb\u52a8\u7684\u6b65\u957f\uff1b\u8fed\u4ee3\u66f4\u65b0\u53c2\u6570     - \u53ef\u80fd\u51fa\u73b0\u505c\u5728local minima\u7684\u95ee\u9898     - </p> <p>Model Bias: \u6765\u81ea\u6a21\u578b\u7684\u9650\u5236\uff0c\u4f8b\u5982linear function\u5c31\u6709\u5f88\u5927\u7684\u9650\u5236</p> <p>All Piecewise Linear Curves = constant + a set of (\u5206\u6bb5\u51fd\u6570)</p> <p>Sigmoid Function: \\(\\(y=c\\frac{1}{1+e^{1(b+wx_1)}}\\)\\)</p> <p>\u4fee\u6539\u53c2\u6570\u6765\u8c03\u6574\u62df\u5408\u7684\u6548\u679c</p> <p>New Model : More Features: $$ y=b+wx_1\\rightarrow y=b+\\sum_ic_isigmoid(b_i+w_ix_1) $$</p> \\[ y=b+\\sum_jw_jx_j\\rightarrow y=b+\\sum_ic_i~sigmoid(b_i+\\sum_jw_{ij}xj) \\] <p></p> <p>$$ \\begin{aligned} &amp;r=Wx+b \\&amp; a=\\sigma(r) \\&amp;y=b+c^Ta \\end{aligned} $$ - feature: \\(x\\) - Unknown parameters: \\(W,b,c^T,b\\),\u8fd9\u4e9b\u7ec4\u6210\u4e00\u4e2a\u957f\u5411\u91cf\\(\\theta\\)</p> <p>Loss: is a function of parameters \\(L(\\theta)\\)</p> \\[\\begin{aligned} &amp;\\theta=\\begin{bmatrix} \\theta_1\\\\\\theta_2\\\\\\cdots\\\\\\theta_n \\end{bmatrix}\\\\ &amp;\\theta^*= arg~min_{\\theta}L \\\\ &amp;g(gradient)=\\begin{bmatrix} \\frac{\\partial L}{\\partial \\theta_1}|_{\\theta=\\theta^0}\\\\ \\frac{\\partial L}{\\partial \\theta_2}|_{\\theta=\\theta^0}\\\\\\cdots \\end{bmatrix} \\\\&amp;g=\\bigtriangledown L(\\theta^0)\\\\ &amp;\\begin{bmatrix} \\theta_1^1\\\\\\theta_2^1\\\\\\cdots \\end{bmatrix}\\leftarrow\\begin{bmatrix} \\theta_1^0\\\\\\theta_2^0\\\\\\cdots \\end{bmatrix}-\\eta g \\end{aligned}\\] <p>\u5c06\u4e00\u6574\u4e2aL\u5212\u5206\u4e3a\u5f88\u591a\u4e2abatch\uff0c\u6bcf\u6b21\u8ba1\u7b97loss\uff0c\u66f4\u65b0\u53c2\u6570\u53ea\u662f\u7528\u5176\u4e2d\u4e00\u4e2abatch\uff0c</p> <p>1 epoch = see all the batches once</p> <p>ReLU: \\(\\(y=b+\\sum_{2i}c_imax(0,b_j+\\sum_jw_{ij}xj)\\)\\) Activation Function: \u4f8b\u5982Sigmoid,RuLU\uff0c\u5728\u673a\u5668\u5b66\u4e60\u4e2d\u7edf\u79f0\u4e3a\u6fc0\u6d3b\u51fd\u6570</p>"},{"location":"note/self-study/LHY%20MachineLearning/Lecture%201%20Introduction%20of%20Deep%20Learning/#1-pytorch-tutorial","title":"1 Pytorch tutorial","text":""},{"location":"note/self-study/LHY%20MachineLearning/Lecture%201%20Introduction%20of%20Deep%20Learning/#11-load-data","title":"1.1 Load Data","text":""},{"location":"note/self-study/LHY%20MachineLearning/Lecture%201%20Introduction%20of%20Deep%20Learning/#111-load-data","title":"1.1.1 Load Data","text":"<ul> <li><code>torch.utils.data.Dataset</code>:stores data samples and expected values</li> <li><code>torch.utils.data.Dataloader</code>: groups data in batches, enables multiprocessing <pre><code>dataset = MyDataset(file)\ndataloader = Dataloader(dataset, batch_size, shuffle=True )//Training:True,Testing:False\n</code></pre></li> </ul>"},{"location":"note/self-study/LHY%20MachineLearning/Lecture%201%20Introduction%20of%20Deep%20Learning/#112-tensor","title":"1.1.2 Tensor","text":"<pre><code>x = torch.tensor([[1, -1], [-1, 1]])\ny = x.sum()#\u5143\u7d20\u6c42\u548c\ny = x.mean()\ny = x.transpose(0,1) #\u8f6c\u7f6e\ny = x.squeeze(0)#\u79fb\u9664\u5927\u5c0f\u4e3a1\u7684\u7ef4\u5ea6\ny = x.unsqueeze(1)#\u6269\u5c55\u7ef4\u5ea6\uff0c\u8bbe\u7f6e\u4e3a1\nw = torch.cat([x,y,z],dim=1)#\u62fc\u63a5tensor\n</code></pre>"},{"location":"note/self-study/LHY%20MachineLearning/Lecture%201%20Introduction%20of%20Deep%20Learning/#1121-datatype","title":"1.1.2.1 Datatype","text":"<pre><code>torch.float\ntorch.long\ntorch.FloatTensor\ntorch.LongTensor\n</code></pre>"},{"location":"note/self-study/LHY%20MachineLearning/Lecture%201%20Introduction%20of%20Deep%20Learning/#1122-device","title":"1.1.2.2 Device","text":"<pre><code>x.to('cpu')#default\ntorch.cuda.is_available()\nx.to('cuda')\n</code></pre>"},{"location":"note/self-study/LHY%20MachineLearning/Lecture%201%20Introduction%20of%20Deep%20Learning/#113-gradient-calculation","title":"1.1.3 Gradient Calculation","text":"<pre><code>&gt;&gt;&gt; x = torch.tensor([[1., 0.], [-1., 1.]], requires_grad=True) \n&gt;&gt;&gt; z = x.pow(2).sum()  \n&gt;&gt;&gt; z.backwa\n&gt;&gt;&gt; rd() &gt;&gt;&gt; x.grad\n</code></pre>"},{"location":"note/self-study/LHY%20MachineLearning/Lecture%201%20Introduction%20of%20Deep%20Learning/#12-define-neural-network","title":"1.2 Define Neural Network","text":"<ul> <li>Linear Layer(Full-connected Layer)<code>nn.Linear(in_features,out_features)</code> <pre><code>&gt;&gt;&gt; layer = torch.nn.Linear(32, 64) \n&gt;&gt;&gt; layer.weight.shape \n    torch.Size([64, 32]) \n&gt;&gt;&gt; layer.bias.shape \n    torch.Size([64])\n</code></pre></li> <li>Non-Linear Activation Functions:<code>nn.Sigmoid()</code>,<code>nn.ReLU</code></li> </ul>"},{"location":"note/self-study/LHY%20MachineLearning/Lecture%201%20Introduction%20of%20Deep%20Learning/#13-loss-function","title":"1.3 Loss Function","text":"<pre><code>criterion = nn.MSELoss()\ncriterion = nn.CrossEntropyLoss()\nloss = criterion(model_output, expected_value)\n</code></pre>"},{"location":"note/self-study/LHY%20MachineLearning/Lecture%201%20Introduction%20of%20Deep%20Learning/#14-optimization-function","title":"1.4 Optimization Function","text":"<pre><code>optimizer = torch.optim.SGD(model.parameters(), lr, momentum = 0)\noptimizer.zero_grad()#reset gradients of model parameters.\nloss.backward()#backpropagate gradients of prediction loss\noptimizer.step() #adjust model parameters\n</code></pre>"},{"location":"note/self-study/LHY%20MachineLearning/Lecture%201%20Introduction%20of%20Deep%20Learning/#15-train","title":"1.5 Train","text":""},{"location":"note/self-study/cs106L/Lec11/","title":"Operator Overloading","text":"<p>How do operators work with classes? - \u6211\u4eec\u53ef\u4ee5\u50cf\u58f0\u660e\u51fd\u6570\u4e00\u6837\u58f0\u660eoperator - When we use that operator with our new object, it performs a custom function or operation - Just like in function overloading, if we give it the same name, it will override the operator\u2019s behavior!</p> <p>\u4e0d\u80fd\u88ab\u91cd\u8f7d\u7684\u8fd0\u7b97\u7b26\uff1a - Scope Resolution<code>::</code> - Ternary<code>?</code> - Member Access<code>.</code> - Pointer-to-member access<code>.*</code> - Object size, type and casting: <code>sizeof()</code> <code>typeid()</code> <code>case()</code></p> <p>overload\u7684\u4e24\u79cd\u65b9\u5f0f\uff1a - Member overloading     - \u5728\u81ea\u5df1\u7684\u7c7b\u4e2d\u8fdb\u884c\u91cd\u8f7d\u7684\u58f0\u660e - Non-Member overloading     - \u5728\u7c7b\u5b9a\u4e49\u4e4b\u5916\u8fdb\u884c\u58f0\u660e     - Define both the left and right hand objects as parameters</p> <p>Non-Member overloading </p> <p>this is actually prederred by the STL , and is more idiomatic C++</p> <ol> <li>\u5141\u8bb8\u5de6\u624b\u8fb9\uff08\u64cd\u4f5c\u6570\uff09\u4e3a\u975e\u7c7b\u7c7b\u578b\u3002</li> <li>\u5141\u8bb8\u6211\u4eec\u5bf9\u90a3\u4e9b\u6211\u4eec\u5e76\u4e0d\u62e5\u6709\u5176\u5b9a\u4e49\u7684\u7c7b\u91cd\u8f7d\u64cd\u4f5c\u7b26\u3002     a. \u6211\u4eec\u53ef\u4ee5\u5b9a\u4e49\u4e00\u4e2a\u64cd\u4f5c\u7b26\u6765\u5c06\u4e00\u4e2a\u65af\u5766\u798f\u5927\u5b66\u5b66\u53f7\uff08StanfordID\uff09\u4e0e\u4f60\u6240\u5b9a\u4e49\u7684\u5176\u4ed6\u81ea\u5b9a\u4e49\u7c7b\u8fdb\u884c\u6bd4\u8f83\u3002</li> </ol> <pre><code>tab: Non-member Operator Overloading\n`\nbool operator&lt; (const StanfordID&amp; lhs, const StanfordID&amp; rhs);\n`\ntab: Member Operator Overloading\n\n`bool StanfordID::operator&lt; (const StanfordID&amp; rhs) const{}`\n</code></pre> <p>The keyword allows non-member functions or classes to access private information in another class! <pre><code>class StanfordID { \nprivate: \nstd::string name; \nstd::string sunet; \nint idNumber; \npublic: \n// constructor for our StudentID \nStanfordID(std::string name, std::string sunet, int idNumber); \n//.... \nfriend bool operator &lt; (const StanfordID&amp; lhs, const StanfordID&amp; rhs); }\n</code></pre></p>"},{"location":"note/self-study/cs106L/Lec3/","title":"Initialization and References","text":""},{"location":"note/self-study/cs106L/Lec3/#initialization","title":"Initialization","text":"<p>\u76f4\u63a5\u521d\u59cb\u5316</p> <pre><code>int main(){\n    int foo = 12.0;\n    return 0;\n}\n</code></pre> <pre><code>    int foo(12.0);\n    return 0;\n</code></pre>"},{"location":"note/self-study/cs106L/Lec4/","title":"Streams","text":"<p>a general input/output abstraction  for cpp</p>"},{"location":"note/self-study/d2l/1%20%E5%BC%95%E8%A8%80/","title":"\u5f15\u8a00","text":"<p>\u673a\u5668\u5b66\u4e60\uff1a \u6211\u4eec\u53ea\u9700\u8981\u5b9a\u4e49\u4e00\u4e2a\u7075\u6d3b\u7684\u7a0b\u5e8f\u7b97\u6cd5\uff0c\u5176\u8f93\u51fa\u7531\u8bb8\u591a\u53c2\u6570\u51b3\u5b9a\uff0c\u7136\u540e\u4f7f\u7528\u6570\u636e\u96c6\u6765\u786e\u5b9a\u5f53\u4e0b\u7684\u6700\u4f73\u53c2\u6570\u96c6\uff0c\u8fd9\u4e9b\u53c2\u6570\u901a\u8fc7\u67d0\u79cd\u6027\u80fd\u5ea6\u91cf\u65b9\u5f0f\u6765\u8fbe\u5230\u5b8c\u6210\u4efb\u52a1\u7684\u6700\u4f73\u6027\u80fd</p> <p>\u5728\u5f00\u59cb\u7528\u673a\u5668\u5b66\u4e60\u7b97\u6cd5\u89e3\u51b3\u95ee\u9898\u4e4b\u524d\uff0c\u6211\u4eec\u5fc5\u987b\u7cbe\u786e\u5730\u5b9a\u4e49\u95ee\u9898\uff0c\u786e\u5b9a\u8f93\u5165\u548c\u8f93\u51fa\u7684\u6027\u8d28\uff0c\u5e76\u9009\u62e9\u5408\u9002\u7684\u6a21\u578b\u65cf</p> <p>\u6bcf\u4e2a\u6570\u636e\u96c6\u7531\u4e00\u4e2a\u4e2a_\u6837\u672c_\uff08example, sample\uff09\u7ec4\u6210\uff0c\u5927\u591a\u65f6\u5019\uff0c\u5b83\u4eec\u9075\u5faa\u72ec\u7acb\u540c\u5206\u5e03(independently and identically distributed, i.i.d.)\u3002 \u6837\u672c\u6709\u65f6\u4e5f\u53eb\u505a \u6570\u636e\u70b9 \uff08data point\uff09\u6216\u8005 \u6570\u636e\u5b9e\u4f8b\uff08data instance\uff09\uff0c\u901a\u5e38\u6bcf\u4e2a\u6837\u672c\u7531\u4e00\u7ec4\u79f0\u4e3a \u7279\u5f81 \uff08features\uff0c\u6216 \u534f\u53d8\u91cf \uff08covariates\uff09\uff09\u7684\u5c5e\u6027\u7ec4\u6210\u3002 \u673a\u5668\u5b66\u4e60\u6a21\u578b\u4f1a\u6839\u636e\u8fd9\u4e9b\u5c5e\u6027\u8fdb\u884c\u9884\u6d4b\u3002 \u5728\u4e0a\u9762\u7684\u76d1\u7763\u5b66\u4e60\u95ee\u9898\u4e2d\uff0c\u8981\u9884\u6d4b\u7684\u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u5c5e\u6027\uff0c\u5b83\u88ab\u79f0\u4e3a \u6807\u7b7e \uff08label\uff0c\u6216 \u76ee\u6807 \uff08target\uff09\uff09\u3002</p> <p>\u5f53\u6bcf\u4e2a\u6837\u672c\u7684\u7279\u5f81\u7c7b\u522b\u6570\u91cf\u90fd\u662f\u76f8\u540c\u7684\u65f6\u5019\uff0c\u5176\u7279\u5f81\u5411\u91cf\u662f\u56fa\u5b9a\u957f\u5ea6\u7684\uff0c\u8fd9\u4e2a\u957f\u5ea6\u88ab\u79f0\u4e3a\u6570\u636e\u7684 \u7ef4\u6570 \uff08dimensionality\uff09</p> <p>\u6df1\u5ea6\u5b66\u4e60\u4e0e\u7ecf\u5178\u65b9\u6cd5\u7684\u533a\u522b\u4e3b\u8981\u5728\u4e8e\uff1a\u524d\u8005\u5173\u6ce8\u7684\u529f\u80fd\u5f3a\u5927\u7684\u6a21\u578b\uff0c\u8fd9\u4e9b\u6a21\u578b\u7531\u795e\u7ecf\u7f51\u7edc\u9519\u7efc\u590d\u6742\u7684\u4ea4\u7ec7\u5728\u4e00\u8d77\uff0c\u5305\u542b\u5c42\u5c42\u6570\u636e\u8f6c\u6362\uff0c\u56e0\u6b64\u88ab\u79f0\u4e3a \u6df1\u5ea6\u5b66\u4e60 \uff08deep learning\uff09</p> <p>\u76ee\u6807\u51fd\u6570(Objective function):\u7528\u4e8e\u5b9a\u4e49\u6a21\u578b\u4f18\u52a3\u7a0b\u5ea6\u7684\u5ea6\u91cf\u3002\u6211\u4eec\u901a\u5e38\u5b9a\u4e49\u4e00\u4e2a\u76ee\u6807\u51fd\u6570\uff0c\u5e76\u5e0c\u671b\u4f18\u5316\u5b83\u5230\u6700\u4f4e\u70b9\u3002 \u56e0\u4e3a\u8d8a\u4f4e\u8d8a\u597d\uff0c\u6240\u4ee5\u8fd9\u4e9b\u51fd\u6570\u6709\u65f6\u88ab\u79f0\u4e3a \u635f\u5931\u51fd\u6570\uff08loss function\uff0c\u6216cost function\uff09</p> <p>\u6570\u636e\u96c6\u901a\u5e38\u53ef\u4ee5\u5206\u6210\u4e24\u90e8\u5206\uff1a \u8bad\u7ec3\u6570\u636e\u96c6\u7528\u4e8e\u62df\u5408\u6a21\u578b\u53c2\u6570\uff0c\u6d4b\u8bd5\u6570\u636e\u96c6\u7528\u4e8e\u8bc4\u4f30\u62df\u5408\u7684\u6a21\u578b</p> <p>\u5927\u591a\u6570\u6d41\u884c\u7684\u4f18\u5316\u7b97\u6cd5\u901a\u5e38\u57fa\u4e8e\u4e00\u79cd\u57fa\u672c\u65b9\u6cd5\uff1a\u68af\u5ea6\u4e0b\u964d</p>"},{"location":"note/self-study/d2l/1%20%E5%BC%95%E8%A8%80/#1","title":"1 \u5404\u79cd\u673a\u5668\u5b66\u4e60\u95ee\u9898","text":""},{"location":"note/self-study/d2l/1%20%E5%BC%95%E8%A8%80/#11","title":"1.1 \u76d1\u7763\u5b66\u4e60","text":"<p>supervised learning: \u64c5\u957f\u5728\u7ed9\u5b9a\u8f93\u5165\u7279\u5f81\u7684\u60c5\u51b5\u4e0b\u9884\u6d4b\u6807\u7b7e\uff0c\u6bcf\u4e2a\u201c\u7279\u5f81-\u6807\u7b7e\u201d\u5bf9\u90fd\u88ab\u79f0\u4e3a\u4e00\u4e2a\u6837\u672c</p> <p>\u76d1\u7763\u5b66\u4e60\u7684\u5b66\u4e60\u8fc7\u7a0b\u4e00\u822c\u53ef\u4ee5\u5206\u4e3a\u4e09\u5927\u6b65\u9aa4\uff1a</p> <ol> <li> <p>\u4ece\u5df2\u77e5\u5927\u91cf\u6570\u636e\u6837\u672c\u4e2d\u968f\u673a\u9009\u53d6\u4e00\u4e2a\u5b50\u96c6\uff0c\u4e3a\u6bcf\u4e2a\u6837\u672c\u83b7\u53d6\u771f\u5b9e\u6807\u7b7e\u3002\u6709\u65f6\uff0c\u8fd9\u4e9b\u6837\u672c\u5df2\u6709\u6807\u7b7e\uff08\u4f8b\u5982\uff0c\u60a3\u8005\u662f\u5426\u5728\u4e0b\u4e00\u5e74\u5185\u5eb7\u590d\uff1f\uff09\uff1b\u6709\u65f6\uff0c\u8fd9\u4e9b\u6837\u672c\u53ef\u80fd\u9700\u8981\u88ab\u4eba\u5de5\u6807\u8bb0\uff08\u4f8b\u5982\uff0c\u56fe\u50cf\u5206\u7c7b\uff09\u3002\u8fd9\u4e9b\u8f93\u5165\u548c\u76f8\u5e94\u7684\u6807\u7b7e\u4e00\u8d77\u6784\u6210\u4e86\u8bad\u7ec3\u6570\u636e\u96c6\uff1b</p> </li> <li> <p>\u9009\u62e9\u6709\u76d1\u7763\u7684\u5b66\u4e60\u7b97\u6cd5\uff0c\u5b83\u5c06\u8bad\u7ec3\u6570\u636e\u96c6\u4f5c\u4e3a\u8f93\u5165\uff0c\u5e76\u8f93\u51fa\u4e00\u4e2a\u201c\u5df2\u5b8c\u6210\u5b66\u4e60\u7684\u6a21\u578b\u201d\uff1b</p> </li> <li> <p>\u5c06\u4e4b\u524d\u6ca1\u6709\u89c1\u8fc7\u7684\u6837\u672c\u7279\u5f81\u653e\u5230\u8fd9\u4e2a\u201c\u5df2\u5b8c\u6210\u5b66\u4e60\u7684\u6a21\u578b\u201d\u4e2d\uff0c\u4f7f\u7528\u6a21\u578b\u7684\u8f93\u51fa\u4f5c\u4e3a\u76f8\u5e94\u6807\u7b7e\u7684\u9884\u6d4b\u3002</p> </li> </ol>"},{"location":"note/self-study/d2l/1%20%E5%BC%95%E8%A8%80/#111-regression","title":"1.1.1 \u56de\u5f52 regression","text":"<p>\u5f53\u6807\u7b7e\u53d6\u4e00\u4e2a\u4efb\u610f\u6570\u503c\u65f6\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u56de\u5f52\u95ee\u9898\u3002</p>"},{"location":"note/self-study/d2l/1%20%E5%BC%95%E8%A8%80/#112-classification","title":"1.1.2 \u5206\u7c7b classification","text":"<p>\u5206\u7c7b\u95ee\u9898\u5e0c\u671b\u6a21\u578b\u80fd\u591f\u9884\u6d4b\u6837\u672c\u5c5e\u4e8e\u54ea\u4e2a\u7c7b\u522b\uff08class/category\uff09</p> <p>\u5206\u7c7b\u95ee\u9898\u7684\u5e38\u89c1\u635f\u5931\u51fd\u6570\u88ab\u79f0\u4e3a\u4ea4\u53c9\u71b5\uff08cross-entropy\uff09</p>"},{"location":"note/self-study/d2l/1%20%E5%BC%95%E8%A8%80/#12","title":"1.2 \u65e0\u76d1\u7763\u5b66\u4e60","text":"<ul> <li>\u805a\u7c7b\u95ee\u9898\uff1a\u5728\u6ca1\u6709\u6807\u7b7e\u7684\u60c5\u51b5\u4e0b\u7ed9\u6570\u636e\u5206\u7c7b</li> <li>\u4e3b\u6210\u5206\u5206\u6790\u95ee\u9898\uff1a \u627e\u5230\u5c11\u91cf\u7684\u53c2\u6570\u6765\u51c6\u786e\u5730\u63cf\u8ff0\u6355\u6349\u6570\u636e\u7684\u7ebf\u6027\u76f8\u5173\u5c5e\u6027</li> <li>\u56e0\u679c\u5173\u7cfb\u548c\u6982\u7387\u56fe\u6a21\u578b\u95ee\u9898\uff1a \u63cf\u8ff0\u89c2\u5bdf\u5230\u7684\u8bb8\u591a\u6570\u636e\u7684\u6839\u672c\u539f\u56e0</li> <li>\u751f\u6210\u5bf9\u6297\u6027\u7f51\u7edc</li> </ul>"},{"location":"note/self-study/d2l/1%20%E5%BC%95%E8%A8%80/#121","title":"1.2.1 \u4e0e\u73af\u5883\u4e92\u52a8","text":"<p>\u4e0d\u7ba1\u662f\u76d1\u7763\u5b66\u4e60\u8fd8\u662f\u65e0\u76d1\u7763\u5b66\u4e60\uff0c\u6211\u4eec\u90fd\u4f1a\u9884\u5148\u83b7\u53d6\u5927\u91cf\u6570\u636e\uff0c\u7136\u540e\u542f\u52a8\u6a21\u578b\uff0c\u4e0d\u518d\u4e0e\u73af\u5883\u4ea4\u4e92\u3002 \u8fd9\u91cc\u6240\u6709\u5b66\u4e60\u90fd\u662f\u5728\u7b97\u6cd5\u4e0e\u73af\u5883\u65ad\u5f00\u540e\u8fdb\u884c\u7684\uff0c\u88ab\u79f0\u4e3a_\u79bb\u7ebf\u5b66\u4e60_\uff08offline learning\uff09\u3002</p> <p>\u5f3a\u5316\u5b66\u4e60\uff1a\u5728\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u4e2d\uff0c\u667a\u80fd\u4f53\u5728\u4e00\u7cfb\u5217\u7684\u4e8b\u4ef6\u6b65\u9aa4\u4e0a\u4e0e\u73af\u5883\u4ea4\u4e92\uff0c\u5728\u6bcf\u4e2a\u7279\u5b9a\u7684\u65f6\u95f4\u70b9\uff0c\u667a\u80fd\u4f53\u4ece\u73af\u5883\u63a5\u53d7\u4e00\u4e9bobservation\uff0c\u5e76\u4e14\u5fc5\u987b\u9009\u62e9\u4e00\u4e2aaction,\u7136\u540e\u901a\u8fc7\u67d0\u79cd\u673a\u5236\u5c06\u5176\u4f20\u8f93\u56de\u73af\u5883\uff0c\u6700\u540e\u667a\u80fd\u4f53\u4ece\u73af\u5883\u4e2d\u83b7\u5f97reward\u3002</p> <p>\u4e00\u822c\u7684\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u662f\u4e00\u4e2a\u975e\u5e38\u666e\u904d\u7684\u95ee\u9898\u3002 \u667a\u80fd\u4f53\u7684\u52a8\u4f5c\u4f1a\u5f71\u54cd\u540e\u7eed\u7684\u89c2\u5bdf\uff0c\u800c\u5956\u52b1\u53ea\u4e0e\u6240\u9009\u7684\u52a8\u4f5c\u76f8\u5bf9\u5e94\u3002 \u73af\u5883\u53ef\u4ee5\u662f\u5b8c\u6574\u89c2\u5bdf\u5230\u7684\uff0c\u4e5f\u53ef\u4ee5\u662f\u90e8\u5206\u89c2\u5bdf\u5230\u7684,\u89e3\u91ca\u6240\u6709\u8fd9\u4e9b\u590d\u6742\u6027\u53ef\u80fd\u4f1a\u5bf9\u7814\u7a76\u4eba\u5458\u8981\u6c42\u592a\u9ad8\u3002 \u6b64\u5916\uff0c\u5e76\u4e0d\u662f\u6bcf\u4e2a\u5b9e\u9645\u95ee\u9898\u90fd\u8868\u73b0\u51fa\u6240\u6709\u8fd9\u4e9b\u590d\u6742\u6027\u3002 \u56e0\u6b64\uff0c\u5b66\u8005\u4eec\u7814\u7a76\u4e86\u4e00\u4e9b\u7279\u6b8a\u60c5\u51b5\u4e0b\u7684\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u3002</p> <p>\u5f53\u73af\u5883\u53ef\u88ab\u5b8c\u5168\u89c2\u5bdf\u5230\u65f6\uff0c\u5f3a\u5316\u5b66\u4e60\u95ee\u9898\u88ab\u79f0\u4e3a_\u9a6c\u5c14\u53ef\u592b\u51b3\u7b56\u8fc7\u7a0b_\uff08markov decision process\uff09\u3002 \u5f53\u72b6\u6001\u4e0d\u4f9d\u8d56\u4e8e\u4e4b\u524d\u7684\u64cd\u4f5c\u65f6\uff0c\u6211\u4eec\u79f0\u8be5\u95ee\u9898\u4e3a \u4e0a\u4e0b\u6587\u8d4c\u535a\u673a \uff08contextual bandit problem\uff09\u3002 \u5f53\u6ca1\u6709\u72b6\u6001\uff0c\u53ea\u6709\u4e00\u7ec4\u6700\u521d\u672a\u77e5\u56de\u62a5\u7684\u53ef\u7528\u52a8\u4f5c\u65f6\uff0c\u8fd9\u4e2a\u95ee\u9898\u5c31\u662f\u7ecf\u5178\u7684 \u591a\u81c2\u8d4c\u535a\u673a \uff08multi-armed bandit problem\uff09\u3002</p>"},{"location":"note/self-study/d2l/%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/","title":"\u524d\u7f6e\u77e5\u8bc6","text":""},{"location":"note/self-study/d2l/%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/#1","title":"1 \u6570\u636e\u64cd\u4f5c\u4e0e\u6570\u636e\u9884\u5904\u7406","text":"<p>\u5f20\u91cf\u8868\u793a\u4e00\u4e2a\u7531\u6570\u503c\u7ec4\u6210\u7684\u6570\u7ec4\uff0c\u8fd9\u4e2a\u6570\u7ec4\u53ef\u80fd\u6709\u591a\u4e2a\u7ef4\u5ea6</p> <p>pytorch \u64cd\u4f5c\uff1a</p> <ul> <li><code>x = torch.arange(num)</code>\uff0c\u521b\u5efa\u4e00\u4e2a\u5305\u542b0\u5f00\u59cb\u7684\u524d12\u4e2a\u6574\u6570</li> <li><code>x.shape</code> \u901a\u8fc7\u5f20\u91cf\u7684shape\u5c5e\u6027\u8bbf\u95ee\u5f20\u91cf\u6cbf\u6bcf\u4e2a\u8f74\u7684\u957f\u5ea6</li> <li><code>x.numel</code> \u68c0\u67e5\u5f20\u91cf\u4e2d\u5143\u7d20\u7684\u603b\u6570/\u5927\u5c0f</li> <li><code>x.reshape(num_x,num_y)</code> \u6539\u53d8\u4e00\u4e2a\u5f20\u91cf\u7684\u5f62\u72b6\u800c\u4e0d\u6539\u53d8\u5143\u7d20\u6570\u91cf\u548c\u5143\u7d20\u503c\uff0c\u5f20\u91cf\u7684\u5927\u5c0f\u4e0d\u4f1a\u6539\u53d8\u3002\u4e0d\u8bb8\u8981\u624b\u52a8\u6307\u5b9a\u6bcf\u4e00\u4e2a\u7ef4\u5ea6\uff0c\u53ef\u4ee5\u4ee4<code>num</code>\u4e3a<code>-1</code>\u4f7f\u5176\u81ea\u52a8\u8ba1\u7b97\u7ef4\u5ea6</li> <li><code>torch.zeros((x,y,z,...))</code> \u521b\u5efa\u51680\u5f20\u91cf</li> <li><code>torch.ones((x,y,z,...))</code> \u521b\u5efa\u51681\u5f20\u91cf</li> <li><code>torch.randn(x,y,...)</code> \u5143\u7d20\u968f\u673a\u7684\u5f20\u91cf</li> <li><code>torch.tensor([[2, 1, 4, 3], [1, 2, 3, 4], [4, 3, 2, 1]])</code> \u63d0\u4f9b\u5305\u542b\u6570\u503c\u7684Python\u5217\u8868\uff08\u6216\u5d4c\u5957\u5217\u8868\uff09\uff0c\u6765\u4e3a\u6240\u9700\u5f20\u91cf\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u8d4b\u4e88\u786e\u5b9a\u503c</li> <li><code>x+y,x-y,x*y,x/y,x**y,torch.exp(x)</code> \u6309\u5143\u7d20\u64cd\u4f5c</li> <li><code>torch.cat((x,y),dim=?)</code>,\u628a\u591a\u4e2a\u5f20\u91cf\u8fde\u63a5\u5728\u4e00\u8d77</li> <li><code>x.sum()</code> \u5bf9\u6240\u6709\u5143\u7d20\u6c42\u548c\uff0c\u4ea7\u751f\u4e00\u4e2a\u5355\u5143\u7d20\u5f20\u91cf</li> </ul>"},{"location":"note/self-study/d2l/%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/#11","title":"1.1 \u5e7f\u64ad\u673a\u5236","text":"<p>\u5728\u67d0\u4e9b\u60c5\u51b5\u4e0b\uff0c\u5373\u4f7f\u5f62\u72b6\u4e0d\u540c\uff0c\u6211\u4eec\u4ecd\u7136\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528\u00a0\u5e7f\u64ad\u673a\u5236\uff08broadcasting mechanism\uff09\u6765\u6267\u884c\u6309\u5143\u7d20\u64cd\u4f5c\u3002\u8fd9\u79cd\u673a\u5236\u7684\u5de5\u4f5c\u65b9\u5f0f\u5982\u4e0b\uff1a</p> <ol> <li> <p>\u901a\u8fc7\u9002\u5f53\u590d\u5236\u5143\u7d20\u6765\u6269\u5c55\u4e00\u4e2a\u6216\u4e24\u4e2a\u6570\u7ec4\uff0c\u4ee5\u4fbf\u5728\u8f6c\u6362\u4e4b\u540e\uff0c\u4e24\u4e2a\u5f20\u91cf\u5177\u6709\u76f8\u540c\u7684\u5f62\u72b6\uff1b</p> </li> <li> <p>\u5bf9\u751f\u6210\u7684\u6570\u7ec4\u6267\u884c\u6309\u5143\u7d20\u64cd\u4f5c\u3002</p> </li> </ol> <p>\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c\u6211\u4eec\u5c06\u6cbf\u7740\u6570\u7ec4\u4e2d\u957f\u5ea6\u4e3a1\u7684\u8f74\u8fdb\u884c\u5e7f\u64ad\u3002</p>"},{"location":"note/self-study/d2l/%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/#12","title":"1.2 \u7d22\u5f15\u4e0e\u5207\u7247","text":"<p>\u4e0e\u4efb\u4f55Python\u6570\u7ec4\u4e00\u6837\uff1a\u7b2c\u4e00\u4e2a\u5143\u7d20\u7684\u7d22\u5f15\u662f0\uff0c\u6700\u540e\u4e00\u4e2a\u5143\u7d20\u7d22\u5f15\u662f-1\uff1b \u53ef\u4ee5\u6307\u5b9a\u8303\u56f4\u4ee5\u5305\u542b\u7b2c\u4e00\u4e2a\u5143\u7d20\u548c\u6700\u540e\u4e00\u4e2a\u4e4b\u524d\u7684\u5143\u7d20\u3002</p>"},{"location":"note/self-study/d2l/%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/#13","title":"1.3 \u8282\u7701\u5185\u5b58","text":"<p><code>id()</code>\u51fd\u6570\u7ed9\u6211\u4eec\u63d0\u4f9b\u4e86\u5185\u5b58\u4e2d\u5f15\u7528\u5bf9\u8c61\u7684\u786e\u5207\u4f4d\u7f6e</p> <p>\u6211\u4eec\u53ef\u4ee5\u4f7f\u7528\u5207\u7247\u8868\u793a\u6cd5\u5c06\u64cd\u4f5c\u7684\u7ed3\u679c\u5206\u914d\u7ed9\u5148\u524d\u5206\u914d\u7684\u6570\u7ec4\uff0c\u4f8b\u5982<code>Y[:]\u00a0=\u00a0&lt;expression&gt;</code>\u3002</p> <p><code>+=</code>\u64cd\u4f5c\u4e5f\u80fd\u591f\u51cf\u5c11\u64cd\u4f5c\u7684\u5185\u5b58\u5f00\u9500</p>"},{"location":"note/self-study/d2l/%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/#14-python","title":"1.4 \u8f6c\u6362\u4e3a\u5176\u4ed6python\u5bf9\u8c61","text":""},{"location":"note/self-study/d2l/%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/#2","title":"2 \u6570\u636e\u9884\u5904\u7406","text":"<p>CSV\u6587\u4ef6\uff1a \u9017\u53f7\u5206\u9694\u7b26\u6587\u4ef6</p> <p>\u8981\u4ece\u521b\u5efa\u7684CSV\u6587\u4ef6\u4e2d\u52a0\u8f7d\u539f\u59cb\u6570\u636e\u96c6\uff0c\u6211\u4eec\u5bfc\u5165<code>pandas</code>\u5305\u5e76\u8c03\u7528<code>read_csv</code>\u51fd\u6570\u3002</p> <pre><code>#\u52a0\u8f7d\u6570\u636e\u96c6\nimport pandas as pd\ndata = pd.read_csv(data_file)\nprint(data)\n#\u5904\u7406\u7f3a\u5931\u503c\n</code></pre>"},{"location":"note/self-study/d2l/%E5%89%8D%E7%BD%AE%E7%9F%A5%E8%AF%86/#3","title":"3 \u7ebf\u6027\u4ee3\u6570","text":"<pre><code>x = torch.arange(4)\nx.shape #\u5f62\u72b6\nA = torch.arange(20).reshape(5,4)#\u77e9\u9635\nA.T #\u8f6c\u7f6e\n</code></pre>"},{"location":"note/self-study/deeplearning/MITDP/Ch1%20Intro%20to%20Deep%20Learning/","title":"Intro to Deep Learning","text":""},{"location":"note/self-study/deeplearning/MITDP/Ch1%20Intro%20to%20Deep%20Learning/#1-the-perception","title":"1 The Perception \u611f\u77e5\u673a","text":"<p>\u4e00\u4e2a Perception \u662f\u4e00\u4e2a neuron,\u4e00\u4e2a\u795e\u7ecf\u7f51\u7edc\u7531\u5927\u91cf\u7684\u795e\u7ecf\u5143\u7ec4\u6210</p>"},{"location":"note/self-study/deeplearning/MITDP/Ch1%20Intro%20to%20Deep%20Learning/#11-forward-propagation","title":"1.1 Forward Propagation","text":"<p>bias term: \u504f\u7f6e\u9879\uff0c\u4f7f\u6fc0\u6d3b\u51fd\u6570\u5728\u6c34\u5e73\u65b9\u5411\u4e0a\u79fb\u52a8</p> <p>X: input</p> <p>W: weight</p> <p>Activation Functions: \u6fc0\u6d3b\u51fd\u6570\uff0c\u975e\u7ebf\u6027\uff0c</p> <p>\u4e09\u4e2a\u6b65\u9aa4\uff1a - dot product - bias - non-linearty</p> <p>Quantifying Loss: The loss of our network measures the cost incurred from incorrect predictions \u4ee5\u9884\u6d4b\u503c\u548c\u771f\u5b9e\u503c\u4e3a\u8f93\u5165,\u6559\u5bfc\u795e\u7ecf\u7f51\u8def\u72af\u9519\u65f6\u662f\u600e\u4e48\u505a\u7684</p> <ul> <li>\u4ea4\u53c9\u71b5, Binary Cross Entropy Loss, can be used with models that output a probability  between 0 and 1.</li> <li></li> <li>\u5747\u65b9\u8bef\u5dee\u635f\u5931\uff0cMean Squared Error Loss, can be used with regression models that output continuous real numbers\uff0c</li> <li></li> </ul> <p>Common Activation Functions:</p> <ul> <li>ReLU\uff1a Rectified Linear Unit \u6574\u6d41\uff0c</li> </ul> <p></p> <p>\u6fc0\u6d3b\u51fd\u6570\u7684\u76ee\u7684\u662f\u5728\u795e\u7ecf\u7f51\u7edc\u4e2d\u5f15\u5165\u975e\u7ebf\u6027\uff0c\u4f7f\u5176\u5177\u6709\u5904\u7406\u975e\u7ebf\u6027\u6570\u636e\u7684\u80fd\u529b </p>"},{"location":"note/self-study/deeplearning/MITDP/Ch1%20Intro%20to%20Deep%20Learning/#2-training-neural-networks","title":"2 Training Neural Networks","text":""},{"location":"note/self-study/deeplearning/MITDP/Ch1%20Intro%20to%20Deep%20Learning/#21-loss-optimization","title":"2.1 Loss Optimization","text":"<p>\u6211\u4eec\u5e0c\u671b\u80fd\u591f\u627e\u5230\u7f51\u7edc\u6743\u91cd\u4f7f\u635f\u5931\u6700\u5c0f \u200b Our Loss is a function of the network weights</p> <p>Gradient Descent \u68af\u5ea6\u4e0b\u964d\uff1a back propagation\u53cd\u5411\u4f20\u64ad\uff1a  \u4ece\u8f93\u51fa\u5411\u8f93\u51fa\u53cd\u5411\u4f20\u64ad\uff0c\u901a\u8fc7\u94fe\u5f0f\u6cd5\u5219\u8ba1\u7b97\u51fa\u6bcf\u4e00\u4e2a\u72ec\u7acb\u7684\u6743\u91cd\u7684\u5c0f\u53d8\u5316\u5bf9\u635f\u5931\u51fd\u6570\u7684\u5f71\u54cd</p> <p>\\(\\eta\\)\uff0c\u5b66\u4e60\u7387\uff1a\\(W\\leftarrow W - \\eta \\frac{\\partial J(W)}{\\partial W}\\) \u57fa\u672c\u786e\u5b9a\u671d\u68af\u5ea6\u65b9\u5411\u79fb\u52a8\u591a\u5c11</p> <p>\u5982\u4f55\u5bfb\u627e\u5408\u9002\u7684\u5b66\u4e60\u7387\uff1f \u8bbe\u8ba1\u81ea\u9002\u5e94\u5b66\u4e60\u7b97\u6cd5\uff0c</p>"},{"location":"note/self-study/deeplearning/MITDP/Ch1%20Intro%20to%20Deep%20Learning/#211-gradient-descent-algorithms","title":"2.1.1 Gradient descent algorithms","text":"<ul> <li>Stochastic Gradient Descent \uff08SGD\uff09:\u968f\u673a\u68af\u5ea6\u4e0b\u964d \u3002\u6bcf\u6b21\u5faa\u73af\u53ea\u6311\u9009B\u4e2a\u6570\u636e\u8fdb\u884c\u68af\u5ea6\u4e0b\u964d\uff08minibatch).</li> <li></li> </ul>"},{"location":"note/self-study/deeplearning/MITDP/Ch1%20Intro%20to%20Deep%20Learning/#212-overfitting","title":"2.1.2 Overfitting \u8fc7\u62df\u5408","text":"<p>Too complex, extra parameters, does not generate well Regularization: \u4e3a\u89e3\u51b3\u9002\u5b9a\u6027\u95ee\u9898\u6216\u8fc7\u62df\u5408\u800c\u52a0\u5165\u989d\u5916\u4fe1\u606f\u7684\u8fc7\u7a0b</p> <ul> <li>Dropout: \u968f\u673a\u9009\u62e9\u4e00\u4e9b\u795e\u7ecf\u5143\u5b50\u96c6\u5e76\u4ee5\u4e00\u5b9a\u7684\u6982\u7387\u5c06\u5176\u526a\u679d\u3002Forces network to not rely on any I node</li> <li>Early Stopping: \u5c06\u4e00\u90e8\u5206\u8bad\u7ec3\u96c6\u62ff\u51fa\u6765\u8fdb\u884c\u6d4b\u8bd5\u3002\u5f53\u6d4b\u8bd5\u96c6\u7684loss\u589e\u52a0\u65f6\uff0c\u6b64\u65f6\u53d1\u751f\u8fc7\u62df\u5408\u4e86.\u627e\u5230\u8fd9\u4e2a\u70b9\u5e76\u505c\u6b62\u8fdb\u884c\u6b63\u5219\u5316</li> </ul>"},{"location":"note/self-study/deeplearning/MITDP/Ch2%20Deep%20Sequence%20Modeling/","title":"Deep Sequence Modeling","text":"<p>\u6839\u636e\u8fc7\u53bb\u7684\u4fe1\u606f\u8fdb\u884c\u9884\u6d4b</p> <p>Sequence Modeling Applications: - Many to one : Sentiment Classification,\u6839\u636e\u4e00\u53e5\u8bdd\u5224\u65ad\u60c5\u7eea\u662f\u6d88\u6781\u7684\u8fd8\u662f\u79ef\u6781\u7684 - One to Many: \u6839\u636e\u4e00\u5f20\u56fe\u7247\u6765\u8f93\u51fa\u4e00\u4e2a\u6807\u9898 - Many to Many: \u673a\u5668\u7ffb\u8bd1</p>"},{"location":"note/self-study/deeplearning/MITDP/Ch2%20Deep%20Sequence%20Modeling/#1-neurons-with-recurrence","title":"1 Neurons with Recurrence","text":"<p> \u5c06H\u89c6\u4e3a\u8bb0\u5fc6\u9879\uff0c\u7531\u795e\u7ecf\u5143\u548c\u7f51\u7edc\u5171\u540c\u7ef4\u62a4\uff0c\u8868\u793a\u4e86\u5404\u4e2a\u72ec\u7acb\u7684\u7f51\u7edc\u4e4b\u95f4\u7684\u5173\u7cfb</p> \\[\\hat{y_t}=f(w_t,h_{t-1})\\]"},{"location":"note/self-study/deeplearning/MITDP/Ch2%20Deep%20Sequence%20Modeling/#2-recurrent-neural-networksrnns","title":"2 Recurrent Neural Networks(RNNs)","text":"<p>\u5173\u952e\u601d\u60f3\uff1a RNN\u5728\u7ef4\u62a4\u72b6\u6001\uff0c\u6bcf\u6b21\u5e8f\u5217\u88ab\u5904\u7406\u65f6\u66f4\u65b0\u72b6\u6001</p>"},{"location":"note/self-study/tools/conda/","title":"Conda\u4f7f\u7528","text":""},{"location":"note/self-study/tools/conda/#1-conda","title":"1 conda\u73af\u5883\u7684\u521b\u5efa\u3001\u5207\u6362\u548c\u5220\u9664","text":"<ul> <li><code>conda info -e</code> \u67e5\u770bconda\u7ba1\u7406\u7684\u865a\u62df\u73af\u5883\u5217\u8868</li> <li><code>conda create -n env_name</code> \u521b\u5efa\u73af\u5883</li> <li><code>conda activate env_name</code> \u6fc0\u6d3b\u73af\u5883</li> <li><code>conda deactivate</code> \u9000\u51fa\u73af\u5883</li> <li><code>conda remove -n env_name --all</code> \u5220\u9664\u73af\u5883,\u5982\u679c\u6267\u884c\u6307\u4ee4\u65f6\u6b63\u5728\u73af\u5883\u4e2d\uff0c\u5219\u65e0\u6cd5\u987a\u5229\u6267\u884c\uff0c\u9700\u8981\u9000\u51fa\u540e\u624d\u6267\u884c\u6210\u529f</li> </ul>"},{"location":"note/self-study/tools/conda/#2-conda","title":"2 conda\u67e5\u627e\u3001\u5b89\u88c5\u3001\u5220\u9664\u8f6f\u4ef6\u5305","text":"<ul> <li><code>conda list</code> \u67e5\u770b\u5f53\u524d\u73af\u5883\u4e0b\u5df2\u5b89\u88c5\u7684\u5305</li> <li><code>conda search package_name</code> \u67e5\u627e\u5305</li> <li><code>conda install package_name</code> \u5b89\u88c5\u5305</li> <li><code>conda remove package_name</code> \u5220\u9664\u5305</li> <li><code>conda update package_name</code> \u66f4\u65b0\u5305</li> </ul>"}]}